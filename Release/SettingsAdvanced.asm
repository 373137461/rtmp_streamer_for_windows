; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\SettingsAdvanced.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_7SettingsAdvanced@@6B@			; SettingsAdvanced::`vftable'
PUBLIC	??_R1A@?0A@EA@SettingsAdvanced@@8		; SettingsAdvanced::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3SettingsAdvanced@@8			; SettingsAdvanced::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVSettingsPane@@@8			; SettingsPane `RTTI Type Descriptor'
PUBLIC	??_R2SettingsAdvanced@@8			; SettingsAdvanced::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SettingsPane@@8			; SettingsPane::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3SettingsPane@@8				; SettingsPane::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4SettingsAdvanced@@6B@			; SettingsAdvanced::`RTTI Complete Object Locator'
PUBLIC	??_R2SettingsPane@@8				; SettingsPane::`RTTI Base Class Array'
PUBLIC	??_R0?AVSettingsAdvanced@@@8			; SettingsAdvanced `RTTI Type Descriptor'
EXTRN	__imp__GetAdaptersAddresses@20:PROC
EXTRN	__imp__GetDlgItemInt@16:PROC
EXTRN	__imp__WSAAddressToStringW@20:PROC
EXTRN	__imp__SetDlgItemInt@16:PROC
EXTRN	__imp__SendDlgItemMessageW@20:PROC
EXTRN	__imp_?DialogProc@SettingsPane@@SGHPAUHWND__@@IIJ@Z:PROC
EXTRN	__imp_??1SettingsPane@@UAE@XZ:PROC
EXTRN	__imp_??0SettingsPane@@QAE@XZ:PROC
EXTRN	__imp_?OptimizeSettings@SettingsPane@@UAEXXZ:PROC
EXTRN	?OptimizeSettings@SettingsPane@@UAEXXZ:PROC	; SettingsPane::OptimizeSettings
EXTRN	__imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z:PROC
;	COMDAT ?bHasWarned@?ED@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4HA
_BSS	SEGMENT
?bHasWarned@?ED@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4HA DD 01H DUP (?) ; `SettingsAdvanced::ProcMessage'::`67'::bHasWarned
_BSS	ENDS
;	COMDAT ?qsv_presets@?BD@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBU<unnamed-type-qsv_presets>@?BD@??12@UAEHIIJ@Z@B
CONST	SEGMENT
?qsv_presets@?BD@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBU<unnamed-type-qsv_presets>@?BD@??12@UAEHIIJ@Z@B DD FLAT:$SG4294759148 ; `SettingsAdvanced::ProcMessage'::`19'::qsv_presets
	DD	01H
	DD	FLAT:$SG4294759147
	DD	02H
	DD	FLAT:$SG4294759146
	DD	03H
	DD	FLAT:$SG4294759145
	DD	04H
	DD	FLAT:$SG4294759144
	DD	05H
	DD	FLAT:$SG4294759143
	DD	06H
	DD	FLAT:$SG4294759142
	DD	07H
CONST	ENDS
;	COMDAT ??_R0?AVSettingsAdvanced@@@8
data$r	SEGMENT
??_R0?AVSettingsAdvanced@@@8 DD FLAT:??_7type_info@@6B@	; SettingsAdvanced `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSettingsAdvanced@@', 00H
data$r	ENDS
;	COMDAT ??_R2SettingsPane@@8
rdata$r	SEGMENT
??_R2SettingsPane@@8 DD FLAT:??_R1A@?0A@EA@SettingsPane@@8 ; SettingsPane::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ?preset_names@?BB@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB
CONST	SEGMENT
?preset_names@?BB@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB DD FLAT:$SG4294759198 ; `SettingsAdvanced::ProcMessage'::`17'::preset_names
	DD	FLAT:$SG4294759197
	DD	FLAT:$SG4294759196
	DD	FLAT:$SG4294759195
	DD	FLAT:$SG4294759194
	DD	FLAT:$SG4294759193
	DD	FLAT:$SG4294759192
	DD	FLAT:$SG4294759191
CONST	ENDS
;	COMDAT ??_R4SettingsAdvanced@@6B@
rdata$r	SEGMENT
??_R4SettingsAdvanced@@6B@ DD 00H			; SettingsAdvanced::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSettingsAdvanced@@@8
	DD	FLAT:??_R3SettingsAdvanced@@8
rdata$r	ENDS
;	COMDAT ??_R3SettingsPane@@8
rdata$r	SEGMENT
??_R3SettingsPane@@8 DD 00H				; SettingsPane::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SettingsPane@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SettingsPane@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SettingsPane@@8 DD FLAT:??_R0?AVSettingsPane@@@8 ; SettingsPane::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SettingsPane@@8
rdata$r	ENDS
;	COMDAT ??_R2SettingsAdvanced@@8
rdata$r	SEGMENT
??_R2SettingsAdvanced@@8 DD FLAT:??_R1A@?0A@EA@SettingsAdvanced@@8 ; SettingsAdvanced::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SettingsPane@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSettingsPane@@@8
data$r	SEGMENT
??_R0?AVSettingsPane@@@8 DD FLAT:??_7type_info@@6B@	; SettingsPane `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSettingsPane@@', 00H
data$r	ENDS
;	COMDAT ?nv_preset_names@?BC@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB
CONST	SEGMENT
?nv_preset_names@?BC@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB DD FLAT:$SG4294759164 ; `SettingsAdvanced::ProcMessage'::`18'::nv_preset_names
	DD	FLAT:$SG4294759163
	DD	FLAT:$SG4294759162
	DD	FLAT:$SG4294759161
	DD	FLAT:$SG4294759160
	DD	FLAT:$SG4294759159
	DD	FLAT:$SG4294759158
	DD	FLAT:$SG4294759157
	DD	FLAT:$SG4294759156
	DD	FLAT:$SG4294759155
	DD	00H
	ORG $+20
CONST	ENDS
;	COMDAT ?profile_names@?BA@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB
CONST	SEGMENT
?profile_names@?BA@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB DD FLAT:$SG4294759203 ; `SettingsAdvanced::ProcMessage'::`16'::profile_names
	DD	FLAT:$SG4294759202
	ORG $+4
CONST	ENDS
;	COMDAT ??_R3SettingsAdvanced@@8
rdata$r	SEGMENT
??_R3SettingsAdvanced@@8 DD 00H				; SettingsAdvanced::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SettingsAdvanced@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SettingsAdvanced@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SettingsAdvanced@@8 DD FLAT:??_R0?AVSettingsAdvanced@@@8 ; SettingsAdvanced::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SettingsAdvanced@@8
rdata$r	ENDS
;	COMDAT ??_7SettingsAdvanced@@6B@
CONST	SEGMENT
??_7SettingsAdvanced@@6B@ DD FLAT:??_R4SettingsAdvanced@@6B@ ; SettingsAdvanced::`vftable'
	DD	FLAT:??_ESettingsAdvanced@@UAEPAXI@Z
	DD	FLAT:?GetCategory@SettingsAdvanced@@UBEPB_WXZ
	DD	FLAT:?CreatePane@SettingsAdvanced@@UAEPAUHWND__@@PAU2@@Z
	DD	FLAT:?DestroyPane@SettingsAdvanced@@UAEXXZ
	DD	FLAT:?ProcMessage@SettingsAdvanced@@UAEHIIJ@Z
	DD	FLAT:?ApplySettings@SettingsAdvanced@@UAEXXZ
	DD	FLAT:?CancelSettings@SettingsAdvanced@@UAEXXZ
	DD	FLAT:?HasDefaults@SettingsAdvanced@@UBE_NXZ
	DD	FLAT:?SetDefaults@SettingsAdvanced@@UAEXXZ
	DD	FLAT:?OptimizeSettings@SettingsPane@@UAEXXZ
	ORG $+2
$SG4294759280 DB 'X', 00H, '2', 00H, '6', 00H, '4', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294759281 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759282 DB 'P', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759283 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294759276 DB 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294759277 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759278 DB 'U', 00H, 's', 00H, 'e', 00H, 'M', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'd', 00H, 'O', 00H, 'p', 00H, 't', 00H
	DB	'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
$SG4294759279 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759272 DB 'P', 00H, 'r', 00H, 'i', 00H, 'o', 00H, 'r', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294759273 DB 'I', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294759274 DB 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759275 DB 'A', 00H, 'b', 00H, 'o', 00H, 'v', 00H, 'e', 00H, ' ', 00H
	DB	'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG4294759268 DB 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e'
	DB	00H, 'w', 00H, 'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759269 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759270 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294759271 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759264 DB 'K', 00H, 'e', 00H, 'y', 00H, 'f', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294759265 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759266 DB 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 'O', 00H
	DB	't', 00H, 'h', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'i', 00H, 'f', 00H, 'i', 00H, 'e', 00H, 'r', 00H, 's', 00H, 00H
	DB	00H
$SG4294759267 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759260 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'u', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'm', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG4294759261 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759262 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'F', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759263 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759256 DB 'C', 00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H
	DB	'Q', 00H, 'S', 00H, 'V', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG4294759257 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759258 DB 'C', 00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294759259 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759252 DB 'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG4294759253 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294759254 DB 'U', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294759255 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759248 DB 'Q', 00H, 'S', 00H, 'V', 00H, 'P', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 00H, 00H
$SG4294759249 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759250 DB 'Q', 00H, 'S', 00H, 'V', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'E', 00H, 'n'
	DB	00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294759251 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294759244 DB 'N', 00H, 'V', 00H, 'E', 00H, 'N', 00H, 'C', 00H, '2', 00H
	DB	'P', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294759245 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759246 DB 'N', 00H, 'V', 00H, 'E', 00H, 'N', 00H, 'C', 00H, 'P', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 00H, 00H
$SG4294759247 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759240 DB 'U', 00H, 's', 00H, 'e', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'Q', 00H, 'P', 00H, 'C', 00H, 00H, 00H
$SG4294759241 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759242 DB 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 'T', 00H, 'o', 00H
	DB	'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294759243 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759236 DB 'U', 00H, 's', 00H, 'e', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 'F', 00H, 'i', 00H, 'x'
	DB	00H, 'H', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 00H, 00H
$SG4294759237 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759238 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 'A', 00H, 'd', 00H, 'j', 00H, 'u', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
$SG4294759239 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759232 DB 'L', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H, 'M', 00H, 'e', 00H, 't'
	DB	00H, 'h', 00H, 'o', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG4294759233 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759234 DB 'L', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c', 00H
	DB	'y', 00H, 'F', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, 00H, 00H
$SG4294759235 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759228 DB 'B', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'T', 00H, 'o', 00H
	DB	'I', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG4294759229 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759230 DB 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG4294759231 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759224 DB 'Q', 00H, 'S', 00H, 'V', 00H, 00H, 00H
$SG4294759225 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759226 DB 'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG4294759227 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759220 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759221 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294759222 DB 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H
	DB	'p', 00H, 's', 00H, '_', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG4294759223 DB 'N', 00H, 'V', 00H, 'E', 00H, 'N', 00H, 'C', 00H, 00H, 00H
$SG4294759219 DB 'U', 00H, 's', 00H, 'e', 00H, 'M', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'd', 00H, 'O', 00H, 'p', 00H, 't', 00H
	DB	'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
$SG4294759216 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'P', 00H
	DB	'r', 00H, 'i', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, '.', 00H, 'A', 00H, 'b', 00H, 'o', 00H, 'v', 00H, 'e', 00H
	DB	'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG4294759217 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'P', 00H
	DB	'r', 00H, 'i', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, '.', 00H, 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
$SG4294759218 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759212 DB 'P', 00H, 'r', 00H, 'i', 00H, 'o', 00H, 'r', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294759213 DB 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759208 DB 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294759214 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'P', 00H
	DB	'r', 00H, 'i', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, '.', 00H, 'I', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294759215 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'P', 00H
	DB	'r', 00H, 'i', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, '.', 00H, 'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759209 DB 'A', 00H, 'b', 00H, 'o', 00H, 'v', 00H, 'e', 00H, ' ', 00H
	DB	'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG4294759210 DB 'I', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294759211 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759204 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759205 DB 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 'O', 00H
	DB	't', 00H, 'h', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'i', 00H, 'f', 00H, 'i', 00H, 'e', 00H, 'r', 00H, 's', 00H, 00H
	DB	00H
$SG4294759206 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759207 DB 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e'
	DB	00H, 'w', 00H, 'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759200 DB 'X', 00H, '2', 00H, '6', 00H, '4', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294759201 DB 'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294759202 DB 'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294759203 DB 'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294759196 DB 'v', 00H, 'e', 00H, 'r', 00H, 'y', 00H, 'f', 00H, 'a', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294759197 DB 's', 00H, 'u', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG4294759198 DB 'u', 00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'f', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG4294759199 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759192 DB 's', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG4294759193 DB 'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'u', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759194 DB 'f', 00H, 'a', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294759195 DB 'f', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759188 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759189 DB 'P', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759190 DB 'v', 00H, 'e', 00H, 'r', 00H, 'y', 00H, 'f', 00H, 'a', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294759191 DB 's', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759184 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'u', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'm', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG4294759185 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759186 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'F', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759187 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'V', 00H
	DB	'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'E', 00H, 'n', 00H, 'c'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'C', 00H, 'P', 00H
	DB	'U', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'o'
	DB	00H, 'f', 00H, 'f', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	't', 00H, 'i', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294759176 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294759180 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'V', 00H
	DB	'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'E', 00H, 'n', 00H, 'c'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p', 00H
	DB	00H, 00H
$SG4294759181 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759182 DB 'C', 00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294759183 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759177 DB 'U', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294759178 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759179 DB 'K', 00H, 'e', 00H, 'y', 00H, 'f', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294759172 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759173 DB 'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG4294759174 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294759175 DB 'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG4294759168 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759169 DB 'Q', 00H, 'S', 00H, 'V', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'E', 00H, 'n'
	DB	00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294759170 DB 'N', 00H, 'V', 00H, 'E', 00H, 'N', 00H, 'C', 00H, 00H, 00H
$SG4294759171 DB 'Q', 00H, 'S', 00H, 'V', 00H, 00H, 00H
$SG4294759164 DB 'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'c', 00H, 00H, 00H
$SG4294759167 DB 'C', 00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H
	DB	'Q', 00H, 'S', 00H, 'V', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG4294759165 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'Q', 00H
	DB	'S', 00H, 'V', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'V', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, 'o', 00H, 'E', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'e', 00H, 't'
	DB	00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p', 00H, 00H
	DB	00H
$SG4294759166 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759160 DB 'L', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'L', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H, 00H, 00H
$SG4294759161 DB 'B', 00H, 'l', 00H, 'u', 00H, 'r', 00H, 'a', 00H, 'y', 00H
	DB	' ', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'k', 00H, 00H, 00H
$SG4294759162 DB 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'P', 00H
	DB	'e', 00H, 'r', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294759163 DB 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'Q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H
	ORG $+2
$SG4294759156 DB 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'P', 00H
	DB	'e', 00H, 'r', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'L', 00H, 'o', 00H
	DB	's', 00H, 's', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's', 00H, 00H
	DB	00H
$SG4294759157 DB 'L', 00H, 'o', 00H, 's', 00H, 's', 00H, 'l', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294759158 DB 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'Q', 00H
	DB	'u', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, ' '
	DB	00H, 'L', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 'L', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294759159 DB 'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'P', 00H
	DB	'e', 00H, 'r', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'L', 00H, 'o', 00H
	DB	'w', 00H, ' ', 00H, 'L', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'n'
	DB	00H, 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294759152 DB 'N', 00H, 'V', 00H, 'E', 00H, 'N', 00H, 'C', 00H, '2', 00H
	DB	'P', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294759153 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759154 DB 'N', 00H, 'V', 00H, 'E', 00H, 'N', 00H, 'C', 00H, 'P', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 00H, 00H
$SG4294759155 DB 'N', 00H, 'V', 00H, 'D', 00H, 'e', 00H, 'f', 00H, 'a', 00H
	DB	'u', 00H, 'l', 00H, 't', 00H, 00H, 00H
$SG4294759148 DB '1', 00H, ' ', 00H, '(', 00H, 'B', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, ' ', 00H, 'Q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294759149 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759150 DB 'N', 00H, 'V', 00H, 'E', 00H, 'N', 00H, 'C', 00H, 'P', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 00H, 00H
$SG4294759151 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759144 DB '5', 00H, 00H, 00H
$SG4294759145 DB '4', 00H, ' ', 00H, '(', 00H, 'B', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG4294759146 DB '3', 00H, 00H, 00H
$SG4294759147 DB '2', 00H, 00H, 00H
$SG4294759140 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294759141 DB 'Q', 00H, 'S', 00H, 'V', 00H, 'P', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 00H, 00H
$SG4294759142 DB '7', 00H, ' ', 00H, '(', 00H, 'B', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, ' ', 00H, 'S', 00H, 'p', 00H, 'e', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294759143 DB '6', 00H, 00H, 00H
$SG4294759136 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759137 DB 'U', 00H, 's', 00H, 'e', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'Q', 00H, 'P', 00H, 'C', 00H, 00H, 00H
$SG4294759138 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759139 DB 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 'T', 00H, 'o', 00H
	DB	'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294759132 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294759133 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294759134 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759135 DB 'U', 00H, 's', 00H, 'e', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 'F', 00H, 'i', 00H, 'x'
	DB	00H, 'H', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 00H, 00H
$SG4294759128 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759129 DB 'L', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c', 00H
	DB	'y', 00H, 'F', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, 00H, 00H
$SG4294759130 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294759131 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 'A', 00H, 'd', 00H, 'j', 00H, 'u', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
$SG4294759124 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759125 DB 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG4294759126 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759127 DB 'L', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H, 'M', 00H, 'e', 00H, 't'
	DB	00H, 'h', 00H, 'o', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG4294759120 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294759121 DB 'B', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'T', 00H, 'o', 00H
	DB	'I', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG4294759122 DB 'D', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 00H, 00H
$SG4294759123 DB 'D', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 00H, 00H
$SG4294759116 DB 'P', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294759117 DB 'v', 00H, 'e', 00H, 'r', 00H, 'y', 00H, 'f', 00H, 'a', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294759118 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'a'
	DB	00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '.', 00H, 'P', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 'W', 00H, 'a'
	DB	00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG4294759119 DB 'v', 00H, 'e', 00H, 'r', 00H, 'y', 00H, 'f', 00H, 'a', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294759114 DB 'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'c', 00H, 00H, 00H
$SG4294759115 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
PUBLIC	?ProcMessage@SettingsAdvanced@@UAEHIIJ@Z	; SettingsAdvanced::ProcMessage
PUBLIC	?SetDefaults@SettingsAdvanced@@UAEXXZ		; SettingsAdvanced::SetDefaults
PUBLIC	?HasDefaults@SettingsAdvanced@@UBE_NXZ		; SettingsAdvanced::HasDefaults
PUBLIC	?CancelSettings@SettingsAdvanced@@UAEXXZ	; SettingsAdvanced::CancelSettings
PUBLIC	?ApplySettings@SettingsAdvanced@@UAEXXZ		; SettingsAdvanced::ApplySettings
PUBLIC	?SelectPresetDialog@SettingsAdvanced@@AAEX_N0@Z	; SettingsAdvanced::SelectPresetDialog
PUBLIC	?DestroyPane@SettingsAdvanced@@UAEXXZ		; SettingsAdvanced::DestroyPane
PUBLIC	?CreatePane@SettingsAdvanced@@UAEPAUHWND__@@PAU2@@Z ; SettingsAdvanced::CreatePane
PUBLIC	?GetCategory@SettingsAdvanced@@UBEPB_WXZ	; SettingsAdvanced::GetCategory
PUBLIC	??1SettingsAdvanced@@UAE@XZ			; SettingsAdvanced::~SettingsAdvanced
PUBLIC	??_GSettingsAdvanced@@UAEPAXI@Z			; SettingsAdvanced::`scalar deleting destructor'
PUBLIC	??0SettingsAdvanced@@QAE@XZ			; SettingsAdvanced::SettingsAdvanced
EXTRN	??_ESettingsAdvanced@@UAEPAXI@Z:PROC		; SettingsAdvanced::`vector deleting destructor'
;	COMDAT ?$S1@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4IA
_BSS	SEGMENT
?$S1@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4IA DD 01H DUP (?) ; S1<`template-parameter-2',SettingsAdvanced::tCategory,unsigned int, ?? &>
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?name@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4PB_WB
_BSS	SEGMENT
?name@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4PB_WB DD 01H DUP (?) ; `SettingsAdvanced::GetCategory'::`2'::name
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ??0SettingsAdvanced@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SettingsAdvanced@@QAE@XZ PROC			; SettingsAdvanced::SettingsAdvanced, COMDAT
; _this$ = ecx

; 30   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SettingsPane@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsAdvanced@@6B@

; 31   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SettingsAdvanced@@QAE@XZ ENDP			; SettingsAdvanced::SettingsAdvanced
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSettingsAdvanced@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSettingsAdvanced@@UAEPAXI@Z PROC			; SettingsAdvanced::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SettingsAdvanced@@UAE@XZ		; SettingsAdvanced::~SettingsAdvanced
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSettingsAdvanced@@UAEPAXI@Z ENDP			; SettingsAdvanced::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ??1SettingsAdvanced@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SettingsAdvanced@@UAE@XZ PROC			; SettingsAdvanced::~SettingsAdvanced, COMDAT
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsAdvanced@@6B@

; 35   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SettingsPane@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1SettingsAdvanced@@UAE@XZ ENDP			; SettingsAdvanced::~SettingsAdvanced
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?GetCategory@SettingsAdvanced@@UBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCategory@SettingsAdvanced@@UBEPB_WXZ PROC		; SettingsAdvanced::GetCategory, COMDAT
; _this$ = ecx

; 38   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 39   :     static CTSTR name = Str("Settings.Advanced");

	mov	eax, DWORD PTR ?$S1@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4IA
	and	eax, 1
	jne	SHORT $LN1@GetCategor
	mov	ecx, DWORD PTR ?$S1@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4IA
	or	ecx, 1
	mov	DWORD PTR ?$S1@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4IA, ecx
	push	OFFSET $SG4294759283
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR ?name@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4PB_WB, eax
$LN1@GetCategor:

; 40   :     return name;

	mov	eax, DWORD PTR ?name@?1??GetCategory@SettingsAdvanced@@UBEPB_WXZ@4PB_WB

; 41   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCategory@SettingsAdvanced@@UBEPB_WXZ ENDP		; SettingsAdvanced::GetCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?CreatePane@SettingsAdvanced@@UAEPAUHWND__@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_parentHwnd$ = 8					; size = 4
?CreatePane@SettingsAdvanced@@UAEPAUHWND__@@PAU2@@Z PROC ; SettingsAdvanced::CreatePane, COMDAT
; _this$ = ecx

; 44   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 45   :     hwnd = OBSCreateDialog(hinstMain, MAKEINTRESOURCE(IDD_SETTINGS_ADVANCED), parentHwnd, (DLGPROC)DialogProc, (LPARAM)this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?DialogProc@SettingsPane@@SGHPAUHWND__@@IIJ@Z
	push	ecx
	mov	edx, DWORD PTR _parentHwnd$[ebp]
	push	edx
	push	132					; 00000084H
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSCreateDialog@@YAPAUHWND__@@PAUHINSTANCE__@@PB_WPAU1@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 46   :     return hwnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]

; 47   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CreatePane@SettingsAdvanced@@UAEPAUHWND__@@PAU2@@Z ENDP ; SettingsAdvanced::CreatePane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?DestroyPane@SettingsAdvanced@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyPane@SettingsAdvanced@@UAEXXZ PROC		; SettingsAdvanced::DestroyPane, COMDAT
; _this$ = ecx

; 50   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   :     DestroyWindow(hwnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4

; 52   :     hwnd = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 53   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyPane@SettingsAdvanced@@UAEXXZ ENDP		; SettingsAdvanced::DestroyPane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?SelectPresetDialog@SettingsAdvanced@@AAEX_N0@Z
_TEXT	SEGMENT
tv262 = -60						; size = 4
tv247 = -56						; size = 4
tv232 = -52						; size = 4
tv217 = -48						; size = 4
tv202 = -44						; size = 4
tv187 = -40						; size = 4
tv172 = -36						; size = 4
tv159 = -32						; size = 4
tv143 = -28						; size = 4
tv128 = -24						; size = 4
tv81 = -20						; size = 4
tv68 = -16						; size = 4
_this$ = -12						; size = 4
_hwndTemp$ = -8						; size = 4
_usex264$ = -1						; size = 1
_useQSV$ = 8						; size = 1
_useNVENC$ = 12						; size = 1
?SelectPresetDialog@SettingsAdvanced@@AAEX_N0@Z PROC	; SettingsAdvanced::SelectPresetDialog, COMDAT
; _this$ = ecx

; 56   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 57   :     bool usex264 = !useQSV && !useNVENC;

	movzx	eax, BYTE PTR _useQSV$[ebp]
	test	eax, eax
	jne	SHORT $LN3@SelectPres
	movzx	ecx, BYTE PTR _useNVENC$[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@SelectPres
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@SelectPres
$LN3@SelectPres:
	mov	DWORD PTR tv68[ebp], 0
$LN4@SelectPres:
	mov	dl, BYTE PTR tv68[ebp]
	mov	BYTE PTR _usex264$[ebp], dl

; 58   : 
; 59   :     HWND hwndTemp = GetDlgItem(hwnd, IDC_PRESET);

	push	1013					; 000003f5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 60   :     ShowWindow(hwndTemp, usex264 ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _usex264$[ebp]
	test	edx, edx
	je	SHORT $LN5@SelectPres
	mov	DWORD PTR tv81[ebp], 5
	jmp	SHORT $LN6@SelectPres
$LN5@SelectPres:
	mov	DWORD PTR tv81[ebp], 0
$LN6@SelectPres:
	mov	eax, DWORD PTR tv81[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 61   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 62   : 
; 63   :     hwndTemp = GetDlgItem(hwnd, IDC_X264PRESET_LABEL);

	push	1176					; 00000498H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 64   :     ShowWindow(hwndTemp, usex264 ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _usex264$[ebp]
	test	edx, edx
	je	SHORT $LN7@SelectPres
	mov	DWORD PTR tv128[ebp], 5
	jmp	SHORT $LN8@SelectPres
$LN7@SelectPres:
	mov	DWORD PTR tv128[ebp], 0
$LN8@SelectPres:
	mov	eax, DWORD PTR tv128[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 65   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 66   : 
; 67   :     hwndTemp = GetDlgItem(hwnd, IDC_USEVIDEOENCODERSETTINGS);

	push	1041					; 00000411H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 68   :     ShowWindow(hwndTemp, !useQSV ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useQSV$[ebp]
	test	edx, edx
	jne	SHORT $LN9@SelectPres
	mov	DWORD PTR tv143[ebp], 5
	jmp	SHORT $LN10@SelectPres
$LN9@SelectPres:
	mov	DWORD PTR tv143[ebp], 0
$LN10@SelectPres:
	mov	eax, DWORD PTR tv143[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 69   :     EnableWindow(hwndTemp, usex264);

	movzx	edx, BYTE PTR _usex264$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 70   : 
; 71   :     hwndTemp = GetDlgItem(hwnd, IDC_VIDEOENCODERSETTINGS);

	push	1078					; 00000436H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 72   :     ShowWindow(hwndTemp, !useQSV ? SW_SHOW : SW_HIDE);

	movzx	eax, BYTE PTR _useQSV$[ebp]
	test	eax, eax
	jne	SHORT $LN11@SelectPres
	mov	DWORD PTR tv159[ebp], 5
	jmp	SHORT $LN12@SelectPres
$LN11@SelectPres:
	mov	DWORD PTR tv159[ebp], 0
$LN12@SelectPres:
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8

; 73   : 
; 74   :     hwndTemp = GetDlgItem(hwnd, IDC_NVENCPRESET);

	push	1139					; 00000473H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 75   :     ShowWindow(hwndTemp, useNVENC ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useNVENC$[ebp]
	test	edx, edx
	je	SHORT $LN13@SelectPres
	mov	DWORD PTR tv172[ebp], 5
	jmp	SHORT $LN14@SelectPres
$LN13@SelectPres:
	mov	DWORD PTR tv172[ebp], 0
$LN14@SelectPres:
	mov	eax, DWORD PTR tv172[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 76   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 77   : 
; 78   :     hwndTemp = GetDlgItem(hwnd, IDC_NVENCPRESET_LABEL);

	push	1171					; 00000493H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 79   :     ShowWindow(hwndTemp, useNVENC ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useNVENC$[ebp]
	test	edx, edx
	je	SHORT $LN15@SelectPres
	mov	DWORD PTR tv187[ebp], 5
	jmp	SHORT $LN16@SelectPres
$LN15@SelectPres:
	mov	DWORD PTR tv187[ebp], 0
$LN16@SelectPres:
	mov	eax, DWORD PTR tv187[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 80   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 81   : 
; 82   :     hwndTemp = GetDlgItem(hwnd, IDC_NVENC2PASS);

	push	1211					; 000004bbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 83   :     ShowWindow(hwndTemp, useNVENC ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useNVENC$[ebp]
	test	edx, edx
	je	SHORT $LN17@SelectPres
	mov	DWORD PTR tv202[ebp], 5
	jmp	SHORT $LN18@SelectPres
$LN17@SelectPres:
	mov	DWORD PTR tv202[ebp], 0
$LN18@SelectPres:
	mov	eax, DWORD PTR tv202[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 84   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 85   : 
; 86   :     hwndTemp = GetDlgItem(hwnd, IDC_QSVPRESET);

	push	1173					; 00000495H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 87   :     ShowWindow(hwndTemp, useQSV ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useQSV$[ebp]
	test	edx, edx
	je	SHORT $LN19@SelectPres
	mov	DWORD PTR tv217[ebp], 5
	jmp	SHORT $LN20@SelectPres
$LN19@SelectPres:
	mov	DWORD PTR tv217[ebp], 0
$LN20@SelectPres:
	mov	eax, DWORD PTR tv217[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 88   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 89   : 
; 90   :     hwndTemp = GetDlgItem(hwnd, IDC_QSVPRESET_LABEL);

	push	1172					; 00000494H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 91   :     ShowWindow(hwndTemp, useQSV ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useQSV$[ebp]
	test	edx, edx
	je	SHORT $LN21@SelectPres
	mov	DWORD PTR tv232[ebp], 5
	jmp	SHORT $LN22@SelectPres
$LN21@SelectPres:
	mov	DWORD PTR tv232[ebp], 0
$LN22@SelectPres:
	mov	eax, DWORD PTR tv232[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 92   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 93   : 
; 94   :     hwndTemp = GetDlgItem(hwnd, IDC_QSVUSEVIDEOENCODERSETTINGS);

	push	1131					; 0000046bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 95   :     ShowWindow(hwndTemp, useQSV ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useQSV$[ebp]
	test	edx, edx
	je	SHORT $LN23@SelectPres
	mov	DWORD PTR tv247[ebp], 5
	jmp	SHORT $LN24@SelectPres
$LN23@SelectPres:
	mov	DWORD PTR tv247[ebp], 0
$LN24@SelectPres:
	mov	eax, DWORD PTR tv247[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 96   :     EnableWindow(hwndTemp, true);

	push	1
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8

; 97   : 
; 98   :     hwndTemp = GetDlgItem(hwnd, IDC_QSVVIDEOENCODERSETTINGS);

	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 99   :     ShowWindow(hwndTemp, useQSV ? SW_SHOW : SW_HIDE);

	movzx	edx, BYTE PTR _useQSV$[ebp]
	test	edx, edx
	je	SHORT $LN25@SelectPres
	mov	DWORD PTR tv262[ebp], 5
	jmp	SHORT $LN26@SelectPres
$LN25@SelectPres:
	mov	DWORD PTR tv262[ebp], 0
$LN26@SelectPres:
	mov	eax, DWORD PTR tv262[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 100  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SelectPresetDialog@SettingsAdvanced@@AAEX_N0@Z ENDP	; SettingsAdvanced::SelectPresetDialog
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?ApplySettings@SettingsAdvanced@@UAEXXZ
_TEXT	SEGMENT
$T1 = -180						; size = 8
$T2 = -172						; size = 8
$T3 = -164						; size = 8
$T4 = -156						; size = 8
_strCustomX264Settings$ = -148				; size = 8
_priority$ = -140					; size = 4
_bFullRange$ = -136					; size = 4
_bUseMicQPC$ = -132					; size = 4
_bNvencUse2Pass$ = -128					; size = 4
_globalAudioTimeAdjust$ = -124				; size = 4
_sceneBufferTime$ = -120				; size = 4
_bSyncToVideoTime$ = -116				; size = 4
_bDisableTCPOptimizations$ = -112			; size = 4
_bQSVUseVideoEncoderSettings$ = -108			; size = 4
_bLowLatencyAutoMode$ = -104				; size = 4
_bUnlockFPS$ = -100					; size = 4
_latencyFactor$ = -96					; size = 4
_keyframeInt$ = -92					; size = 4
_bUseMicSyncFixHack$ = -88				; size = 4
_bUseCustomX264Settings$ = -84				; size = 4
tv218 = -80						; size = 4
tv354 = -76						; size = 4
tv151 = -72						; size = 4
tv171 = -68						; size = 4
tv589 = -64						; size = 4
tv277 = -60						; size = 4
tv570 = -56						; size = 4
tv369 = -52						; size = 4
tv534 = -48						; size = 4
tv298 = -44						; size = 4
tv515 = -40						; size = 4
tv239 = -36						; size = 4
tv496 = -32						; size = 4
tv424 = -28						; size = 4
tv620 = -24						; size = 4
_qsvPreset$ = -20					; size = 4
_strTemp$ = -16						; size = 8
_bUseMTOptimizations$ = -8				; size = 1
_bAllowOtherHotkeyModifiers$ = -7			; size = 1
_bDisablePreviewEncoding$ = -6				; size = 1
_bUseCFR$ = -5						; size = 1
_this$ = -4						; size = 4
?ApplySettings@SettingsAdvanced@@UAEXXZ PROC		; SettingsAdvanced::ApplySettings, COMDAT
; _this$ = ecx

; 103  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
	mov	DWORD PTR _this$[ebp], ecx

; 104  :     //--------------------------------------------------
; 105  : 
; 106  :     String strTemp = GetCBText(GetDlgItem(hwnd, IDC_PRESET));

	push	-1
	push	1013					; 000003f5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR _strTemp$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetCBText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 107  :     AppConfig->SetString(TEXT("Video Encoding"), TEXT("Preset"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294759282
	push	OFFSET $SG4294759281
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 108  : 
; 109  :     //------------------------------------
; 110  : 
; 111  :     strTemp = GetCBText(GetDlgItem(hwnd, IDC_X264PROFILE));

	push	-1
	push	1015					; 000003f7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	DWORD PTR __imp_?GetCBText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 112  :     AppConfig->SetString(TEXT("Video Encoding"), TEXT("X264Profile"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294759280
	push	OFFSET $SG4294759279
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 113  : 
; 114  :     //--------------------------------------------------
; 115  : 
; 116  :     bool bUseMTOptimizations = SendMessage(GetDlgItem(hwnd, IDC_USEMULTITHREADEDOPTIMIZATIONS), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1099					; 0000044bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN10@ApplySetti
	mov	DWORD PTR tv151[ebp], 1
	jmp	SHORT $LN11@ApplySetti
$LN10@ApplySetti:
	mov	DWORD PTR tv151[ebp], 0
$LN11@ApplySetti:
	mov	dl, BYTE PTR tv151[ebp]
	mov	BYTE PTR _bUseMTOptimizations$[ebp], dl

; 117  :     AppConfig->SetInt(TEXT("General"), TEXT("UseMultithreadedOptimizations"), bUseMTOptimizations);

	movzx	eax, BYTE PTR _bUseMTOptimizations$[ebp]
	push	eax
	push	OFFSET $SG4294759278
	push	OFFSET $SG4294759277
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 118  : 
; 119  :     int priority = (int)SendMessage(GetDlgItem(hwnd, IDC_PRIORITY), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1132					; 0000046cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _priority$[ebp], eax

; 120  :     switch (priority) {

	mov	eax, DWORD PTR _priority$[ebp]
	mov	DWORD PTR tv171[ebp], eax
	cmp	DWORD PTR tv171[ebp], 3
	ja	SHORT $LN6@ApplySetti
	mov	ecx, DWORD PTR tv171[ebp]
	jmp	DWORD PTR $LN38@ApplySetti[ecx*4]
$LN5@ApplySetti:

; 121  :     case 0: strTemp = TEXT("High"); break;

	push	OFFSET $SG4294759276
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z
	jmp	SHORT $LN6@ApplySetti
$LN4@ApplySetti:

; 122  :     case 1: strTemp = TEXT("Above Normal"); break;

	push	OFFSET $SG4294759275
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z
	jmp	SHORT $LN6@ApplySetti
$LN3@ApplySetti:

; 123  :     case 2: strTemp = TEXT("Normal"); break;

	push	OFFSET $SG4294759274
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z
	jmp	SHORT $LN6@ApplySetti
$LN2@ApplySetti:

; 124  :     case 3: strTemp = TEXT("Idle"); break;

	push	OFFSET $SG4294759273
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z
$LN6@ApplySetti:

; 125  :     }
; 126  : 
; 127  :     AppConfig->SetString(TEXT("General"), TEXT("Priority"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294759272
	push	OFFSET $SG4294759271
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 128  : 
; 129  :     //--------------------------------------------------
; 130  : 
; 131  :     UINT sceneBufferTime = (UINT)SendMessage(GetDlgItem(hwnd, IDC_SCENEBUFFERTIME), UDM_GETPOS32, 0, 0);

	push	0
	push	0
	push	1138					; 00000472H
	push	1153					; 00000481H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _sceneBufferTime$[ebp], eax

; 132  :     GlobalConfig->SetInt(TEXT("General"), TEXT("SceneBufferingTime"), sceneBufferTime);

	mov	ecx, DWORD PTR _sceneBufferTime$[ebp]
	push	ecx
	push	OFFSET $SG4294759270
	push	OFFSET $SG4294759269
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 133  : 
; 134  :     //--------------------------------------------------
; 135  : 
; 136  :     bool bDisablePreviewEncoding = SendMessage(GetDlgItem(hwnd, IDC_DISABLEPREVIEWENCODING), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1100					; 0000044cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN12@ApplySetti
	mov	DWORD PTR tv218[ebp], 1
	jmp	SHORT $LN13@ApplySetti
$LN12@ApplySetti:
	mov	DWORD PTR tv218[ebp], 0
$LN13@ApplySetti:
	mov	cl, BYTE PTR tv218[ebp]
	mov	BYTE PTR _bDisablePreviewEncoding$[ebp], cl

; 137  :     GlobalConfig->SetInt(TEXT("General"), TEXT("DisablePreviewEncoding"), bDisablePreviewEncoding);

	movzx	edx, BYTE PTR _bDisablePreviewEncoding$[ebp]
	push	edx
	push	OFFSET $SG4294759268
	push	OFFSET $SG4294759267
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 138  : 
; 139  :     //--------------------------------------------------
; 140  : 
; 141  :     bool bAllowOtherHotkeyModifiers = SendMessage(GetDlgItem(hwnd, IDC_ALLOWOTHERHOTKEYMODIFIERS), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1101					; 0000044dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN14@ApplySetti
	mov	DWORD PTR tv239[ebp], 1
	jmp	SHORT $LN15@ApplySetti
$LN14@ApplySetti:
	mov	DWORD PTR tv239[ebp], 0
$LN15@ApplySetti:
	mov	dl, BYTE PTR tv239[ebp]
	mov	BYTE PTR _bAllowOtherHotkeyModifiers$[ebp], dl

; 142  :     GlobalConfig->SetInt(TEXT("General"), TEXT("AllowOtherHotkeyModifiers"), bAllowOtherHotkeyModifiers);

	movzx	eax, BYTE PTR _bAllowOtherHotkeyModifiers$[ebp]
	push	eax
	push	OFFSET $SG4294759266
	push	OFFSET $SG4294759265
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 143  :     
; 144  :     //--------------------------------------------------
; 145  : 
; 146  :     UINT keyframeInt = (UINT)SendMessage(GetDlgItem(hwnd, IDC_KEYFRAMEINTERVAL), UDM_GETPOS32, 0, 0);

	push	0
	push	0
	push	1138					; 00000472H
	push	1080					; 00000438H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _keyframeInt$[ebp], eax

; 147  :     AppConfig->SetInt(TEXT("Video Encoding"), TEXT("KeyframeInterval"), keyframeInt);

	mov	eax, DWORD PTR _keyframeInt$[ebp]
	push	eax
	push	OFFSET $SG4294759264
	push	OFFSET $SG4294759263
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 148  : 
; 149  :     //--------------------------------------------------
; 150  : 
; 151  :     bool bUseCFR = SendMessage(GetDlgItem(hwnd, IDC_USECFR), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1141					; 00000475H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN16@ApplySetti
	mov	DWORD PTR tv277[ebp], 1
	jmp	SHORT $LN17@ApplySetti
$LN16@ApplySetti:
	mov	DWORD PTR tv277[ebp], 0
$LN17@ApplySetti:
	mov	al, BYTE PTR tv277[ebp]
	mov	BYTE PTR _bUseCFR$[ebp], al

; 152  :     AppConfig->SetInt   (TEXT("Video Encoding"), TEXT("UseCFR"),            bUseCFR);

	movzx	ecx, BYTE PTR _bUseCFR$[ebp]
	push	ecx
	push	OFFSET $SG4294759262
	push	OFFSET $SG4294759261
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 153  : 
; 154  :     //--------------------------------------------------
; 155  : 
; 156  :     BOOL bUseCustomX264Settings = SendMessage(GetDlgItem(hwnd, IDC_USEVIDEOENCODERSETTINGS), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1041					; 00000411H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN18@ApplySetti
	mov	DWORD PTR tv298[ebp], 1
	jmp	SHORT $LN19@ApplySetti
$LN18@ApplySetti:
	mov	DWORD PTR tv298[ebp], 0
$LN19@ApplySetti:
	mov	ecx, DWORD PTR tv298[ebp]
	mov	DWORD PTR _bUseCustomX264Settings$[ebp], ecx

; 157  :     String strCustomX264Settings = GetEditText(GetDlgItem(hwnd, IDC_VIDEOENCODERSETTINGS));

	push	1078					; 00000436H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR _strCustomX264Settings$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8

; 158  : 
; 159  :     AppConfig->SetInt   (TEXT("Video Encoding"), TEXT("UseCustomSettings"), bUseCustomX264Settings);

	mov	edx, DWORD PTR _bUseCustomX264Settings$[ebp]
	push	edx
	push	OFFSET $SG4294759260
	push	OFFSET $SG4294759259
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 160  :     AppConfig->SetString(TEXT("Video Encoding"), TEXT("CustomSettings"), strCustomX264Settings);

	lea	ecx, DWORD PTR _strCustomX264Settings$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294759258
	push	OFFSET $SG4294759257
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 161  : 
; 162  :     //--------------------------------------------------
; 163  : 
; 164  :     AppConfig->SetString(L"Video Encoding", L"CustomQSVSettings", GetEditText(GetDlgItem(hwnd, IDC_QSVVIDEOENCODERSETTINGS)));

	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294759256
	push	OFFSET $SG4294759255
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 165  : 
; 166  :     //--------------------------------------------------
; 167  : 
; 168  :     BOOL bUnlockFPS = SendMessage(GetDlgItem(hwnd, IDC_UNLOCKHIGHFPS), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1128					; 00000468H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN20@ApplySetti
	mov	DWORD PTR tv354[ebp], 1
	jmp	SHORT $LN21@ApplySetti
$LN20@ApplySetti:
	mov	DWORD PTR tv354[ebp], 0
$LN21@ApplySetti:
	mov	edx, DWORD PTR tv354[ebp]
	mov	DWORD PTR _bUnlockFPS$[ebp], edx

; 169  :     BOOL bFullRange = SendMessage(GetDlgItem(hwnd, IDC_ENCODEFULLRANGE), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1129					; 00000469H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN22@ApplySetti
	mov	DWORD PTR tv369[ebp], 1
	jmp	SHORT $LN23@ApplySetti
$LN22@ApplySetti:
	mov	DWORD PTR tv369[ebp], 0
$LN23@ApplySetti:
	mov	edx, DWORD PTR tv369[ebp]
	mov	DWORD PTR _bFullRange$[ebp], edx

; 170  :     AppConfig->SetInt(TEXT("Video"), TEXT("UnlockFPS"), bUnlockFPS);

	mov	eax, DWORD PTR _bUnlockFPS$[ebp]
	push	eax
	push	OFFSET $SG4294759254
	push	OFFSET $SG4294759253
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 171  :     AppConfig->SetInt(TEXT("Video"), TEXT("FullRange"), bFullRange);

	mov	ecx, DWORD PTR _bFullRange$[ebp]
	push	ecx
	push	OFFSET $SG4294759252
	push	OFFSET $SG4294759251
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 172  : 
; 173  :     //------------------------------------
; 174  : 
; 175  :     BOOL bQSVUseVideoEncoderSettings = SendMessage(GetDlgItem(hwnd, IDC_QSVUSEVIDEOENCODERSETTINGS), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1131					; 0000046bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN24@ApplySetti
	mov	DWORD PTR tv424[ebp], 1
	jmp	SHORT $LN25@ApplySetti
$LN24@ApplySetti:
	mov	DWORD PTR tv424[ebp], 0
$LN25@ApplySetti:
	mov	ecx, DWORD PTR tv424[ebp]
	mov	DWORD PTR _bQSVUseVideoEncoderSettings$[ebp], ecx

; 176  :     AppConfig->SetInt(TEXT("Video Encoding"), TEXT("QSVUseVideoEncoderSettings"), bQSVUseVideoEncoderSettings);

	mov	edx, DWORD PTR _bQSVUseVideoEncoderSettings$[ebp]
	push	edx
	push	OFFSET $SG4294759250
	push	OFFSET $SG4294759249
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 177  : 
; 178  :     //------------------------------------
; 179  : 
; 180  :     int qsvPreset = (int)SendMessage(GetDlgItem(hwnd, IDC_QSVPRESET), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1173					; 00000495H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _qsvPreset$[ebp], eax

; 181  :     if (qsvPreset != CB_ERR)

	cmp	DWORD PTR _qsvPreset$[ebp], -1
	je	SHORT $LN1@ApplySetti

; 182  :     {
; 183  :         qsvPreset = (int)SendMessage(GetDlgItem(hwnd, IDC_QSVPRESET), CB_GETITEMDATA, qsvPreset, 0);

	push	0
	mov	edx, DWORD PTR _qsvPreset$[ebp]
	push	edx
	push	336					; 00000150H
	push	1173					; 00000495H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _qsvPreset$[ebp], eax

; 184  :         AppConfig->SetInt(TEXT("Video Encoding"), TEXT("QSVPreset"), qsvPreset);

	mov	edx, DWORD PTR _qsvPreset$[ebp]
	push	edx
	push	OFFSET $SG4294759248
	push	OFFSET $SG4294759247
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
$LN1@ApplySetti:

; 185  :     }
; 186  : 
; 187  :     //------------------------------------
; 188  : 
; 189  :     strTemp = GetCBText(GetDlgItem(hwnd, IDC_NVENCPRESET));

	push	-1
	push	1139					; 00000473H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	DWORD PTR __imp_?GetCBText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 190  :     AppConfig->SetString(TEXT("Video Encoding"), TEXT("NVENCPreset"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294759246
	push	OFFSET $SG4294759245
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 191  : 
; 192  :     //------------------------------------
; 193  : 
; 194  :     BOOL bNvencUse2Pass = SendMessage(GetDlgItem(hwnd, IDC_NVENC2PASS), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1211					; 000004bbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN26@ApplySetti
	mov	DWORD PTR tv496[ebp], 1
	jmp	SHORT $LN27@ApplySetti
$LN26@ApplySetti:
	mov	DWORD PTR tv496[ebp], 0
$LN27@ApplySetti:
	mov	edx, DWORD PTR tv496[ebp]
	mov	DWORD PTR _bNvencUse2Pass$[ebp], edx

; 195  :     AppConfig->SetInt   (TEXT("Video Encoding"), TEXT("NVENC2Pass"), bNvencUse2Pass);

	mov	eax, DWORD PTR _bNvencUse2Pass$[ebp]
	push	eax
	push	OFFSET $SG4294759244
	push	OFFSET $SG4294759243
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 196  : 
; 197  :     //------------------------------------
; 198  : 
; 199  :     BOOL bSyncToVideoTime = SendMessage(GetDlgItem(hwnd, IDC_SYNCTOVIDEOTIME), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1106					; 00000452H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN28@ApplySetti
	mov	DWORD PTR tv515[ebp], 1
	jmp	SHORT $LN29@ApplySetti
$LN28@ApplySetti:
	mov	DWORD PTR tv515[ebp], 0
$LN29@ApplySetti:
	mov	eax, DWORD PTR tv515[ebp]
	mov	DWORD PTR _bSyncToVideoTime$[ebp], eax

; 200  :     AppConfig->SetInt   (TEXT("Audio"), TEXT("SyncToVideoTime"), bSyncToVideoTime);

	mov	ecx, DWORD PTR _bSyncToVideoTime$[ebp]
	push	ecx
	push	OFFSET $SG4294759242
	push	OFFSET $SG4294759241
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 201  : 
; 202  :     //--------------------------------------------------
; 203  : 
; 204  :     BOOL bUseMicQPC = SendMessage(GetDlgItem(hwnd, IDC_USEMICQPC), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1043					; 00000413H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN30@ApplySetti
	mov	DWORD PTR tv534[ebp], 1
	jmp	SHORT $LN31@ApplySetti
$LN30@ApplySetti:
	mov	DWORD PTR tv534[ebp], 0
$LN31@ApplySetti:
	mov	ecx, DWORD PTR tv534[ebp]
	mov	DWORD PTR _bUseMicQPC$[ebp], ecx

; 205  :     GlobalConfig->SetInt(TEXT("Audio"), TEXT("UseMicQPC"), bUseMicQPC);

	mov	edx, DWORD PTR _bUseMicQPC$[ebp]
	push	edx
	push	OFFSET $SG4294759240
	push	OFFSET $SG4294759239
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 206  : 
; 207  :     //--------------------------------------------------
; 208  : 
; 209  :     int globalAudioTimeAdjust = (int)SendMessage(GetDlgItem(hwnd, IDC_AUDIOTIMEADJUST), UDM_GETPOS32, 0, 0);

	push	0
	push	0
	push	1138					; 00000472H
	push	1079					; 00000437H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _globalAudioTimeAdjust$[ebp], eax

; 210  :     GlobalConfig->SetInt(TEXT("Audio"), TEXT("GlobalAudioTimeAdjust"), globalAudioTimeAdjust);

	mov	edx, DWORD PTR _globalAudioTimeAdjust$[ebp]
	push	edx
	push	OFFSET $SG4294759238
	push	OFFSET $SG4294759237
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 211  : 
; 212  :     //--------------------------------------------------
; 213  : 
; 214  :     BOOL bUseMicSyncFixHack = SendMessage(GetDlgItem(hwnd, IDC_MICSYNCFIX), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1160					; 00000488H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN32@ApplySetti
	mov	DWORD PTR tv570[ebp], 1
	jmp	SHORT $LN33@ApplySetti
$LN32@ApplySetti:
	mov	DWORD PTR tv570[ebp], 0
$LN33@ApplySetti:
	mov	edx, DWORD PTR tv570[ebp]
	mov	DWORD PTR _bUseMicSyncFixHack$[ebp], edx

; 215  :     GlobalConfig->SetInt(TEXT("Audio"), TEXT("UseMicSyncFixHack"), bUseMicSyncFixHack);

	mov	eax, DWORD PTR _bUseMicSyncFixHack$[ebp]
	push	eax
	push	OFFSET $SG4294759236
	push	OFFSET $SG4294759235
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 216  : 
; 217  :     //--------------------------------------------------
; 218  : 
; 219  :     BOOL bLowLatencyAutoMode = SendMessage(GetDlgItem(hwnd, IDC_LATENCYMETHOD), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1145					; 00000479H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN34@ApplySetti
	mov	DWORD PTR tv589[ebp], 1
	jmp	SHORT $LN35@ApplySetti
$LN34@ApplySetti:
	mov	DWORD PTR tv589[ebp], 0
$LN35@ApplySetti:
	mov	eax, DWORD PTR tv589[ebp]
	mov	DWORD PTR _bLowLatencyAutoMode$[ebp], eax

; 220  :     int latencyFactor = GetDlgItemInt(hwnd, IDC_LATENCYTUNE, NULL, TRUE);

	push	1
	push	0
	push	1147					; 0000047bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItemInt@16
	mov	DWORD PTR _latencyFactor$[ebp], eax

; 221  : 
; 222  :     AppConfig->SetInt   (TEXT("Publish"),        TEXT("LatencyFactor"),     latencyFactor);

	mov	eax, DWORD PTR _latencyFactor$[ebp]
	push	eax
	push	OFFSET $SG4294759234
	push	OFFSET $SG4294759233
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 223  :     AppConfig->SetInt   (TEXT("Publish"),        TEXT("LowLatencyMethod"),  bLowLatencyAutoMode);

	mov	ecx, DWORD PTR _bLowLatencyAutoMode$[ebp]
	push	ecx
	push	OFFSET $SG4294759232
	push	OFFSET $SG4294759231
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 224  : 
; 225  :     BOOL bDisableTCPOptimizations = SendDlgItemMessage(hwnd, IDC_DISABLETCPOPTIMIZATIONS, BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1146					; 0000047aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN36@ApplySetti
	mov	DWORD PTR tv620[ebp], 1
	jmp	SHORT $LN37@ApplySetti
$LN36@ApplySetti:
	mov	DWORD PTR tv620[ebp], 0
$LN37@ApplySetti:
	mov	ecx, DWORD PTR tv620[ebp]
	mov	DWORD PTR _bDisableTCPOptimizations$[ebp], ecx

; 226  :     AppConfig->SetInt(TEXT("Publish"), TEXT("DisableSendWindowOptimization"), bDisableTCPOptimizations);

	mov	edx, DWORD PTR _bDisableTCPOptimizations$[ebp]
	push	edx
	push	OFFSET $SG4294759230
	push	OFFSET $SG4294759229
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 227  : 
; 228  :     //--------------------------------------------------
; 229  : 
; 230  :     strTemp = GetCBText(GetDlgItem(hwnd, IDC_BINDIP));

	push	-1
	push	1014					; 000003f6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?GetCBText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 231  :     AppConfig->SetString(TEXT("Publish"), TEXT("BindToIP"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294759228
	push	OFFSET $SG4294759227
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 232  : }

	lea	ecx, DWORD PTR _strCustomX264Settings$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN38@ApplySetti:
	DD	$LN5@ApplySetti
	DD	$LN4@ApplySetti
	DD	$LN3@ApplySetti
	DD	$LN2@ApplySetti
?ApplySettings@SettingsAdvanced@@UAEXXZ ENDP		; SettingsAdvanced::ApplySettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?CancelSettings@SettingsAdvanced@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelSettings@SettingsAdvanced@@UAEXXZ PROC		; SettingsAdvanced::CancelSettings, COMDAT
; _this$ = ecx

; 235  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 236  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelSettings@SettingsAdvanced@@UAEXXZ ENDP		; SettingsAdvanced::CancelSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?HasDefaults@SettingsAdvanced@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasDefaults@SettingsAdvanced@@UBE_NXZ PROC		; SettingsAdvanced::HasDefaults, COMDAT
; _this$ = ecx

; 239  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 240  :     return true;

	mov	al, 1

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasDefaults@SettingsAdvanced@@UBE_NXZ ENDP		; SettingsAdvanced::HasDefaults
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?SetDefaults@SettingsAdvanced@@UAEXXZ
_TEXT	SEGMENT
_vencoder$ = -24					; size = 8
tv81 = -16						; size = 4
tv75 = -12						; size = 4
_this$ = -8						; size = 4
_useQSV$ = -2						; size = 1
_useNVENC$ = -1						; size = 1
?SetDefaults@SettingsAdvanced@@UAEXXZ PROC		; SettingsAdvanced::SetDefaults, COMDAT
; _this$ = ecx

; 244  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 245  : 
; 246  :     String vencoder = AppConfig->GetString(L"Video Encoding", L"Encoder");

	push	0
	push	OFFSET $SG4294759226
	push	OFFSET $SG4294759225
	lea	eax, DWORD PTR _vencoder$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 247  :     bool useQSV = !!(vencoder == L"QSV");

	push	OFFSET $SG4294759224
	lea	ecx, DWORD PTR _vencoder$[ebp]
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN3@SetDefault
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@SetDefault
$LN3@SetDefault:
	mov	DWORD PTR tv75[ebp], 0
$LN4@SetDefault:
	mov	cl, BYTE PTR tv75[ebp]
	mov	BYTE PTR _useQSV$[ebp], cl

; 248  :     bool useNVENC = !!(vencoder == L"NVENC");

	push	OFFSET $SG4294759223
	lea	ecx, DWORD PTR _vencoder$[ebp]
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN5@SetDefault
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN6@SetDefault
$LN5@SetDefault:
	mov	DWORD PTR tv81[ebp], 0
$LN6@SetDefault:
	mov	dl, BYTE PTR tv81[ebp]
	mov	BYTE PTR _useNVENC$[ebp], dl

; 249  :     SelectPresetDialog(useQSV, useNVENC);

	movzx	eax, BYTE PTR _useNVENC$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _useQSV$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SelectPresetDialog@SettingsAdvanced@@AAEX_N0@Z ; SettingsAdvanced::SelectPresetDialog

; 250  : 
; 251  :     SendMessage(GetDlgItem(hwnd, IDC_SCENEBUFFERTIME), UDM_SETPOS32, 0, 700);

	push	700					; 000002bcH
	push	0
	push	1137					; 00000471H
	push	1153					; 00000481H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 252  :     SendMessage(GetDlgItem(hwnd, IDC_USEMULTITHREADEDOPTIMIZATIONS), BM_SETCHECK, BST_CHECKED, 0);

	push	0
	push	1
	push	241					; 000000f1H
	push	1099					; 0000044bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 253  :     SendMessage(GetDlgItem(hwnd, IDC_PRIORITY), CB_SETCURSEL, 2, 0);

	push	0
	push	2
	push	334					; 0000014eH
	push	1132					; 0000046cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 254  :     SendMessage(GetDlgItem(hwnd, IDC_PRESET), CB_SETCURSEL, 2, 0);

	push	0
	push	2
	push	334					; 0000014eH
	push	1013					; 000003f5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 255  :     SendMessage(GetDlgItem(hwnd, IDC_X264PROFILE), CB_SETCURSEL, 1, 0);

	push	0
	push	1
	push	334					; 0000014eH
	push	1015					; 000003f7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 256  :     SendMessage(GetDlgItem(hwnd, IDC_KEYFRAMEINTERVAL), UDM_SETPOS32, 0, 0);

	push	0
	push	0
	push	1137					; 00000471H
	push	1080					; 00000438H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 257  :     SendMessage(GetDlgItem(hwnd, IDC_USECFR), BM_SETCHECK, BST_CHECKED, 0);

	push	0
	push	1
	push	241					; 000000f1H
	push	1141					; 00000475H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 258  :     SendMessage(GetDlgItem(hwnd, IDC_USEVIDEOENCODERSETTINGS), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1041					; 00000411H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 259  :     EnableWindow(GetDlgItem(hwnd, IDC_VIDEOENCODERSETTINGS), FALSE);

	push	0
	push	1078					; 00000436H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 260  :     SendMessage(GetDlgItem(hwnd, IDC_UNLOCKHIGHFPS), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1128					; 00000468H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 261  :     SendMessage(GetDlgItem(hwnd, IDC_ENCODEFULLRANGE), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1129					; 00000469H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 262  :     SendMessage(GetDlgItem(hwnd, IDC_QSVUSEVIDEOENCODERSETTINGS), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1131					; 0000046bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 263  :     SendMessage(GetDlgItem(hwnd, IDC_NVENCPRESET), CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	push	1139					; 00000473H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 264  :     SendMessage(GetDlgItem(hwnd, IDC_NVENC2PASS), BM_SETCHECK, BST_CHECKED, 0);

	push	0
	push	1
	push	241					; 000000f1H
	push	1211					; 000004bbH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 265  :     EnableWindow(GetDlgItem(hwnd, IDC_NVENC2PASS), FALSE);

	push	0
	push	1211					; 000004bbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 266  :     SendMessage(GetDlgItem(hwnd, IDC_QSVPRESET), CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	push	1173					; 00000495H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 267  :     EnableWindow(GetDlgItem(hwnd, IDC_QSVVIDEOENCODERSETTINGS), FALSE);

	push	0
	push	1081					; 00000439H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 268  :     SendMessage(GetDlgItem(hwnd, IDC_SYNCTOVIDEOTIME), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1106					; 00000452H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 269  :     SendMessage(GetDlgItem(hwnd, IDC_USEMICQPC), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1043					; 00000413H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 270  :     SendMessage(GetDlgItem(hwnd, IDC_MICSYNCFIX), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1160					; 00000488H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 271  :     SendMessage(GetDlgItem(hwnd, IDC_AUDIOTIMEADJUST), UDM_SETPOS32, 0, 0);

	push	0
	push	0
	push	1137					; 00000471H
	push	1079					; 00000437H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 272  :     SendMessage(GetDlgItem(hwnd, IDC_LATENCYTUNE), UDM_SETPOS32, 0, 20);

	push	20					; 00000014H
	push	0
	push	1137					; 00000471H
	push	1147					; 0000047bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 273  :     SendMessage(GetDlgItem(hwnd, IDC_LATENCYMETHOD), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1145					; 00000479H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 274  :     SendMessage(GetDlgItem(hwnd, IDC_BINDIP), CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	push	1014					; 000003f6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 275  :     SendMessage(GetDlgItem(hwnd, IDC_DISABLEPREVIEWENCODING), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1100					; 0000044cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 276  :     SendMessage(GetDlgItem(hwnd, IDC_ALLOWOTHERHOTKEYMODIFIERS), BM_SETCHECK, BST_CHECKED, 0);

	push	0
	push	1
	push	241					; 000000f1H
	push	1101					; 0000044dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 277  :     SendMessage(GetDlgItem(hwnd, IDC_DISABLETCPOPTIMIZATIONS), BM_SETCHECK, BST_UNCHECKED, 0);

	push	0
	push	0
	push	241					; 000000f1H
	push	1146					; 0000047aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 278  : 
; 279  :     ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 280  :     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 281  : }

	lea	ecx, DWORD PTR _vencoder$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
?SetDefaults@SettingsAdvanced@@UAEXXZ ENDP		; SettingsAdvanced::SetDefaults
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsadvanced.cpp
;	COMDAT ?ProcMessage@SettingsAdvanced@@UAEHIIJ@Z
_TEXT	SEGMENT
$T1 = -916						; size = 8
$T2 = -908						; size = 8
$T3 = -900						; size = 8
$T4 = -892						; size = 8
$T5 = -884						; size = 8
_qsvSettings$6 = -876					; size = 8
_strX264Settings$7 = -868				; size = 8
_strNewPreset$8 = -860					; size = 8
_strNewPreset$9 = -852					; size = 8
_strNvencPreset$10 = -844				; size = 8
_keyframeInt$11 = -836					; size = 4
_bDisableTCPOptimizations$12 = -832			; size = 4
_globalAudioTimeAdjust$13 = -828			; size = 4
_friendlyAddressLen$14 = -824				; size = 4
_bufferTime$15 = -820					; size = 4
_lowLatencyFactor$16 = -816				; size = 4
_hwndTemp$17 = -812					; size = 4
_flags$18 = -808					; size = 4
_bUseSendBuffer$19 = -804				; size = 4
_bLowLatencyAutoMethod$20 = -800			; size = 4
_bUseVideoEncoderSettings$21 = -796			; size = 4
_bMicSyncFixHack$22 = -792				; size = 4
$T23 = -788						; size = 4
_vencoder$24 = -784					; size = 8
_sceneBufferingTime$25 = -776				; size = 4
tv177 = -772						; size = 4
tv638 = -768						; size = 4
tv374 = -764						; size = 4
tv436 = -760						; size = 4
tv368 = -756						; size = 4
tv593 = -752						; size = 4
tv292 = -748						; size = 4
tv745 = -744						; size = 4
tv269 = -740						; size = 4
tv64 = -736						; size = 4
tv1100 = -732						; size = 4
tv540 = -728						; size = 4
_dwSize$26 = -724					; size = 4
tv183 = -720						; size = 4
tv993 = -716						; size = 4
tv739 = -712						; size = 4
tv974 = -708						; size = 4
tv632 = -704						; size = 4
tv906 = -700						; size = 4
tv615 = -696						; size = 4
tv887 = -692						; size = 4
tv578 = -688						; size = 4
tv881 = -684						; size = 4
tv532 = -680						; size = 4
tv864 = -676						; size = 4
tv423 = -672						; size = 4
tv826 = -668						; size = 4
tv774 = -664						; size = 4
tv298 = -660						; size = 4
_hwndTemp$27 = -656					; size = 4
tv275 = -652						; size = 4
tv1237 = -648						; size = 4
tv1140 = -644						; size = 4
tv621 = -640						; size = 4
_ipTable$28 = -636					; size = 4
_pStr$29 = -632						; size = 4
_i$30 = -628						; size = 4
_i$31 = -624						; size = 4
_qsvPreset$32 = -620					; size = 4
_i$33 = -616						; size = 4
tv1089 = -612						; size = 4
_pCurrAddresses$34 = -608				; size = 4
_i$35 = -604						; size = 4
_bUseCFR$36 = -598					; size = 1
_bSyncToVideoTime$37 = -597				; size = 1
_bUseQSV$38 = -596					; size = 1
_invalidSettings$39 = -595				; size = 1
_bUseNVENC$40 = -594					; size = 1
_bUnlockFPS$41 = -593					; size = 1
_hwndToolTip$42 = -592					; size = 4
_bUseMicQPC$43 = -586					; size = 1
_bAllowOtherHotkeyModifiers$44 = -585			; size = 1
_bNvencUse2Pass$45 = -584				; size = 1
_bDisablePreviewEncoding$46 = -583			; size = 1
_bUseMTOptimizations$47 = -582				; size = 1
_bFullRange$48 = -581					; size = 1
_pUnicast$49 = -580					; size = 4
_useSettings$50 = -575					; size = 1
_bUseCustomX264Settings$51 = -574			; size = 1
_bQSVUseVideoEncoderSettings$52 = -573			; size = 1
_hwndTemp$53 = -572					; size = 4
_this$ = -568						; size = 4
_ti$54 = -564						; size = 48
_friendlyAddress$55 = -516				; size = 512
__$ArrayPad$ = -4					; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?ProcMessage@SettingsAdvanced@@UAEHIIJ@Z PROC		; SettingsAdvanced::ProcMessage, COMDAT
; _this$ = ecx

; 284  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 916				; 00000394H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 285  :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN65@ProcMessag
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN34@ProcMessag
	jmp	$LN66@ProcMessag
$LN65@ProcMessag:

; 286  :     {
; 287  :         case WM_INITDIALOG:
; 288  :             {
; 289  :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 290  : 
; 291  :                 bool invalidSettings = false;

	mov	BYTE PTR _invalidSettings$39[ebp], 0

; 292  : 
; 293  :                 //--------------------------------------------
; 294  : 
; 295  :                 HWND hwndToolTip = CreateWindowEx(NULL, TOOLTIPS_CLASS, NULL, WS_POPUP|TTS_NOPREFIX|TTS_ALWAYSTIP,
; 296  :                     CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
; 297  :                     hwnd, NULL, hinstMain, NULL);

	push	0
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483645				; 80000003H
	push	0
	push	OFFSET $SG4294759222
	push	0
	call	_IsolationAwareCreateWindowExW@48
	mov	DWORD PTR _hwndToolTip$42[ebp], eax

; 298  : 
; 299  :                 TOOLINFO ti;
; 300  :                 zero(&ti, sizeof(ti));

	push	48					; 00000030H
	lea	eax, DWORD PTR _ti$54[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 301  :                 ti.cbSize = sizeof(ti);

	mov	DWORD PTR _ti$54[ebp], 48		; 00000030H

; 302  :                 ti.uFlags = TTF_SUBCLASS|TTF_IDISHWND;

	mov	DWORD PTR _ti$54[ebp+4], 17		; 00000011H

; 303  :                 ti.hwnd = hwnd;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _ti$54[ebp+8], edx

; 304  : 
; 305  :                 if (LocaleIsRTL())

	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp_?LocaleIsRTL@@YA_NPAVLocaleStringLookup@@@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN64@ProcMessag

; 306  :                     ti.uFlags |= TTF_RTLREADING;

	mov	eax, DWORD PTR _ti$54[ebp+4]
	or	eax, 4
	mov	DWORD PTR _ti$54[ebp+4], eax
$LN64@ProcMessag:

; 307  : 
; 308  :                 SendMessage(hwndToolTip, TTM_SETMAXTIPWIDTH, 0, 500);

	push	500					; 000001f4H
	push	0
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwndToolTip$42[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 309  :                 SendMessage(hwndToolTip, TTM_SETDELAYTIME, TTDT_AUTOPOP, 14000);

	push	14000					; 000036b0H
	push	2
	push	1027					; 00000403H
	mov	edx, DWORD PTR _hwndToolTip$42[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 310  : 
; 311  :                 //------------------------------------
; 312  : 
; 313  :                 UINT sceneBufferingTime = GlobalConfig->GetInt(TEXT("General"), TEXT("SceneBufferingTime"), 700);

	push	700					; 000002bcH
	push	OFFSET $SG4294759221
	push	OFFSET $SG4294759220
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _sceneBufferingTime$25[ebp], eax

; 314  :                 SendMessage(GetDlgItem(hwnd, IDC_SCENEBUFFERTIME), UDM_SETRANGE32, 60, 20000);

	push	20000					; 00004e20H
	push	60					; 0000003cH
	push	1135					; 0000046fH
	push	1153					; 00000481H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 315  :                 SendMessage(GetDlgItem(hwnd, IDC_SCENEBUFFERTIME), UDM_SETPOS32, 0, sceneBufferingTime);

	mov	edx, DWORD PTR _sceneBufferingTime$25[ebp]
	push	edx
	push	0
	push	1137					; 00000471H
	push	1153					; 00000481H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 316  : 
; 317  :                 //------------------------------------
; 318  : 
; 319  :                 bool bUseMTOptimizations = AppConfig->GetInt(TEXT("General"), TEXT("UseMultithreadedOptimizations"), TRUE) != 0;

	push	1
	push	OFFSET $SG4294759219
	push	OFFSET $SG4294759218
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN70@ProcMessag
	mov	DWORD PTR tv177[ebp], 1
	jmp	SHORT $LN71@ProcMessag
$LN70@ProcMessag:
	mov	DWORD PTR tv177[ebp], 0
$LN71@ProcMessag:
	mov	dl, BYTE PTR tv177[ebp]
	mov	BYTE PTR _bUseMTOptimizations$47[ebp], dl

; 320  :                 SendMessage(GetDlgItem(hwnd, IDC_USEMULTITHREADEDOPTIMIZATIONS), BM_SETCHECK, bUseMTOptimizations ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	eax, BYTE PTR _bUseMTOptimizations$47[ebp]
	test	eax, eax
	je	SHORT $LN72@ProcMessag
	mov	DWORD PTR tv183[ebp], 1
	jmp	SHORT $LN73@ProcMessag
$LN72@ProcMessag:
	mov	DWORD PTR tv183[ebp], 0
$LN73@ProcMessag:
	push	0
	mov	ecx, DWORD PTR tv183[ebp]
	push	ecx
	push	241					; 000000f1H
	push	1099					; 0000044bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 321  : 
; 322  :                 HWND hwndTemp = GetDlgItem(hwnd, IDC_PRIORITY);

	push	1132					; 0000046cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$53[ebp], eax

; 323  :                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Advanced.Priority.High"));

	push	OFFSET $SG4294759217
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 324  :                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Advanced.Priority.AboveNormal"));

	push	OFFSET $SG4294759216
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	eax, DWORD PTR _hwndTemp$53[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 325  :                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Advanced.Priority.Normal"));

	push	OFFSET $SG4294759215
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	edx, DWORD PTR _hwndTemp$53[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 326  :                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Advanced.Priority.Idle"));

	push	OFFSET $SG4294759214
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 327  : 
; 328  :                 CTSTR pStr = AppConfig->GetStringPtr(TEXT("General"), TEXT("Priority"), TEXT("Normal"));

	push	OFFSET $SG4294759213
	push	OFFSET $SG4294759212
	push	OFFSET $SG4294759211
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetStringPtr@ConfigFile@@QAEPB_WPB_W00@Z
	mov	DWORD PTR _pStr$29[ebp], eax

; 329  :                 if (scmpi(pStr, TEXT("Idle")) == 0)

	push	OFFSET $SG4294759210
	mov	edx, DWORD PTR _pStr$29[ebp]
	push	edx
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN63@ProcMessag

; 330  :                     SendMessage(hwndTemp, CB_SETCURSEL, 3, 0);

	push	0
	push	3
	push	334					; 0000014eH
	mov	eax, DWORD PTR _hwndTemp$53[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN62@ProcMessag
$LN63@ProcMessag:

; 331  :                 else if (scmpi(pStr, TEXT("Above Normal")) == 0)

	push	OFFSET $SG4294759209
	mov	ecx, DWORD PTR _pStr$29[ebp]
	push	ecx
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN61@ProcMessag

; 332  :                     SendMessage(hwndTemp, CB_SETCURSEL, 1, 0);

	push	0
	push	1
	push	334					; 0000014eH
	mov	edx, DWORD PTR _hwndTemp$53[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN62@ProcMessag
$LN61@ProcMessag:

; 333  :                 else if (scmpi(pStr, TEXT("High")) == 0)

	push	OFFSET $SG4294759208
	mov	eax, DWORD PTR _pStr$29[ebp]
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN59@ProcMessag

; 334  :                     SendMessage(hwndTemp, CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 335  :                 else //Normal

	jmp	SHORT $LN62@ProcMessag
$LN59@ProcMessag:

; 336  :                     SendMessage(hwndTemp, CB_SETCURSEL, 2, 0);

	push	0
	push	2
	push	334					; 0000014eH
	mov	edx, DWORD PTR _hwndTemp$53[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN62@ProcMessag:

; 337  : 
; 338  :                 //------------------------------------
; 339  : 
; 340  :                 bool bDisablePreviewEncoding = GlobalConfig->GetInt(TEXT("General"), TEXT("DisablePreviewEncoding"), false) != 0;

	push	0
	push	OFFSET $SG4294759207
	push	OFFSET $SG4294759206
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN74@ProcMessag
	mov	DWORD PTR tv269[ebp], 1
	jmp	SHORT $LN75@ProcMessag
$LN74@ProcMessag:
	mov	DWORD PTR tv269[ebp], 0
$LN75@ProcMessag:
	mov	al, BYTE PTR tv269[ebp]
	mov	BYTE PTR _bDisablePreviewEncoding$46[ebp], al

; 341  :                 SendMessage(GetDlgItem(hwnd, IDC_DISABLEPREVIEWENCODING), BM_SETCHECK, bDisablePreviewEncoding ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	ecx, BYTE PTR _bDisablePreviewEncoding$46[ebp]
	test	ecx, ecx
	je	SHORT $LN76@ProcMessag
	mov	DWORD PTR tv275[ebp], 1
	jmp	SHORT $LN77@ProcMessag
$LN76@ProcMessag:
	mov	DWORD PTR tv275[ebp], 0
$LN77@ProcMessag:
	push	0
	mov	edx, DWORD PTR tv275[ebp]
	push	edx
	push	241					; 000000f1H
	push	1100					; 0000044cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 342  : 
; 343  :                 //------------------------------------
; 344  : 
; 345  :                 bool bAllowOtherHotkeyModifiers = GlobalConfig->GetInt(TEXT("General"), TEXT("AllowOtherHotkeyModifiers"), true) != 0;

	push	1
	push	OFFSET $SG4294759205
	push	OFFSET $SG4294759204
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN78@ProcMessag
	mov	DWORD PTR tv292[ebp], 1
	jmp	SHORT $LN79@ProcMessag
$LN78@ProcMessag:
	mov	DWORD PTR tv292[ebp], 0
$LN79@ProcMessag:
	mov	dl, BYTE PTR tv292[ebp]
	mov	BYTE PTR _bAllowOtherHotkeyModifiers$44[ebp], dl

; 346  :                 SendMessage(GetDlgItem(hwnd, IDC_ALLOWOTHERHOTKEYMODIFIERS), BM_SETCHECK, bAllowOtherHotkeyModifiers ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	eax, BYTE PTR _bAllowOtherHotkeyModifiers$44[ebp]
	test	eax, eax
	je	SHORT $LN80@ProcMessag
	mov	DWORD PTR tv298[ebp], 1
	jmp	SHORT $LN81@ProcMessag
$LN80@ProcMessag:
	mov	DWORD PTR tv298[ebp], 0
$LN81@ProcMessag:
	push	0
	mov	ecx, DWORD PTR tv298[ebp]
	push	ecx
	push	241					; 000000f1H
	push	1101					; 0000044dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 347  : 
; 348  :                 //--------------------------------------------
; 349  : 
; 350  :                 hwndTemp = GetDlgItem(hwnd, IDC_X264PROFILE);

	push	1015					; 000003f7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$53[ebp], eax

; 351  :                 static const CTSTR profile_names[3] = {TEXT("main"), TEXT("high")};
; 352  :                 for(int i=0; i<2; i++)

	mov	DWORD PTR _i$31[ebp], 0
	jmp	SHORT $LN57@ProcMessag
$LN56@ProcMessag:
	mov	eax, DWORD PTR _i$31[ebp]
	add	eax, 1
	mov	DWORD PTR _i$31[ebp], eax
$LN57@ProcMessag:
	cmp	DWORD PTR _i$31[ebp], 2
	jge	SHORT $LN55@ProcMessag

; 353  :                     SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)profile_names[i]);

	mov	ecx, DWORD PTR _i$31[ebp]
	mov	edx, DWORD PTR ?profile_names@?BA@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB[ecx*4]
	push	edx
	push	0
	push	323					; 00000143H
	mov	eax, DWORD PTR _hwndTemp$53[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN56@ProcMessag
$LN55@ProcMessag:

; 354  : 
; 355  :                 LoadSettingComboString(hwndTemp, TEXT("Video Encoding"), TEXT("X264Profile"), TEXT("high"));

	push	OFFSET $SG4294759201
	push	OFFSET $SG4294759200
	push	OFFSET $SG4294759199
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingComboString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 356  : 
; 357  :                 //--------------------------------------------
; 358  : 
; 359  :                 hwndTemp = GetDlgItem(hwnd, IDC_PRESET);

	push	1013					; 000003f5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$53[ebp], eax

; 360  :                 static const CTSTR preset_names[8] = {TEXT("ultrafast"), TEXT("superfast"), TEXT("veryfast"), TEXT("faster"), TEXT("fast"), TEXT("medium"), TEXT("slow"), TEXT("slower")};
; 361  :                 for(int i=0; i<8; i++)

	mov	DWORD PTR _i$33[ebp], 0
	jmp	SHORT $LN54@ProcMessag
$LN53@ProcMessag:
	mov	edx, DWORD PTR _i$33[ebp]
	add	edx, 1
	mov	DWORD PTR _i$33[ebp], edx
$LN54@ProcMessag:
	cmp	DWORD PTR _i$33[ebp], 8
	jge	SHORT $LN52@ProcMessag

; 362  :                     SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)preset_names[i]);

	mov	eax, DWORD PTR _i$33[ebp]
	mov	ecx, DWORD PTR ?preset_names@?BB@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB[eax*4]
	push	ecx
	push	0
	push	323					; 00000143H
	mov	edx, DWORD PTR _hwndTemp$53[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN53@ProcMessag
$LN52@ProcMessag:

; 363  : 
; 364  :                 LoadSettingComboString(hwndTemp, TEXT("Video Encoding"), TEXT("Preset"), TEXT("veryfast"));

	push	OFFSET $SG4294759190
	push	OFFSET $SG4294759189
	push	OFFSET $SG4294759188
	mov	eax, DWORD PTR _hwndTemp$53[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingComboString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 365  : 
; 366  :                 ti.lpszText = (LPWSTR)Str("Settings.Advanced.VideoEncoderCPUTradeoffTooltip");

	push	OFFSET $SG4294759187
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$54[ebp+36], eax

; 367  :                 ti.uId = (UINT_PTR)hwndTemp;

	mov	eax, DWORD PTR _hwndTemp$53[ebp]
	mov	DWORD PTR _ti$54[ebp+12], eax

; 368  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	ecx, DWORD PTR _ti$54[ebp]
	push	ecx
	push	0
	push	1074					; 00000432H
	mov	edx, DWORD PTR _hwndToolTip$42[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 369  : 
; 370  :                 //------------------------------------
; 371  : 
; 372  :                 bool bUseCFR = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("UseCFR"), 1) != 0;

	push	1
	push	OFFSET $SG4294759186
	push	OFFSET $SG4294759185
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN82@ProcMessag
	mov	DWORD PTR tv368[ebp], 1
	jmp	SHORT $LN83@ProcMessag
$LN82@ProcMessag:
	mov	DWORD PTR tv368[ebp], 0
$LN83@ProcMessag:
	mov	al, BYTE PTR tv368[ebp]
	mov	BYTE PTR _bUseCFR$36[ebp], al

; 373  :                 SendMessage(GetDlgItem(hwnd, IDC_USECFR), BM_SETCHECK, bUseCFR ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	ecx, BYTE PTR _bUseCFR$36[ebp]
	test	ecx, ecx
	je	SHORT $LN84@ProcMessag
	mov	DWORD PTR tv374[ebp], 1
	jmp	SHORT $LN85@ProcMessag
$LN84@ProcMessag:
	mov	DWORD PTR tv374[ebp], 0
$LN85@ProcMessag:
	push	0
	mov	edx, DWORD PTR tv374[ebp]
	push	edx
	push	241					; 000000f1H
	push	1141					; 00000475H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 374  : 
; 375  :                 //------------------------------------
; 376  : 
; 377  :                 bool bUseCustomX264Settings = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("UseCustomSettings")) != 0;

	push	0
	push	OFFSET $SG4294759184
	push	OFFSET $SG4294759183
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN86@ProcMessag
	mov	DWORD PTR tv423[ebp], 1
	jmp	SHORT $LN87@ProcMessag
$LN86@ProcMessag:
	mov	DWORD PTR tv423[ebp], 0
$LN87@ProcMessag:
	mov	dl, BYTE PTR tv423[ebp]
	mov	BYTE PTR _bUseCustomX264Settings$51[ebp], dl

; 378  :                 String strX264Settings = AppConfig->GetString(TEXT("Video Encoding"), TEXT("CustomSettings"));

	push	0
	push	OFFSET $SG4294759182
	push	OFFSET $SG4294759181
	lea	eax, DWORD PTR _strX264Settings$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 379  : 
; 380  :                 SendMessage(GetDlgItem(hwnd, IDC_USEVIDEOENCODERSETTINGS), BM_SETCHECK, bUseCustomX264Settings ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	ecx, BYTE PTR _bUseCustomX264Settings$51[ebp]
	test	ecx, ecx
	je	SHORT $LN88@ProcMessag
	mov	DWORD PTR tv436[ebp], 1
	jmp	SHORT $LN89@ProcMessag
$LN88@ProcMessag:
	mov	DWORD PTR tv436[ebp], 0
$LN89@ProcMessag:
	push	0
	mov	edx, DWORD PTR tv436[ebp]
	push	edx
	push	241					; 000000f1H
	push	1041					; 00000411H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 381  :                 SetWindowText(GetDlgItem(hwnd, IDC_VIDEOENCODERSETTINGS), strX264Settings);

	lea	ecx, DWORD PTR _strX264Settings$7[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1078					; 00000436H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 382  : 
; 383  :                 ti.lpszText = (LPWSTR)Str("Settings.Advanced.VideoEncoderSettingsTooltip");

	push	OFFSET $SG4294759180
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$54[ebp+36], eax

; 384  :                 ti.uId = (UINT_PTR)GetDlgItem(hwnd, IDC_VIDEOENCODERSETTINGS);

	push	1078					; 00000436H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _ti$54[ebp+12], eax

; 385  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	ecx, DWORD PTR _ti$54[ebp]
	push	ecx
	push	0
	push	1074					; 00000432H
	mov	edx, DWORD PTR _hwndToolTip$42[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 386  : 
; 387  :                 ti.uId = (UINT_PTR)GetDlgItem(hwnd, IDC_USEVIDEOENCODERSETTINGS);

	push	1041					; 00000411H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _ti$54[ebp+12], eax

; 388  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	edx, DWORD PTR _ti$54[ebp]
	push	edx
	push	0
	push	1074					; 00000432H
	mov	eax, DWORD PTR _hwndToolTip$42[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 389  : 
; 390  :                 EnableWindow(GetDlgItem(hwnd, IDC_VIDEOENCODERSETTINGS), bUseCustomX264Settings);

	movzx	ecx, BYTE PTR _bUseCustomX264Settings$51[ebp]
	push	ecx
	push	1078					; 00000436H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 391  : 
; 392  :                 //--------------------------------------------
; 393  : 
; 394  :                 UINT keyframeInt = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("KeyframeInterval"), 0);

	push	0
	push	OFFSET $SG4294759179
	push	OFFSET $SG4294759178
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _keyframeInt$11[ebp], eax

; 395  :                 SendMessage(GetDlgItem(hwnd, IDC_KEYFRAMEINTERVAL), UDM_SETRANGE32, 0, 20);

	push	20					; 00000014H
	push	0
	push	1135					; 0000046fH
	push	1080					; 00000438H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 396  :                 SendMessage(GetDlgItem(hwnd, IDC_KEYFRAMEINTERVAL), UDM_SETPOS32, 0, keyframeInt);

	mov	eax, DWORD PTR _keyframeInt$11[ebp]
	push	eax
	push	0
	push	1137					; 00000471H
	push	1080					; 00000438H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 397  : 
; 398  :                 //--------------------------------------------
; 399  : 
; 400  :                 bool bUnlockFPS = AppConfig->GetInt(TEXT("Video"), TEXT("UnlockFPS")) != 0;

	push	0
	push	OFFSET $SG4294759177
	push	OFFSET $SG4294759176
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN90@ProcMessag
	mov	DWORD PTR tv532[ebp], 1
	jmp	SHORT $LN91@ProcMessag
$LN90@ProcMessag:
	mov	DWORD PTR tv532[ebp], 0
$LN91@ProcMessag:
	mov	al, BYTE PTR tv532[ebp]
	mov	BYTE PTR _bUnlockFPS$41[ebp], al

; 401  :                 bool bFullRange = AppConfig->GetInt(TEXT("Video"), TEXT("FullRange")) != 0;

	push	0
	push	OFFSET $SG4294759175
	push	OFFSET $SG4294759174
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN92@ProcMessag
	mov	DWORD PTR tv540[ebp], 1
	jmp	SHORT $LN93@ProcMessag
$LN92@ProcMessag:
	mov	DWORD PTR tv540[ebp], 0
$LN93@ProcMessag:
	mov	cl, BYTE PTR tv540[ebp]
	mov	BYTE PTR _bFullRange$48[ebp], cl

; 402  :                 SendMessage(GetDlgItem(hwnd, IDC_UNLOCKHIGHFPS), BM_SETCHECK, bUnlockFPS ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	edx, BYTE PTR _bUnlockFPS$41[ebp]
	test	edx, edx
	je	SHORT $LN94@ProcMessag
	mov	DWORD PTR tv578[ebp], 1
	jmp	SHORT $LN95@ProcMessag
$LN94@ProcMessag:
	mov	DWORD PTR tv578[ebp], 0
$LN95@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv578[ebp]
	push	eax
	push	241					; 000000f1H
	push	1128					; 00000468H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 403  :                 SendMessage(GetDlgItem(hwnd, IDC_ENCODEFULLRANGE), BM_SETCHECK, bFullRange ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	eax, BYTE PTR _bFullRange$48[ebp]
	test	eax, eax
	je	SHORT $LN96@ProcMessag
	mov	DWORD PTR tv593[ebp], 1
	jmp	SHORT $LN97@ProcMessag
$LN96@ProcMessag:
	mov	DWORD PTR tv593[ebp], 0
$LN97@ProcMessag:
	push	0
	mov	ecx, DWORD PTR tv593[ebp]
	push	ecx
	push	241					; 000000f1H
	push	1129					; 00000469H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 404  : 
; 405  :                 //------------------------------------
; 406  : 
; 407  :                 String vencoder = AppConfig->GetString(L"Video Encoding", L"Encoder");

	push	0
	push	OFFSET $SG4294759173
	push	OFFSET $SG4294759172
	lea	ecx, DWORD PTR _vencoder$24[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 408  : 
; 409  :                 bool bUseQSV = !!(vencoder == L"QSV");

	push	OFFSET $SG4294759171
	lea	ecx, DWORD PTR _vencoder$24[ebp]
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN98@ProcMessag
	mov	DWORD PTR tv615[ebp], 1
	jmp	SHORT $LN99@ProcMessag
$LN98@ProcMessag:
	mov	DWORD PTR tv615[ebp], 0
$LN99@ProcMessag:
	mov	dl, BYTE PTR tv615[ebp]
	mov	BYTE PTR _bUseQSV$38[ebp], dl

; 410  : 
; 411  :                 bool bUseNVENC = !!(vencoder == L"NVENC");

	push	OFFSET $SG4294759170
	lea	ecx, DWORD PTR _vencoder$24[ebp]
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN100@ProcMessag
	mov	DWORD PTR tv621[ebp], 1
	jmp	SHORT $LN101@ProcMessag
$LN100@ProcMessag:
	mov	DWORD PTR tv621[ebp], 0
$LN101@ProcMessag:
	mov	al, BYTE PTR tv621[ebp]
	mov	BYTE PTR _bUseNVENC$40[ebp], al

; 412  : 
; 413  :                 SelectPresetDialog(bUseQSV, bUseNVENC);

	movzx	ecx, BYTE PTR _bUseNVENC$40[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bUseQSV$38[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SelectPresetDialog@SettingsAdvanced@@AAEX_N0@Z ; SettingsAdvanced::SelectPresetDialog

; 414  : 
; 415  :                 bool bQSVUseVideoEncoderSettings = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("QSVUseVideoEncoderSettings")) != 0;

	push	0
	push	OFFSET $SG4294759169
	push	OFFSET $SG4294759168
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN102@ProcMessag
	mov	DWORD PTR tv632[ebp], 1
	jmp	SHORT $LN103@ProcMessag
$LN102@ProcMessag:
	mov	DWORD PTR tv632[ebp], 0
$LN103@ProcMessag:
	mov	al, BYTE PTR tv632[ebp]
	mov	BYTE PTR _bQSVUseVideoEncoderSettings$52[ebp], al

; 416  :                 SendMessage(GetDlgItem(hwnd, IDC_QSVUSEVIDEOENCODERSETTINGS), BM_SETCHECK, bQSVUseVideoEncoderSettings ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	ecx, BYTE PTR _bQSVUseVideoEncoderSettings$52[ebp]
	test	ecx, ecx
	je	SHORT $LN104@ProcMessag
	mov	DWORD PTR tv638[ebp], 1
	jmp	SHORT $LN105@ProcMessag
$LN104@ProcMessag:
	mov	DWORD PTR tv638[ebp], 0
$LN105@ProcMessag:
	push	0
	mov	edx, DWORD PTR tv638[ebp]
	push	edx
	push	241					; 000000f1H
	push	1131					; 0000046bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 417  : 
; 418  :                 String qsvSettings = AppConfig->GetString(TEXT("Video Encoding"), TEXT("CustomQSVSettings"));

	push	0
	push	OFFSET $SG4294759167
	push	OFFSET $SG4294759166
	lea	edx, DWORD PTR _qsvSettings$6[ebp]
	push	edx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 419  :                 SetWindowText(GetDlgItem(hwnd, IDC_QSVVIDEOENCODERSETTINGS), qsvSettings);

	lea	ecx, DWORD PTR _qsvSettings$6[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 420  :                 EnableWindow(GetDlgItem(hwnd, IDC_QSVVIDEOENCODERSETTINGS), bQSVUseVideoEncoderSettings);

	movzx	edx, BYTE PTR _bQSVUseVideoEncoderSettings$52[ebp]
	push	edx
	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 421  :                 
; 422  :                 ti.lpszText = (LPWSTR)Str("Settings.Advanced.QSVUseVideoEncoderSettingsTooltip");

	push	OFFSET $SG4294759165
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$54[ebp+36], eax

; 423  :                 ti.uId = (UINT_PTR)GetDlgItem(hwnd, IDC_QSVUSEVIDEOENCODERSETTINGS);

	push	1131					; 0000046bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _ti$54[ebp+12], eax

; 424  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	edx, DWORD PTR _ti$54[ebp]
	push	edx
	push	0
	push	1074					; 00000432H
	mov	eax, DWORD PTR _hwndToolTip$42[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 425  :                 ti.uId = (UINT_PTR)GetDlgItem(hwnd, IDC_QSVVIDEOENCODERSETTINGS);

	push	1081					; 00000439H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _ti$54[ebp+12], eax

; 426  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	eax, DWORD PTR _ti$54[ebp]
	push	eax
	push	0
	push	1074					; 00000432H
	mov	ecx, DWORD PTR _hwndToolTip$42[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 427  :                 
; 428  :                 hwndTemp = GetDlgItem(hwnd, IDC_NVENCPRESET);

	push	1139					; 00000473H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$53[ebp], eax

; 429  :                 static const CTSTR nv_preset_names[16] = {
; 430  :                     TEXT("Automatic"),
; 431  :                     TEXT("High Quality"),
; 432  :                     TEXT("High Performance"),
; 433  :                     TEXT("Bluray Disk"),
; 434  :                     TEXT("Low Latency"),
; 435  :                     TEXT("High Performance Low Latency"),
; 436  :                     TEXT("High Quality Low Latency"),
; 437  :                     TEXT("Lossless"),
; 438  :                     TEXT("High Performance Lossless"),
; 439  :                     TEXT("NVDefault"),
; 440  :                     NULL
; 441  :                 };
; 442  :                 for (int i = 0; nv_preset_names[i]; i++)

	mov	DWORD PTR _i$30[ebp], 0
	jmp	SHORT $LN51@ProcMessag
$LN50@ProcMessag:
	mov	ecx, DWORD PTR _i$30[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$30[ebp], ecx
$LN51@ProcMessag:
	mov	edx, DWORD PTR _i$30[ebp]
	cmp	DWORD PTR ?nv_preset_names@?BC@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB[edx*4], 0
	je	SHORT $LN49@ProcMessag

; 443  :                     SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)nv_preset_names[i]);

	mov	eax, DWORD PTR _i$30[ebp]
	mov	ecx, DWORD PTR ?nv_preset_names@?BC@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB[eax*4]
	push	ecx
	push	0
	push	323					; 00000143H
	mov	edx, DWORD PTR _hwndTemp$53[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN50@ProcMessag
$LN49@ProcMessag:

; 444  : 
; 445  :                 LoadSettingComboString(hwndTemp, TEXT("Video Encoding"), TEXT("NVENCPreset"), nv_preset_names[0]);

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?nv_preset_names@?BC@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB[ecx]
	push	edx
	push	OFFSET $SG4294759154
	push	OFFSET $SG4294759153
	mov	eax, DWORD PTR _hwndTemp$53[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingComboString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 446  : 
; 447  :                 bool bNvencUse2Pass = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("NVENC2Pass"), 1) != 0;

	push	1
	push	OFFSET $SG4294759152
	push	OFFSET $SG4294759151
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN106@ProcMessag
	mov	DWORD PTR tv739[ebp], 1
	jmp	SHORT $LN107@ProcMessag
$LN106@ProcMessag:
	mov	DWORD PTR tv739[ebp], 0
$LN107@ProcMessag:
	mov	dl, BYTE PTR tv739[ebp]
	mov	BYTE PTR _bNvencUse2Pass$45[ebp], dl

; 448  :                 SendMessage(GetDlgItem(hwnd, IDC_NVENC2PASS), BM_SETCHECK, bNvencUse2Pass ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	eax, BYTE PTR _bNvencUse2Pass$45[ebp]
	test	eax, eax
	je	SHORT $LN108@ProcMessag
	mov	DWORD PTR tv745[ebp], 1
	jmp	SHORT $LN109@ProcMessag
$LN108@ProcMessag:
	mov	DWORD PTR tv745[ebp], 0
$LN109@ProcMessag:
	push	0
	mov	ecx, DWORD PTR tv745[ebp]
	push	ecx
	push	241					; 000000f1H
	push	1211					; 000004bbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 449  : 
; 450  :                 String strNvencPreset = AppConfig->GetString(TEXT("Video Encoding"), TEXT("NVENCPreset"), nv_preset_names[0]);

	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR ?nv_preset_names@?BC@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB[edx]
	push	eax
	push	OFFSET $SG4294759150
	push	OFFSET $SG4294759149
	lea	ecx, DWORD PTR _strNvencPreset$10[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 451  :                 EnableWindow(GetDlgItem(hwnd, IDC_NVENC2PASS), scmp(strNvencPreset.Array(), nv_preset_names[0]) ? TRUE : FALSE);

	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR ?nv_preset_names@?BC@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBQB_WB[eax]
	push	ecx
	lea	ecx, DWORD PTR _strNvencPreset$10[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	je	SHORT $LN110@ProcMessag
	mov	DWORD PTR tv774[ebp], 1
	jmp	SHORT $LN111@ProcMessag
$LN110@ProcMessag:
	mov	DWORD PTR tv774[ebp], 0
$LN111@ProcMessag:
	mov	edx, DWORD PTR tv774[ebp]
	push	edx
	push	1211					; 000004bbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 452  : 
; 453  :                 hwndTemp = GetDlgItem(hwnd, IDC_QSVPRESET);

	push	1173					; 00000495H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$53[ebp], eax

; 454  :                 static const struct {
; 455  :                     CTSTR name;
; 456  :                     int id;
; 457  :                 } qsv_presets[] = {
; 458  :                     { L"1 (Best Quality)", 1 },
; 459  :                     { L"2", 2 },
; 460  :                     { L"3", 3 },
; 461  :                     { L"4 (Balanced)", 4 },
; 462  :                     { L"5", 5 },
; 463  :                     { L"6", 6 },
; 464  :                     { L"7 (Best Speed)", 7 }
; 465  :                 };
; 466  :                 for (int i = 0; i < _countof(qsv_presets); i++)

	mov	DWORD PTR _i$35[ebp], 0
	jmp	SHORT $LN48@ProcMessag
$LN47@ProcMessag:
	mov	ecx, DWORD PTR _i$35[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$35[ebp], ecx
$LN48@ProcMessag:
	cmp	DWORD PTR _i$35[ebp], 7
	jae	SHORT $LN46@ProcMessag

; 467  :                 {
; 468  :                     SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)qsv_presets[i].name);

	mov	edx, DWORD PTR _i$35[ebp]
	mov	eax, DWORD PTR ?qsv_presets@?BD@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBU<unnamed-type-qsv_presets>@?BD@??12@UAEHIIJ@Z@B[edx*8]
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 469  :                     SendMessage(hwndTemp, CB_SETITEMDATA, i, qsv_presets[i].id);

	mov	edx, DWORD PTR _i$35[ebp]
	mov	eax, DWORD PTR ?qsv_presets@?BD@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4QBU<unnamed-type-qsv_presets>@?BD@??12@UAEHIIJ@Z@B[edx*8+4]
	push	eax
	mov	ecx, DWORD PTR _i$35[ebp]
	push	ecx
	push	337					; 00000151H
	mov	edx, DWORD PTR _hwndTemp$53[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 470  :                 }

	jmp	SHORT $LN47@ProcMessag
$LN46@ProcMessag:

; 471  :                 int qsvPreset = AppConfig->GetInt(L"Video Encoding", L"QSVPreset", 1);

	push	1
	push	OFFSET $SG4294759141
	push	OFFSET $SG4294759140
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _qsvPreset$32[ebp], eax

; 472  :                 if (qsvPreset < 1 || qsvPreset > 7) qsvPreset = 1;

	cmp	DWORD PTR _qsvPreset$32[ebp], 1
	jl	SHORT $LN44@ProcMessag
	cmp	DWORD PTR _qsvPreset$32[ebp], 7
	jle	SHORT $LN45@ProcMessag
$LN44@ProcMessag:
	mov	DWORD PTR _qsvPreset$32[ebp], 1
$LN45@ProcMessag:

; 473  :                 SendMessage(hwndTemp, CB_SETCURSEL, qsvPreset - 1, 0);

	push	0
	mov	eax, DWORD PTR _qsvPreset$32[ebp]
	sub	eax, 1
	push	eax
	push	334					; 0000014eH
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 474  : 
; 475  :                 //------------------------------------
; 476  : 
; 477  :                 bool bSyncToVideoTime = AppConfig->GetInt(TEXT("Audio"), TEXT("SyncToVideoTime")) != 0;

	push	0
	push	OFFSET $SG4294759139
	push	OFFSET $SG4294759138
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN112@ProcMessag
	mov	DWORD PTR tv826[ebp], 1
	jmp	SHORT $LN113@ProcMessag
$LN112@ProcMessag:
	mov	DWORD PTR tv826[ebp], 0
$LN113@ProcMessag:
	mov	dl, BYTE PTR tv826[ebp]
	mov	BYTE PTR _bSyncToVideoTime$37[ebp], dl

; 478  :                 SendMessage(GetDlgItem(hwnd, IDC_SYNCTOVIDEOTIME), BM_SETCHECK, bSyncToVideoTime ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	eax, BYTE PTR _bSyncToVideoTime$37[ebp]
	test	eax, eax
	je	SHORT $LN114@ProcMessag
	mov	DWORD PTR tv864[ebp], 1
	jmp	SHORT $LN115@ProcMessag
$LN114@ProcMessag:
	mov	DWORD PTR tv864[ebp], 0
$LN115@ProcMessag:
	push	0
	mov	ecx, DWORD PTR tv864[ebp]
	push	ecx
	push	241					; 000000f1H
	push	1106					; 00000452H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 479  : 
; 480  :                 //------------------------------------
; 481  : 
; 482  :                 bool bUseMicQPC = GlobalConfig->GetInt(TEXT("Audio"), TEXT("UseMicQPC")) != 0;

	push	0
	push	OFFSET $SG4294759137
	push	OFFSET $SG4294759136
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN116@ProcMessag
	mov	DWORD PTR tv881[ebp], 1
	jmp	SHORT $LN117@ProcMessag
$LN116@ProcMessag:
	mov	DWORD PTR tv881[ebp], 0
$LN117@ProcMessag:
	mov	cl, BYTE PTR tv881[ebp]
	mov	BYTE PTR _bUseMicQPC$43[ebp], cl

; 483  :                 SendMessage(GetDlgItem(hwnd, IDC_USEMICQPC), BM_SETCHECK, bUseMicQPC ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	edx, BYTE PTR _bUseMicQPC$43[ebp]
	test	edx, edx
	je	SHORT $LN118@ProcMessag
	mov	DWORD PTR tv887[ebp], 1
	jmp	SHORT $LN119@ProcMessag
$LN118@ProcMessag:
	mov	DWORD PTR tv887[ebp], 0
$LN119@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv887[ebp]
	push	eax
	push	241					; 000000f1H
	push	1043					; 00000413H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 484  : 
; 485  :                 //------------------------------------
; 486  : 
; 487  :                 BOOL bMicSyncFixHack = GlobalConfig->GetInt(TEXT("Audio"), TEXT("UseMicSyncFixHack"));

	push	0
	push	OFFSET $SG4294759135
	push	OFFSET $SG4294759134
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bMicSyncFixHack$22[ebp], eax

; 488  :                 SendMessage(GetDlgItem(hwnd, IDC_MICSYNCFIX), BM_SETCHECK, bMicSyncFixHack ? BST_CHECKED : BST_UNCHECKED, 0);

	cmp	DWORD PTR _bMicSyncFixHack$22[ebp], 0
	je	SHORT $LN120@ProcMessag
	mov	DWORD PTR tv906[ebp], 1
	jmp	SHORT $LN121@ProcMessag
$LN120@ProcMessag:
	mov	DWORD PTR tv906[ebp], 0
$LN121@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv906[ebp]
	push	eax
	push	241					; 000000f1H
	push	1160					; 00000488H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 489  : 
; 490  :                 //------------------------------------
; 491  : 
; 492  :                 int bufferTime = GlobalConfig->GetInt(TEXT("General"), TEXT("SceneBufferingTime"), 700);

	push	700					; 000002bcH
	push	OFFSET $SG4294759133
	push	OFFSET $SG4294759132
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bufferTime$15[ebp], eax

; 493  : 
; 494  :                 int globalAudioTimeAdjust = GlobalConfig->GetInt(TEXT("Audio"), TEXT("GlobalAudioTimeAdjust"));

	push	0
	push	OFFSET $SG4294759131
	push	OFFSET $SG4294759130
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _globalAudioTimeAdjust$13[ebp], eax

; 495  :                 SendMessage(GetDlgItem(hwnd, IDC_AUDIOTIMEADJUST), UDM_SETRANGE32, -bufferTime, 5000);

	push	5000					; 00001388H
	mov	eax, DWORD PTR _bufferTime$15[ebp]
	neg	eax
	push	eax
	push	1135					; 0000046fH
	push	1079					; 00000437H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 496  :                 SendMessage(GetDlgItem(hwnd, IDC_AUDIOTIMEADJUST), UDM_SETPOS32, 0, globalAudioTimeAdjust);

	mov	eax, DWORD PTR _globalAudioTimeAdjust$13[ebp]
	push	eax
	push	0
	push	1137					; 00000471H
	push	1079					; 00000437H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 497  : 
; 498  :                 //------------------------------------
; 499  : 
; 500  :                 int lowLatencyFactor = AppConfig->GetInt(TEXT("Publish"), TEXT("LatencyFactor"), 20);

	push	20					; 00000014H
	push	OFFSET $SG4294759129
	push	OFFSET $SG4294759128
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _lowLatencyFactor$16[ebp], eax

; 501  :                 SetDlgItemInt(hwnd, IDC_LATENCYTUNE, lowLatencyFactor, TRUE);

	push	1
	mov	eax, DWORD PTR _lowLatencyFactor$16[ebp]
	push	eax
	push	1147					; 0000047bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16

; 502  : 
; 503  :                 int bLowLatencyAutoMethod = AppConfig->GetInt(TEXT("Publish"), TEXT("LowLatencyMethod"), 0);

	push	0
	push	OFFSET $SG4294759127
	push	OFFSET $SG4294759126
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bLowLatencyAutoMethod$20[ebp], eax

; 504  :                 SendMessage(GetDlgItem(hwnd, IDC_LATENCYMETHOD), BM_SETCHECK, bLowLatencyAutoMethod ? BST_CHECKED : BST_UNCHECKED, 0);

	cmp	DWORD PTR _bLowLatencyAutoMethod$20[ebp], 0
	je	SHORT $LN122@ProcMessag
	mov	DWORD PTR tv974[ebp], 1
	jmp	SHORT $LN123@ProcMessag
$LN122@ProcMessag:
	mov	DWORD PTR tv974[ebp], 0
$LN123@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv974[ebp]
	push	eax
	push	241					; 000000f1H
	push	1145					; 00000479H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 505  : 
; 506  :                 BOOL bDisableTCPOptimizations = AppConfig->GetInt(TEXT("Publish"), TEXT("DisableSendWindowOptimization"), 0);

	push	0
	push	OFFSET $SG4294759125
	push	OFFSET $SG4294759124
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bDisableTCPOptimizations$12[ebp], eax

; 507  :                 SendMessage(GetDlgItem(hwnd, IDC_DISABLETCPOPTIMIZATIONS), BM_SETCHECK, bDisableTCPOptimizations ? BST_CHECKED : BST_UNCHECKED, 0);

	cmp	DWORD PTR _bDisableTCPOptimizations$12[ebp], 0
	je	SHORT $LN124@ProcMessag
	mov	DWORD PTR tv993[ebp], 1
	jmp	SHORT $LN125@ProcMessag
$LN124@ProcMessag:
	mov	DWORD PTR tv993[ebp], 0
$LN125@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv993[ebp]
	push	eax
	push	241					; 000000f1H
	push	1146					; 0000047aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 508  : 
; 509  :                 //------------------------------------
; 510  : 
; 511  :                 IP_ADAPTER_ADDRESSES *ipTable;
; 512  : 
; 513  :                 DWORD dwSize = 65536;

	mov	DWORD PTR _dwSize$26[ebp], 65536	; 00010000H

; 514  :                 ipTable = (IP_ADAPTER_ADDRESSES *)Allocate(dwSize);

	mov	eax, DWORD PTR _dwSize$26[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR _ipTable$28[ebp], eax

; 515  : 
; 516  :                 DWORD flags = GAA_FLAG_SKIP_ANYCAST | GAA_FLAG_SKIP_MULTICAST | GAA_FLAG_SKIP_DNS_SERVER;

	mov	DWORD PTR _flags$18[ebp], 14		; 0000000eH

; 517  : 
; 518  :                 hwndTemp = GetDlgItem(hwnd, IDC_BINDIP);

	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$53[ebp], eax

; 519  :                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)TEXT("Default"));

	push	OFFSET $SG4294759123
	push	0
	push	323					; 00000143H
	mov	eax, DWORD PTR _hwndTemp$53[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 520  : 
; 521  :                 if (!GetAdaptersAddresses(AF_UNSPEC, flags, NULL, ipTable, &dwSize))

	lea	ecx, DWORD PTR _dwSize$26[ebp]
	push	ecx
	mov	edx, DWORD PTR _ipTable$28[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _flags$18[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__GetAdaptersAddresses@20
	test	eax, eax
	jne	$LN43@ProcMessag

; 522  :                 {
; 523  :                     IP_ADAPTER_ADDRESSES *pCurrAddresses = ipTable;

	mov	ecx, DWORD PTR _ipTable$28[ebp]
	mov	DWORD PTR _pCurrAddresses$34[ebp], ecx
$LN42@ProcMessag:

; 524  : 
; 525  :                     while (pCurrAddresses)

	cmp	DWORD PTR _pCurrAddresses$34[ebp], 0
	je	$LN41@ProcMessag

; 526  :                     {
; 527  :                         if (pCurrAddresses->OperStatus == IfOperStatusUp && pCurrAddresses->IfType != IF_TYPE_SOFTWARE_LOOPBACK)

	mov	edx, DWORD PTR _pCurrAddresses$34[ebp]
	cmp	DWORD PTR [edx+68], 1
	jne	$LN40@ProcMessag
	mov	eax, DWORD PTR _pCurrAddresses$34[ebp]
	cmp	DWORD PTR [eax+64], 24			; 00000018H
	je	$LN40@ProcMessag

; 528  :                         {
; 529  :                             PIP_ADAPTER_UNICAST_ADDRESS pUnicast = pCurrAddresses->FirstUnicastAddress;

	mov	ecx, DWORD PTR _pCurrAddresses$34[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _pUnicast$49[ebp], edx
$LN39@ProcMessag:

; 530  :                             while (pUnicast)

	cmp	DWORD PTR _pUnicast$49[ebp], 0
	je	$LN40@ProcMessag

; 531  :                             {
; 532  :                                 if (pUnicast->Address.lpSockaddr->sa_family == AF_INET || pUnicast->Address.lpSockaddr->sa_family == AF_INET6)

	mov	eax, DWORD PTR _pUnicast$49[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 2
	je	SHORT $LN36@ProcMessag
	mov	eax, DWORD PTR _pUnicast$49[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 23					; 00000017H
	jne	SHORT $LN37@ProcMessag
$LN36@ProcMessag:

; 533  :                                 {
; 534  :                                     TCHAR friendlyAddress[256];
; 535  :                                     DWORD friendlyAddressLen = _countof(friendlyAddress);

	mov	DWORD PTR _friendlyAddressLen$14[ebp], 256 ; 00000100H

; 536  :                                     if (!WSAAddressToString(pUnicast->Address.lpSockaddr, pUnicast->Address.iSockaddrLength, NULL, friendlyAddress, &friendlyAddressLen))

	lea	eax, DWORD PTR _friendlyAddressLen$14[ebp]
	push	eax
	lea	ecx, DWORD PTR _friendlyAddress$55[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pUnicast$49[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pUnicast$49[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__WSAAddressToStringW@20
	test	eax, eax
	jne	SHORT $LN37@ProcMessag

; 537  :                                     {
; 538  :                                         SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)friendlyAddress);

	lea	eax, DWORD PTR _friendlyAddress$55[ebp]
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN37@ProcMessag:

; 539  :                                     }
; 540  :                                 }
; 541  :                                 pUnicast = pUnicast->Next;

	mov	edx, DWORD PTR _pUnicast$49[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _pUnicast$49[ebp], eax

; 542  :                             }

	jmp	$LN39@ProcMessag
$LN40@ProcMessag:

; 543  :                         }
; 544  : 
; 545  :                         pCurrAddresses = pCurrAddresses->Next;

	mov	ecx, DWORD PTR _pCurrAddresses$34[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pCurrAddresses$34[ebp], edx

; 546  :                     }

	jmp	$LN42@ProcMessag
$LN41@ProcMessag:

; 547  : 
; 548  :                     Free(ipTable);

	mov	eax, DWORD PTR _ipTable$28[ebp]
	push	eax
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4
$LN43@ProcMessag:

; 549  :                 }
; 550  : 
; 551  :                 LoadSettingComboString(hwndTemp, TEXT("Publish"), TEXT("BindToIP"), TEXT("Default"));

	push	OFFSET $SG4294759122
	push	OFFSET $SG4294759121
	push	OFFSET $SG4294759120
	mov	ecx, DWORD PTR _hwndTemp$53[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingComboString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 552  : 
; 553  :                 //need this as some of the dialog item sets above trigger the notifications
; 554  :                 ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_HIDE);

	push	0
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 555  :                 SetChangedSettings(invalidSettings);

	movzx	edx, BYTE PTR _invalidSettings$39[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 556  :                 return TRUE;

	mov	DWORD PTR $T23[ebp], 1
	lea	ecx, DWORD PTR _strNvencPreset$10[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _qsvSettings$6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _vencoder$24[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strX264Settings$7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR $T23[ebp]
	jmp	$LN68@ProcMessag
$LN34@ProcMessag:

; 557  :             }
; 558  : 
; 559  :         case WM_COMMAND:
; 560  :             switch(LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv1089[ebp], eax
	mov	ecx, DWORD PTR tv1089[ebp]
	sub	ecx, 1013				; 000003f5H
	mov	DWORD PTR tv1089[ebp], ecx
	cmp	DWORD PTR tv1089[ebp], 198		; 000000c6H
	ja	$LN66@ProcMessag
	mov	edx, DWORD PTR tv1089[ebp]
	movzx	eax, BYTE PTR $LN132@ProcMessag[edx]
	jmp	DWORD PTR $LN133@ProcMessag[eax*4]
$LN31@ProcMessag:

; 561  :             {
; 562  :                 case IDC_USEVIDEOENCODERSETTINGS:
; 563  :                     if(HIWORD(wParam) == BN_CLICKED)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	test	edx, edx
	jne	$LN30@ProcMessag

; 564  :                     {
; 565  :                         BOOL bUseVideoEncoderSettings = SendMessage((HWND)lParam, BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN126@ProcMessag
	mov	DWORD PTR tv1100[ebp], 1
	jmp	SHORT $LN127@ProcMessag
$LN126@ProcMessag:
	mov	DWORD PTR tv1100[ebp], 0
$LN127@ProcMessag:
	mov	ecx, DWORD PTR tv1100[ebp]
	mov	DWORD PTR _bUseVideoEncoderSettings$21[ebp], ecx

; 566  :                         EnableWindow(GetDlgItem(hwnd, IDC_VIDEOENCODERSETTINGS), bUseVideoEncoderSettings);

	mov	edx, DWORD PTR _bUseVideoEncoderSettings$21[ebp]
	push	edx
	push	1078					; 00000436H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 567  : 
; 568  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN29@ProcMessag

; 569  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN29@ProcMessag:

; 570  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN30@ProcMessag:

; 571  :                     }
; 572  :                     break;

	jmp	$LN66@ProcMessag
$LN28@ProcMessag:

; 573  : 
; 574  :                 case IDC_QSVUSEVIDEOENCODERSETTINGS:
; 575  :                     if (HIWORD(wParam) == BN_CLICKED)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	test	edx, edx
	jne	$LN27@ProcMessag

; 576  :                     {
; 577  :                         bool useSettings = SendMessage((HWND)lParam, BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN128@ProcMessag
	mov	DWORD PTR tv1140[ebp], 1
	jmp	SHORT $LN129@ProcMessag
$LN128@ProcMessag:
	mov	DWORD PTR tv1140[ebp], 0
$LN129@ProcMessag:
	mov	cl, BYTE PTR tv1140[ebp]
	mov	BYTE PTR _useSettings$50[ebp], cl

; 578  :                         EnableWindow(GetDlgItem(hwnd, IDC_QSVVIDEOENCODERSETTINGS), useSettings);

	movzx	edx, BYTE PTR _useSettings$50[ebp]
	push	edx
	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 579  : 
; 580  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN26@ProcMessag

; 581  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN26@ProcMessag:

; 582  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN27@ProcMessag:

; 583  :                     }
; 584  :                     break;

	jmp	$LN66@ProcMessag
$LN25@ProcMessag:

; 585  : 
; 586  :                 case IDC_KEYFRAMEINTERVAL_EDIT:
; 587  :                 case IDC_SCENEBUFFERTIME_EDIT:
; 588  :                 case IDC_AUDIOTIMEADJUST_EDIT:
; 589  :                 case IDC_VIDEOENCODERSETTINGS:
; 590  :                 case IDC_QSVVIDEOENCODERSETTINGS:
; 591  :                 case IDC_LATENCYTUNE:
; 592  :                     if(HIWORD(wParam) == EN_CHANGE)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 768				; 00000300H
	jne	SHORT $LN24@ProcMessag

; 593  :                     {
; 594  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN23@ProcMessag

; 595  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN23@ProcMessag:

; 596  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN24@ProcMessag:

; 597  :                     }
; 598  :                     break;

	jmp	$LN66@ProcMessag
$LN22@ProcMessag:

; 599  : 
; 600  :                 /*case IDC_TIMER1:
; 601  :                 case IDC_TIMER2:
; 602  :                 case IDC_TIMER3:
; 603  :                 case IDC_DISABLED3DCOMPATIBILITY:
; 604  :                     if(HIWORD(wParam) == BN_CLICKED)
; 605  :                     {
; 606  :                         ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);
; 607  :                         SetChangedSettings(true);
; 608  :                     }
; 609  :                     break;*/
; 610  : 
; 611  :                 case IDC_USESENDBUFFER:
; 612  :                     if(HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	$LN21@ProcMessag

; 613  :                     {
; 614  :                         BOOL bUseSendBuffer = SendMessage((HWND)lParam, BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN130@ProcMessag
	mov	DWORD PTR tv1237[ebp], 1
	jmp	SHORT $LN131@ProcMessag
$LN130@ProcMessag:
	mov	DWORD PTR tv1237[ebp], 0
$LN131@ProcMessag:
	mov	edx, DWORD PTR tv1237[ebp]
	mov	DWORD PTR _bUseSendBuffer$19[ebp], edx

; 615  :                         EnableWindow(GetDlgItem(hwnd, IDC_SENDBUFFERSIZE), bUseSendBuffer);

	mov	eax, DWORD PTR _bUseSendBuffer$19[ebp]
	push	eax
	push	1089					; 00000441H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 616  : 
; 617  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN20@ProcMessag

; 618  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN20@ProcMessag:

; 619  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN21@ProcMessag:

; 620  :                     }
; 621  :                     break;

	jmp	$LN66@ProcMessag
$LN19@ProcMessag:

; 622  : 
; 623  :                 case IDC_PRESET:
; 624  :                     if(HIWORD(wParam) == CBN_SELCHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 1
	jne	$LN18@ProcMessag

; 625  :                     {
; 626  :                         HWND hwndTemp = (HWND)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hwndTemp$27[ebp], ecx

; 627  : 
; 628  :                         String strNewPreset = GetCBText(hwndTemp);

	push	-1
	mov	edx, DWORD PTR _hwndTemp$27[ebp]
	push	edx
	lea	eax, DWORD PTR _strNewPreset$8[ebp]
	push	eax
	call	DWORD PTR __imp_?GetCBText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 629  :                         if (scmp(strNewPreset.Array(), TEXT("veryfast")))

	push	OFFSET $SG4294759119
	lea	ecx, DWORD PTR _strNewPreset$8[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	je	SHORT $LN17@ProcMessag

; 630  :                         {
; 631  :                             static BOOL bHasWarned = FALSE;
; 632  :                             if (!bHasWarned && OBSMessageBox(hwnd, Str("Settings.Advanced.PresetWarning"), NULL, MB_ICONEXCLAMATION | MB_YESNO) == IDNO)

	cmp	DWORD PTR ?bHasWarned@?ED@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4HA, 0
	jne	SHORT $LN16@ProcMessag
	push	52					; 00000034H
	push	0
	push	OFFSET $SG4294759118
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 7
	jne	SHORT $LN16@ProcMessag

; 633  :                                 LoadSettingComboString(hwndTemp, TEXT("Video Encoding"), TEXT("Preset"), TEXT("veryfast"));

	push	OFFSET $SG4294759117
	push	OFFSET $SG4294759116
	push	OFFSET $SG4294759115
	mov	ecx, DWORD PTR _hwndTemp$27[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingComboString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 634  :                             else

	jmp	SHORT $LN17@ProcMessag
$LN16@ProcMessag:

; 635  :                                 bHasWarned = TRUE;

	mov	DWORD PTR ?bHasWarned@?ED@??ProcMessage@SettingsAdvanced@@UAEHIIJ@Z@4HA, 1
$LN17@ProcMessag:

; 636  :                         }
; 637  : 
; 638  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 639  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN14@ProcMessag

; 640  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN14@ProcMessag:

; 641  :                     }

	lea	ecx, DWORD PTR _strNewPreset$8[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN18@ProcMessag:

; 642  :                     break;

	jmp	$LN66@ProcMessag
$LN13@ProcMessag:

; 643  : 
; 644  :                 case IDC_X264PROFILE:
; 645  :                 case IDC_SENDBUFFERSIZE:
; 646  :                 case IDC_PRIORITY:
; 647  :                 case IDC_BINDIP:
; 648  :                 case IDC_QSVPRESET:
; 649  :                     if(HIWORD(wParam) == CBN_SELCHANGE || HIWORD(wParam) == CBN_EDITCHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 1
	je	SHORT $LN11@ProcMessag
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 5
	jne	SHORT $LN12@ProcMessag
$LN11@ProcMessag:

; 650  :                     {
; 651  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN10@ProcMessag

; 652  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN10@ProcMessag:

; 653  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN12@ProcMessag:

; 654  :                     }
; 655  :                     break;

	jmp	$LN66@ProcMessag
$LN9@ProcMessag:

; 656  : 
; 657  :                 case IDC_NVENCPRESET:
; 658  :                     if (HIWORD(wParam) == CBN_SELCHANGE || HIWORD(wParam) == CBN_EDITCHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 1
	je	SHORT $LN7@ProcMessag
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 5
	jne	$LN8@ProcMessag
$LN7@ProcMessag:

; 659  :                     {
; 660  :                         HWND hwndTemp = (HWND)lParam;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hwndTemp$17[ebp], eax

; 661  : 
; 662  :                         String strNewPreset = GetCBText(hwndTemp);

	push	-1
	mov	ecx, DWORD PTR _hwndTemp$17[ebp]
	push	ecx
	lea	edx, DWORD PTR _strNewPreset$9[ebp]
	push	edx
	call	DWORD PTR __imp_?GetCBText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 663  :                         if (scmp(strNewPreset.Array(), TEXT("Automatic")))

	push	OFFSET $SG4294759114
	lea	ecx, DWORD PTR _strNewPreset$9[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	je	SHORT $LN6@ProcMessag

; 664  :                             EnableWindow(GetDlgItem(hwnd, IDC_NVENC2PASS), TRUE);

	push	1
	push	1211					; 000004bbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 665  :                         else

	jmp	SHORT $LN5@ProcMessag
$LN6@ProcMessag:

; 666  :                             EnableWindow(GetDlgItem(hwnd, IDC_NVENC2PASS), FALSE);

	push	0
	push	1211					; 000004bbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
$LN5@ProcMessag:

; 667  : 
; 668  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN4@ProcMessag

; 669  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN4@ProcMessag:

; 670  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 671  :                     }

	lea	ecx, DWORD PTR _strNewPreset$9[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN8@ProcMessag:

; 672  :                     break;

	jmp	SHORT $LN66@ProcMessag
$LN3@ProcMessag:

; 673  : 
; 674  :                 case IDC_DISABLEPREVIEWENCODING:
; 675  :                 case IDC_ALLOWOTHERHOTKEYMODIFIERS:
; 676  :                 case IDC_MICSYNCFIX:
; 677  :                 case IDC_USEMICQPC:
; 678  :                 case IDC_SYNCTOVIDEOTIME:
; 679  :                 case IDC_USECFR:
; 680  :                 case IDC_ENCODEFULLRANGE:
; 681  :                 case IDC_USEMULTITHREADEDOPTIMIZATIONS:
; 682  :                 case IDC_UNLOCKHIGHFPS:
; 683  :                 case IDC_LATENCYMETHOD:
; 684  :                 case IDC_DISABLETCPOPTIMIZATIONS:
; 685  :                 case IDC_NVENC2PASS:
; 686  :                     if(HIWORD(wParam) == BN_CLICKED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN66@ProcMessag

; 687  :                     {
; 688  :                         if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN1@ProcMessag

; 689  :                             ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN1@ProcMessag:

; 690  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN66@ProcMessag:

; 691  :                     }
; 692  :                     break;
; 693  :             }
; 694  : 
; 695  :     }
; 696  :     return FALSE;

	xor	eax, eax
$LN68@ProcMessag:

; 697  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN133@ProcMessag:
	DD	$LN19@ProcMessag
	DD	$LN13@ProcMessag
	DD	$LN25@ProcMessag
	DD	$LN31@ProcMessag
	DD	$LN22@ProcMessag
	DD	$LN3@ProcMessag
	DD	$LN28@ProcMessag
	DD	$LN9@ProcMessag
	DD	$LN66@ProcMessag
$LN132@ProcMessag:
	DB	0
	DB	1
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	2
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	3
	DB	4
	DB	5
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	2
	DB	8
	DB	8
	DB	2
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	5
	DB	5
	DB	5
	DB	8
	DB	8
	DB	8
	DB	8
	DB	5
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	5
	DB	5
	DB	8
	DB	6
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
	DB	8
	DB	5
	DB	8
	DB	8
	DB	2
	DB	5
	DB	5
	DB	2
	DB	8
	DB	8
	DB	8
	DB	8
	DB	2
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	5
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	5
?ProcMessage@SettingsAdvanced@@UAEHIIJ@Z ENDP		; SettingsAdvanced::ProcMessage
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\GlobalSource.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_19HHIIBINK@?$AAn?$AAa?$AAm?$AAe?$AA?$AA@	; `string'
PUBLIC	??_R4GlobalSource@@6B@				; GlobalSource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGlobalSource@@@8			; GlobalSource `RTTI Type Descriptor'
PUBLIC	??_R2GlobalSource@@8				; GlobalSource::`RTTI Base Class Array'
PUBLIC	??_R3GlobalSource@@8				; GlobalSource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@GlobalSource@@8			; GlobalSource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7GlobalSource@@6B@				; GlobalSource::`vftable'
EXTRN	?Tick@ImageSource@@UAEXM@Z:PROC			; ImageSource::Tick
EXTRN	__imp_?Tick@ImageSource@@UAEXM@Z:PROC
;	COMDAT ??_7GlobalSource@@6B@
CONST	SEGMENT
??_7GlobalSource@@6B@ DD FLAT:??_R4GlobalSource@@6B@	; GlobalSource::`vftable'
	DD	FLAT:??_EGlobalSource@@UAEPAXI@Z
	DD	FLAT:?Preprocess@ImageSource@@UAEXXZ
	DD	FLAT:?Tick@ImageSource@@UAEXM@Z
	DD	FLAT:?Render@GlobalSource@@UAEXABUVect2@@0@Z
	DD	FLAT:?GetSize@GlobalSource@@UBE?AUVect2@@XZ
	DD	FLAT:?UpdateSettings@GlobalSource@@UAEXXZ
	DD	FLAT:?BeginScene@ImageSource@@UAEXXZ
	DD	FLAT:?EndScene@ImageSource@@UAEXXZ
	DD	FLAT:?GlobalSourceLeaveScene@GlobalSource@@UAEXXZ
	DD	FLAT:?GlobalSourceEnterScene@GlobalSource@@UAEXXZ
	DD	FLAT:?SetFloat@GlobalSource@@UAEXPB_WM@Z
	DD	FLAT:?SetInt@GlobalSource@@UAEXPB_WH@Z
	DD	FLAT:?SetString@GlobalSource@@UAEXPB_W0@Z
	DD	FLAT:?SetVector@GlobalSource@@UAEXPB_WABUVect@@@Z
	DD	FLAT:?SetVector2@GlobalSource@@UAEXPB_WABUVect2@@@Z
	DD	FLAT:?SetVector4@GlobalSource@@UAEXPB_WABUVect4@@@Z
	DD	FLAT:?SetMatrix@GlobalSource@@UAEXPB_WABUMatrix@@@Z
	DD	FLAT:?GetFloat@GlobalSource@@UBE_NPB_WAAM@Z
	DD	FLAT:?GetInt@GlobalSource@@UBE_NPB_WAAH@Z
	DD	FLAT:?GetString@GlobalSource@@UBE_NPB_WAAVString@@@Z
	DD	FLAT:?GetVector@GlobalSource@@UBE_NPB_WAAUVect@@@Z
	DD	FLAT:?GetVector2@GlobalSource@@UBE_NPB_WAAUVect2@@@Z
	DD	FLAT:?GetVector4@GlobalSource@@UBE_NPB_WAAUVect4@@@Z
	DD	FLAT:?GetMatrix@GlobalSource@@UBE_NPB_WAAUMatrix@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@GlobalSource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GlobalSource@@8 DD FLAT:??_R0?AVGlobalSource@@@8 ; GlobalSource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GlobalSource@@8
rdata$r	ENDS
;	COMDAT ??_R3GlobalSource@@8
rdata$r	SEGMENT
??_R3GlobalSource@@8 DD 00H				; GlobalSource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2GlobalSource@@8
rdata$r	ENDS
;	COMDAT ??_R2GlobalSource@@8
rdata$r	SEGMENT
??_R2GlobalSource@@8 DD FLAT:??_R1A@?0A@EA@GlobalSource@@8 ; GlobalSource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ImageSource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGlobalSource@@@8
data$r	SEGMENT
??_R0?AVGlobalSource@@@8 DD FLAT:??_7type_info@@6B@	; GlobalSource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGlobalSource@@', 00H
data$r	ENDS
;	COMDAT ??_R4GlobalSource@@6B@
rdata$r	SEGMENT
??_R4GlobalSource@@6B@ DD 00H				; GlobalSource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGlobalSource@@@8
	DD	FLAT:??_R3GlobalSource@@8
rdata$r	ENDS
;	COMDAT ??_C@_19HHIIBINK@?$AAn?$AAa?$AAm?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_19HHIIBINK@?$AAn?$AAa?$AAm?$AAe?$AA?$AA@ DB 'n', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 00H, 00H				; `string'
$SG4294850134 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294850132 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294850133 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294850130 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294850131 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294850128 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294850129 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294850126 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294850127 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294850124 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294850125 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294850122 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294850123 DB 'O', 00H, 'B', 00H, 'S', 00H, ':', 00H, ':', 00H, 'A', 00H
	DB	'd', 00H, 'd', 00H, 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a'
	DB	00H, 'l', 00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, 'T', 00H, 'o', 00H, 'S', 00H, 'c', 00H, 'e', 00H, 'n'
	DB	00H, 'e', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'u', 00H
	DB	'l', 00H, 'd', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' '
	DB	00H, 'f', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'g', 00H
	DB	'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'''', 00H, '%', 00H, 's', 00H, '''', 00H, 00H, 00H
	ORG $+2
$SG4294850120 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294850121 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
PUBLIC	?Clear@?$List@UGlobalSourceInfo@@@@QAEXXZ	; List<GlobalSourceInfo>::Clear
PUBLIC	?Add@?$List@PB_W@@QAEIABQB_W@Z			; List<wchar_t const *>::Add
PUBLIC	?SetSize@?$List@UGlobalSourceInfo@@@@QAEHI@Z	; List<GlobalSourceInfo>::SetSize
PUBLIC	??6?$List@PB_W@@QAEAAV0@ABQB_W@Z		; List<wchar_t const *>::operator<<
PUBLIC	?Clear@?$List@PB_W@@QAEXXZ			; List<wchar_t const *>::Clear
PUBLIC	?CreateNew@?$List@UGlobalSourceInfo@@@@QAEPAUGlobalSourceInfo@@XZ ; List<GlobalSourceInfo>::CreateNew
PUBLIC	?GetGlobalSourceElement@OBS@@AAEPAVXElement@@PB_W@Z ; OBS::GetGlobalSourceElement
PUBLIC	?GetGlobalSourceNames@OBS@@AAEXAAV?$List@PB_W@@_N@Z ; OBS::GetGlobalSourceNames
PUBLIC	?ConfigGlobalSource@OBS@@CG_NPAVXElement@@_N@Z	; OBS::ConfigGlobalSource
PUBLIC	??1GlobalSource@@UAE@XZ				; GlobalSource::~GlobalSource
PUBLIC	??_GGlobalSource@@UAEPAXI@Z			; GlobalSource::`scalar deleting destructor'
PUBLIC	??0GlobalSource@@QAE@XZ				; GlobalSource::GlobalSource
PUBLIC	?CreateGlobalSource@@YGPAVImageSource@@PAVXElement@@@Z ; CreateGlobalSource
PUBLIC	?GetMatrix@GlobalSource@@UBE_NPB_WAAUMatrix@@@Z	; GlobalSource::GetMatrix
PUBLIC	?GetVector4@GlobalSource@@UBE_NPB_WAAUVect4@@@Z	; GlobalSource::GetVector4
PUBLIC	?GetVector2@GlobalSource@@UBE_NPB_WAAUVect2@@@Z	; GlobalSource::GetVector2
PUBLIC	?GetVector@GlobalSource@@UBE_NPB_WAAUVect@@@Z	; GlobalSource::GetVector
PUBLIC	?GetString@GlobalSource@@UBE_NPB_WAAVString@@@Z	; GlobalSource::GetString
PUBLIC	?GetInt@GlobalSource@@UBE_NPB_WAAH@Z		; GlobalSource::GetInt
PUBLIC	?GetFloat@GlobalSource@@UBE_NPB_WAAM@Z		; GlobalSource::GetFloat
PUBLIC	?SetMatrix@GlobalSource@@UAEXPB_WABUMatrix@@@Z	; GlobalSource::SetMatrix
PUBLIC	?SetVector4@GlobalSource@@UAEXPB_WABUVect4@@@Z	; GlobalSource::SetVector4
PUBLIC	?SetVector2@GlobalSource@@UAEXPB_WABUVect2@@@Z	; GlobalSource::SetVector2
PUBLIC	?SetVector@GlobalSource@@UAEXPB_WABUVect@@@Z	; GlobalSource::SetVector
PUBLIC	?SetString@GlobalSource@@UAEXPB_W0@Z		; GlobalSource::SetString
PUBLIC	?SetInt@GlobalSource@@UAEXPB_WH@Z		; GlobalSource::SetInt
PUBLIC	?SetFloat@GlobalSource@@UAEXPB_WM@Z		; GlobalSource::SetFloat
PUBLIC	?UpdateSettings@GlobalSource@@UAEXXZ		; GlobalSource::UpdateSettings
PUBLIC	?GetSize@GlobalSource@@UBE?AUVect2@@XZ		; GlobalSource::GetSize
PUBLIC	?Render@GlobalSource@@UAEXABUVect2@@0@Z		; GlobalSource::Render
PUBLIC	?GlobalSourceEnterScene@GlobalSource@@UAEXXZ	; GlobalSource::GlobalSourceEnterScene
PUBLIC	?GlobalSourceLeaveScene@GlobalSource@@UAEXXZ	; GlobalSource::GlobalSourceLeaveScene
PUBLIC	?Init@GlobalSource@@QAEXPAVXElement@@@Z		; GlobalSource::Init
PUBLIC	?AddGlobalSourceToScene@OBS@@AAEPAVImageSource@@PB_W@Z ; OBS::AddGlobalSourceToScene
EXTRN	??_EGlobalSource@@UAEPAXI@Z:PROC		; GlobalSource::`vector deleting destructor'
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?AddGlobalSourceToScene@OBS@@AAEPAVImageSource@@PB_W@Z
_TEXT	SEGMENT
_lpClass$1 = -24					; size = 4
_globals$ = -20						; size = 4
_newGlobalSource$2 = -16				; size = 4
_globalSourceElement$3 = -12				; size = 4
_this$ = -8						; size = 4
_info$4 = -4						; size = 4
_lpName$ = 8						; size = 4
?AddGlobalSourceToScene@OBS@@AAEPAVImageSource@@PB_W@Z PROC ; OBS::AddGlobalSourceToScene, COMDAT
; _this$ = ecx

; 136  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 137  :     XElement *globals = scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294850126
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$[ebp], eax

; 138  :     if(globals)

	cmp	DWORD PTR _globals$[ebp], 0
	je	$LN4@AddGlobalS

; 139  :     {
; 140  :         XElement *globalSourceElement = globals->GetElement(lpName);

	mov	eax, DWORD PTR _lpName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _globals$[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _globalSourceElement$3[ebp], eax

; 141  :         if(globalSourceElement)

	cmp	DWORD PTR _globalSourceElement$3[ebp], 0
	je	$LN4@AddGlobalS

; 142  :         {
; 143  :             CTSTR lpClass = globalSourceElement->GetString(TEXT("class"));

	push	0
	push	OFFSET $SG4294850125
	mov	ecx, DWORD PTR _globalSourceElement$3[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _lpClass$1[ebp], eax

; 144  :             if(lpClass)

	cmp	DWORD PTR _lpClass$1[ebp], 0
	je	$LN4@AddGlobalS

; 145  :             {
; 146  :                 ImageSource *newGlobalSource = CreateImageSource(lpClass, globalSourceElement->GetElement(TEXT("data")));

	push	OFFSET $SG4294850124
	mov	ecx, DWORD PTR _globalSourceElement$3[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	push	eax
	mov	ecx, DWORD PTR _lpClass$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	mov	DWORD PTR _newGlobalSource$2[ebp], eax

; 147  :                 if(newGlobalSource)

	cmp	DWORD PTR _newGlobalSource$2[ebp], 0
	je	SHORT $LN4@AddGlobalS

; 148  :                 {
; 149  :                     App->EnterSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 150  : 
; 151  :                     GlobalSourceInfo *info = globalSources.CreateNew();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1376				; 00000560H
	call	?CreateNew@?$List@UGlobalSourceInfo@@@@QAEPAUGlobalSourceInfo@@XZ ; List<GlobalSourceInfo>::CreateNew
	mov	DWORD PTR _info$4[ebp], eax

; 152  :                     info->strName = lpName;

	mov	eax, DWORD PTR _lpName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$4[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 153  :                     info->element = globalSourceElement;

	mov	ecx, DWORD PTR _info$4[ebp]
	mov	edx, DWORD PTR _globalSourceElement$3[ebp]
	mov	DWORD PTR [ecx+8], edx

; 154  :                     info->source = newGlobalSource;

	mov	eax, DWORD PTR _info$4[ebp]
	mov	ecx, DWORD PTR _newGlobalSource$2[ebp]
	mov	DWORD PTR [eax+12], ecx

; 155  : 
; 156  :                     info->source->BeginScene();

	mov	edx, DWORD PTR _info$4[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _info$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+24]
	call	eax

; 157  : 
; 158  :                     App->LeaveSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex

; 159  : 
; 160  :                     return newGlobalSource;

	mov	eax, DWORD PTR _newGlobalSource$2[ebp]
	jmp	SHORT $LN5@AddGlobalS
$LN4@AddGlobalS:

; 161  :                 }
; 162  :             }
; 163  :         }
; 164  :     }
; 165  : 
; 166  :     AppWarning(TEXT("OBS::AddGlobalSourceToScene: Could not find global source '%s'"), lpName);

	mov	ecx, DWORD PTR _lpName$[ebp]
	push	ecx
	push	OFFSET $SG4294850123
	call	DWORD PTR __imp_?AppWarning@@YAXPB_WZZ
	add	esp, 8

; 167  :     return NULL;

	xor	eax, eax
$LN5@AddGlobalS:

; 168  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddGlobalSourceToScene@OBS@@AAEPAVImageSource@@PB_W@Z ENDP ; OBS::AddGlobalSourceToScene
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?Init@GlobalSource@@QAEXPAVXElement@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
?Init@GlobalSource@@QAEXPAVXElement@@@Z PROC		; GlobalSource::Init, COMDAT
; _this$ = ecx

; 32   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 33   :         this->data = data;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 34   :         UpdateSettings();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx

; 35   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Init@GlobalSource@@QAEXPAVXElement@@@Z ENDP		; GlobalSource::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GlobalSourceLeaveScene@GlobalSource@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GlobalSourceLeaveScene@GlobalSource@@UAEXXZ PROC	; GlobalSource::GlobalSourceLeaveScene, COMDAT
; _this$ = ecx

; 37   :     virtual void GlobalSourceLeaveScene() {if (globalSource) globalSource->GlobalSourceLeaveScene();}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@GlobalSour
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+32]
	call	eax
$LN2@GlobalSour:
	mov	esp, ebp
	pop	ebp
	ret	0
?GlobalSourceLeaveScene@GlobalSource@@UAEXXZ ENDP	; GlobalSource::GlobalSourceLeaveScene
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GlobalSourceEnterScene@GlobalSource@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GlobalSourceEnterScene@GlobalSource@@UAEXXZ PROC	; GlobalSource::GlobalSourceEnterScene, COMDAT
; _this$ = ecx

; 38   :     virtual void GlobalSourceEnterScene() {if (globalSource) globalSource->GlobalSourceEnterScene();}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@GlobalSour
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
$LN2@GlobalSour:
	mov	esp, ebp
	pop	ebp
	ret	0
?GlobalSourceEnterScene@GlobalSource@@UAEXXZ ENDP	; GlobalSource::GlobalSourceEnterScene
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?Render@GlobalSource@@UAEXABUVect2@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
_size$ = 12						; size = 4
?Render@GlobalSource@@UAEXABUVect2@@0@Z PROC		; GlobalSource::Render, COMDAT
; _this$ = ecx

; 44   :     void Render(const Vect2 &pos, const Vect2 &size) {if (globalSource) globalSource->Render(pos, size);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Render
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+12]
	call	edx
$LN2@Render:
	mov	esp, ebp
	pop	ebp
	ret	8
?Render@GlobalSource@@UAEXABUVect2@@0@Z ENDP		; GlobalSource::Render
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetSize@GlobalSource@@UBE?AUVect2@@XZ
_TEXT	SEGMENT
$T1 = -28						; size = 8
$T2 = -20						; size = 8
$T3 = -12						; size = 4
tv81 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetSize@GlobalSource@@UBE?AUVect2@@XZ PROC		; GlobalSource::GetSize, COMDAT
; _this$ = ecx

; 45   :     Vect2 GetSize() const {return globalSource ? globalSource->GetSize() : Vect2(0.0f, 0.0f);}

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetSize
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN4@GetSize
$LN3@GetSize:
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	mov	DWORD PTR tv81[ebp], eax
$LN4@GetSize:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSize@GlobalSource@@UBE?AUVect2@@XZ ENDP		; GlobalSource::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?UpdateSettings@GlobalSource@@UAEXXZ
_TEXT	SEGMENT
_strName$ = -12						; size = 8
_this$ = -4						; size = 4
?UpdateSettings@GlobalSource@@UAEXXZ PROC		; GlobalSource::UpdateSettings, COMDAT
; _this$ = ecx

; 48   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 49   :         String strName = data->GetString(TEXT("name"));

	push	0
	push	OFFSET ??_C@_19HHIIBINK@?$AAn?$AAa?$AAm?$AAe?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 50   :         globalSource = App->GetGlobalSource(strName);

	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSource@OBS@@AAEPAVImageSource@@PB_W@Z ; OBS::GetGlobalSource
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 51   :     }

	lea	ecx, DWORD PTR _strName$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateSettings@GlobalSource@@UAEXXZ ENDP		; GlobalSource::UpdateSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?SetFloat@GlobalSource@@UAEXPB_WM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpName$ = 8						; size = 4
_fValue$ = 12						; size = 4
?SetFloat@GlobalSource@@UAEXPB_WM@Z PROC		; GlobalSource::SetFloat, COMDAT
; _this$ = ecx

; 55   :     virtual void SetFloat(CTSTR lpName, float fValue)         {if (globalSource) globalSource->SetFloat  (lpName, fValue);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@SetFloat
	push	ecx
	movss	xmm0, DWORD PTR _fValue$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _lpName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+40]
	call	eax
$LN1@SetFloat:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetFloat@GlobalSource@@UAEXPB_WM@Z ENDP		; GlobalSource::SetFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?SetInt@GlobalSource@@UAEXPB_WH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpName$ = 8						; size = 4
_iValue$ = 12						; size = 4
?SetInt@GlobalSource@@UAEXPB_WH@Z PROC			; GlobalSource::SetInt, COMDAT
; _this$ = ecx

; 56   :     virtual void SetInt(CTSTR lpName, int iValue)             {if (globalSource) globalSource->SetInt    (lpName, iValue);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@SetInt
	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+44]
	call	edx
$LN2@SetInt:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetInt@GlobalSource@@UAEXPB_WH@Z ENDP			; GlobalSource::SetInt
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?SetString@GlobalSource@@UAEXPB_W0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpName$ = 8						; size = 4
_lpVal$ = 12						; size = 4
?SetString@GlobalSource@@UAEXPB_W0@Z PROC		; GlobalSource::SetString, COMDAT
; _this$ = ecx

; 57   :     virtual void SetString(CTSTR lpName, CTSTR lpVal)         {if (globalSource) globalSource->SetString (lpName, lpVal);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@SetString
	mov	ecx, DWORD PTR _lpVal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+48]
	call	edx
$LN2@SetString:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetString@GlobalSource@@UAEXPB_W0@Z ENDP		; GlobalSource::SetString
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?SetVector@GlobalSource@@UAEXPB_WABUVect@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpName$ = 8						; size = 4
_value$ = 12						; size = 4
?SetVector@GlobalSource@@UAEXPB_WABUVect@@@Z PROC	; GlobalSource::SetVector, COMDAT
; _this$ = ecx

; 58   :     virtual void SetVector(CTSTR lpName, const Vect &value)   {if (globalSource) globalSource->SetVector (lpName, value);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@SetVector
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+52]
	call	edx
$LN2@SetVector:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVector@GlobalSource@@UAEXPB_WABUVect@@@Z ENDP	; GlobalSource::SetVector
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?SetVector2@GlobalSource@@UAEXPB_WABUVect2@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpName$ = 8						; size = 4
_value$ = 12						; size = 4
?SetVector2@GlobalSource@@UAEXPB_WABUVect2@@@Z PROC	; GlobalSource::SetVector2, COMDAT
; _this$ = ecx

; 59   :     virtual void SetVector2(CTSTR lpName, const Vect2 &value) {if (globalSource) globalSource->SetVector2(lpName, value);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@SetVector2
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN2@SetVector2:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVector2@GlobalSource@@UAEXPB_WABUVect2@@@Z ENDP	; GlobalSource::SetVector2
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?SetVector4@GlobalSource@@UAEXPB_WABUVect4@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpName$ = 8						; size = 4
_value$ = 12						; size = 4
?SetVector4@GlobalSource@@UAEXPB_WABUVect4@@@Z PROC	; GlobalSource::SetVector4, COMDAT
; _this$ = ecx

; 60   :     virtual void SetVector4(CTSTR lpName, const Vect4 &value) {if (globalSource) globalSource->SetVector4(lpName, value);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@SetVector4
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+60]
	call	edx
$LN2@SetVector4:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVector4@GlobalSource@@UAEXPB_WABUVect4@@@Z ENDP	; GlobalSource::SetVector4
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?SetMatrix@GlobalSource@@UAEXPB_WABUMatrix@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpName$ = 8						; size = 4
_mat$ = 12						; size = 4
?SetMatrix@GlobalSource@@UAEXPB_WABUMatrix@@@Z PROC	; GlobalSource::SetMatrix, COMDAT
; _this$ = ecx

; 61   :     virtual void SetMatrix(CTSTR lpName, const Matrix &mat)   {if (globalSource) globalSource->SetMatrix (lpName, mat);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@SetMatrix
	mov	ecx, DWORD PTR _mat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+64]
	call	edx
$LN2@SetMatrix:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetMatrix@GlobalSource@@UAEXPB_WABUMatrix@@@Z ENDP	; GlobalSource::SetMatrix
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetFloat@GlobalSource@@UBE_NPB_WAAM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv76 = -1						; size = 1
_lpName$ = 8						; size = 4
_fValue$ = 12						; size = 4
?GetFloat@GlobalSource@@UBE_NPB_WAAM@Z PROC		; GlobalSource::GetFloat, COMDAT
; _this$ = ecx

; 65   :     virtual bool GetFloat(CTSTR lpName, float &fValue)   const {return globalSource ? globalSource->GetFloat  (lpName, fValue) : false;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetFloat
	mov	ecx, DWORD PTR _fValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+68]
	call	edx
	mov	BYTE PTR tv76[ebp], al
	jmp	SHORT $LN4@GetFloat
$LN3@GetFloat:
	mov	BYTE PTR tv76[ebp], 0
$LN4@GetFloat:
	mov	al, BYTE PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetFloat@GlobalSource@@UBE_NPB_WAAM@Z ENDP		; GlobalSource::GetFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetInt@GlobalSource@@UBE_NPB_WAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv76 = -1						; size = 1
_lpName$ = 8						; size = 4
_iValue$ = 12						; size = 4
?GetInt@GlobalSource@@UBE_NPB_WAAH@Z PROC		; GlobalSource::GetInt, COMDAT
; _this$ = ecx

; 66   :     virtual bool GetInt(CTSTR lpName, int &iValue)       const {return globalSource ? globalSource->GetInt    (lpName, iValue) : false;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetInt
	mov	ecx, DWORD PTR _iValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	mov	BYTE PTR tv76[ebp], al
	jmp	SHORT $LN4@GetInt
$LN3@GetInt:
	mov	BYTE PTR tv76[ebp], 0
$LN4@GetInt:
	mov	al, BYTE PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetInt@GlobalSource@@UBE_NPB_WAAH@Z ENDP		; GlobalSource::GetInt
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetString@GlobalSource@@UBE_NPB_WAAVString@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv76 = -1						; size = 1
_lpName$ = 8						; size = 4
_strVal$ = 12						; size = 4
?GetString@GlobalSource@@UBE_NPB_WAAVString@@@Z PROC	; GlobalSource::GetString, COMDAT
; _this$ = ecx

; 67   :     virtual bool GetString(CTSTR lpName, String &strVal) const {return globalSource ? globalSource->GetString (lpName, strVal) : false;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetString
	mov	ecx, DWORD PTR _strVal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	mov	BYTE PTR tv76[ebp], al
	jmp	SHORT $LN4@GetString
$LN3@GetString:
	mov	BYTE PTR tv76[ebp], 0
$LN4@GetString:
	mov	al, BYTE PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetString@GlobalSource@@UBE_NPB_WAAVString@@@Z ENDP	; GlobalSource::GetString
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetVector@GlobalSource@@UBE_NPB_WAAUVect@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv76 = -1						; size = 1
_lpName$ = 8						; size = 4
_value$ = 12						; size = 4
?GetVector@GlobalSource@@UBE_NPB_WAAUVect@@@Z PROC	; GlobalSource::GetVector, COMDAT
; _this$ = ecx

; 68   :     virtual bool GetVector(CTSTR lpName, Vect &value)    const {return globalSource ? globalSource->GetVector (lpName, value)  : false;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetVector
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+80]
	call	edx
	mov	BYTE PTR tv76[ebp], al
	jmp	SHORT $LN4@GetVector
$LN3@GetVector:
	mov	BYTE PTR tv76[ebp], 0
$LN4@GetVector:
	mov	al, BYTE PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetVector@GlobalSource@@UBE_NPB_WAAUVect@@@Z ENDP	; GlobalSource::GetVector
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetVector2@GlobalSource@@UBE_NPB_WAAUVect2@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv76 = -1						; size = 1
_lpName$ = 8						; size = 4
_value$ = 12						; size = 4
?GetVector2@GlobalSource@@UBE_NPB_WAAUVect2@@@Z PROC	; GlobalSource::GetVector2, COMDAT
; _this$ = ecx

; 69   :     virtual bool GetVector2(CTSTR lpName, Vect2 &value)  const {return globalSource ? globalSource->GetVector2(lpName, value)  : false;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetVector2
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+84]
	call	edx
	mov	BYTE PTR tv76[ebp], al
	jmp	SHORT $LN4@GetVector2
$LN3@GetVector2:
	mov	BYTE PTR tv76[ebp], 0
$LN4@GetVector2:
	mov	al, BYTE PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetVector2@GlobalSource@@UBE_NPB_WAAUVect2@@@Z ENDP	; GlobalSource::GetVector2
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetVector4@GlobalSource@@UBE_NPB_WAAUVect4@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv76 = -1						; size = 1
_lpName$ = 8						; size = 4
_value$ = 12						; size = 4
?GetVector4@GlobalSource@@UBE_NPB_WAAUVect4@@@Z PROC	; GlobalSource::GetVector4, COMDAT
; _this$ = ecx

; 70   :     virtual bool GetVector4(CTSTR lpName, Vect4 &value)  const {return globalSource ? globalSource->GetVector4(lpName, value)  : false;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetVector4
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+88]
	call	edx
	mov	BYTE PTR tv76[ebp], al
	jmp	SHORT $LN4@GetVector4
$LN3@GetVector4:
	mov	BYTE PTR tv76[ebp], 0
$LN4@GetVector4:
	mov	al, BYTE PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetVector4@GlobalSource@@UBE_NPB_WAAUVect4@@@Z ENDP	; GlobalSource::GetVector4
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetMatrix@GlobalSource@@UBE_NPB_WAAUMatrix@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv76 = -1						; size = 1
_lpName$ = 8						; size = 4
_mat$ = 12						; size = 4
?GetMatrix@GlobalSource@@UBE_NPB_WAAUMatrix@@@Z PROC	; GlobalSource::GetMatrix, COMDAT
; _this$ = ecx

; 71   :     virtual bool GetMatrix(CTSTR lpName, Matrix &mat)    const {return globalSource ? globalSource->GetMatrix (lpName, mat)    : false;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@GetMatrix
	mov	ecx, DWORD PTR _mat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	mov	BYTE PTR tv76[ebp], al
	jmp	SHORT $LN4@GetMatrix
$LN3@GetMatrix:
	mov	BYTE PTR tv76[ebp], 0
$LN4@GetMatrix:
	mov	al, BYTE PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMatrix@GlobalSource@@UBE_NPB_WAAUMatrix@@@Z ENDP	; GlobalSource::GetMatrix
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?CreateGlobalSource@@YGPAVImageSource@@PAVXElement@@@Z
_TEXT	SEGMENT
_source$ = -12						; size = 4
tv69 = -8						; size = 4
$T1 = -4						; size = 4
_data$ = 8						; size = 4
?CreateGlobalSource@@YGPAVImageSource@@PAVXElement@@@Z PROC ; CreateGlobalSource, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 77   :     GlobalSource *source = new GlobalSource;

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@CreateGlob
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0GlobalSource@@QAE@XZ
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@CreateGlob
$LN3@CreateGlob:
	mov	DWORD PTR tv69[ebp], 0
$LN4@CreateGlob:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _source$[ebp], eax

; 78   :     source->Init(data);

	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _source$[ebp]
	call	?Init@GlobalSource@@QAEXPAVXElement@@@Z	; GlobalSource::Init

; 79   : 
; 80   :     /*XElement *sourceElement = data->GetParent();
; 81   : 
; 82   :     Vect2 size = source->GetSize();
; 83   :     sourceElement->SetInt(TEXT("cx"), int(size.x+EPSILON));
; 84   :     sourceElement->SetInt(TEXT("cy"), int(size.y+EPSILON));*/
; 85   : 
; 86   :     return source;

	mov	eax, DWORD PTR _source$[ebp]

; 87   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CreateGlobalSource@@YGPAVImageSource@@PAVXElement@@@Z ENDP ; CreateGlobalSource
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0GlobalSource@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0GlobalSource@@QAE@XZ PROC				; GlobalSource::GlobalSource, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ImageSource@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GlobalSource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0GlobalSource@@QAE@XZ ENDP				; GlobalSource::GlobalSource
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GGlobalSource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGlobalSource@@UAEPAXI@Z PROC			; GlobalSource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GlobalSource@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGlobalSource@@UAEPAXI@Z ENDP			; GlobalSource::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1GlobalSource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1GlobalSource@@UAE@XZ PROC				; GlobalSource::~GlobalSource, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1ImageSource@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1GlobalSource@@UAE@XZ ENDP				; GlobalSource::~GlobalSource
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?ConfigGlobalSource@OBS@@CG_NPAVXElement@@_N@Z
_TEXT	SEGMENT
_lpClass$ = -32						; size = 4
_data$ = -28						; size = 4
_lpGlobalSourceName$ = -24				; size = 4
_globalSources$ = -20					; size = 4
_classInfo$ = -16					; size = 4
_info$1 = -12						; size = 4
_i$2 = -8						; size = 4
_globalSourceElement$ = -4				; size = 4
_element$ = 8						; size = 4
_bCreating$ = 12					; size = 1
?ConfigGlobalSource@OBS@@CG_NPAVXElement@@_N@Z PROC	; OBS::ConfigGlobalSource, COMDAT

; 90   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 91   :     XElement *data = element->GetElement(TEXT("data"));

	push	OFFSET $SG4294850134
	mov	ecx, DWORD PTR _element$[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _data$[ebp], eax

; 92   :     CTSTR lpGlobalSourceName = data->GetString(TEXT("name"));

	push	0
	push	OFFSET $SG4294850133
	mov	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _lpGlobalSourceName$[ebp], eax

; 93   : 
; 94   :     XElement *globalSources = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294850132
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globalSources$[ebp], eax

; 95   :     if(!globalSources) //shouldn't happen

	cmp	DWORD PTR _globalSources$[ebp], 0
	jne	SHORT $LN10@ConfigGlob

; 96   :         return false;

	xor	al, al
	jmp	$LN11@ConfigGlob
$LN10@ConfigGlob:

; 97   : 
; 98   :     XElement *globalSourceElement = globalSources->GetElement(lpGlobalSourceName);

	mov	eax, DWORD PTR _lpGlobalSourceName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _globalSources$[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _globalSourceElement$[ebp], eax

; 99   :     if(!globalSourceElement) //shouldn't happen

	cmp	DWORD PTR _globalSourceElement$[ebp], 0
	jne	SHORT $LN9@ConfigGlob

; 100  :         return false;

	xor	al, al
	jmp	$LN11@ConfigGlob
$LN9@ConfigGlob:

; 101  : 
; 102  :     CTSTR lpClass = globalSourceElement->GetString(TEXT("class"));

	push	0
	push	OFFSET $SG4294850131
	mov	ecx, DWORD PTR _globalSourceElement$[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _lpClass$[ebp], eax

; 103  : 
; 104  :     ClassInfo *classInfo = App->GetImageSourceClass(lpClass);

	mov	ecx, DWORD PTR _lpClass$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetImageSourceClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetImageSourceClass
	mov	DWORD PTR _classInfo$[ebp], eax

; 105  :     if(!classInfo) //shouldn't happen

	cmp	DWORD PTR _classInfo$[ebp], 0
	jne	SHORT $LN8@ConfigGlob

; 106  :         return false;

	xor	al, al
	jmp	$LN11@ConfigGlob
$LN8@ConfigGlob:

; 107  : 
; 108  :     if(classInfo->configProc)

	mov	edx, DWORD PTR _classInfo$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	$LN7@ConfigGlob

; 109  :     {
; 110  :         if(!classInfo->configProc(globalSourceElement, bCreating))

	movzx	eax, BYTE PTR _bCreating$[ebp]
	push	eax
	mov	ecx, DWORD PTR _globalSourceElement$[ebp]
	push	ecx
	mov	edx, DWORD PTR _classInfo$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@ConfigGlob

; 111  :             return false;

	xor	al, al
	jmp	$LN11@ConfigGlob
$LN6@ConfigGlob:

; 112  : 
; 113  :         element->SetInt(TEXT("cx"), globalSourceElement->GetInt(TEXT("cx")));

	push	0
	push	OFFSET $SG4294850130
	mov	ecx, DWORD PTR _globalSourceElement$[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	push	eax
	push	OFFSET $SG4294850129
	mov	ecx, DWORD PTR _element$[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 114  :         element->SetInt(TEXT("cy"), globalSourceElement->GetInt(TEXT("cy")));

	push	0
	push	OFFSET $SG4294850128
	mov	ecx, DWORD PTR _globalSourceElement$[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	push	eax
	push	OFFSET $SG4294850127
	mov	ecx, DWORD PTR _element$[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 115  : 
; 116  :         if(App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	$LN7@ConfigGlob

; 117  :         {
; 118  :             for(UINT i=0; i<App->globalSources.Num(); i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@ConfigGlob
$LN3@ConfigGlob:
	mov	ecx, DWORD PTR _i$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$2[ebp], ecx
$LN4@ConfigGlob:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1376				; 00000560H
	call	?Num@?$List@UGlobalSourceInfo@@@@QBEIXZ	; List<GlobalSourceInfo>::Num
	cmp	DWORD PTR _i$2[ebp], eax
	jae	SHORT $LN7@ConfigGlob

; 119  :             {
; 120  :                 GlobalSourceInfo &info = App->globalSources[i];

	mov	edx, DWORD PTR _i$2[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1376				; 00000560H
	call	??A?$List@UGlobalSourceInfo@@@@QAEAAUGlobalSourceInfo@@I@Z ; List<GlobalSourceInfo>::operator[]
	mov	DWORD PTR _info$1[ebp], eax

; 121  :                 if(info.strName.CompareI(lpGlobalSourceName) && info.source)

	mov	eax, DWORD PTR _lpGlobalSourceName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$1[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN1@ConfigGlob
	mov	ecx, DWORD PTR _info$1[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN1@ConfigGlob

; 122  :                 {
; 123  :                     App->EnterSceneMutex ();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 124  :                     info.source->UpdateSettings();

	mov	edx, DWORD PTR _info$1[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _info$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 125  :                     App->LeaveSceneMutex ();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex

; 126  :                     break;

	jmp	SHORT $LN7@ConfigGlob
$LN1@ConfigGlob:

; 127  :                 }
; 128  :             }

	jmp	SHORT $LN3@ConfigGlob
$LN7@ConfigGlob:

; 129  :         }
; 130  :     }
; 131  : 
; 132  :     return true;

	mov	al, 1
$LN11@ConfigGlob:

; 133  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ConfigGlobalSource@OBS@@CG_NPAVXElement@@_N@Z ENDP	; OBS::ConfigGlobalSource
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetGlobalSourceNames@OBS@@AAEXAAV?$List@PB_W@@_N@Z
_TEXT	SEGMENT
$T1 = -44						; size = 4
_sourceElement$2 = -40					; size = 4
_numSources$3 = -36					; size = 4
$T4 = -32						; size = 4
_sourceElement$5 = -28					; size = 4
_numSources$6 = -24					; size = 4
_this$ = -20						; size = 4
_globals$7 = -16					; size = 4
_globals$8 = -12					; size = 4
_i$9 = -8						; size = 4
_i$10 = -4						; size = 4
_globalSourceNames$ = 8					; size = 4
_mainSceneGlobalSourceNames$ = 12			; size = 1
?GetGlobalSourceNames@OBS@@AAEXAAV?$List@PB_W@@_N@Z PROC ; OBS::GetGlobalSourceNames, COMDAT
; _this$ = ecx

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 172  :     globalSourceNames.Clear();

	mov	ecx, DWORD PTR _globalSourceNames$[ebp]
	call	?Clear@?$List@PB_W@@QAEXXZ		; List<wchar_t const *>::Clear

; 173  : 
; 174  :     if(!mainSceneGlobalSourceNames)

	movzx	eax, BYTE PTR _mainSceneGlobalSourceNames$[ebp]
	test	eax, eax
	jne	SHORT $LN10@GetGlobalS

; 175  :     {
; 176  :         XElement *globals = scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294850122
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$8[ebp], eax

; 177  :         if(globals)

	cmp	DWORD PTR _globals$8[ebp], 0
	je	SHORT $LN9@GetGlobalS

; 178  :         {
; 179  :             UINT numSources = globals->NumElements();

	push	0
	mov	ecx, DWORD PTR _globals$8[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$6[ebp], eax

; 180  :             for(UINT i=0; i<numSources; i++)

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN8@GetGlobalS
$LN7@GetGlobalS:
	mov	ecx, DWORD PTR _i$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$10[ebp], ecx
$LN8@GetGlobalS:
	mov	edx, DWORD PTR _i$10[ebp]
	cmp	edx, DWORD PTR _numSources$6[ebp]
	jae	SHORT $LN9@GetGlobalS

; 181  :             {
; 182  :                 XElement *sourceElement = globals->GetElementByID(i);

	mov	eax, DWORD PTR _i$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _globals$8[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sourceElement$5[ebp], eax

; 183  :                 globalSourceNames << sourceElement->GetName();

	mov	ecx, DWORD PTR _sourceElement$5[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _globalSourceNames$[ebp]
	call	??6?$List@PB_W@@QAEAAV0@ABQB_W@Z	; List<wchar_t const *>::operator<<

; 184  :             }

	jmp	SHORT $LN7@GetGlobalS
$LN9@GetGlobalS:

; 185  :         }
; 186  :     }
; 187  :     else

	jmp	SHORT $LN11@GetGlobalS
$LN10@GetGlobalS:

; 188  :     {
; 189  :         XElement *globals = globalSourcesImportConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294850121
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$7[ebp], eax

; 190  :         if(globals)

	cmp	DWORD PTR _globals$7[ebp], 0
	je	SHORT $LN11@GetGlobalS

; 191  :         {
; 192  :             UINT numSources = globals->NumElements();

	push	0
	mov	ecx, DWORD PTR _globals$7[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$3[ebp], eax

; 193  :             for(UINT i=0; i<numSources; i++)

	mov	DWORD PTR _i$9[ebp], 0
	jmp	SHORT $LN3@GetGlobalS
$LN2@GetGlobalS:
	mov	edx, DWORD PTR _i$9[ebp]
	add	edx, 1
	mov	DWORD PTR _i$9[ebp], edx
$LN3@GetGlobalS:
	mov	eax, DWORD PTR _i$9[ebp]
	cmp	eax, DWORD PTR _numSources$3[ebp]
	jae	SHORT $LN11@GetGlobalS

; 194  :             {
; 195  :                 XElement *sourceElement = globals->GetElementByID(i);

	mov	ecx, DWORD PTR _i$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _globals$7[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sourceElement$2[ebp], eax

; 196  :                 globalSourceNames << sourceElement->GetName();

	mov	ecx, DWORD PTR _sourceElement$2[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	DWORD PTR $T1[ebp], eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _globalSourceNames$[ebp]
	call	??6?$List@PB_W@@QAEAAV0@ABQB_W@Z	; List<wchar_t const *>::operator<<

; 197  :             }

	jmp	SHORT $LN2@GetGlobalS
$LN11@GetGlobalS:

; 198  :         }
; 199  :     }
; 200  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetGlobalSourceNames@OBS@@AAEXAAV?$List@PB_W@@_N@Z ENDP ; OBS::GetGlobalSourceNames
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\globalsource.cpp
;	COMDAT ?GetGlobalSourceElement@OBS@@AAEPAVXElement@@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_globals$ = -4						; size = 4
_lpName$ = 8						; size = 4
?GetGlobalSourceElement@OBS@@AAEPAVXElement@@PB_W@Z PROC ; OBS::GetGlobalSourceElement, COMDAT
; _this$ = ecx

; 203  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 204  :     XElement *globals = scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294850120
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$[ebp], eax

; 205  :     if(globals)

	cmp	DWORD PTR _globals$[ebp], 0
	je	SHORT $LN1@GetGlobalS

; 206  :         return globals->GetElement(lpName);

	mov	eax, DWORD PTR _lpName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _globals$[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	jmp	SHORT $LN2@GetGlobalS
$LN1@GetGlobalS:

; 207  : 
; 208  :     return NULL;

	xor	eax, eax
$LN2@GetGlobalS:

; 209  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetGlobalSourceElement@OBS@@AAEPAVXElement@@PB_W@Z ENDP ; OBS::GetGlobalSourceElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?CreateNew@?$List@UGlobalSourceInfo@@@@QAEPAUGlobalSourceInfo@@XZ
_TEXT	SEGMENT
_value$ = -8						; size = 4
_this$ = -4						; size = 4
?CreateNew@?$List@UGlobalSourceInfo@@@@QAEPAUGlobalSourceInfo@@XZ PROC ; List<GlobalSourceInfo>::CreateNew, COMDAT
; _this$ = ecx

; 346  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 347  :         SetSize(num+1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetSize@?$List@UGlobalSourceInfo@@@@QAEHI@Z ; List<GlobalSourceInfo>::SetSize

; 348  : 
; 349  :         T *value = &array[num-1];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	DWORD PTR _value$[ebp], eax

; 350  : 
; 351  :         return value;

	mov	eax, DWORD PTR _value$[ebp]

; 352  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?CreateNew@?$List@UGlobalSourceInfo@@@@QAEPAUGlobalSourceInfo@@XZ ENDP ; List<GlobalSourceInfo>::CreateNew
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@PB_W@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@PB_W@@QAEXXZ PROC				; List<wchar_t const *>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@PB_W@@QAEXXZ ENDP				; List<wchar_t const *>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??6?$List@PB_W@@QAEAAV0@ABQB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
??6?$List@PB_W@@QAEAAV0@ABQB_W@Z PROC			; List<wchar_t const *>::operator<<, COMDAT
; _this$ = ecx

; 366  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  :         Add(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$List@PB_W@@QAEIABQB_W@Z		; List<wchar_t const *>::Add

; 368  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 369  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??6?$List@PB_W@@QAEAAV0@ABQB_W@Z ENDP			; List<wchar_t const *>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?SetSize@?$List@UGlobalSourceInfo@@@@QAEHI@Z
_TEXT	SEGMENT
_bClear$ = -16						; size = 4
_oldNum$ = -12						; size = 4
tv70 = -8						; size = 4
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?SetSize@?$List@UGlobalSourceInfo@@@@QAEHI@Z PROC	; List<GlobalSourceInfo>::SetSize, COMDAT
; _this$ = ecx

; 205  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 206  :         if(num == n)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _n$[ebp]
	jne	SHORT $LN4@SetSize

; 207  :             return FALSE;

	xor	eax, eax
	jmp	$LN5@SetSize
	jmp	SHORT $LN3@SetSize
$LN4@SetSize:

; 208  :         else if(!n)

	cmp	DWORD PTR _n$[ebp], 0
	jne	SHORT $LN3@SetSize

; 209  :         {
; 210  :             Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UGlobalSourceInfo@@@@QAEXXZ ; List<GlobalSourceInfo>::Clear

; 211  :             return TRUE;

	mov	eax, 1
	jmp	$LN5@SetSize
$LN3@SetSize:

; 212  :         }
; 213  : 
; 214  :         BOOL bClear=(n>num);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jbe	SHORT $LN7@SetSize
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN8@SetSize
$LN7@SetSize:
	mov	DWORD PTR tv70[ebp], 0
$LN8@SetSize:
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _bClear$[ebp], ecx

; 215  :         UINT oldNum=num;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _oldNum$[ebp], eax

; 216  : 
; 217  :         num = n;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 218  :         array = (T*)ReAllocate(array, sizeof(T)*num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 219  : 
; 220  :         if(bClear)

	cmp	DWORD PTR _bClear$[ebp], 0
	je	SHORT $LN1@SetSize

; 221  :             zero(&array[oldNum], sizeof(T)*(num-oldNum));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, DWORD PTR _oldNum$[ebp]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR _oldNum$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	?zero@@YGXPAXI@Z			; zero
$LN1@SetSize:

; 222  : 
; 223  :         return TRUE;

	mov	eax, 1
$LN5@SetSize:

; 224  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetSize@?$List@UGlobalSourceInfo@@@@QAEHI@Z ENDP	; List<GlobalSourceInfo>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Add@?$List@PB_W@@QAEIABQB_W@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Add@?$List@PB_W@@QAEIABQB_W@Z PROC			; List<wchar_t const *>::Add, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR tv73[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 47   :         mcpy(&array[(num-1)], (void*)&val, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax*4-4], ecx

; 48   :         return num-1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1

; 49   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$List@PB_W@@QAEIABQB_W@Z ENDP			; List<wchar_t const *>::Add
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@UGlobalSourceInfo@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@UGlobalSourceInfo@@@@QAEXXZ PROC		; List<GlobalSourceInfo>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@UGlobalSourceInfo@@@@QAEXXZ ENDP		; List<GlobalSourceInfo>::Clear
_TEXT	ENDS
END

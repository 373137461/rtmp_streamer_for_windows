; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\WindowStuff.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_1BA@OKEJPPOI@?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R0PB_W@8					; wchar_t const * `RTTI Type Descriptor'
PUBLIC	??_R0?AUSceneHotkeyInfo@@@8			; SceneHotkeyInfo `RTTI Type Descriptor'
PUBLIC	??_R0PAVXElement@@@8				; XElement * `RTTI Type Descriptor'
EXTRN	__imp_??YVect2@@QAEAAU0@M@Z:PROC
EXTRN	__imp_?Dist@Vect2@@QBEMABU1@@Z:PROC
EXTRN	__imp_?ClampMin@Vect2@@QAEAAU1@ABU1@@Z:PROC
EXTRN	__imp_?Floor@Vect2@@QAEAAU1@XZ:PROC
EXTRN	__imp_?CloseTo@Vect2@@QBEHABU1@M@Z:PROC
EXTRN	__imp_?SetName@XBaseItem@@QAEXPB_W@Z:PROC
EXTRN	__imp_?GetParent@XElement@@QBEPAV1@XZ:PROC
EXTRN	__imp_?GetName@SceneItem@@QBEPB_WXZ:PROC
EXTRN	__imp_?GetSize@SceneItem@@QBE?AUVect2@@XZ:PROC
EXTRN	__imp_?GetPos@SceneItem@@QBE?AUVect2@@XZ:PROC
EXTRN	__imp_?GetItemsOnPoint@Scene@@QBEXABUVect2@@AAV?$List@PAVSceneItem@@@@@Z:PROC
EXTRN	__imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z:PROC
EXTRN	__imp_?GetID@SceneItem@@QAEIXZ:PROC
EXTRN	__imp__PlaySoundW@12:PROC
EXTRN	__imp__SHOpenWithDialog@8:PROC
EXTRN	__imp__CloseClipboard@0:PROC
EXTRN	__imp__SetTimer@16:PROC
EXTRN	__imp_?tstr_to_wide@@YAHPB_WPA_WI@Z:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__TrackPopupMenu@28:PROC
EXTRN	__imp__ILFree@4:PROC
EXTRN	__imp__KillTimer@8:PROC
EXTRN	__imp_?ReadLogPartial@@YAXAAVString@@AAII@Z:PROC
EXTRN	__imp__GetKeyState@4:PROC
EXTRN	__imp__GetSubMenu@8:PROC
EXTRN	__imp__CloseThemeData@4:PROC
EXTRN	__imp__DeleteMenu@12:PROC
EXTRN	__imp__GetFocus@0:PROC
EXTRN	__imp_?GetLVText@@YA?AVString@@PAUHWND__@@I@Z:PROC
EXTRN	__imp__GlobalFree@4:PROC
EXTRN	__imp_?OSMonitorDirectoryCallback@@YAPAUOSDirectoryMonitorData@@VString@@P6AXXZ@Z:PROC
EXTRN	__imp__CreateMenu@0:PROC
EXTRN	__imp__GetMenuItemInfoW@16:PROC
EXTRN	__imp__SHOpenFolderAndSelectItems@16:PROC
EXTRN	__imp__GlobalUnlock@4:PROC
EXTRN	__imp__GetMenu@4:PROC
EXTRN	__imp__DrawThemeBackground@24:PROC
EXTRN	__imp__OffsetRect@12:PROC
EXTRN	__imp_?AddString@XElement@@QAEXPB_WPA_W@Z:PROC
EXTRN	__imp_?CopyElement@XElement@@QAEPAV1@PAV1@PB_W@Z:PROC
EXTRN	__imp_?MoveDown@XElement@@QAEXXZ:PROC
EXTRN	__imp_?MoveUp@XElement@@QAEXXZ:PROC
EXTRN	__imp_?MoveToBottom@XElement@@QAEXXZ:PROC
EXTRN	__imp_?MoveToTop@XElement@@QAEXXZ:PROC
EXTRN	__imp__TrackPopupMenuEx@24:PROC
EXTRN	__imp__AppendMenuW@16:PROC
EXTRN	__imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ:PROC
EXTRN	__imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ:PROC
EXTRN	__imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ:PROC
EXTRN	__imp_?GetCropTR@SceneItem@@QAE?AUVect2@@XZ:PROC
EXTRN	__imp_?Update@SceneItem@@QAEXXZ:PROC
EXTRN	__imp_?GetCropBL@SceneItem@@QAE?AUVect2@@XZ:PROC
EXTRN	__imp_?MoveDown@SceneItem@@QAEXXZ:PROC
EXTRN	__imp_?MoveUp@SceneItem@@QAEXXZ:PROC
EXTRN	__imp_?MoveToBottom@SceneItem@@QAEXXZ:PROC
EXTRN	__imp_?MoveToTop@SceneItem@@QAEXXZ:PROC
EXTRN	__imp__GetClipboardData@4:PROC
EXTRN	__imp__RemoveClipboardFormatListener@4:PROC
EXTRN	__imp__EnableMenuItem@12:PROC
EXTRN	__imp__EmptyClipboard@0:PROC
EXTRN	__imp__GlobalAlloc@8:PROC
EXTRN	__imp__OpenThemeData@8:PROC
EXTRN	__imp_?GetVolumeControlMutedVal@@YAMPAUHWND__@@@Z:PROC
EXTRN	__imp__CreatePopupMenu@0:PROC
EXTRN	__imp__DrawMenuBar@4:PROC
EXTRN	__imp__ILCreateFromPathW@4:PROC
EXTRN	__imp__GetMenuItemCount@4:PROC
EXTRN	__imp__GlobalLock@4:PROC
EXTRN	__imp__OpenClipboard@4:PROC
EXTRN	__imp__SetClipboardData@8:PROC
EXTRN	__imp__GdipDrawRectangleI@24:PROC
EXTRN	__imp__GdipReleaseDC@8:PROC
EXTRN	__imp__GdipDrawLineI@24:PROC
EXTRN	__imp__GdipCreateFontFamilyFromName@12:PROC
EXTRN	__imp__GdipGetGenericFontFamilySansSerif@4:PROC
EXTRN	__imp__GdipCreateFont@20:PROC
EXTRN	__imp__DestroyMenu@4:PROC
EXTRN	__imp__AddClipboardFormatListener@4:PROC
EXTRN	__imp__DrawFrameControl@16:PROC
EXTRN	__imp__CopyRect@8:PROC
EXTRN	__imp__MoveWindow@24:PROC
_GenericSansSerifFontFamilyBuffer DB 08H DUP (?)
_GenericTypographicStringFormatBuffer DB 08H DUP (?)
_GenericSansSerifFontFamily DD 01H DUP (?)
_GenericDefaultStringFormatBuffer DB 08H DUP (?)
_GenericMonospaceFontFamilyBuffer DB 08H DUP (?)
_GenericSerifFontFamilyBuffer DB 08H DUP (?)
_BSS	ENDS
;	COMDAT ?position@?1??OBSUpdateLog@@YAXXZ@4IA
_BSS	SEGMENT
?position@?1??OBSUpdateLog@@YAXXZ@4IA DD 01H DUP (?)	; `OBSUpdateLog'::`2'::position
_BSS	ENDS
;	COMDAT ??_R0PAVXElement@@@8
data$r	SEGMENT
??_R0PAVXElement@@@8 DD FLAT:??_7type_info@@6B@		; XElement * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVXElement@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AUSceneHotkeyInfo@@@8
data$r	SEGMENT
??_R0?AUSceneHotkeyInfo@@@8 DD FLAT:??_7type_info@@6B@	; SceneHotkeyInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSceneHotkeyInfo@@', 00H
data$r	ENDS
;	COMDAT ??_R0PB_W@8
data$r	SEGMENT
??_R0PB_W@8 DD	FLAT:??_7type_info@@6B@			; wchar_t const * `RTTI Type Descriptor'
	DD	00H
	DB	'.PB_W', 00H
data$r	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@OKEJPPOI@?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@OKEJPPOI@?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AA?$AA@ DB 'P', 00H
	DB	'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H						; `string'
$SG4294712792 DB '\', 00H, 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H, 00H, 00H
$SG4294712793 DB 'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294712788 DB 'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294712789 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712790 DB 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712791 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712784 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712785 DB 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712786 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712787 DB '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG4294712780 DB 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712781 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712782 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712783 DB 'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294712776 DB 'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294712777 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, '.', 00H
	DB	'H', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, '.'
	DB	00H, 'A', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'y', 00H, 'I', 00H, 'n', 00H, 'U', 00H, 's', 00H, 'e', 00H, 00H
	DB	00H
$SG4294712778 DB 'h', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712779 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712772 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712773 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712774 DB 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712775 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712768 DB ' ', 00H, '%', 00H, 'u', 00H, 00H, 00H
$SG4294712769 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712770 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712771 DB ' ', 00H, '%', 00H, 'u', 00H, 00H, 00H
$SG4294712764 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712765 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 00H, 00H
$SG4294712766 DB '\skin\TAB.png', 00H
	ORG $+2
$SG4294712767 DB '\skin\staticbg.png', 00H
	ORG $+1
$SG4294712760 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712761 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712762 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 00H, 00H
$SG4294712763 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712756 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712757 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712758 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 00H, 00H
$SG4294712759 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712752 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712753 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712754 DB 'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712755 DB '%', 00H, 's', 00H, '\', 00H, 's', 00H, 'c', 00H, 'e', 00H
	DB	'n', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'%', 00H, 's', 00H, '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 'f', 00H, 'i', 00H, 'g', 00H, 00H, 00H
$SG4294712748 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712749 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712750 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'T', 00H, 'o', 00H
	DB	'.', 00H, 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'N'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712751 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712744 DB 'GlobalSource', 00H
	ORG $+3
$SG4294712745 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712746 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712747 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712740 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712741 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712737 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712742 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'T', 00H, 'o', 00H
	DB	'.', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'G', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H, 'S', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, 'R', 00H, 'e'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712743 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'T', 00H, 'o', 00H
	DB	'.', 00H, 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'G', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H, 'S', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, 'R', 00H, 'e'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712736 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712738 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294712739 DB 'GlobalSource', 00H
	ORG $+3
$SG4294712732 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712733 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712734 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'T', 00H, 'o', 00H
	DB	'.', 00H, 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l'
	DB	00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294712735 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712728 DB 'GlobalSource', 00H
	ORG $+3
$SG4294712729 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712730 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712731 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712724 DB 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm'
	DB	00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
$SG4294712725 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'T', 00H, 'o', 00H
	DB	'.', 00H, 'S', 00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, 's', 00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+2
$SG4294712726 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712727 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'T', 00H, 'o', 00H
	DB	'.', 00H, 'S', 00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, 's', 00H, '.', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H
	DB	00H, 00H
$SG4294712720 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712721 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 00H, 00H
$SG4294712722 DB 'h', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712723 DB 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm'
	DB	00H, 00H, 00H
$SG4294712716 DB 'h', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712717 DB 'h', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712718 DB 'h', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712719 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712712 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712713 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712714 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712715 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712708 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712709 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712710 DB 'r', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712711 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712704 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712705 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712706 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712707 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294712700 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712701 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712702 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712703 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712696 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712697 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712698 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712699 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712692 DB 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712693 DB 'A', 00H, 'd', 00H, 'd', 00H, 00H, 00H
$SG4294712694 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712695 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712688 DB 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'U', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712689 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 'T', 00H, 'o', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712690 DB 'C', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712691 DB 'R', 00H, 'e', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712684 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'P', 00H, 'o', 00H, 's', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	00H, 00H
$SG4294712685 DB 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'T', 00H, 'o', 00H
	DB	'B', 00H, 'o', 00H, 't', 00H, 't', 00H, 'o', 00H, 'm', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712686 DB 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'T', 00H, 'o', 00H
	DB	'T', 00H, 'o', 00H, 'p', 00H, 00H, 00H
$SG4294712687 DB 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'D', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294712680 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'L'
	DB	00H, 'e', 00H, 'f', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294712681 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'C', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712682 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'C', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'H', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'z', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'y'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294712683 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'C', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294712676 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'F', 00H, 'i', 00H, 't', 00H, 'T', 00H, 'o'
	DB	00H, 'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	00H, 00H
$SG4294712677 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'B'
	DB	00H, 'o', 00H, 't', 00H, 't', 00H, 'o', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG4294712678 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'R'
	DB	00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
$SG4294712679 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'T'
	DB	00H, 'o', 00H, 'p', 00H, 00H, 00H
$SG4294712672 DB 09H, 00H, 'D', 00H, 'e', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294712673 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712674 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, 'C', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 00H, 00H
$SG4294712675 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
$SG4294712668 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, 00H, 00H
$SG4294712669 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'H', 00H, 'o', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712670 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294712671 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'U', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294712664 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'F', 00H, 00H, 00H
$SG4294712665 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'A', 00H, 'l', 00H, 't', 00H, '-', 00H, 'C', 00H, 00H, 00H
$SG4294712666 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'S', 00H, 'h', 00H, 'i', 00H, 'f', 00H, 't', 00H, '-', 00H, 'C'
	DB	00H, 00H, 00H
$SG4294712667 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'C', 00H, 00H, 00H
$SG4294712660 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'A', 00H, 'l', 00H, 't', 00H, '-', 00H, 'R', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, 00H, 00H
$SG4294712661 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'A', 00H, 'l', 00H, 't', 00H, '-', 00H, 'U', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712662 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'A', 00H, 'l', 00H, 't', 00H, '-', 00H, 'L', 00H, 'e', 00H, 'f'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294712663 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'R', 00H, 00H, 00H
$SG4294712656 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'H', 00H, 'o'
	DB	00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG4294712657 DB 'O', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG4294712658 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'A', 00H, 'l', 00H, 't', 00H, '-', 00H, 'R', 00H, 00H, 00H
$SG4294712659 DB 09H, 00H, 'C', 00H, 't', 00H, 'r', 00H, 'l', 00H, '-', 00H
	DB	'A', 00H, 'l', 00H, 't', 00H, '-', 00H, 'D', 00H, 'o', 00H, 'w'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294712652 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712653 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712654 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712655 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712648 DB 'GlobalSource', 00H
	ORG $+3
$SG4294712649 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712650 DB 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm'
	DB	00H, 00H, 00H
$SG4294712651 DB 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm'
	DB	00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
$SG4294712644 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712645 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712646 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712647 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294712640 DB 'x', 00H, 00H, 00H
$SG4294712641 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712642 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712643 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712636 DB 'x', 00H, 00H, 00H
$SG4294712637 DB 'y', 00H, 00H, 00H
$SG4294712638 DB 'x', 00H, 00H, 00H
$SG4294712639 DB 'y', 00H, 00H, 00H
$SG4294712632 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712633 DB 'y', 00H, 00H, 00H
$SG4294712634 DB 'x', 00H, 00H, 00H
$SG4294712635 DB 'y', 00H, 00H, 00H
$SG4294712628 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 'l', 00H
	DB	'e', 00H, 'f', 00H, 't', 00H, 00H, 00H
$SG4294712629 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712630 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712631 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712624 DB 'E', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294712625 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 'b', 00H
	DB	'o', 00H, 't', 00H, 't', 00H, 'o', 00H, 'm', 00H, 00H, 00H
$SG4294712626 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 'r', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294712627 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 't', 00H
	DB	'o', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294712620 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712621 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712622 DB 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712623 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712616 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712617 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712618 DB 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	'x', 00H, '.', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 00H, 00H
$SG4294712619 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712612 DB 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm'
	DB	00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
$SG4294712613 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712614 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712615 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712608 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294712609 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712610 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712611 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, '.', 00H, 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r'
	DB	00H, 'm', 00H, 00H, 00H
$SG4294712604 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712605 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712606 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712607 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712600 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712601 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712602 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294712603 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712596 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712597 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712598 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712599 DB 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712593 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712592 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '('
	DB	00H, '*', 00H, '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'f', 00H, 'i', 00H, 'g', 00H, ')', 00H, 00H, 00H, '*', 00H, '.'
	DB	00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H
	DB	'g', 00H, 00H, 00H, 00H, 00H
	ORG $+2
$SG4294712594 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712595 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294712588 DB 'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712589 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712590 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712591 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712584 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712585 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712586 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712587 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712580 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712581 DB 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712582 DB 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG4294712583 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712576 DB 'I', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H, 'S'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712577 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712578 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712579 DB 'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712572 DB 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.'
	DB	00H, 'R', 00H, 'e', 00H, 't', 00H, 'r', 00H, 'y', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 00H, 00H
$SG4294712573 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712574 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712575 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712568 DB 'D', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 00H, 00H
$SG4294712569 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294712570 DB 'E', 00H, 'x', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'i', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H
	DB	00H
$SG4294712571 DB 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712564 DB 'E', 00H, 'x', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'i', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H
	DB	00H
$SG4294712565 DB 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712566 DB 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.'
	DB	00H, 'R', 00H, 'e', 00H, 't', 00H, 'r', 00H, 'y', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 00H, 00H
$SG4294712567 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294712560 DB 'E', 00H, 'x', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'i', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H
	DB	00H
$SG4294712561 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294712562 DB 'D', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 00H, 00H
$SG4294712563 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294712556 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG4294712557 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294712558 DB 'D', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 00H, 00H
$SG4294712559 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294712552 DB '\', 00H, 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H, 00H, 00H
$SG4294712553 DB '%', 00H, 's', 00H, '\', 00H, 's', 00H, 'c', 00H, 'e', 00H
	DB	'n', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H
	DB	'%', 00H, 's', 00H, '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 'f', 00H, 'i', 00H, 'g', 00H, 00H, 00H
$SG4294712554 DB '\scenes.xconfig', 00H
$SG4294712555 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712548 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG4294712549 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'n'
	DB	00H, 'e', 00H, 'w', 00H, ' ', 00H, 'S', 00H, 'c', 00H, 'e', 00H
	DB	'n', 00H, 'e', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'l'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	',', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712550 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'S', 00H, 'c', 00H
	DB	'e', 00H, 'n', 00H, 'e', 00H, 's', 00H, 'E', 00H, 'x', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
$SG4294712551 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712544 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712545 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712546 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG4294712547 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712540 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm', 00H, 'D', 00H, 'e'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712541 DB 'F', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'f', 00H
	DB	'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 's', 00H, 'c', 00H, 'e', 00H
	DB	'n', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 'l'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 00H, 00H
$SG4294712542 DB '*', 00H, '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'f', 00H, 'i', 00H, 'g', 00H, 00H, 00H
$SG4294712543 DB '\', 00H, 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H, 00H, 00H
$SG4294712536 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG4294712537 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712538 DB 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm'
	DB	00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
$SG4294712539 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712532 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '('
	DB	00H, '*', 00H, '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'f', 00H, 'i', 00H, 'g', 00H, ')', 00H, 00H, 00H, '*', 00H, '.'
	DB	00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H
	DB	'g', 00H, 00H, 00H, 00H, 00H
	ORG $+2
$SG4294712533 DB 'I', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 'R', 00H, 'e', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r'
	DB	00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'T', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 00H, 00H
$SG4294712534 DB 'I', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 'R', 00H, 'e', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r'
	DB	00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'T', 00H
	DB	'i', 00H, 't', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712535 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712528 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712529 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712530 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712531 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712524 DB '\', 00H, 's', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, '\', 00H, 00H, 00H
$SG4294712525 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712526 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG4294712527 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712520 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712521 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712522 DB 'S', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 'e', 00H, ' ', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '('
	DB	00H, '*', 00H, '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'f', 00H, 'i', 00H, 'g', 00H, ')', 00H, 00H, 00H, '*', 00H, '.'
	DB	00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H
	DB	'g', 00H, 00H, 00H, 00H, 00H
	ORG $+2
$SG4294712523 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712516 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712517 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712518 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712519 DB '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'f', 00H
	DB	'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712512 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712513 DB '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG4294712514 DB '%', 00H, 's', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H
	DB	'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, '%'
	DB	00H, 's', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712515 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712508 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712509 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712510 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'n'
	DB	00H, 'e', 00H, 'w', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H
	DB	'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ',', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712511 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, '.', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'E'
	DB	00H, 'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's', 00H, 00H, 00H
$SG4294712504 DB '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG4294712505 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712506 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712507 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712500 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712501 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm', 00H, 'D', 00H, 'e'
	DB	00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712502 DB 'F', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'f', 00H
	DB	'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'p', 00H, 'r', 00H, 'o', 00H
	DB	'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712503 DB '*', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
$SG4294712496 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712497 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712498 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712499 DB 'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 'm'
	DB	00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
$SG4294712492 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's'
	DB	00H, ' ', 00H, '(', 00H, '*', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, ')', 00H, 00H, 00H, '*', 00H, '.', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 00H, 00H, 00H, 00H
	ORG $+2
$SG4294712493 DB 'I', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '.', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712488 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712494 DB 'I', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '.', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712489 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712495 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712490 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712491 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712484 DB '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG4294712485 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712486 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712487 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712480 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712481 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's'
	DB	00H, ' ', 00H, '(', 00H, '*', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, ')', 00H, 00H, 00H, '*', 00H, '.', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 00H, 00H, 00H, 00H
	ORG $+2
$SG4294712483 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712482 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712476 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712477 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712478 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712479 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712472 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712473 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'p'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712474 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712475 DB '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG4294712468 DB 'Open Broadcaster Software', 00H
	ORG $+2
$SG4294712469 DB '/', 00H, 'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, '/', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712470 DB '/', 00H, 'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, '/', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712471 DB '%', 00H, 's', 00H, '/', 00H, 'l', 00H, 'o', 00H, 'g', 00H
	DB	's', 00H, '/', 00H, '*', 00H, '.', 00H, 'l', 00H, 'o', 00H, 'g'
	DB	00H, 00H, 00H
$SG4294712464 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'U', 00H, 'p', 00H, 'l'
	DB	00H, 'o', 00H, 'a', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG4294712465 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'A', 00H, 'n', 00H, 'a'
	DB	00H, 'l', 00H, 'y', 00H, 'z', 00H, 'e', 00H, 00H, 00H
$SG4294712466 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p'
	DB	00H, '.', 00H, 'U', 00H, 'p', 00H, 'l', 00H, 'o', 00H, 'a', 00H
	DB	'd', 00H, 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'L', 00H, 'o'
	DB	00H, 'g', 00H, 00H, 00H
$SG4294712467 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p'
	DB	00H, '.', 00H, 'A', 00H, 'n', 00H, 'a', 00H, 'l', 00H, 'y', 00H
	DB	'z', 00H, 'e', 00H, 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'L'
	DB	00H, 'o', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294712460 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'S', 00H, 'u', 00H, 'c'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'D', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, '.', 00H, 'C', 00H, 'o'
	DB	00H, 'p', 00H, 'y', 00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H
	DB	'u', 00H, 'r', 00H, 'e', 00H, 00H, 00H
$SG4294712461 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'S', 00H, 'u', 00H, 'c'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'D', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, '.', 00H, 'C', 00H, 'o'
	DB	00H, 'p', 00H, 'y', 00H, 'S', 00H, 'u', 00H, 'c', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712462 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'S', 00H, 'u', 00H, 'c'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'D', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'o', 00H, 'g', 00H, '.', 00H, 'C', 00H, 'o'
	DB	00H, 'p', 00H, 'y', 00H, 'S', 00H, 'u', 00H, 'c', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712463 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'e'
	DB	00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG4294712456 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 'T', 00H
	DB	'o', 00H, 'A', 00H, 'n', 00H, 'a', 00H, 'l', 00H, 'y', 00H, 'z'
	DB	00H, 'e', 00H, 00H, 00H
$SG4294712457 DB 'o', 00H, 'b', 00H, 's', 00H, 'p', 00H, 'r', 00H, 'o', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'c', 00H, 'o'
	DB	00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG4294712458 DB '/', 00H, 'a', 00H, 'n', 00H, 'a', 00H, 'l', 00H, 'y', 00H
	DB	'z', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG4294712459 DB '?', 00H, 'u', 00H, 'r', 00H, 'l', 00H, '=', 00H, '%', 00H
	DB	's', 00H, 00H, 00H
$SG4294712453 DB 'Scenes: ', 00H
	ORG $+3
$SG4294712452 DB ' ', 00H, '-', 00H, ' ', 00H, 'O', 00H, 'p', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, 'B', 00H, 'r', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'c', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a'
	DB	00H, 'r', 00H, 'e', 00H, ' ', 00H, 'v', 00H, '0', 00H, '.', 00H
	DB	'6', 00H, '5', 00H, '7', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG4294712454 DB ' - ', 00H
$SG4294712455 DB 'Profile: ', 00H
	ORG $+2
$SG4294712448 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'T', 00H, 'i'
	DB	00H, 't', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712449 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'M', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG4294712450 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'T', 00H, 'i'
	DB	00H, 't', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712451 DB '\scenes.xconfig', 00H
$SG4294712444 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294712445 DB 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294712446 DB 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S'
	DB	00H, 'a', 00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294712436 DB '/', 00H, 00H, 00H
$SG4294712447 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'M', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG4294712440 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, '.', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 'D', 00H, 'o', 00H, 'e'
	DB	00H, 's', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'E', 00H, 'x', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 'C', 00H, 'a', 00H, 'p', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294712441 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712442 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, '.', 00H, 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'R', 00H
	DB	'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 's', 00H, 'F', 00H, 'o', 00H, 'l', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'D', 00H, 'o', 00H, 'e', 00H, 's'
	DB	00H, 'N', 00H, 'o', 00H, 't', 00H, 'E', 00H, 'x', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
$SG4294712443 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, '.', 00H, 'S', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'S', 00H
	DB	'a', 00H, 'v', 00H, 'e', 00H, 'd', 00H, 'R', 00H, 'e', 00H, 'p'
	DB	00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'D', 00H, 'o'
	DB	00H, 'e', 00H, 's', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG4294712437 DB '\', 00H, 00H, 00H
$SG4294712438 DB '/', 00H, 00H, 00H
$SG4294712439 DB '\', 00H, 00H, 00H
$SG4294712432 DB 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294712433 DB '\', 00H, 'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG4294712434 DB 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294712435 DB 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294712428 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294712429 DB 'M', 00H, 'i', 00H, 'c', 00H, 'M', 00H, 'u', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, 'V', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712430 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294712431 DB 'M', 00H, 'i', 00H, 'c', 00H, 'V', 00H, 'o', 00H, 'l', 00H
	DB	'u', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG4294712424 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294712425 DB 'D', 00H, 'e', 00H, 's', 00H, 'k', 00H, 't', 00H, 'o', 00H
	DB	'p', 00H, 'M', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'V'
	DB	00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712426 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294712427 DB 'D', 00H, 'e', 00H, 's', 00H, 'k', 00H, 't', 00H, 'o', 00H
	DB	'p', 00H, 'V', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e'
	DB	00H, 00H, 00H
$SG4294712420 DB '.', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG4294712421 DB '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG4294712422 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712423 DB 'M', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'T', 00H, 'o', 00H, 'N', 00H, 'o', 00H, 't'
	DB	00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'A', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294712417 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712414 DB 'e', 00H, 'd', 00H, 'i', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294712416 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'x', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 'f', 00H, 'i', 00H, 'g', 00H, ' ', 00H, 'f', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712418 DB 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712419 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712412 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712413 DB 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, '.', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'S'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '.', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't'
	DB	00H, 'F', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 00H, 00H
$SG4294712415 DB '%', 00H, 's', 00H, '\', 00H, 'l', 00H, 'o', 00H, 'g', 00H
	DB	's', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712408 DB 'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712409 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712410 DB 'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712411 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712404 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712405 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712406 DB 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG4294712407 DB 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG4294712400 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712401 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712402 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712403 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712398 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 'R', 00H, 'e', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294712396 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 'R', 00H, 'e', 00H, 'c', 00H
	DB	'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'A'
	DB	00H, 'n', 00H, 'd', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294712399 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'o', 00H, 'p', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
$SG4294712393 DB 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H
	DB	'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712397 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'o', 00H, 'p', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H
	DB	'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'A', 00H, 'n'
	DB	00H, 'd', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H
	DB	'y', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 00H, 00H
$SG4294712392 DB 'C', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'D', 00H, 'i'
	DB	00H, 's', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294712394 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712395 DB 'M', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'T', 00H, 'o', 00H, 'N', 00H, 'o', 00H, 't'
	DB	00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'A', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294712388 DB 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG4294712389 DB 'M', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'T', 00H, 'o', 00H, 'N', 00H, 'o', 00H, 't'
	DB	00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'A', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294712390 DB 'C', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'D', 00H, 'i'
	DB	00H, 's', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294712391 DB 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H
	DB	'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 00H
	DB	00H
	ORG $+2
$SG4294712384 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'o', 00H, 'p', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'm', 00H, 00H, 00H
$SG4294712385 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'o', 00H, 'p', 00H, 'T', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	00H, 00H
$SG4294712386 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'S', 00H, 'h', 00H
	DB	'o', 00H, 'w', 00H, 'O', 00H, 'b', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712387 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 'l', 00H, '.', 00H, 'H', 00H, 'i', 00H
	DB	'd', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294712380 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'E', 00H, 'x'
	DB	00H, 'i', 00H, 't', 00H, 00H, 00H
$SG4294712381 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.', 00H, 'A', 00H
	DB	'l', 00H, 'w', 00H, 'a', 00H, 'y', 00H, 's', 00H, 'O', 00H, 'n'
	DB	00H, 'T', 00H, 'o', 00H, 'p', 00H, 00H, 00H
$SG4294712377 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'T', 00H, 'i'
	DB	00H, 't', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712382 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.', 00H, 'F', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'e'
	DB	00H, 'e', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712383 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 'S', 00H, 't', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG4294712379 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'T', 00H, 'i'
	DB	00H, 't', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294712376 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'M', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG4294712378 DB 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'W', 00H
	DB	'h', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'v', 00H, 'e', 00H, 'W', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'M', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG4294712372 DB 'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG4294712373 DB 'y', 00H, 00H, 00H
$SG4294712374 DB 'x', 00H, 00H, 00H
$SG4294712375 DB '\skin\Dialog_Default_back.png', 00H
	ORG $+2
$SG4294712368 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 'r', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294712369 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 't', 00H
	DB	'o', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294712370 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 'l', 00H
	DB	'e', 00H, 'f', 00H, 't', 00H, 00H, 00H
$SG4294712371 DB 'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294712364 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294712365 DB 'M', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG4294712366 DB 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294712367 DB 'c', 00H, 'r', 00H, 'o', 00H, 'p', 00H, '.', 00H, 'b', 00H
	DB	'o', 00H, 't', 00H, 't', 00H, 'o', 00H, 'm', 00H, 00H, 00H
$SG4294712360 DB 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '.', 00H, 'V', 00H, 'i'
	DB	00H, 'e', 00H, 'w', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'1', 00H, 'T', 00H, 'o', 00H, '1', 00H, 00H, 00H
$SG4294712361 DB 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '.', 00H, 'V', 00H, 'i'
	DB	00H, 'e', 00H, 'w', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'o'
	DB	00H, 'F', 00H, 'i', 00H, 't', 00H, 00H, 00H
$SG4294712359 DB 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '.', 00H, 'E', 00H, 'n'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'V', 00H, 'i', 00H
	DB	'e', 00H, 'w', 00H, 00H, 00H
$SG4294712362 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.', 00H, 'F', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'e'
	DB	00H, 'e', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG4294712363 DB 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, '.', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 00H, 00H
$SG4294712356 DB 'GetPluginName', 00H
	ORG $+2
$SG4294712357 DB 'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H
	DB	'w', 00H, 00H, 00H
$SG4294712358 DB 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '.', 00H, 'D', 00H, 'i'
	DB	00H, 's', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'P', 00H
	DB	'a', 00H, 'n', 00H, 'e', 00H, 'l', 00H, 00H, 00H
$SG4294712352 DB 0dH, 00H, 0aH, 00H, 0dH, 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG4294712353 DB ' ', 00H, 00H, 00H
$SG4294712354 DB 'P', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294712355 DB 'GetPluginDescription', 00H
	ORG $+3
$SG4294712348 DB 'ConfigPlugin', 00H
	ORG $+3
$SG4294712349 DB 'ConfigPlugin', 00H
	ORG $+3
$SG4294712350 DB 0dH, 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG4294712351 DB 'P', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, '.', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	00H, 00H
$SG4294712346 DB 08bH, '[SO', 00H, 00H
	ORG $+2
$SG4294712347 DB '%', 00H, '.', 00H, '0', 00H, '2', 00H, 'f', 00H, 00H, 00H
PUBLIC	??$get@$0A@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$move@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> &>
PUBLIC	??$?0V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<>,0>
PUBLIC	?_Get_rest@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Get_rest
PUBLIC	??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,void * *>
PUBLIC	??$?0PA_W_NX@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@$$QAPA_W$$QA_N@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><wchar_t *,bool,void>
PUBLIC	??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
PUBLIC	??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$_Val_type@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
PUBLIC	??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
PUBLIC	?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Compat
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size
PUBLIC	?base@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::base
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator==
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::max_size
PUBLIC	??$_Rechecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
PUBLIC	??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
PUBLIC	??$_Unchecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
PUBLIC	??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$_Move@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
PUBLIC	??$_Equal@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Equal<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &,bool,void>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool,void>
PUBLIC	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
PUBLIC	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::operator--
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--
PUBLIC	?construct@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct
PUBLIC	?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Freenode0
PUBLIC	?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode0
PUBLIC	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Destroy_if_not_nil
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::size
PUBLIC	??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$_Uninitialized_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
PUBLIC	??$_Ptr_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$swap@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z ; std::swap<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
PUBLIC	??$forward@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_hint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
PUBLIC	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
PUBLIC	??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >
PUBLIC	??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$?8V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
PUBLIC	??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_nohint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
PUBLIC	??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<wchar_t *,bool>
PUBLIC	??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z		; std::forward<wchar_t *>
PUBLIC	??0?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$_Allocate@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$_Umove@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Umove<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
PUBLIC	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z ; std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>
PUBLIC	??$_Swap_adl@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z ; std::_Swap_adl<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
PUBLIC	??$addressof@$$CBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@ABU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const >
PUBLIC	??$forward@V?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@@std@@YA$$QAV?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@0@AAV10@@Z ; std::forward<std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@@Z ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> ><std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >
PUBLIC	??$?M_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
PUBLIC	??$addressof@$$CBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const >
PUBLIC	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$addressof@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
PUBLIC	??$forward_as_tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$?9V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
PUBLIC	??$move@AAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@YA$$QAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@0@AAV10@@Z ; std::move<std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > &>
PUBLIC	??$emplace@PA_W_N@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace<wchar_t *,bool>
PUBLIC	?max_size@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
PUBLIC	?allocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocate
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::allocate
PUBLIC	?deallocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::deallocate
PUBLIC	?capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::capacity
PUBLIC	?_Swapcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEXABU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Swapcomp
PUBLIC	??E?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator++
PUBLIC	??0?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >
PUBLIC	??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
PUBLIC	?_Xlen@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Xlen
PUBLIC	?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reallocate
PUBLIC	?_Grow_to@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Grow_to
PUBLIC	?_Destroy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Destroy
PUBLIC	?max_size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
PUBLIC	?size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::size
PUBLIC	?_Unused_capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Unused_capacity
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lbound
PUBLIC	?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::key_comp
PUBLIC	?_Assign_rv@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Assign_rv
PUBLIC	?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@ABU32@@Z ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const *>::pointer_to
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@AAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> *>::pointer_to
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAEAAUMemUnlocker@?A0x0ea80c23@@XZ ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAEAAUHLOCALDeleter@?A0x0ea80c23@@XZ ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>
PUBLIC	??F?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*
PUBLIC	??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++
PUBLIC	??0?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
PUBLIC	??0?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
PUBLIC	?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Orphan_range
PUBLIC	?_Tidy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Tidy
PUBLIC	?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reserve
PUBLIC	?_Inside@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBE_NPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Inside
PUBLIC	?end@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::end
PUBLIC	?begin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::begin
PUBLIC	?Clear@?$List@PAVXElement@@@@QAEXXZ		; List<XElement *>::Clear
PUBLIC	?Add@?$List@PAVXElement@@@@QAEIABQAVXElement@@@Z ; List<XElement *>::Add
PUBLIC	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::lower_bound
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >
PUBLIC	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
PUBLIC	??B?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBE_NXZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::operator bool
PUBLIC	?get@?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::get
PUBLIC	??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>
PUBLIC	??0?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@PAX@Z ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::unique_ptr<void,`anonymous namespace'::MemUnlocker>
PUBLIC	?release@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::release
PUBLIC	??B?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBE_NXZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::operator bool
PUBLIC	?get@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::get
PUBLIC	??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::~unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
PUBLIC	??0?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@PAX@Z ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
PUBLIC	??D?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator*
PUBLIC	??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++
PUBLIC	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->
PUBLIC	?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back
PUBLIC	?empty@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::empty
PUBLIC	?rend@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rend
PUBLIC	?rbegin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rbegin
PUBLIC	??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::~vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
PUBLIC	?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back
PUBLIC	??0?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
PUBLIC	??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z	; List<XElement *>::operator[]
PUBLIC	??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z ; List<XElement *>::operator<<
PUBLIC	?Num@?$List@PAVXElement@@@@QBEIXZ		; List<XElement *>::Num
PUBLIC	??1?$List@PAVXElement@@@@QAE@XZ			; List<XElement *>::~List<XElement *>
PUBLIC	??0?$List@PAVXElement@@@@QAE@XZ			; List<XElement *>::List<XElement *>
PUBLIC	??A?$List@PB_W@@QAEAAPB_WI@Z			; List<wchar_t const *>::operator[]
PUBLIC	?Num@?$List@PB_W@@QBEIXZ			; List<wchar_t const *>::Num
PUBLIC	??1?$List@PB_W@@QAE@XZ				; List<wchar_t const *>::~List<wchar_t const *>
PUBLIC	??0?$List@PB_W@@QAE@XZ				; List<wchar_t const *>::List<wchar_t const *>
PUBLIC	?Remove@?$List@UGlobalSourceInfo@@@@QAEXI@Z	; List<GlobalSourceInfo>::Remove
PUBLIC	??H?$List@UClassInfo@@@@QAEPAUClassInfo@@I@Z	; List<ClassInfo>::operator+
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::find
PUBLIC	??A?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEAA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::operator[]
PUBLIC	??0?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAE@$$QAV01@@Z ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >
PUBLIC	??A?$List@USceneHotkeyInfo@@@@QAEAAUSceneHotkeyInfo@@I@Z ; List<SceneHotkeyInfo>::operator[]
PUBLIC	?Remove@?$List@USceneHotkeyInfo@@@@QAEXI@Z	; List<SceneHotkeyInfo>::Remove
PUBLIC	?Num@?$List@USceneHotkeyInfo@@@@QBEIXZ		; List<SceneHotkeyInfo>::Num
PUBLIC	?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ ; List<SceneItem *>::Last
PUBLIC	?Clear@?$List@PAVSceneItem@@@@QAEXXZ		; List<SceneItem *>::Clear
PUBLIC	??1?$List@PAVSceneItem@@@@QAE@XZ		; List<SceneItem *>::~List<SceneItem *>
PUBLIC	??0?$List@PAVSceneItem@@@@QAE@XZ		; List<SceneItem *>::List<SceneItem *>
PUBLIC	?SetBackground@@YAXPAUHWND__@@PB_WPAUHDC__@@H1@Z ; SetBackground
PUBLIC	?PluginsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z	; OBS::PluginsDialogProc
PUBLIC	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
PUBLIC	?GetItemModifyType@@YA?AW4ItemModifyType@@ABUVect2@@00ABUVect4@@0@Z ; GetItemModifyType
PUBLIC	??_GStringList@@QAEPAXI@Z			; StringList::`scalar deleting destructor'
PUBLIC	??1LogUploadResult@@QAE@XZ			; LogUploadResult::~LogUploadResult
PUBLIC	?ShowLogUploadResult@@YAXAAULogUploadResult@@_N@Z ; ShowLogUploadResult
PUBLIC	?LogUploadResultProc@@YGHPAUHWND__@@IIJ@Z	; LogUploadResultProc
PUBLIC	?Contains@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z ; `anonymous namespace'::ClipboardHelper::Contains
PUBLIC	?Insert@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z ; `anonymous namespace'::ClipboardHelper::Insert
PUBLIC	??1ClipboardHelper@?A0x0ea80c23@@QAE@XZ		; `anonymous namespace'::ClipboardHelper::~ClipboardHelper
PUBLIC	??0ClipboardHelper@?A0x0ea80c23@@QAE@PAUHWND__@@@Z ; `anonymous namespace'::ClipboardHelper::ClipboardHelper
PUBLIC	??RMemUnlocker@?A0x0ea80c23@@QAEXPAX@Z		; `anonymous namespace'::MemUnlocker::operator()
PUBLIC	??RHLOCALDeleter@?A0x0ea80c23@@QAEXPAX@Z	; `anonymous namespace'::HLOCALDeleter::operator()
PUBLIC	?GetLogUploadMenuItem@@YA?AVString@@I@Z		; GetLogUploadMenuItem
PUBLIC	?ResetLogUploadMenu@OBS@@CAXXZ			; OBS::ResetLogUploadMenu
PUBLIC	?LogUploadMonitorCallback@@YAXXZ		; LogUploadMonitorCallback
PUBLIC	?ExportProfile@OBS@@AAEXXZ			; OBS::ExportProfile
PUBLIC	?ImportProfile@OBS@@AAEXXZ			; OBS::ImportProfile
PUBLIC	?RemoveProfile@OBS@@AAEXXZ			; OBS::RemoveProfile
PUBLIC	?AddProfile@OBS@@AAEXW4ProfileAction@@@Z	; OBS::AddProfile
PUBLIC	?ExportSceneCollection@OBS@@AAEXXZ		; OBS::ExportSceneCollection
PUBLIC	?ImportSceneCollection@OBS@@AAEXXZ		; OBS::ImportSceneCollection
PUBLIC	?RemoveSceneCollection@OBS@@AAEXXZ		; OBS::RemoveSceneCollection
PUBLIC	?AddSceneCollection@OBS@@AAEXW4SceneCollectionAction@@@Z ; OBS::AddSceneCollection
PUBLIC	?AddSceneCollectionToMenu@OBS@@CAXPAUHMENU__@@@Z ; OBS::AddSceneCollectionToMenu
PUBLIC	?AddProfilesToMenu@OBS@@CAXPAUHMENU__@@@Z	; OBS::AddProfilesToMenu
PUBLIC	?GlobalSourcesImportProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::GlobalSourcesImportProc
PUBLIC	?GlobalSourcesProc@OBS@@CGHPAUHWND__@@IIJ@Z	; OBS::GlobalSourcesProc
PUBLIC	?EnterGlobalSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterGlobalSourceNameDialogProc
PUBLIC	?ResetItemCrops@OBS@@AAEXXZ			; OBS::ResetItemCrops
PUBLIC	?ResetItemSizes@OBS@@AAEXXZ			; OBS::ResetItemSizes
PUBLIC	?FitItemsToScreen@OBS@@AAEXXZ			; OBS::FitItemsToScreen
PUBLIC	?MoveItemsByPixels@OBS@@AAEXHH@Z		; OBS::MoveItemsByPixels
PUBLIC	?MoveItemsToEdge@OBS@@AAEXHH@Z			; OBS::MoveItemsToEdge
PUBLIC	?CenterItems@OBS@@AAEX_N0@Z			; OBS::CenterItems
PUBLIC	?MoveSourcesToBottom@OBS@@AAEXXZ		; OBS::MoveSourcesToBottom
PUBLIC	?MoveSourcesToTop@OBS@@AAEXXZ			; OBS::MoveSourcesToTop
PUBLIC	?MoveSourcesDown@OBS@@AAEXXZ			; OBS::MoveSourcesDown
PUBLIC	?MoveSourcesUp@OBS@@AAEXXZ			; OBS::MoveSourcesUp
PUBLIC	?SetSourceOrder@OBS@@AAEXAAVStringList@@@Z	; OBS::SetSourceOrder
PUBLIC	?DeleteItems@OBS@@AAEXXZ			; OBS::DeleteItems
PUBLIC	?AppendModifyListbox@OBS@@AAEXPAUHWND__@@PAUHMENU__@@HH_N@Z ; OBS::AppendModifyListbox
PUBLIC	?TrackModifyListbox@OBS@@AAEXPAUHWND__@@H@Z	; OBS::TrackModifyListbox
PUBLIC	?GetNewSceneName@OBS@@CAXAAVString@@@Z		; OBS::GetNewSceneName
PUBLIC	?EnterSceneNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSceneNameDialogProc
PUBLIC	?SceneHotkeyDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z	; OBS::SceneHotkeyDialogProc
PUBLIC	?EnterProfileDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterProfileDialogProc
PUBLIC	?EnterSceneCollectionDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSceneCollectionDialogProc
PUBLIC	??0Font@Gdiplus@@QAE@PB_WMHW4Unit@1@PBVFontCollection@1@@Z ; Gdiplus::Font::Font
PUBLIC	?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ; Gdiplus::FontFamily::GetLastStatus
PUBLIC	?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ ; Gdiplus::FontFamily::GenericSansSerif
PUBLIC	??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ; Gdiplus::FontFamily::FontFamily
PUBLIC	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
PUBLIC	?DrawRectangle@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawRectangle
PUBLIC	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@ABVPoint@2@1@Z ; Gdiplus::Graphics::DrawLine
PUBLIC	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
PUBLIC	?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z	; Gdiplus::Graphics::ReleaseHDC
PUBLIC	?MakeARGB@Color@Gdiplus@@SAKEEEE@Z		; Gdiplus::Color::MakeARGB
PUBLIC	??0Color@Gdiplus@@QAE@EEE@Z			; Gdiplus::Color::Color
PUBLIC	??0Point@Gdiplus@@QAE@HH@Z			; Gdiplus::Point::Point
PUBLIC	??0LogUploadResult@@QAE@XZ			; LogUploadResult::LogUploadResult
PUBLIC	?GetCurrentProfile@OBS@@SAPB_WXZ		; OBS::GetCurrentProfile
PUBLIC	?GetOutputSize@OBS@@QBE?AUVect2@@XZ		; OBS::GetOutputSize
PUBLIC	?GetBaseSize@OBS@@QBE?AUVect2@@XZ		; OBS::GetBaseSize
PUBLIC	?RemoveSceneHotkey@OBS@@AAEXK@Z			; OBS::RemoveSceneHotkey
PUBLIC	?ResetProfileMenu@OBS@@CAXXZ			; OBS::ResetProfileMenu
PUBLIC	?ReconnectDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z	; OBS::ReconnectDialogProc
PUBLIC	?GetApplicationName@OBS@@CA?AVString@@XZ	; OBS::GetApplicationName
PUBLIC	?OBSStaticProc@OBS@@CGJPAUHWND__@@IIJ@Z		; OBS::OBSStaticProc
PUBLIC	?OBSProc@OBS@@CGJPAUHWND__@@IIJ@Z		; OBS::OBSProc
PUBLIC	?LogWindowProc@OBS@@CGJPAUHWND__@@IIJ@Z		; OBS::LogWindowProc
PUBLIC	?ProjectorFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z	; OBS::ProjectorFrameProc
PUBLIC	?RenderFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z	; OBS::RenderFrameProc
PUBLIC	?ListboxHook@OBS@@CGJPAUHWND__@@IIJ@Z		; OBS::ListboxHook
PUBLIC	?EnterSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSourceNameDialogProc
PUBLIC	?GetNewSourceName@OBS@@CAXAAVString@@@Z		; OBS::GetNewSourceName
PUBLIC	?SetSliderText@@YAHPAUHWND__@@HH@Z		; SetSliderText
PUBLIC	?ResetApplicationName@OBS@@CAXXZ		; OBS::ResetApplicationName
PUBLIC	?ResetSceneCollectionMenu@OBS@@CAXXZ		; OBS::ResetSceneCollectionMenu
PUBLIC	?GetFrameToWindowScale@OBS@@CA?AUVect2@@XZ	; OBS::GetFrameToWindowScale
PUBLIC	?GetWindowToFrameScale@OBS@@CA?AUVect2@@XZ	; OBS::GetWindowToFrameScale
PUBLIC	?MapFrameToWindowSize@OBS@@CA?AUVect2@@U2@@Z	; OBS::MapFrameToWindowSize
PUBLIC	?MapWindowToFrameSize@OBS@@CA?AUVect2@@U2@@Z	; OBS::MapWindowToFrameSize
PUBLIC	?MapFrameToWindowPos@OBS@@CA?AUVect2@@U2@@Z	; OBS::MapFrameToWindowPos
PUBLIC	?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z	; OBS::MapWindowToFramePos
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z$2
__catchsym$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$2
__catchsym$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$2
__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$2
__catchsym$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ$2
__catchsym$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__catchsym$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
$T2 = -72						; size = 8
$T3 = -64						; size = 8
$T4 = -56						; size = 8
$T5 = -48						; size = 8
$T6 = -40						; size = 8
$T7 = -32						; size = 8
$T8 = -24						; size = 8
$T9 = -16						; size = 8
$T10 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_mousePos$ = 12						; size = 8
?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z PROC	; OBS::MapWindowToFramePos, COMDAT

; 4746 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 4747 :     if(App->renderFrameIn1To1Mode)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+668]
	test	ecx, ecx
	je	SHORT $LN1@MapWindowT

; 4748 :         return (mousePos - App->GetRenderFrameOffset()) * (App->GetBaseSize() / App->GetOutputSize());

	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetOutputSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetOutputSize
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameOffset@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameOffset
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mousePos$[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@MapWindowT
$LN1@MapWindowT:

; 4749 :     return (mousePos - App->GetRenderFrameOffset()) * (App->GetBaseSize() / App->GetRenderFrameSize());

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameSize@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameSize
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameOffset@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameOffset
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mousePos$[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@MapWindowT:

; 4750 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z ENDP	; OBS::MapWindowToFramePos
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MapFrameToWindowPos@OBS@@CA?AUVect2@@U2@@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
$T2 = -72						; size = 8
$T3 = -64						; size = 8
$T4 = -56						; size = 8
$T5 = -48						; size = 8
$T6 = -40						; size = 8
$T7 = -32						; size = 8
$T8 = -24						; size = 8
$T9 = -16						; size = 8
$T10 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_framePos$ = 12						; size = 8
?MapFrameToWindowPos@OBS@@CA?AUVect2@@U2@@Z PROC	; OBS::MapFrameToWindowPos, COMDAT

; 4756 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 4757 :     if(App->renderFrameIn1To1Mode)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+668]
	test	ecx, ecx
	je	SHORT $LN1@MapFrameTo

; 4758 :         return framePos * (App->GetOutputSize() / App->GetBaseSize()) + App->GetRenderFrameOffset();

	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameOffset@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameOffset
	push	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	push	eax
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetOutputSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetOutputSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _framePos$[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@MapFrameTo
$LN1@MapFrameTo:

; 4759 :     return framePos * (App->GetRenderFrameSize() / App->GetBaseSize()) + App->GetRenderFrameOffset();

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameOffset@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameOffset
	push	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameSize@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	ecx, DWORD PTR _framePos$[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@MapFrameTo:

; 4760 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MapFrameToWindowPos@OBS@@CA?AUVect2@@U2@@Z ENDP	; OBS::MapFrameToWindowPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MapWindowToFrameSize@OBS@@CA?AUVect2@@U2@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 8
$T2 = -40						; size = 8
$T3 = -32						; size = 8
$T4 = -24						; size = 8
$T5 = -16						; size = 8
$T6 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_windowSize$ = 12					; size = 8
?MapWindowToFrameSize@OBS@@CA?AUVect2@@U2@@Z PROC	; OBS::MapWindowToFrameSize, COMDAT

; 4766 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 4767 :     if(App->renderFrameIn1To1Mode)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+668]
	test	ecx, ecx
	je	SHORT $LN1@MapWindowT

; 4768 :         return windowSize * (App->GetBaseSize() / App->GetOutputSize());

	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetOutputSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetOutputSize
	push	eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	lea	ecx, DWORD PTR _windowSize$[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@MapWindowT
$LN1@MapWindowT:

; 4769 :     return windowSize * (App->GetBaseSize() / App->GetRenderFrameSize());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameSize@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameSize
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _windowSize$[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@MapWindowT:

; 4770 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MapWindowToFrameSize@OBS@@CA?AUVect2@@U2@@Z ENDP	; OBS::MapWindowToFrameSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MapFrameToWindowSize@OBS@@CA?AUVect2@@U2@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 8
$T2 = -40						; size = 8
$T3 = -32						; size = 8
$T4 = -24						; size = 8
$T5 = -16						; size = 8
$T6 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_frameSize$ = 12					; size = 8
?MapFrameToWindowSize@OBS@@CA?AUVect2@@U2@@Z PROC	; OBS::MapFrameToWindowSize, COMDAT

; 4776 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 4777 :     if(App->renderFrameIn1To1Mode)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+668]
	test	ecx, ecx
	je	SHORT $LN1@MapFrameTo

; 4778 :         return frameSize * (App->GetOutputSize() / App->GetBaseSize());

	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	push	eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetOutputSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetOutputSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	lea	ecx, DWORD PTR _frameSize$[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@MapFrameTo
$LN1@MapFrameTo:

; 4779 :     return frameSize * (App->GetRenderFrameSize() / App->GetBaseSize());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameSize@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameSize
	mov	ecx, eax
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _frameSize$[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@MapFrameTo:

; 4780 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MapFrameToWindowSize@OBS@@CA?AUVect2@@U2@@Z ENDP	; OBS::MapFrameToWindowSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GetWindowToFrameScale@OBS@@CA?AUVect2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetWindowToFrameScale@OBS@@CA?AUVect2@@XZ PROC		; OBS::GetWindowToFrameScale, COMDAT

; 4787 : {

	push	ebp
	mov	ebp, esp

; 4788 :     return MapWindowToFrameSize(Vect2(1.0f, 1.0f));

	sub	esp, 8
	mov	ecx, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	?MapWindowToFrameSize@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapWindowToFrameSize
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4789 : }

	pop	ebp
	ret	0
?GetWindowToFrameScale@OBS@@CA?AUVect2@@XZ ENDP		; OBS::GetWindowToFrameScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GetFrameToWindowScale@OBS@@CA?AUVect2@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetFrameToWindowScale@OBS@@CA?AUVect2@@XZ PROC		; OBS::GetFrameToWindowScale, COMDAT

; 4796 : {

	push	ebp
	mov	ebp, esp

; 4797 :     return MapFrameToWindowSize(Vect2(1.0f, 1.0f));

	sub	esp, 8
	mov	ecx, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	?MapFrameToWindowSize@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapFrameToWindowSize
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4798 : }

	pop	ebp
	ret	0
?GetFrameToWindowScale@OBS@@CA?AUVect2@@XZ ENDP		; OBS::GetFrameToWindowScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ResetSceneCollectionMenu@OBS@@CAXXZ
_TEXT	SEGMENT
_hmenuMain$ = -8					; size = 4
_hmenuSceneCollection$ = -4				; size = 4
?ResetSceneCollectionMenu@OBS@@CAXXZ PROC		; OBS::ResetSceneCollectionMenu, COMDAT

; 3177 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3178 :     HMENU hmenuMain = GetMenu(hwndMain);

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	mov	DWORD PTR _hmenuMain$[ebp], eax

; 3179 :     HMENU hmenuSceneCollection = GetSubMenu(hmenuMain, 3);

	push	3
	mov	ecx, DWORD PTR _hmenuMain$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetSubMenu@8
	mov	DWORD PTR _hmenuSceneCollection$[ebp], eax
$LN2@ResetScene:

; 3180 :     while (DeleteMenu(hmenuSceneCollection, 8, MF_BYPOSITION));

	push	1024					; 00000400H
	push	8
	mov	edx, DWORD PTR _hmenuSceneCollection$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteMenu@12
	test	eax, eax
	je	SHORT $LN1@ResetScene
	jmp	SHORT $LN2@ResetScene
$LN1@ResetScene:

; 3181 :     AddSceneCollectionToMenu(hmenuSceneCollection);

	mov	eax, DWORD PTR _hmenuSceneCollection$[ebp]
	push	eax
	call	?AddSceneCollectionToMenu@OBS@@CAXPAUHMENU__@@@Z ; OBS::AddSceneCollectionToMenu
	add	esp, 4

; 3182 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetSceneCollectionMenu@OBS@@CAXXZ ENDP		; OBS::ResetSceneCollectionMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ResetApplicationName@OBS@@CAXXZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
?ResetApplicationName@OBS@@CAXXZ PROC			; OBS::ResetApplicationName, COMDAT

; 3604 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3605 :     SetWindowText(hwndMain, GetApplicationName());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?GetApplicationName@OBS@@CA?AVString@@XZ ; OBS::GetApplicationName
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3606 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetApplicationName@OBS@@CAXXZ ENDP			; OBS::ResetApplicationName
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?SetSliderText@@YAHPAUHWND__@@HH@Z
_TEXT	SEGMENT
$T1 = -24						; size = 8
_hwndText$ = -16					; size = 4
_floatVal$ = -12					; size = 4
_hwndSlider$ = -8					; size = 4
_sliderVal$ = -4					; size = 4
_hwndParent$ = 8					; size = 4
_controlSlider$ = 12					; size = 4
_controlText$ = 16					; size = 4
?SetSliderText@@YAHPAUHWND__@@HH@Z PROC			; SetSliderText, COMDAT

; 5986 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 5987 :     HWND hwndSlider = GetDlgItem(hwndParent, controlSlider);

	mov	eax, DWORD PTR _controlSlider$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndParent$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSlider$[ebp], eax

; 5988 :     HWND hwndText   = GetDlgItem(hwndParent, controlText);

	mov	edx, DWORD PTR _controlText$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwndParent$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndText$[ebp], eax

; 5989 : 
; 5990 :     int sliderVal = (int)SendMessage(hwndSlider, TBM_GETPOS, 0, 0);

	push	0
	push	0
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _hwndSlider$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _sliderVal$[ebp], eax

; 5991 :     float floatVal = float(sliderVal)*0.01f;

	cvtsi2ss xmm0, DWORD PTR _sliderVal$[ebp]
	mulss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR _floatVal$[ebp], xmm0

; 5992 : 
; 5993 :     SetWindowText(hwndText, FormattedString(TEXT("%.02f"), floatVal));

	cvtss2sd xmm0, DWORD PTR _floatVal$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG4294712347
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _hwndText$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 5994 : 
; 5995 :     return sliderVal;

	mov	eax, DWORD PTR _sliderVal$[ebp]

; 5996 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetSliderText@@YAHPAUHWND__@@HH@Z ENDP			; SetSliderText
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GetNewSourceName@OBS@@CAXAAVString@@@Z
_TEXT	SEGMENT
$T1 = -28						; size = 8
_strTestName$2 = -20					; size = 8
_num$3 = -12						; size = 4
_sources$4 = -8						; size = 4
_sceneElement$ = -4					; size = 4
_strSource$ = 8						; size = 4
?GetNewSourceName@OBS@@CAXAAVString@@@Z PROC		; OBS::GetNewSourceName, COMDAT

; 382  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 383  :     XElement *sceneElement = API->GetSceneElement();

	mov	eax, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	mov	DWORD PTR _sceneElement$[ebp], eax

; 384  :     if(sceneElement)

	cmp	DWORD PTR _sceneElement$[ebp], 0
	je	$LN5@GetNewSour

; 385  :     {
; 386  :         XElement *sources = sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712770
	mov	ecx, DWORD PTR _sceneElement$[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sources$4[ebp], eax

; 387  :         if(!sources)

	cmp	DWORD PTR _sources$4[ebp], 0
	jne	SHORT $LN3@GetNewSour

; 388  :             sources = sceneElement->CreateElement(TEXT("sources"));

	push	OFFSET $SG4294712769
	mov	ecx, DWORD PTR _sceneElement$[ebp]
	call	DWORD PTR __imp_?CreateElement@XElement@@QAEPAV1@PB_W@Z
	mov	DWORD PTR _sources$4[ebp], eax
$LN3@GetNewSour:

; 389  : 
; 390  :         String strTestName = strSource;

	mov	eax, DWORD PTR _strSource$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z

; 391  : 
; 392  :         UINT num = 1;

	mov	DWORD PTR _num$3[ebp], 1
$LN2@GetNewSour:

; 393  :         while(sources->GetElement(strTestName) != NULL)

	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _sources$4[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	test	eax, eax
	je	SHORT $LN1@GetNewSour

; 394  :             strTestName.Clear() << strSource << FormattedString(TEXT(" %u"), ++num);

	mov	ecx, DWORD PTR _num$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _num$3[ebp], ecx
	mov	edx, DWORD PTR _num$3[ebp]
	push	edx
	push	OFFSET $SG4294712768
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _strSource$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_?Clear@String@@QAEAAV1@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN2@GetNewSour
$LN1@GetNewSour:

; 395  : 
; 396  :         strSource = strTestName;

	lea	edx, DWORD PTR _strTestName$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _strSource$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 397  :     }

	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN5@GetNewSour:

; 398  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNewSourceName@OBS@@CAXAAVString@@@Z ENDP		; OBS::GetNewSourceName
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?EnterSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_strExists$1 = -40					; size = 8
_str$2 = -32						; size = 8
_strOut$3 = -24						; size = 4
_strOut$4 = -20						; size = 4
_foundSource$5 = -16					; size = 4
tv81 = -12						; size = 4
tv64 = -8						; size = 4
_sources$6 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?EnterSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC ; OBS::EnterSourceNameDialogProc, COMDAT

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 192  :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN10@EnterSourc
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN9@EnterSourc
	jmp	$LN11@EnterSourc
$LN10@EnterSourc:

; 193  :     {
; 194  :         case WM_INITDIALOG:
; 195  :             {
; 196  :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 197  :                 LocalizeWindow(hwnd);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 198  : 
; 199  :                 String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$3[ebp], eax

; 200  :                 SetWindowText(GetDlgItem(hwnd, IDC_NAME), strOut);

	mov	ecx, DWORD PTR _strOut$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1048					; 00000418H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 201  : 
; 202  :                 //SetFocus(GetDlgItem(hwnd, IDC_NAME));
; 203  :                 return TRUE;

	mov	eax, 1
	jmp	$LN13@EnterSourc
$LN9@EnterSourc:

; 204  :             }
; 205  : 
; 206  :         case WM_COMMAND:
; 207  :             switch(LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN6@EnterSourc
	cmp	DWORD PTR tv81[ebp], 2
	je	$LN1@EnterSourc
	jmp	$LN11@EnterSourc
$LN6@EnterSourc:

; 208  :             {
; 209  :                 case IDOK:
; 210  :                     {
; 211  :                         String str;

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 212  :                         str.SetLength((UINT)SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXTLENGTH, 0, 0));

	push	0
	push	0
	push	14					; 0000000eH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 213  :                         if(!str.Length())

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN5@EnterSourc

; 214  :                         {
; 215  :                             OBSMessageBox(hwnd, Str("EnterName"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712783
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 216  :                             break;

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN11@EnterSourc
$LN5@EnterSourc:

; 217  :                         }
; 218  : 
; 219  :                         SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXT, str.Length()+1, (LPARAM)str.Array());

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 220  : 
; 221  :                         String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$4[ebp], eax

; 222  : 
; 223  :                         if(App->sceneElement)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+212], 0
	je	$LN4@EnterSourc

; 224  :                         {
; 225  :                             XElement *sources = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712782
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sources$6[ebp], eax

; 226  :                             if(!sources)

	cmp	DWORD PTR _sources$6[ebp], 0
	jne	SHORT $LN3@EnterSourc

; 227  :                                 sources = App->sceneElement->CreateElement(TEXT("sources"));

	push	OFFSET $SG4294712781
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+212]
	call	DWORD PTR __imp_?CreateElement@XElement@@QAEPAV1@PB_W@Z
	mov	DWORD PTR _sources$6[ebp], eax
$LN3@EnterSourc:

; 228  : 
; 229  :                             XElement *foundSource = sources->GetElement(str);

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _sources$6[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _foundSource$5[ebp], eax

; 230  :                             if(foundSource != NULL && strOut != foundSource->GetName())

	cmp	DWORD PTR _foundSource$5[ebp], 0
	je	SHORT $LN4@EnterSourc
	mov	ecx, DWORD PTR _foundSource$5[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _strOut$4[ebp]
	call	DWORD PTR __imp_??9String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN4@EnterSourc

; 231  :                             {
; 232  :                                 String strExists = Str("NameExists");

	push	OFFSET $SG4294712780
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 233  :                                 strExists.FindReplace(TEXT("$1"), str);

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712779
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 234  :                                 OBSMessageBox(hwnd, strExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 235  :                                 break;

	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN11@EnterSourc
$LN4@EnterSourc:

; 236  :                             }
; 237  :                         }
; 238  : 
; 239  :                         strOut = str;

	lea	edx, DWORD PTR _str$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _strOut$4[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 240  :                     }

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@EnterSourc:

; 241  : 
; 242  :                 case IDCANCEL:
; 243  :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	eax, WORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
$LN11@EnterSourc:

; 244  :                     break;
; 245  :             }
; 246  :     }
; 247  : 
; 248  :     return 0;

	xor	eax, eax
$LN13@EnterSourc:

; 249  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnterSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP ; OBS::EnterSourceNameDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ListboxHook@OBS@@CGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
__macro_lvi$1 = -620					; size = 60
__macro_lvi$2 = -560					; size = 60
__macro_lvi$3 = -500					; size = 60
$T4 = -440						; size = 8
$T5 = -432						; size = 8
_sourceClassName$6 = -424				; size = 8
$T7 = -416						; size = 8
_sourceClassName$8 = -408				; size = 8
_sourceClassName$9 = -400				; size = 8
$T10 = -392						; size = 8
$T11 = -384						; size = 8
_numSources$12 = -376					; size = 4
_classID$13 = -372					; size = 4
$T14 = -368						; size = 4
_sourceElement$15 = -364				; size = 4
_ret$16 = -360						; size = 4
_classID$17 = -356					; size = 4
$T18 = -352						; size = 4
_currentSceneCollection$19 = -348			; size = 4
_classID$20 = -344					; size = 4
_newID$21 = -340					; size = 4
_numSources$22 = -336					; size = 4
_hdc$ = -332						; size = 4
_lpName$23 = -328					; size = 4
_numSources$24 = -324					; size = 4
tv1269 = -320						; size = 4
_selectedSceneItems$25 = -316				; size = 8
_newID$26 = -308					; size = 4
_strCopied$27 = -304					; size = 8
$T28 = -296						; size = 4
_strGsExists$29 = -292					; size = 8
_newGlobalSources$30 = -284				; size = 4
_strExists$31 = -280					; size = 8
$T32 = -272						; size = 4
_strAdd$33 = -268					; size = 8
$T34 = -260						; size = 4
_bgpath$35 = -256					; size = 8
_curSceneElement$36 = -248				; size = 4
_p$37 = -244						; size = 8
_strName$38 = -236					; size = 8
tv285 = -228						; size = 4
_hotkeyInfo$39 = -224					; size = 12
_hotkey$40 = -212					; size = 4
tv265 = -208						; size = 4
_strScenesCopyToConfig$41 = -204			; size = 8
_scenes$42 = -196					; size = 4
_sourceElement$43 = -192				; size = 4
_sourceElement$44 = -188				; size = 4
_foundGlobalSource$45 = -184				; size = 4
_data$46 = -180						; size = 4
_scenes$47 = -176					; size = 4
_foundGlobalSource$48 = -172				; size = 4
_strName$49 = -168					; size = 8
_strName$50 = -160					; size = 8
_newSceneElement$51 = -152				; size = 4
_sceneCollectionList$52 = -148				; size = 8
_newSceneSourcesGsRefCheck$53 = -140			; size = 4
_ci$54 = -136						; size = 4
_newSceneSources$55 = -132				; size = 4
_prevHotkey$56 = -128					; size = 4
$T57 = -124						; size = 4
_ci$58 = -120						; size = 4
tv331 = -116						; size = 4
_i$59 = -112						; size = 4
_newSceneElement$60 = -108				; size = 4
_newSceneElement$61 = -104				; size = 4
_newSceneSources$62 = -100				; size = 4
_index$63 = -96						; size = 4
_i$64 = -92						; size = 4
_i$65 = -88						; size = 4
_i$66 = -84						; size = 4
_importGlobalSources$67 = -80				; size = 4
_copyToSceneCollection$68 = -76				; size = 4
_i$69 = -72						; size = 4
_ret$70 = -68						; size = 4
_selectedScene$71 = -64					; size = 4
_curClassInfo$72 = -60					; size = 4
_hMenu$73 = -56						; size = 4
_globalSourceName$74 = -52				; size = 4
_id$ = -48						; size = 4
_globalSourceRefCheck$75 = -43				; size = 1
_bSelected$76 = -42					; size = 1
_bDelete$77 = -41					; size = 1
_numItems$78 = -40					; size = 4
_item$79 = -36						; size = 4
_curSel$80 = -32					; size = 4
_htInfo$81 = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?ListboxHook@OBS@@CGJPAUHWND__@@IIJ@Z PROC		; OBS::ListboxHook, COMDAT

; 427  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 620				; 0000026cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi

; 428  :     UINT id = (UINT)GetWindowLongPtr(hwnd, GWL_ID);

	push	-12					; fffffff4H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _id$[ebp], eax

; 429  : 	
; 430  : 	HDC         hdc;
; 431  : 	if (id == ID_SCENES)

	cmp	DWORD PTR _id$[ebp], 5011		; 00001393H
	jne	$LN103@ListboxHoo

; 432  : 	{
; 433  : 
; 434  : 		if (message == WM_ERASEBKGND)

	cmp	DWORD PTR _message$[ebp], 20		; 00000014H
	jne	$LN103@ListboxHoo

; 435  : 		{
; 436  : 			hdc = GetDC(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _hdc$[ebp], eax

; 437  : 			String bgpath;

	lea	ecx, DWORD PTR _bgpath$35[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 438  : 			bgpath << lpAppPath << "\\skin\\TAB.png";

	push	OFFSET $SG4294712766
	lea	ecx, DWORD PTR $T11[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	edx, DWORD PTR $T11[ebp]
	push	edx
	push	OFFSET ?lpAppPath@@3PA_WA		; lpAppPath
	lea	ecx, DWORD PTR _bgpath$35[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T11[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 439  : 			SetBackground(hwnd, bgpath.Array(), hdc, FALSE);

	push	0
	push	0
	mov	eax, DWORD PTR _hdc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bgpath$35[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	?SetBackground@@YAXPAUHWND__@@PB_WPAUHDC__@@H1@Z ; SetBackground
	add	esp, 20					; 00000014H

; 440  : 			return TRUE;

	mov	DWORD PTR $T14[ebp], 1
	lea	ecx, DWORD PTR _bgpath$35[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR $T14[ebp]
	jmp	$LN105@ListboxHoo
$LN103@ListboxHoo:

; 441  : 		}
; 442  : 	}
; 443  : 
; 444  :     if(message == WM_RBUTTONDOWN)

	cmp	DWORD PTR _message$[ebp], 516		; 00000204H
	jne	$LN101@ListboxHoo

; 445  :     {
; 446  :         int numItems = 0;

	mov	DWORD PTR _numItems$78[ebp], 0

; 447  :         if(id == ID_SCENES)

	cmp	DWORD PTR _id$[ebp], 5011		; 00001393H
	jne	SHORT $LN100@ListboxHoo

; 448  :         {
; 449  :             CallWindowProc(listboxProc, hwnd, WM_LBUTTONDOWN, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	push	513					; 00000201H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?listboxProc@@3P6GJPAUHWND__@@IIJ@ZA ; listboxProc
	push	edx
	call	DWORD PTR __imp__CallWindowProcW@20

; 450  :             numItems = (int)SendMessage(hwnd, LB_GETCOUNT, 0, 0);

	push	0
	push	0
	push	395					; 0000018bH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$78[ebp], eax

; 451  :         }
; 452  :         else

	jmp	$LN99@ListboxHoo
$LN100@ListboxHoo:

; 453  :         {
; 454  :             LVHITTESTINFO htInfo;
; 455  :             int index;
; 456  : 
; 457  :             // Default behaviour of left/right click is to check/uncheck, we do not want to toggle items when right clicking above checkbox.
; 458  : 
; 459  :             numItems = ListView_GetItemCount(hwnd);

	push	0
	push	0
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$78[ebp], eax

; 460  : 
; 461  :             GetCursorPos(&htInfo.pt);

	lea	edx, DWORD PTR _htInfo$81[ebp]
	push	edx
	call	DWORD PTR __imp__GetCursorPos@4

; 462  :             ScreenToClient(hwnd, &htInfo.pt);

	lea	eax, DWORD PTR _htInfo$81[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ScreenToClient@8

; 463  : 
; 464  :             index = ListView_HitTestEx(hwnd, &htInfo);

	lea	edx, DWORD PTR _htInfo$81[ebp]
	push	edx
	push	-1
	push	4114					; 00001012H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _index$63[ebp], eax

; 465  : 
; 466  :             if(index != -1)

	cmp	DWORD PTR _index$63[ebp], -1
	je	$LN98@ListboxHoo

; 467  :             {
; 468  :                 // Focus our control
; 469  :                 if(GetFocus() != hwnd)

	call	DWORD PTR __imp__GetFocus@0
	cmp	eax, DWORD PTR _hwnd$[ebp]
	je	SHORT $LN97@ListboxHoo

; 470  :                     SetFocus(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
$LN97@ListboxHoo:

; 471  :                 
; 472  :                 // Clear all selected items state and select/focus the item we've right-clicked if it wasn't previously selected.
; 473  :                 if(!(ListView_GetItemState(hwnd, index, LVIS_SELECTED) & LVIS_SELECTED))

	push	2
	mov	edx, DWORD PTR _index$63[ebp]
	push	edx
	push	4140					; 0000102cH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	and	eax, 2
	jne	SHORT $LN96@ListboxHoo

; 474  :                 {
; 475  :                     ListView_SetItemState(hwnd , -1 , 0, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$2[ebp+16], 3
	mov	DWORD PTR __macro_lvi$2[ebp+12], 0
	lea	ecx, DWORD PTR __macro_lvi$2[ebp]
	push	ecx
	push	-1
	push	4139					; 0000102bH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 476  :                 
; 477  :                     ListView_SetItemState(hwnd, index, LVIS_SELECTED | LVIS_FOCUSED, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$3[ebp+16], 3
	mov	DWORD PTR __macro_lvi$3[ebp+12], 3
	lea	eax, DWORD PTR __macro_lvi$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$63[ebp]
	push	ecx
	push	4139					; 0000102bH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 478  : 
; 479  :                     ListView_SetSelectionMark(hwnd, index);

	mov	eax, DWORD PTR _index$63[ebp]
	push	eax
	push	0
	push	4163					; 00001043H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN96@ListboxHoo:

; 480  :                 }
; 481  :             }
; 482  :             else

	jmp	SHORT $LN99@ListboxHoo
$LN98@ListboxHoo:

; 483  :             {
; 484  :                 ListView_SetItemState(hwnd , -1 , 0, LVIS_SELECTED | LVIS_FOCUSED)

	mov	DWORD PTR __macro_lvi$1[ebp+16], 3
	mov	DWORD PTR __macro_lvi$1[ebp+12], 0
	lea	edx, DWORD PTR __macro_lvi$1[ebp]
	push	edx
	push	-1
	push	4139					; 0000102bH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 485  :                 CallWindowProc(listviewProc, hwnd, WM_RBUTTONDOWN, wParam, lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	516					; 00000204H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?listviewProc@@3P6GJPAUHWND__@@IIJ@ZA ; listviewProc
	push	ecx
	call	DWORD PTR __imp__CallWindowProcW@20
$LN99@ListboxHoo:

; 486  :             }
; 487  :         }
; 488  : 
; 489  :         HMENU hMenu = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hMenu$73[ebp], eax

; 490  : 
; 491  :         bool bSelected = true;

	mov	BYTE PTR _bSelected$76[ebp], 1

; 492  : 
; 493  :         if(id == ID_SCENES)

	cmp	DWORD PTR _id$[ebp], 5011		; 00001393H
	jne	$LN94@ListboxHoo

; 494  :         {
; 495  :             SendMessage(hwndMain, WM_COMMAND, MAKEWPARAM(ID_SCENES, LBN_SELCHANGE), (LPARAM)GetDlgItem(hwndMain, ID_SCENES));

	push	5011					; 00001393H
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	push	70547					; 00011393H
	push	273					; 00000111H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 496  : 
; 497  :             for(UINT i=0; i<App->sceneClasses.Num(); i++)

	mov	DWORD PTR _i$69[ebp], 0
	jmp	SHORT $LN93@ListboxHoo
$LN92@ListboxHoo:
	mov	ecx, DWORD PTR _i$69[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$69[ebp], ecx
$LN93@ListboxHoo:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1360				; 00000550H
	call	?Num@?$List@UClassInfo@@@@QBEIXZ	; List<ClassInfo>::Num
	cmp	DWORD PTR _i$69[ebp], eax
	jae	$LN91@ListboxHoo

; 498  :             {
; 499  :                 if (App->sceneClasses[i].bDeprecated)

	mov	edx, DWORD PTR _i$69[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1360				; 00000550H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	movzx	eax, BYTE PTR [eax+24]
	test	eax, eax
	je	SHORT $LN90@ListboxHoo

; 500  :                     continue;

	jmp	SHORT $LN92@ListboxHoo
$LN90@ListboxHoo:

; 501  : 
; 502  :                 String strAdd = Str("Listbox.Add");

	push	OFFSET $SG4294712765
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strAdd$33[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 503  :                 strAdd.FindReplace(TEXT("$1"), App->sceneClasses[i].strName);

	mov	edx, DWORD PTR _i$69[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1360				; 00000550H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	add	eax, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712764
	lea	ecx, DWORD PTR _strAdd$33[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 504  :                 AppendMenu(hMenu, MF_STRING, ID_LISTBOX_ADD+i, strAdd.Array());

	lea	ecx, DWORD PTR _strAdd$33[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _i$69[ebp]
	add	eax, 25					; 00000019H
	push	eax
	push	0
	mov	ecx, DWORD PTR _hMenu$73[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 505  :             }

	lea	ecx, DWORD PTR _strAdd$33[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN92@ListboxHoo
$LN91@ListboxHoo:

; 506  :         }
; 507  :         else if(id == ID_SOURCES)

	jmp	SHORT $LN89@ListboxHoo
$LN94@ListboxHoo:
	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	SHORT $LN89@ListboxHoo

; 508  :         {
; 509  :             if(!App->sceneElement)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+212], 0
	jne	SHORT $LN87@ListboxHoo

; 510  :                 return 0;

	xor	eax, eax
	jmp	$LN105@ListboxHoo
$LN87@ListboxHoo:

; 511  : 
; 512  :             bSelected = ListView_GetSelectedCount(hwnd) != 0;

	push	0
	push	0
	push	4146					; 00001032H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN106@ListboxHoo
	mov	DWORD PTR tv265[ebp], 1
	jmp	SHORT $LN107@ListboxHoo
$LN106@ListboxHoo:
	mov	DWORD PTR tv265[ebp], 0
$LN107@ListboxHoo:
	mov	cl, BYTE PTR tv265[ebp]
	mov	BYTE PTR _bSelected$76[ebp], cl
$LN89@ListboxHoo:

; 513  :         }
; 514  : 
; 515  :         App->AppendModifyListbox(hwnd, hMenu, id, numItems, bSelected);

	movzx	edx, BYTE PTR _bSelected$76[ebp]
	push	edx
	mov	eax, DWORD PTR _numItems$78[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMenu$73[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AppendModifyListbox@OBS@@AAEXPAUHWND__@@PAUHMENU__@@HH_N@Z ; OBS::AppendModifyListbox

; 516  : 
; 517  :         POINT p;
; 518  :         GetCursorPos(&p);

	lea	ecx, DWORD PTR _p$37[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCursorPos@4

; 519  : 
; 520  :         int curSel = (id== ID_SOURCES)?(ListView_GetNextItem(hwnd, -1, LVNI_SELECTED)):((int)SendMessage(hwnd, LB_GETCURSEL, 0, 0));

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	SHORT $LN108@ListboxHoo
	push	2
	push	-1
	push	4108					; 0000100cH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR tv285[ebp], eax
	jmp	SHORT $LN109@ListboxHoo
$LN108@ListboxHoo:
	push	0
	push	0
	push	392					; 00000188H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR tv285[ebp], eax
$LN109@ListboxHoo:
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR _curSel$80[ebp], ecx

; 521  : 
; 522  :         XElement *curSceneElement = App->sceneElement;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+212]
	mov	DWORD PTR _curSceneElement$36[ebp], eax

; 523  : 
; 524  :         if(id == ID_SCENES)

	cmp	DWORD PTR _id$[ebp], 5011		; 00001393H
	jne	$LN86@ListboxHoo

; 525  :         {
; 526  :             XElement *item = App->sceneElement;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+212]
	mov	DWORD PTR _item$79[ebp], edx

; 527  :             if(!item && numItems)

	cmp	DWORD PTR _item$79[ebp], 0
	jne	SHORT $LN85@ListboxHoo
	cmp	DWORD PTR _numItems$78[ebp], 0
	je	SHORT $LN85@ListboxHoo

; 528  :                 return 0;

	xor	eax, eax
	jmp	$LN105@ListboxHoo
$LN85@ListboxHoo:

; 529  : 
; 530  :             ClassInfo *curClassInfo = NULL;

	mov	DWORD PTR _curClassInfo$72[ebp], 0

; 531  :             if(numItems)

	cmp	DWORD PTR _numItems$78[ebp], 0
	je	$LN84@ListboxHoo

; 532  :             {
; 533  :                 curClassInfo = App->GetSceneClass(item->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712763
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetSceneClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetSceneClass
	mov	DWORD PTR _curClassInfo$72[ebp], eax

; 534  :                 if(!curClassInfo)

	cmp	DWORD PTR _curClassInfo$72[ebp], 0
	jne	SHORT $LN83@ListboxHoo

; 535  :                 {
; 536  :                     curSceneElement->AddString(TEXT("class"), TEXT("Scene"));

	push	OFFSET $SG4294712762
	push	OFFSET $SG4294712761
	mov	ecx, DWORD PTR _curSceneElement$36[ebp]
	call	DWORD PTR __imp_?AddString@XElement@@QAEXPB_WPA_W@Z

; 537  :                     curClassInfo = App->GetSceneClass(item->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712760
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetSceneClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetSceneClass
	mov	DWORD PTR _curClassInfo$72[ebp], eax
$LN83@ListboxHoo:

; 538  :                 }
; 539  : 
; 540  :                 if(curClassInfo && curClassInfo->configProc)

	cmp	DWORD PTR _curClassInfo$72[ebp], 0
	je	SHORT $LN84@ListboxHoo
	mov	eax, DWORD PTR _curClassInfo$72[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN84@ListboxHoo

; 541  :                 {
; 542  :                     AppendMenu(hMenu, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _hMenu$73[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 543  :                     AppendMenu(hMenu, MF_STRING, ID_LISTBOX_CONFIG, Str("Listbox.Config"));

	push	OFFSET $SG4294712759
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	19					; 00000013H
	push	0
	mov	eax, DWORD PTR _hMenu$73[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16
$LN84@ListboxHoo:

; 544  :                 }
; 545  :             }
; 546  : 
; 547  :             bool bDelete = false;

	mov	BYTE PTR _bDelete$77[ebp], 0

; 548  : 
; 549  :             int ret = (int)TrackPopupMenuEx(hMenu, TPM_RETURNCMD | TPM_LEFTALIGN | TPM_RIGHTBUTTON, p.x, p.y, hwndMain, NULL);

	push	0
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	mov	edx, DWORD PTR _p$37[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$37[ebp]
	push	eax
	push	258					; 00000102H
	mov	ecx, DWORD PTR _hMenu$73[ebp]
	push	ecx
	call	DWORD PTR __imp__TrackPopupMenuEx@24
	mov	DWORD PTR _ret$70[ebp], eax

; 550  :             switch(ret)

	mov	edx, DWORD PTR _ret$70[ebp]
	mov	DWORD PTR tv331[ebp], edx
	mov	eax, DWORD PTR tv331[ebp]
	sub	eax, 1
	mov	DWORD PTR tv331[ebp], eax
	cmp	DWORD PTR tv331[ebp], 18		; 00000012H
	ja	SHORT $LN79@ListboxHoo
	mov	ecx, DWORD PTR tv331[ebp]
	movzx	edx, BYTE PTR $LN112@ListboxHoo[ecx]
	jmp	DWORD PTR $LN113@ListboxHoo[edx*4]
$LN79@ListboxHoo:

; 551  :             {
; 552  :                 default:
; 553  :                     if(ret >= ID_LISTBOX_ADD && ret < ID_LISTBOX_COPYTO)

	cmp	DWORD PTR _ret$70[ebp], 25		; 00000019H
	jl	$LN78@ListboxHoo
	cmp	DWORD PTR _ret$70[ebp], 7000		; 00001b58H
	jge	$LN78@ListboxHoo

; 554  :                     {
; 555  : 						UINT classID = ret - ID_LISTBOX_ADD;

	mov	eax, DWORD PTR _ret$70[ebp]
	sub	eax, 25					; 00000019H
	mov	DWORD PTR _classID$17[ebp], eax

; 556  : 	
; 557  :                         App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 558  : 
; 559  :                         String strName = Str("Scene");

	push	OFFSET $SG4294712758
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strName$49[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 560  :                         GetNewSceneName(strName);

	lea	edx, DWORD PTR _strName$49[ebp]
	push	edx
	call	?GetNewSceneName@OBS@@CAXAAVString@@@Z	; OBS::GetNewSceneName
	add	esp, 4

; 561  : 						
; 562  :                         if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterSceneNameDialogProc, (LPARAM)&strName) == IDOK)

	lea	eax, DWORD PTR _strName$49[ebp]
	push	eax
	push	OFFSET ?EnterSceneNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSceneNameDialogProc
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	push	122					; 0000007aH
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	$LN77@ListboxHoo

; 563  :                         {
; 564  :                            // UINT classID = ret-ID_LISTBOX_ADD;
; 565  :                             ClassInfo &ci = App->sceneClasses[classID];

	mov	eax, DWORD PTR _classID$17[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1360				; 00000550H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	mov	DWORD PTR _ci$58[ebp], eax

; 566  : 
; 567  :                             XElement *scenes = App->scenesConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712757
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _scenes$47[ebp], eax

; 568  :                             XElement *newSceneElement = scenes->CreateElement(strName);

	lea	ecx, DWORD PTR _strName$49[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _scenes$47[ebp]
	call	DWORD PTR __imp_?CreateElement@XElement@@QAEPAV1@PB_W@Z
	mov	DWORD PTR _newSceneElement$51[ebp], eax

; 569  : 
; 570  :                             newSceneElement->SetString(TEXT("class"), ci.strClass);

	mov	ecx, DWORD PTR _ci$58[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712756
	mov	ecx, DWORD PTR _newSceneElement$51[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 571  :                             if(ci.configProc)

	mov	ecx, DWORD PTR _ci$58[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN76@ListboxHoo

; 572  :                             {
; 573  :                                 if(!ci.configProc(newSceneElement, true))

	push	1
	mov	edx, DWORD PTR _newSceneElement$51[ebp]
	push	edx
	mov	eax, DWORD PTR _ci$58[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN76@ListboxHoo

; 574  :                                 {
; 575  :                                     scenes->RemoveElement(newSceneElement);

	mov	eax, DWORD PTR _newSceneElement$51[ebp]
	push	eax
	mov	ecx, DWORD PTR _scenes$47[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z

; 576  :                                     break;

	lea	ecx, DWORD PTR _strName$49[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN80@ListboxHoo
$LN76@ListboxHoo:

; 577  :                                 }
; 578  :                             }
; 579  :                             
; 580  :                             UINT newID = (UINT)SendMessage(hwnd, LB_ADDSTRING, 0, (LPARAM)strName.Array());

	lea	ecx, DWORD PTR _strName$49[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	384					; 00000180H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _newID$21[ebp], eax

; 581  :                             PostMessage(hwnd, LB_SETCURSEL, newID, 0);

	push	0
	mov	edx, DWORD PTR _newID$21[ebp]
	push	edx
	push	390					; 00000186H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__PostMessageW@16

; 582  :                             PostMessage(hwndMain, WM_COMMAND, MAKEWPARAM(ID_SCENES, LBN_SELCHANGE), (LPARAM)hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	70547					; 00011393H
	push	273					; 00000111H
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp__PostMessageW@16

; 583  :                             App->ReportScenesChanged();

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+120]
	call	eax
$LN77@ListboxHoo:

; 584  :                         }
; 585  : 
; 586  :                         App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 587  :                     }

	lea	ecx, DWORD PTR _strName$49[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN78@ListboxHoo:

; 588  : 
; 589  :                     if(ret >= ID_LISTBOX_COPYTO)

	cmp	DWORD PTR _ret$70[ebp], 7000		; 00001b58H
	jl	$LN74@ListboxHoo

; 590  :                     {
; 591  :                         App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 592  : 
; 593  :                         StringList sceneCollectionList;

	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 594  :                         App->GetSceneCollection(sceneCollectionList);

	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	push	ecx
	call	?GetSceneCollection@OBS@@SAXAAVStringList@@@Z ; OBS::GetSceneCollection
	add	esp, 4

; 595  : 
; 596  :                         for(UINT i = 0; i < sceneCollectionList.Num(); i++)

	mov	DWORD PTR _i$66[ebp], 0
	jmp	SHORT $LN73@ListboxHoo
$LN72@ListboxHoo:
	mov	edx, DWORD PTR _i$66[ebp]
	add	edx, 1
	mov	DWORD PTR _i$66[ebp], edx
$LN73@ListboxHoo:
	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	DWORD PTR _i$66[ebp], eax
	jae	SHORT $LN71@ListboxHoo

; 597  :                         {
; 598  :                             if(sceneCollectionList[i] == App->GetCurrentSceneCollection())

	call	?GetCurrentSceneCollection@OBS@@SAPB_WXZ ; OBS::GetCurrentSceneCollection
	push	eax
	mov	eax, DWORD PTR _i$66[ebp]
	push	eax
	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN70@ListboxHoo

; 599  :                             {
; 600  :                                 sceneCollectionList.Remove(i);

	mov	ecx, DWORD PTR _i$66[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	call	DWORD PTR __imp_?Remove@StringList@@QAEXI@Z
$LN70@ListboxHoo:

; 601  :                             }
; 602  :                         }

	jmp	SHORT $LN72@ListboxHoo
$LN71@ListboxHoo:

; 603  : 
; 604  :                         UINT classID = ret - ID_LISTBOX_COPYTO;

	mov	edx, DWORD PTR _ret$70[ebp]
	sub	edx, 7000				; 00001b58H
	mov	DWORD PTR _classID$13[ebp], edx

; 605  : 
; 606  :                         String strScenesCopyToConfig;

	lea	ecx, DWORD PTR _strScenesCopyToConfig$41[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 607  :                         strScenesCopyToConfig = FormattedString(L"%s\\sceneCollection\\%s.xconfig", lpAppDataPath, sceneCollectionList[classID].Array());

	mov	eax, DWORD PTR _classID$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	push	OFFSET $SG4294712755
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _strScenesCopyToConfig$41[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 608  : 
; 609  :                         if(!App->scenesCopyToConfig.Open(strScenesCopyToConfig))

	lea	ecx, DWORD PTR _strScenesCopyToConfig$41[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_?Open@XConfig@@QAE_NPB_W@Z
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN69@ListboxHoo

; 610  :                             CrashError(TEXT("Could not open '%s"), strScenesCopyToConfig.Array());

	lea	ecx, DWORD PTR _strScenesCopyToConfig$41[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712754
	call	DWORD PTR __imp_?CrashError@@YAXPB_WZZ
$LN69@ListboxHoo:

; 611  : 
; 612  :                         XElement *currentSceneCollection = App->scenesConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712753
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _currentSceneCollection$19[ebp], eax

; 613  : 
; 614  :                         XElement *selectedScene = currentSceneCollection->GetElementByID(curSel);

	mov	eax, DWORD PTR _curSel$80[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentSceneCollection$19[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _selectedScene$71[ebp], eax

; 615  :                         XElement *copyToSceneCollection = App->scenesCopyToConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712752
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _copyToSceneCollection$68[ebp], eax

; 616  : 
; 617  :                         if(!copyToSceneCollection)

	cmp	DWORD PTR _copyToSceneCollection$68[ebp], 0
	jne	SHORT $LN68@ListboxHoo

; 618  :                             copyToSceneCollection = App->scenesCopyToConfig.CreateElement(TEXT("scenes"));

	push	OFFSET $SG4294712751
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_?CreateElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _copyToSceneCollection$68[ebp], eax
$LN68@ListboxHoo:

; 619  : 
; 620  :                         if(copyToSceneCollection)

	cmp	DWORD PTR _copyToSceneCollection$68[ebp], 0
	je	$LN67@ListboxHoo

; 621  :                         {
; 622  :                             XElement *foundGlobalSource = copyToSceneCollection->GetElement(selectedScene->GetName());

	mov	ecx, DWORD PTR _selectedScene$71[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _copyToSceneCollection$68[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _foundGlobalSource$45[ebp], eax

; 623  :                             if(foundGlobalSource != NULL && selectedScene->GetName() != foundGlobalSource->GetName())

	cmp	DWORD PTR _foundGlobalSource$45[ebp], 0
	je	$LN67@ListboxHoo
	mov	ecx, DWORD PTR _selectedScene$71[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _foundGlobalSource$45[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	cmp	esi, eax
	je	$LN67@ListboxHoo

; 624  :                             {
; 625  :                                 App->scenesCopyToConfig.Close();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_?Close@XConfig@@QAEX_N@Z

; 626  :                                 App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 627  :                                 String strExists = Str("CopyTo.SceneNameExists");

	push	OFFSET $SG4294712750
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strExists$31[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 628  :                                 strExists.FindReplace(TEXT("$1"), selectedScene->GetName());

	mov	ecx, DWORD PTR _selectedScene$71[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	OFFSET $SG4294712749
	lea	ecx, DWORD PTR _strExists$31[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 629  :                                 OBSMessageBox(hwnd, strExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strExists$31[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 630  :                                 break;

	lea	ecx, DWORD PTR _strExists$31[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strScenesCopyToConfig$41[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
	jmp	$LN80@ListboxHoo
$LN67@ListboxHoo:

; 631  :                             }
; 632  :                         }
; 633  : 
; 634  :                         XElement *newSceneElement = copyToSceneCollection->CopyElement(selectedScene, selectedScene->GetName());

	mov	ecx, DWORD PTR _selectedScene$71[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	eax, DWORD PTR _selectedScene$71[ebp]
	push	eax
	mov	ecx, DWORD PTR _copyToSceneCollection$68[ebp]
	call	DWORD PTR __imp_?CopyElement@XElement@@QAEPAV1@PAV1@PB_W@Z
	mov	DWORD PTR _newSceneElement$61[ebp], eax

; 635  :                         newSceneElement->SetString(TEXT("class"), selectedScene->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712748
	mov	ecx, DWORD PTR _selectedScene$71[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	push	OFFSET $SG4294712747
	mov	ecx, DWORD PTR _newSceneElement$61[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 636  : 
; 637  :                         bool globalSourceRefCheck = false;

	mov	BYTE PTR _globalSourceRefCheck$75[ebp], 0

; 638  : 
; 639  :                         XElement *newSceneSourcesGsRefCheck = newSceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712746
	mov	ecx, DWORD PTR _newSceneElement$61[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _newSceneSourcesGsRefCheck$53[ebp], eax

; 640  : 
; 641  :                         if(newSceneSourcesGsRefCheck)

	cmp	DWORD PTR _newSceneSourcesGsRefCheck$53[ebp], 0
	je	$LN65@ListboxHoo

; 642  :                         {
; 643  :                             UINT numSources = newSceneSourcesGsRefCheck->NumElements();

	push	0
	mov	ecx, DWORD PTR _newSceneSourcesGsRefCheck$53[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$12[ebp], eax

; 644  : 
; 645  :                             for(int i = int(numSources - 1); i >= 0; i--)

	mov	ecx, DWORD PTR _numSources$12[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$65[ebp], ecx
	jmp	SHORT $LN64@ListboxHoo
$LN63@ListboxHoo:
	mov	edx, DWORD PTR _i$65[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$65[ebp], edx
$LN64@ListboxHoo:
	cmp	DWORD PTR _i$65[ebp], 0
	jl	$LN65@ListboxHoo

; 646  :                             {
; 647  :                                 XElement *sourceElement = newSceneSourcesGsRefCheck->GetElementByID(i);

	mov	eax, DWORD PTR _i$65[ebp]
	push	eax
	mov	ecx, DWORD PTR _newSceneSourcesGsRefCheck$53[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sourceElement$15[ebp], eax

; 648  :                                 String sourceClassName = sourceElement->GetString(TEXT("class"));

	push	0
	push	OFFSET $SG4294712745
	mov	ecx, DWORD PTR _sourceElement$15[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _sourceClassName$6[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 649  : 
; 650  :                                 if(sourceClassName == "GlobalSource")

	push	OFFSET $SG4294712744
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sourceClassName$6[ebp]
	call	DWORD PTR __imp_??8String@@QBEHABV0@@Z
	mov	DWORD PTR $T34[ebp], eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T34[ebp], 0
	je	SHORT $LN61@ListboxHoo

; 651  :                                 {
; 652  :                                  globalSourceRefCheck = true;

	mov	BYTE PTR _globalSourceRefCheck$75[ebp], 1
$LN61@ListboxHoo:

; 653  :                                 }
; 654  :                             }

	lea	ecx, DWORD PTR _sourceClassName$6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN63@ListboxHoo
$LN65@ListboxHoo:

; 655  :                         }
; 656  : 
; 657  :                         if(globalSourceRefCheck)

	movzx	edx, BYTE PTR _globalSourceRefCheck$75[ebp]
	test	edx, edx
	je	$LN60@ListboxHoo

; 658  :                         {
; 659  :                             if(OBSMessageBox(hwndMain, Str("CopyTo.CopyGlobalSourcesReferences"), Str("CopyTo.CopyGlobalSourcesReferences.Title"), MB_YESNO) == IDYES)

	push	4
	push	OFFSET $SG4294712743
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712742
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	$LN59@ListboxHoo

; 660  :                             {
; 661  :                                 XElement *newSceneSources = newSceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712741
	mov	ecx, DWORD PTR _newSceneElement$61[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _newSceneSources$55[ebp], eax

; 662  : 
; 663  :                                 if(newSceneSources)

	cmp	DWORD PTR _newSceneSources$55[ebp], 0
	je	$LN58@ListboxHoo

; 664  :                                 {
; 665  :                                     UINT numSources = newSceneSources->NumElements();

	push	0
	mov	ecx, DWORD PTR _newSceneSources$55[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$24[ebp], eax

; 666  : 
; 667  :                                     for(int i = int(numSources - 1); i >= 0; i--)

	mov	eax, DWORD PTR _numSources$24[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$59[ebp], eax
	jmp	SHORT $LN57@ListboxHoo
$LN56@ListboxHoo:
	mov	ecx, DWORD PTR _i$59[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$59[ebp], ecx
$LN57@ListboxHoo:
	cmp	DWORD PTR _i$59[ebp], 0
	jl	$LN58@ListboxHoo

; 668  :                                     {
; 669  :                                         XElement *sourceElement = newSceneSources->GetElementByID(i);

	mov	edx, DWORD PTR _i$59[ebp]
	push	edx
	mov	ecx, DWORD PTR _newSceneSources$55[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sourceElement$43[ebp], eax

; 670  :                                         String sourceClassName = sourceElement->GetString(TEXT("class"));

	push	0
	push	OFFSET $SG4294712740
	mov	ecx, DWORD PTR _sourceElement$43[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _sourceClassName$8[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 671  : 
; 672  :                                         if(sourceClassName == "GlobalSource")

	push	OFFSET $SG4294712739
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	ecx, DWORD PTR _sourceClassName$8[ebp]
	call	DWORD PTR __imp_??8String@@QBEHABV0@@Z
	mov	DWORD PTR $T32[ebp], eax
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T32[ebp], 0
	je	$LN54@ListboxHoo

; 673  :                                         {
; 674  :                                             XElement *data = sourceElement->GetElement(TEXT("data"));

	push	OFFSET $SG4294712738
	mov	ecx, DWORD PTR _sourceElement$43[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _data$46[ebp], eax

; 675  :                                             if(data)

	cmp	DWORD PTR _data$46[ebp], 0
	je	$LN54@ListboxHoo

; 676  :                                             {
; 677  :                                                 CTSTR lpName = data->GetString(TEXT("name"));

	push	0
	push	OFFSET $SG4294712737
	mov	ecx, DWORD PTR _data$46[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _lpName$23[ebp], eax

; 678  :                                                 XElement *globalSourceName = App->GetGlobalSourceElement(lpName);

	mov	ecx, DWORD PTR _lpName$23[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSourceElement@OBS@@AAEPAVXElement@@PB_W@Z ; OBS::GetGlobalSourceElement
	mov	DWORD PTR _globalSourceName$74[ebp], eax

; 679  :                                                 if(globalSourceName)

	cmp	DWORD PTR _globalSourceName$74[ebp], 0
	je	$LN54@ListboxHoo

; 680  :                                                 {
; 681  :                                                     XElement *importGlobalSources = App->scenesCopyToConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712736
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _importGlobalSources$67[ebp], eax

; 682  : 
; 683  :                                                     if(!importGlobalSources)

	cmp	DWORD PTR _importGlobalSources$67[ebp], 0
	jne	SHORT $LN51@ListboxHoo

; 684  :                                                        importGlobalSources = App->scenesCopyToConfig.CreateElement(TEXT("global sources"));

	push	OFFSET $SG4294712735
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_?CreateElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _importGlobalSources$67[ebp], eax
$LN51@ListboxHoo:

; 685  : 
; 686  :                                                     if(importGlobalSources)

	cmp	DWORD PTR _importGlobalSources$67[ebp], 0
	je	$LN54@ListboxHoo

; 687  :                                                     {
; 688  :                                                         XElement *foundGlobalSource = importGlobalSources->GetElement(globalSourceName->GetName());

	mov	ecx, DWORD PTR _globalSourceName$74[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _importGlobalSources$67[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _foundGlobalSource$48[ebp], eax

; 689  :                                                         if(foundGlobalSource != NULL && globalSourceName->GetName() != foundGlobalSource->GetName())

	cmp	DWORD PTR _foundGlobalSource$48[ebp], 0
	je	$LN49@ListboxHoo
	mov	ecx, DWORD PTR _globalSourceName$74[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _foundGlobalSource$48[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	cmp	esi, eax
	je	SHORT $LN49@ListboxHoo

; 690  :                                                         {
; 691  :                                                             String strGsExists = Str("CopyTo.GlobalSourcesExists");

	push	OFFSET $SG4294712734
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strGsExists$29[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 692  :                                                             strGsExists.FindReplace(TEXT("$1"), globalSourceName->GetName());

	mov	ecx, DWORD PTR _globalSourceName$74[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	OFFSET $SG4294712733
	lea	ecx, DWORD PTR _strGsExists$29[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 693  :                                                             OBSMessageBox(hwnd, strGsExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strGsExists$29[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 694  :                                                         }

	lea	ecx, DWORD PTR _strGsExists$29[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 695  :                                                         else

	jmp	SHORT $LN54@ListboxHoo
$LN49@ListboxHoo:

; 696  :                                                         {
; 697  :                                                             XElement *newGlobalSources = importGlobalSources->CopyElement(globalSourceName, globalSourceName->GetName());

	mov	ecx, DWORD PTR _globalSourceName$74[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _globalSourceName$74[ebp]
	push	ecx
	mov	ecx, DWORD PTR _importGlobalSources$67[ebp]
	call	DWORD PTR __imp_?CopyElement@XElement@@QAEPAV1@PAV1@PB_W@Z
	mov	DWORD PTR _newGlobalSources$30[ebp], eax

; 698  :                                                             newGlobalSources->SetString(TEXT("class"), globalSourceName->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712732
	mov	ecx, DWORD PTR _globalSourceName$74[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	push	OFFSET $SG4294712731
	mov	ecx, DWORD PTR _newGlobalSources$30[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z
$LN54@ListboxHoo:

; 699  :                                                         }
; 700  :                                                     }
; 701  :                                                 }
; 702  :                                             }
; 703  :                                         }
; 704  :                                     }

	lea	ecx, DWORD PTR _sourceClassName$8[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN56@ListboxHoo
$LN58@ListboxHoo:

; 705  :                                 }
; 706  :                             }
; 707  :                             else

	jmp	$LN60@ListboxHoo
$LN59@ListboxHoo:

; 708  :                             {
; 709  :                                 XElement *newSceneSources = newSceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712730
	mov	ecx, DWORD PTR _newSceneElement$61[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _newSceneSources$62[ebp], eax

; 710  : 
; 711  :                                 if(newSceneSources)

	cmp	DWORD PTR _newSceneSources$62[ebp], 0
	je	$LN60@ListboxHoo

; 712  :                                 {
; 713  :                                     UINT numSources = newSceneSources->NumElements();

	push	0
	mov	ecx, DWORD PTR _newSceneSources$62[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$22[ebp], eax

; 714  : 
; 715  :                                     for(int i = int(numSources - 1); i >= 0; i--)

	mov	edx, DWORD PTR _numSources$22[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$64[ebp], edx
	jmp	SHORT $LN45@ListboxHoo
$LN44@ListboxHoo:
	mov	eax, DWORD PTR _i$64[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$64[ebp], eax
$LN45@ListboxHoo:
	cmp	DWORD PTR _i$64[ebp], 0
	jl	$LN60@ListboxHoo

; 716  :                                     {
; 717  :                                         XElement *sourceElement = newSceneSources->GetElementByID(i);

	mov	ecx, DWORD PTR _i$64[ebp]
	push	ecx
	mov	ecx, DWORD PTR _newSceneSources$62[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sourceElement$44[ebp], eax

; 718  :                                         String sourceClassName = sourceElement->GetString(TEXT("class"));

	push	0
	push	OFFSET $SG4294712729
	mov	ecx, DWORD PTR _sourceElement$44[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _sourceClassName$9[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 719  : 
; 720  :                                         if(sourceClassName == "GlobalSource")

	push	OFFSET $SG4294712728
	lea	ecx, DWORD PTR $T10[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	lea	ecx, DWORD PTR _sourceClassName$9[ebp]
	call	DWORD PTR __imp_??8String@@QBEHABV0@@Z
	mov	DWORD PTR $T28[ebp], eax
	lea	ecx, DWORD PTR $T10[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T28[ebp], 0
	je	SHORT $LN42@ListboxHoo

; 721  :                                         {
; 722  :                                             newSceneSources->RemoveElement(sourceElement);

	mov	eax, DWORD PTR _sourceElement$44[ebp]
	push	eax
	mov	ecx, DWORD PTR _newSceneSources$62[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z
$LN42@ListboxHoo:

; 723  :                                         }
; 724  :                                     }

	lea	ecx, DWORD PTR _sourceClassName$9[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN44@ListboxHoo
$LN60@ListboxHoo:

; 725  :                                 }
; 726  :                             }
; 727  :                         }
; 728  : 
; 729  :                         String strCopied = Str("CopyTo.Success.Text");

	push	OFFSET $SG4294712727
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strCopied$27[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 730  :                         strCopied.FindReplace(TEXT("$1"), selectedScene->GetName());

	mov	ecx, DWORD PTR _selectedScene$71[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	OFFSET $SG4294712726
	lea	ecx, DWORD PTR _strCopied$27[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 731  :                         OBSMessageBox(hwnd, strCopied, Str("CopyTo.Success.Title"), 0);

	push	0
	push	OFFSET $SG4294712725
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strCopied$27[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 732  : 
; 733  :                         App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 734  :                         App->scenesCopyToConfig.Close(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_?Close@XConfig@@QAEX_N@Z

; 735  :                     }

	lea	ecx, DWORD PTR _strCopied$27[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strScenesCopyToConfig$41[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _sceneCollectionList$52[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
$LN74@ListboxHoo:

; 736  :                     break;

	jmp	$LN80@ListboxHoo
$LN41@ListboxHoo:

; 737  : 
; 738  :                 case ID_LISTBOX_REMOVE:
; 739  : 					if(numItems==1)

	cmp	DWORD PTR _numItems$78[ebp], 1
	jne	SHORT $LN40@ListboxHoo

; 740  : 					{
; 741  : 						// the last one can't be deleted;
; 742  : 						break;

	jmp	$LN80@ListboxHoo
$LN40@ListboxHoo:

; 743  : 					}
; 744  :                     App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 745  : 
; 746  :                     if(OBSMessageBox(hwndMain, Str("DeleteConfirm"), Str("DeleteConfirm.Title"), MB_YESNO) == IDYES)

	push	4
	push	OFFSET $SG4294712724
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712723
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	$LN39@ListboxHoo

; 747  :                     {
; 748  :                         DWORD hotkey = item->GetInt(TEXT("hotkey"));

	push	0
	push	OFFSET $SG4294712722
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _hotkey$40[ebp], eax

; 749  :                         if(hotkey)

	cmp	DWORD PTR _hotkey$40[ebp], 0
	je	SHORT $LN38@ListboxHoo

; 750  :                             App->RemoveSceneHotkey(hotkey);

	mov	ecx, DWORD PTR _hotkey$40[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveSceneHotkey@OBS@@AAEXK@Z		; OBS::RemoveSceneHotkey
$LN38@ListboxHoo:

; 751  : 
; 752  :                         SendMessage(hwnd, LB_DELETESTRING, curSel, 0);

	push	0
	mov	edx, DWORD PTR _curSel$80[ebp]
	push	edx
	push	386					; 00000182H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 753  :                         if(--numItems)

	mov	ecx, DWORD PTR _numItems$78[ebp]
	sub	ecx, 1
	mov	DWORD PTR _numItems$78[ebp], ecx
	je	SHORT $LN37@ListboxHoo

; 754  :                         {
; 755  :                             if(curSel == numItems)

	mov	edx, DWORD PTR _curSel$80[ebp]
	cmp	edx, DWORD PTR _numItems$78[ebp]
	jne	SHORT $LN36@ListboxHoo

; 756  :                                 curSel--;

	mov	eax, DWORD PTR _curSel$80[ebp]
	sub	eax, 1
	mov	DWORD PTR _curSel$80[ebp], eax
$LN36@ListboxHoo:

; 757  :                         }
; 758  :                         else

	jmp	SHORT $LN35@ListboxHoo
$LN37@ListboxHoo:

; 759  :                             curSel = LB_ERR;

	mov	DWORD PTR _curSel$80[ebp], -1
$LN35@ListboxHoo:

; 760  :                         
; 761  :                         App->ReportScenesChanged();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+120]
	call	eax

; 762  :                         bDelete = true;

	mov	BYTE PTR _bDelete$77[ebp], 1
$LN39@ListboxHoo:

; 763  :                     }
; 764  : 
; 765  :                     App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 766  :                     break;

	jmp	$LN80@ListboxHoo
$LN34@ListboxHoo:

; 767  : 
; 768  :                 case ID_LISTBOX_RENAME:
; 769  :                     {
; 770  :                         App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 771  : 
; 772  :                         String strName = item->GetName();

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	lea	ecx, DWORD PTR _strName$38[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 773  :                         if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterSceneNameDialogProc, (LPARAM)&strName) == IDOK)

	lea	ecx, DWORD PTR _strName$38[ebp]
	push	ecx
	push	OFFSET ?EnterSceneNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSceneNameDialogProc
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	push	122					; 0000007aH
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN33@ListboxHoo

; 774  :                         {
; 775  :                             SendMessage(hwnd, LB_DELETESTRING, curSel, 0);

	push	0
	mov	ecx, DWORD PTR _curSel$80[ebp]
	push	ecx
	push	386					; 00000182H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 776  :                             SendMessage(hwnd, LB_INSERTSTRING, curSel, (LPARAM)strName.Array());

	lea	ecx, DWORD PTR _strName$38[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _curSel$80[ebp]
	push	eax
	push	385					; 00000181H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 777  :                             SendMessage(hwnd, LB_SETCURSEL, curSel, 0);

	push	0
	mov	edx, DWORD PTR _curSel$80[ebp]
	push	edx
	push	390					; 00000186H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 778  : 
; 779  :                             item->SetName(strName);

	lea	ecx, DWORD PTR _strName$38[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?SetName@XBaseItem@@QAEXPB_W@Z

; 780  :                             App->ReportScenesChanged();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+120]
	call	eax
$LN33@ListboxHoo:

; 781  :                         }
; 782  : 
; 783  :                         App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 784  :                         break;

	lea	ecx, DWORD PTR _strName$38[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN80@ListboxHoo
$LN32@ListboxHoo:

; 785  :                     }
; 786  :                 case ID_LISTBOX_COPY:
; 787  :                     {
; 788  :                         App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 789  :                         
; 790  :                         String strName = Str("Scene");

	push	OFFSET $SG4294712721
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strName$50[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 791  :                         GetNewSceneName(strName);

	lea	edx, DWORD PTR _strName$50[ebp]
	push	edx
	call	?GetNewSceneName@OBS@@CAXAAVString@@@Z	; OBS::GetNewSceneName
	add	esp, 4

; 792  : 
; 793  :                         if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterSceneNameDialogProc, (LPARAM)&strName) == IDOK)

	lea	eax, DWORD PTR _strName$50[ebp]
	push	eax
	push	OFFSET ?EnterSceneNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSceneNameDialogProc
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	push	122					; 0000007aH
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	$LN31@ListboxHoo

; 794  :                         {
; 795  :                             UINT classID = 0;   // ID_LISTBOX_ADD - ID_LISTBOX_ADD

	mov	DWORD PTR _classID$20[ebp], 0

; 796  :                             ClassInfo &ci = App->sceneClasses[classID];

	mov	eax, DWORD PTR _classID$20[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1360				; 00000550H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	mov	DWORD PTR _ci$54[ebp], eax

; 797  : 
; 798  :                             XElement *scenes = App->scenesConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712720
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _scenes$42[ebp], eax

; 799  :                             XElement *newSceneElement = scenes->CopyElement(item, strName);

	lea	ecx, DWORD PTR _strName$50[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _item$79[ebp]
	push	ecx
	mov	ecx, DWORD PTR _scenes$42[ebp]
	call	DWORD PTR __imp_?CopyElement@XElement@@QAEPAV1@PAV1@PB_W@Z
	mov	DWORD PTR _newSceneElement$60[ebp], eax

; 800  : 
; 801  :                             newSceneElement->SetString(TEXT("class"), ci.strClass);

	mov	ecx, DWORD PTR _ci$54[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712719
	mov	ecx, DWORD PTR _newSceneElement$60[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 802  :                             newSceneElement->SetInt(TEXT("hotkey"), 0);

	push	0
	push	OFFSET $SG4294712718
	mov	ecx, DWORD PTR _newSceneElement$60[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 803  : 
; 804  :                             if(ci.configProc)

	mov	edx, DWORD PTR _ci$54[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN30@ListboxHoo

; 805  :                             {
; 806  :                                 if(!ci.configProc(newSceneElement, true))

	push	1
	mov	eax, DWORD PTR _newSceneElement$60[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$54[ebp]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN30@ListboxHoo

; 807  :                                 {
; 808  :                                     scenes->RemoveElement(newSceneElement);

	mov	ecx, DWORD PTR _newSceneElement$60[ebp]
	push	ecx
	mov	ecx, DWORD PTR _scenes$42[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z

; 809  :                                     break;

	lea	ecx, DWORD PTR _strName$50[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN80@ListboxHoo
$LN30@ListboxHoo:

; 810  :                                 }
; 811  :                             }
; 812  : 
; 813  :                             UINT newID = (UINT)SendMessage(hwnd, LB_ADDSTRING, 0, (LPARAM)strName.Array());

	lea	ecx, DWORD PTR _strName$50[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	384					; 00000180H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _newID$26[ebp], eax

; 814  :                             PostMessage(hwnd, LB_SETCURSEL, newID, 0);

	push	0
	mov	eax, DWORD PTR _newID$26[ebp]
	push	eax
	push	390					; 00000186H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__PostMessageW@16

; 815  :                             PostMessage(hwndMain, WM_COMMAND, MAKEWPARAM(ID_SCENES, LBN_SELCHANGE), (LPARAM)hwnd);

	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	push	70547					; 00011393H
	push	273					; 00000111H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__PostMessageW@16

; 816  :                             App->ReportScenesChanged();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+120]
	call	eax
$LN31@ListboxHoo:

; 817  :                         }
; 818  : 
; 819  :                         App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 820  : 
; 821  :                         break;

	lea	ecx, DWORD PTR _strName$50[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN80@ListboxHoo
$LN28@ListboxHoo:

; 822  :                     }
; 823  :                 case ID_LISTBOX_CONFIG:
; 824  :                     App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 825  : 
; 826  :                     if(curClassInfo && curClassInfo->configProc(item, false))

	cmp	DWORD PTR _curClassInfo$72[ebp], 0
	je	SHORT $LN27@ListboxHoo
	push	0
	mov	ecx, DWORD PTR _item$79[ebp]
	push	ecx
	mov	edx, DWORD PTR _curClassInfo$72[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN27@ListboxHoo

; 827  :                     {
; 828  :                         if(App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	SHORT $LN27@ListboxHoo

; 829  :                             App->scene->UpdateSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+144]
	mov	eax, DWORD PTR [edx+28]
	call	eax
$LN27@ListboxHoo:

; 830  :                     }
; 831  : 
; 832  :                     App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 833  :                     break;

	jmp	$LN80@ListboxHoo
$LN25@ListboxHoo:

; 834  : 
; 835  :                 case ID_LISTBOX_HOTKEY:
; 836  :                     {
; 837  :                         App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 838  : 
; 839  :                         DWORD prevHotkey = item->GetInt(TEXT("hotkey"));

	push	0
	push	OFFSET $SG4294712717
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _prevHotkey$56[ebp], eax

; 840  : 
; 841  :                         SceneHotkeyInfo hotkeyInfo;
; 842  :                         hotkeyInfo.hotkey = prevHotkey;

	mov	ecx, DWORD PTR _prevHotkey$56[ebp]
	mov	DWORD PTR _hotkeyInfo$39[ebp+4], ecx

; 843  :                         hotkeyInfo.scene = item;

	mov	edx, DWORD PTR _item$79[ebp]
	mov	DWORD PTR _hotkeyInfo$39[ebp+8], edx

; 844  : 
; 845  :                         if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_SCENEHOTKEY), hwndMain, OBS::SceneHotkeyDialogProc, (LPARAM)&hotkeyInfo) == IDOK)

	lea	eax, DWORD PTR _hotkeyInfo$39[ebp]
	push	eax
	push	OFFSET ?SceneHotkeyDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::SceneHotkeyDialogProc
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	push	130					; 00000082H
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN24@ListboxHoo

; 846  :                         {
; 847  :                             if(hotkeyInfo.hotkey)

	cmp	DWORD PTR _hotkeyInfo$39[ebp+4], 0
	je	SHORT $LN23@ListboxHoo

; 848  :                                 hotkeyInfo.hotkeyID = API->CreateHotkey(hotkeyInfo.hotkey, SceneHotkey, 0);

	push	0
	push	OFFSET ?SceneHotkey@@YGXKK_N@Z		; SceneHotkey
	mov	eax, DWORD PTR _hotkeyInfo$39[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	mov	DWORD PTR _hotkeyInfo$39[ebp], eax
$LN23@ListboxHoo:

; 849  : 
; 850  :                             item->SetInt(TEXT("hotkey"), hotkeyInfo.hotkey);

	mov	ecx, DWORD PTR _hotkeyInfo$39[ebp+4]
	push	ecx
	push	OFFSET $SG4294712716
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 851  : 
; 852  :                             if(prevHotkey)

	cmp	DWORD PTR _prevHotkey$56[ebp], 0
	je	SHORT $LN22@ListboxHoo

; 853  :                                 App->RemoveSceneHotkey(prevHotkey);

	mov	edx, DWORD PTR _prevHotkey$56[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveSceneHotkey@OBS@@AAEXK@Z		; OBS::RemoveSceneHotkey
$LN22@ListboxHoo:

; 854  : 
; 855  :                             if(hotkeyInfo.hotkeyID)

	cmp	DWORD PTR _hotkeyInfo$39[ebp], 0
	je	SHORT $LN24@ListboxHoo

; 856  :                                 App->sceneHotkeys << hotkeyInfo;

	lea	eax, DWORD PTR _hotkeyInfo$39[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 204				; 000000ccH
	call	??6?$List@USceneHotkeyInfo@@@@QAEAAV0@ABUSceneHotkeyInfo@@@Z ; List<SceneHotkeyInfo>::operator<<
$LN24@ListboxHoo:

; 857  :                         }
; 858  : 
; 859  :                         App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 860  :                         break;

	jmp	$LN80@ListboxHoo
$LN20@ListboxHoo:

; 861  :                     }
; 862  : 
; 863  :                 case ID_LISTBOX_MOVEUP:
; 864  :                     if(curSel > 0)

	cmp	DWORD PTR _curSel$80[ebp], 0
	jle	SHORT $LN19@ListboxHoo

; 865  :                     {
; 866  :                         SendMessage(hwnd, LB_DELETESTRING, curSel, 0);

	push	0
	mov	ecx, DWORD PTR _curSel$80[ebp]
	push	ecx
	push	386					; 00000182H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 867  :                         SendMessage(hwnd, LB_INSERTSTRING, curSel-1, (LPARAM)item->GetName());

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	eax, DWORD PTR _curSel$80[ebp]
	sub	eax, 1
	push	eax
	push	385					; 00000181H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 868  :                         SendMessage(hwnd, LB_SETCURSEL, curSel-1, 0);

	push	0
	mov	edx, DWORD PTR _curSel$80[ebp]
	sub	edx, 1
	push	edx
	push	390					; 00000186H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 869  : 
; 870  :                         curSel--;

	mov	ecx, DWORD PTR _curSel$80[ebp]
	sub	ecx, 1
	mov	DWORD PTR _curSel$80[ebp], ecx

; 871  :                         item->MoveUp();

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?MoveUp@XElement@@QAEXXZ

; 872  :                         App->ReportScenesChanged();

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax+120]
	call	edx
$LN19@ListboxHoo:

; 873  :                     }
; 874  :                     break;

	jmp	$LN80@ListboxHoo
$LN18@ListboxHoo:

; 875  : 
; 876  :                 case ID_LISTBOX_MOVEDOWN:
; 877  :                     if(curSel != (numItems-1))

	mov	eax, DWORD PTR _numItems$78[ebp]
	sub	eax, 1
	cmp	DWORD PTR _curSel$80[ebp], eax
	je	SHORT $LN17@ListboxHoo

; 878  :                     {
; 879  :                         SendMessage(hwnd, LB_DELETESTRING, curSel, 0);

	push	0
	mov	ecx, DWORD PTR _curSel$80[ebp]
	push	ecx
	push	386					; 00000182H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 880  :                         SendMessage(hwnd, LB_INSERTSTRING, curSel+1, (LPARAM)item->GetName());

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	eax, DWORD PTR _curSel$80[ebp]
	add	eax, 1
	push	eax
	push	385					; 00000181H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 881  :                         SendMessage(hwnd, LB_SETCURSEL, curSel+1, 0);

	push	0
	mov	edx, DWORD PTR _curSel$80[ebp]
	add	edx, 1
	push	edx
	push	390					; 00000186H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 882  : 
; 883  :                         curSel++;

	mov	ecx, DWORD PTR _curSel$80[ebp]
	add	ecx, 1
	mov	DWORD PTR _curSel$80[ebp], ecx

; 884  :                         item->MoveDown();

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?MoveDown@XElement@@QAEXXZ

; 885  :                         App->ReportScenesChanged();

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax+120]
	call	edx
$LN17@ListboxHoo:

; 886  :                     }
; 887  :                     break;

	jmp	$LN80@ListboxHoo
$LN16@ListboxHoo:

; 888  : 
; 889  :                 case ID_LISTBOX_MOVETOTOP:
; 890  :                     if(curSel != 0)

	cmp	DWORD PTR _curSel$80[ebp], 0
	je	SHORT $LN15@ListboxHoo

; 891  :                     {
; 892  :                         SendMessage(hwnd, LB_DELETESTRING, curSel, 0);

	push	0
	mov	eax, DWORD PTR _curSel$80[ebp]
	push	eax
	push	386					; 00000182H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 893  :                         SendMessage(hwnd, LB_INSERTSTRING, 0, (LPARAM)item->GetName());

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	385					; 00000181H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 894  :                         SendMessage(hwnd, LB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	390					; 00000186H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 895  : 
; 896  :                         curSel = 0;

	mov	DWORD PTR _curSel$80[ebp], 0

; 897  :                         item->MoveToTop();

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?MoveToTop@XElement@@QAEXXZ

; 898  :                         App->ReportScenesChanged();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+120]
	call	eax
$LN15@ListboxHoo:

; 899  :                     }
; 900  :                     break;

	jmp	SHORT $LN80@ListboxHoo
$LN14@ListboxHoo:

; 901  : 
; 902  :                 case ID_LISTBOX_MOVETOBOTTOM:
; 903  :                     if(curSel != numItems-1)

	mov	ecx, DWORD PTR _numItems$78[ebp]
	sub	ecx, 1
	cmp	DWORD PTR _curSel$80[ebp], ecx
	je	SHORT $LN80@ListboxHoo

; 904  :                     {
; 905  :                         SendMessage(hwnd, LB_DELETESTRING, curSel, 0);

	push	0
	mov	edx, DWORD PTR _curSel$80[ebp]
	push	edx
	push	386					; 00000182H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 906  :                         SendMessage(hwnd, LB_INSERTSTRING, numItems-1, (LPARAM)item->GetName());

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _numItems$78[ebp]
	sub	ecx, 1
	push	ecx
	push	385					; 00000181H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 907  :                         SendMessage(hwnd, LB_SETCURSEL, numItems-1, 0);

	push	0
	mov	eax, DWORD PTR _numItems$78[ebp]
	sub	eax, 1
	push	eax
	push	390					; 00000186H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 908  : 
; 909  :                         curSel = numItems-1;

	mov	edx, DWORD PTR _numItems$78[ebp]
	sub	edx, 1
	mov	DWORD PTR _curSel$80[ebp], edx

; 910  :                         item->MoveToBottom();

	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?MoveToBottom@XElement@@QAEXXZ

; 911  :                         App->ReportScenesChanged();

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+120]
	call	eax
$LN80@ListboxHoo:

; 912  :                     }
; 913  :                     break;
; 914  :             }
; 915  : 
; 916  :             if(curSel != LB_ERR)

	cmp	DWORD PTR _curSel$80[ebp], -1
	je	SHORT $LN12@ListboxHoo

; 917  :             {
; 918  :                 SendMessage(hwnd, LB_SETCURSEL, curSel, 0);

	push	0
	mov	ecx, DWORD PTR _curSel$80[ebp]
	push	ecx
	push	390					; 00000186H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 919  :                 SendMessage(hwndMain, WM_COMMAND, MAKEWPARAM(ID_SCENES, LBN_SELCHANGE), (LPARAM)GetDlgItem(hwndMain, ID_SCENES));

	push	5011					; 00001393H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	push	70547					; 00011393H
	push	273					; 00000111H
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 920  : 
; 921  :                 if(bDelete)

	movzx	edx, BYTE PTR _bDelete$77[ebp]
	test	edx, edx
	je	SHORT $LN11@ListboxHoo

; 922  :                     item->GetParent()->RemoveElement(item);

	mov	eax, DWORD PTR _item$79[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetParent@XElement@@QBEPAV1@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z
$LN11@ListboxHoo:

; 923  :             }

	jmp	$LN10@ListboxHoo
$LN12@ListboxHoo:

; 924  :             else if(bDelete)

	movzx	ecx, BYTE PTR _bDelete$77[ebp]
	test	ecx, ecx
	je	$LN10@ListboxHoo

; 925  :             {
; 926  :                 if(App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	SHORT $LN8@ListboxHoo

; 927  :                 {
; 928  :                     OSEnterMutex(App->hSceneMutex);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+956]
	push	edx
	call	DWORD PTR __imp_?OSEnterMutex@@YGXPAX@Z

; 929  :                     delete App->scene;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	mov	DWORD PTR $T18[ebp], ecx
	mov	edx, DWORD PTR $T18[ebp]
	mov	DWORD PTR $T57[ebp], edx
	cmp	DWORD PTR $T57[ebp], 0
	je	SHORT $LN110@ListboxHoo
	push	1
	mov	eax, DWORD PTR $T57[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T57[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv1269[ebp], eax
	jmp	SHORT $LN111@ListboxHoo
$LN110@ListboxHoo:
	mov	DWORD PTR tv1269[ebp], 0
$LN111@ListboxHoo:

; 930  :                     App->scene = NULL;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+144], 0

; 931  :                     OSLeaveMutex(App->hSceneMutex);

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+956]
	push	eax
	call	DWORD PTR __imp_?OSLeaveMutex@@YGXPAX@Z
$LN8@ListboxHoo:

; 932  :                 }
; 933  : 
; 934  :                 App->bChangingSources = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 1

; 935  :                 ListView_DeleteAllItems(GetDlgItem(hwndMain, ID_SOURCES));

	push	0
	push	0
	push	4105					; 00001009H
	push	5013					; 00001395H
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 936  :                 App->bChangingSources = false;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+705], 0

; 937  :                 
; 938  :                 item->GetParent()->RemoveElement(item);

	mov	ecx, DWORD PTR _item$79[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$79[ebp]
	call	DWORD PTR __imp_?GetParent@XElement@@QBEPAV1@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z

; 939  :                 App->sceneElement = NULL;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+212], 0
$LN10@ListboxHoo:

; 940  :             }
; 941  :         }

	jmp	$LN7@ListboxHoo
$LN86@ListboxHoo:

; 942  :         else if(id == ID_SOURCES)

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	$LN7@ListboxHoo

; 943  :         {
; 944  :             if(!App->sceneElement && numItems)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+212], 0
	jne	SHORT $LN5@ListboxHoo
	cmp	DWORD PTR _numItems$78[ebp], 0
	je	SHORT $LN5@ListboxHoo

; 945  :                 return 0;

	xor	eax, eax
	jmp	$LN105@ListboxHoo
$LN5@ListboxHoo:

; 946  : 
; 947  :             List<SceneItem*> selectedSceneItems;

	lea	ecx, DWORD PTR _selectedSceneItems$25[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 948  :             if(App->scene)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	SHORT $LN4@ListboxHoo

; 949  :                 App->scene->GetSelectedItems(selectedSceneItems);

	lea	edx, DWORD PTR _selectedSceneItems$25[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z
$LN4@ListboxHoo:

; 950  : 
; 951  :             if(selectedSceneItems.Num() < 1)

	lea	ecx, DWORD PTR _selectedSceneItems$25[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	eax, 1
	jae	SHORT $LN3@ListboxHoo

; 952  :                 nop();

	call	?nop@@YAXXZ				; nop
$LN3@ListboxHoo:

; 953  : 
; 954  :             int ret = (int)TrackPopupMenuEx(hMenu, TPM_RETURNCMD | TPM_LEFTALIGN | TPM_RIGHTBUTTON, p.x, p.y, hwndMain, NULL);

	push	0
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	mov	edx, DWORD PTR _p$37[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$37[ebp]
	push	eax
	push	258					; 00000102H
	mov	ecx, DWORD PTR _hMenu$73[ebp]
	push	ecx
	call	DWORD PTR __imp__TrackPopupMenuEx@24
	mov	DWORD PTR _ret$16[ebp], eax

; 955  :             App->TrackModifyListbox(hwnd, ret);

	mov	edx, DWORD PTR _ret$16[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?TrackModifyListbox@OBS@@AAEXPAUHWND__@@H@Z ; OBS::TrackModifyListbox

; 956  :         }

	lea	ecx, DWORD PTR _selectedSceneItems$25[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN7@ListboxHoo:

; 957  : 
; 958  :         DestroyMenu(hMenu);

	mov	ecx, DWORD PTR _hMenu$73[ebp]
	push	ecx
	call	DWORD PTR __imp__DestroyMenu@4

; 959  : 
; 960  :         return 0;

	xor	eax, eax
	jmp	SHORT $LN105@ListboxHoo
$LN101@ListboxHoo:

; 961  :     }
; 962  : 
; 963  :     if(id == ID_SOURCES)

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	SHORT $LN2@ListboxHoo

; 964  :     {
; 965  :         return CallWindowProc(listviewProc, hwnd, message, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	mov	eax, DWORD PTR ?listviewProc@@3P6GJPAUHWND__@@IIJ@ZA ; listviewProc
	push	eax
	call	DWORD PTR __imp__CallWindowProcW@20
	jmp	SHORT $LN105@ListboxHoo

; 966  :     }
; 967  :     else

	jmp	SHORT $LN105@ListboxHoo
$LN2@ListboxHoo:

; 968  :     {
; 969  :         return CallWindowProc(listboxProc, hwnd, message, wParam, lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?listboxProc@@3P6GJPAUHWND__@@IIJ@ZA ; listboxProc
	push	edx
	call	DWORD PTR __imp__CallWindowProcW@20
$LN105@ListboxHoo:

; 970  :     }
; 971  : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN113@ListboxHoo:
	DD	$LN41@ListboxHoo
	DD	$LN20@ListboxHoo
	DD	$LN18@ListboxHoo
	DD	$LN16@ListboxHoo
	DD	$LN14@ListboxHoo
	DD	$LN34@ListboxHoo
	DD	$LN32@ListboxHoo
	DD	$LN25@ListboxHoo
	DD	$LN28@ListboxHoo
	DD	$LN79@ListboxHoo
$LN112@ListboxHoo:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	5
	DB	6
	DB	7
	DB	8
?ListboxHook@OBS@@CGJPAUHWND__@@IIJ@Z ENDP		; OBS::ListboxHook
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?RenderFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
__macro_lvi$1 = -1908					; size = 60
__macro_lvi$2 = -1848					; size = 60
__macro_lvi$3 = -1788					; size = 60
__macro_lvi$4 = -1728					; size = 60
__macro_lvi$5 = -1668					; size = 60
__macro_lvi$6 = -1608					; size = 60
__macro_lvi$7 = -1548					; size = 60
$T8 = -1488						; size = 16
$T9 = -1472						; size = 16
$T10 = -1456						; size = 16
$T11 = -1440						; size = 16
$T12 = -1424						; size = 16
$T13 = -1408						; size = 16
$T14 = -1392						; size = 16
$T15 = -1376						; size = 16
$T16 = -1360						; size = 16
$T17 = -1344						; size = 16
$T18 = -1328						; size = 16
$T19 = -1312						; size = 16
$T20 = -1296						; size = 16
$T21 = -1280						; size = 16
$T22 = -1264						; size = 16
$T23 = -1248						; size = 16
$T24 = -1232						; size = 16
$T25 = -1216						; size = 16
$T26 = -1200						; size = 16
$T27 = -1184						; size = 8
$T28 = -1176						; size = 8
$T29 = -1168						; size = 8
$T30 = -1160						; size = 8
$T31 = -1152						; size = 8
$T32 = -1144						; size = 8
$T33 = -1136						; size = 8
_adjSizeBase$34 = -1128					; size = 8
$T35 = -1120						; size = 8
$T36 = -1112						; size = 8
$T37 = -1104						; size = 8
$T38 = -1096						; size = 8
$T39 = -1088						; size = 8
$T40 = -1080						; size = 8
$T41 = -1072						; size = 8
$T42 = -1064						; size = 8
$T43 = -1056						; size = 8
$T44 = -1048						; size = 8
$T45 = -1040						; size = 8
$T46 = -1032						; size = 8
$T47 = -1024						; size = 8
$T48 = -1016						; size = 8
$T49 = -1008						; size = 8
$T50 = -1000						; size = 8
$T51 = -992						; size = 8
$T52 = -984						; size = 8
$T53 = -976						; size = 8
$T54 = -968						; size = 8
$T55 = -960						; size = 8
$T56 = -952						; size = 8
$T57 = -944						; size = 8
$T58 = -936						; size = 8
$T59 = -928						; size = 8
$T60 = -920						; size = 8
$T61 = -912						; size = 8
$T62 = -904						; size = 8
$T63 = -896						; size = 8
$T64 = -888						; size = 8
$T65 = -880						; size = 8
$T66 = -872						; size = 8
$T67 = -864						; size = 8
$T68 = -856						; size = 8
$T69 = -848						; size = 8
$T70 = -840						; size = 8
$T71 = -832						; size = 8
$T72 = -824						; size = 8
$T73 = -816						; size = 8
$T74 = -808						; size = 8
$T75 = -800						; size = 8
$T76 = -792						; size = 8
$T77 = -784						; size = 8
$T78 = -776						; size = 8
$T79 = -768						; size = 8
_framePos$80 = -760					; size = 8
$T81 = -752						; size = 8
$T82 = -744						; size = 8
$T83 = -736						; size = 8
$T84 = -728						; size = 8
$T85 = -720						; size = 8
_pos$86 = -712						; size = 8
_framePos$87 = -704					; size = 8
_pos$88 = -696						; size = 8
_mousePos$89 = -688					; size = 8
_adjPos$90 = -680					; size = 8
_pos$91 = -672						; size = 8
_adjSize$92 = -664					; size = 8
_pos$93 = -656						; size = 8
_pos$94 = -648						; size = 8
_pos$95 = -640						; size = 8
_pos$96 = -632						; size = 8
_pos$97 = -624						; size = 8
_p$98 = -616						; size = 8
_mousePos$99 = -608					; size = 8
_topLeft$100 = -600					; size = 8
_framePos$101 = -592					; size = 8
tv4353 = -584						; size = 4
tv4365 = -580						; size = 4
tv4317 = -576						; size = 4
_top$102 = -572						; size = 4
$T103 = -568						; size = 4
tv4361 = -564						; size = 4
_numItems$104 = -560					; size = 4
tv4355 = -556						; size = 4
_mi$105 = -552						; size = 4
tv4363 = -548						; size = 4
_top$106 = -544						; size = 4
tv4359 = -540						; size = 4
_left$107 = -536					; size = 4
tv4357 = -532						; size = 4
tv4367 = -528						; size = 4
_left$108 = -524					; size = 4
tv4319 = -520						; size = 4
_strMonitor$109 = -516					; size = 8
tv3178 = -508						; size = 4
_cropPart$110 = -504					; size = 8
_topItem$111 = -496					; size = 4
_cropPart$112 = -492					; size = 8
_bottomRight$113 = -484					; size = 8
_ret$114 = -476						; size = 4
_cropPart$115 = -472					; size = 8
_items$116 = -464					; size = 8
_pos$117 = -456						; size = 8
_scaleVal$118 = -448					; size = 8
_cropPart$119 = -440					; size = 8
_baseScale$120 = -432					; size = 8
_mousePos$121 = -424					; size = 8
tv861 = -416						; size = 4
tv1256 = -412						; size = 4
tv824 = -408						; size = 4
_scaleAspect$122 = -404					; size = 4
tv781 = -400						; size = 4
tv1089 = -396						; size = 4
_item$123 = -392					; size = 4
_lastItem$124 = -388					; size = 4
tv552 = -384						; size = 4
_scaleAspect$125 = -380					; size = 4
tv904 = -376						; size = 4
tv1168 = -372						; size = 4
tv2554 = -368						; size = 4
tv992 = -364						; size = 4
tv2540 = -360						; size = 4
tv2496 = -356						; size = 4
tv2551 = -352						; size = 4
tv461 = -348						; size = 4
tv2533 = -344						; size = 4
tv451 = -340						; size = 4
tv155 = -336						; size = 4
tv433 = -332						; size = 4
tv2298 = -328						; size = 4
tv375 = -324						; size = 4
_scaleAspect$126 = -320					; size = 4
tv366 = -316						; size = 4
_scaleAspect$127 = -312					; size = 4
tv2652 = -308						; size = 4
tv1236 = -304						; size = 4
tv2641 = -300						; size = 4
tv1148 = -296						; size = 4
tv2626 = -292						; size = 4
tv1069 = -288						; size = 4
tv2615 = -284						; size = 4
tv972 = -280						; size = 4
tv2593 = -276						; size = 4
tv2577 = -272						; size = 4
_topItem$128 = -268					; size = 4
_lowerRight$129 = -264					; size = 8
_items$130 = -256					; size = 8
_right$131 = -248					; size = 4
_pos$132 = -244						; size = 4
_hwndSources$133 = -240					; size = 4
_topItem$134 = -236					; size = 4
_bottom$135 = -232					; size = 4
_pos$136 = -228						; size = 4
_bottom$137 = -224					; size = 4
_dx$138 = -220						; size = 4
_curType$139 = -216					; size = 4
_pos$140 = -212						; size = 4
_right$141 = -208					; size = 4
_amount$142 = -204					; size = 4
tv2696 = -200						; size = 4
_amount$143 = -196					; size = 4
_i$144 = -192						; size = 4
_amount$145 = -188					; size = 4
_i$146 = -184						; size = 4
_i$147 = -180						; size = 4
_dy$148 = -176						; size = 4
_i$149 = -172						; size = 4
_hProjector$150 = -168					; size = 4
tv571 = -164						; size = 4
tv2244 = -160						; size = 4
tv466 = -156						; size = 4
_items$151 = -152					; size = 8
_amount$152 = -144					; size = 4
_i$153 = -140						; size = 4
_items$154 = -136					; size = 8
_hwndSources$ = -128					; size = 4
_isCropping$155 = -122					; size = 1
_enabled$156 = -121					; size = 1
_i$157 = -120						; size = 4
_item$158 = -116					; size = 4
_grayed$159 = -109					; size = 1
_baseRenderSize$160 = -108				; size = 8
_hPopup$161 = -100					; size = 4
_itemElement$162 = -96					; size = 4
_hMenuPreview$163 = -92					; size = 4
tv866 = -88						; size = 1
tv988 = -87						; size = 1
tv857 = -86						; size = 1
tv1164 = -85						; size = 1
tv829 = -84						; size = 1
tv1252 = -83						; size = 1
_bVerticalSnap$164 = -82				; size = 1
tv1085 = -81						; size = 1
_bControlDown$165 = -80					; size = 1
tv900 = -79						; size = 1
_bHorizontalSnap$166 = -78				; size = 1
tv1173 = -77						; size = 1
_item$167 = -76						; size = 4
_bFoundSnap$168 = -72					; size = 1
tv820 = -71						; size = 1
tv997 = -70						; size = 1
tv786 = -69						; size = 1
tv909 = -68						; size = 1
tv777 = -67						; size = 1
tv1261 = -66						; size = 1
tv1094 = -65						; size = 1
_edgeAll$169 = -64					; size = 4
_minSize$170 = -60					; size = 8
_bControlDown$171 = -50					; size = 1
_bSelected$172 = -49					; size = 1
_frameStartMousePos$173 = -48				; size = 8
_snapSize$174 = -40					; size = 8
_cropFactor$175 = -32					; size = 8
_item$176 = -24						; size = 4
_baseScaleAspect$177 = -20				; size = 4
_totalAdjust$178 = -16					; size = 8
_bKeepAspect$179 = -7					; size = 1
_bControlDown$180 = -6					; size = 1
_bCropSymmetric$181 = -5				; size = 1
_scaleItem$182 = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?RenderFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z PROC		; OBS::RenderFrameProc, COMDAT

; 4944 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 1920				; 00000780H

; 4945 :     HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 4946 : 
; 4947 :     if(message == WM_ERASEBKGND)

	cmp	DWORD PTR _message$[ebx], 20		; 00000014H
	jne	SHORT $LN212@RenderFram

; 4948 :     {
; 4949 :         if(App->bRenderViewEnabled && App->bRunning)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+742]
	test	edx, edx
	je	SHORT $LN211@RenderFram
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	SHORT $LN211@RenderFram

; 4950 :             return 1L;

	mov	eax, 1
	jmp	$LN213@RenderFram

; 4951 :         else

	jmp	SHORT $LN210@RenderFram
$LN211@RenderFram:

; 4952 :             return DefWindowProc(hwnd, message, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebx]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebx]
	push	eax
	mov	ecx, DWORD PTR _message$[ebx]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebx]
	push	edx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	$LN213@RenderFram
$LN210@RenderFram:
	jmp	$LN1@RenderFram
$LN212@RenderFram:

; 4953 :     }
; 4954 :     else if(message == WM_LBUTTONDOWN || message == WM_RBUTTONDOWN)

	cmp	DWORD PTR _message$[ebx], 513		; 00000201H
	je	SHORT $LN207@RenderFram
	cmp	DWORD PTR _message$[ebx], 516		; 00000204H
	jne	$LN208@RenderFram
$LN207@RenderFram:

; 4955 :     {
; 4956 :         POINTS pos;
; 4957 :         pos.x = (short)LOWORD(lParam);

	mov	ax, WORD PTR _lParam$[ebx]
	mov	WORD PTR _pos$136[ebp], ax

; 4958 :         pos.y = (short)HIWORD(lParam);

	mov	ecx, DWORD PTR _lParam$[ebx]
	sar	ecx, 16					; 00000010H
	mov	WORD PTR _pos$136[ebp+2], cx

; 4959 : 
; 4960 :         if((App->bEditMode || message == WM_RBUTTONDOWN) && App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+741]
	test	eax, eax
	jne	SHORT $LN205@RenderFram
	cmp	DWORD PTR _message$[ebx], 516		; 00000204H
	jne	$LN206@RenderFram
$LN205@RenderFram:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	$LN206@RenderFram

; 4961 :         {
; 4962 :             Vect2 mousePos = Vect2(float(pos.x), float(pos.y));

	movsx	edx, WORD PTR _pos$136[ebp+2]
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movsx	eax, WORD PTR _pos$136[ebp]
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _mousePos$99[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 4963 :             Vect2 framePos = MapWindowToFramePos(mousePos);

	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _mousePos$99[ebp]
	push	edx
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z
	lea	eax, DWORD PTR _framePos$101[ebp]
	push	eax
	call	?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapWindowToFramePos
	add	esp, 12					; 0000000cH

; 4964 : 
; 4965 :             bool bControlDown = HIBYTE(GetKeyState(VK_LCONTROL)) != 0 || HIBYTE(GetKeyState(VK_RCONTROL)) != 0;

	push	162					; 000000a2H
	call	DWORD PTR __imp__GetKeyState@4
	movsx	ecx, ax
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	movzx	edx, cl
	test	edx, edx
	jne	SHORT $LN215@RenderFram
	push	163					; 000000a3H
	call	DWORD PTR __imp__GetKeyState@4
	cwde
	shr	eax, 8
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN215@RenderFram
	mov	DWORD PTR tv155[ebp], 0
	jmp	SHORT $LN216@RenderFram
$LN215@RenderFram:
	mov	DWORD PTR tv155[ebp], 1
$LN216@RenderFram:
	mov	dl, BYTE PTR tv155[ebp]
	mov	BYTE PTR _bControlDown$165[ebp], dl

; 4966 : 
; 4967 :             SetFocus(hwnd);

	mov	eax, DWORD PTR _hwnd$[ebx]
	push	eax
	call	DWORD PTR __imp__SetFocus@4

; 4968 : 
; 4969 :             List<SceneItem*> items;

	lea	ecx, DWORD PTR _items$154[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 4970 :             App->scene->GetSelectedItems(items);

	lea	ecx, DWORD PTR _items$154[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 4971 :             if(!items.Num())

	lea	ecx, DWORD PTR _items$154[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	jne	$LN204@RenderFram

; 4972 :             {
; 4973 :                 App->scene->GetItemsOnPoint(framePos, items);

	lea	eax, DWORD PTR _items$154[ebp]
	push	eax
	lea	ecx, DWORD PTR _framePos$101[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?GetItemsOnPoint@Scene@@QBEXABUVect2@@AAV?$List@PAVSceneItem@@@@@Z

; 4974 : 
; 4975 :                 if(items.Num())

	lea	ecx, DWORD PTR _items$154[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	$LN203@RenderFram

; 4976 :                 {
; 4977 :                     SceneItem *topItem = items.Last();

	lea	ecx, DWORD PTR _items$154[ebp]
	call	?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ ; List<SceneItem *>::Last
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _topItem$134[ebp], eax

; 4978 :                     App->bItemWasSelected = topItem->bSelected;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR _topItem$134[ebp]
	mov	al, BYTE PTR [edx+64]
	mov	BYTE PTR [ecx+748], al

; 4979 : 
; 4980 :                     if(!bControlDown)

	movzx	ecx, BYTE PTR _bControlDown$165[ebp]
	test	ecx, ecx
	jne	SHORT $LN202@RenderFram

; 4981 :                     {
; 4982 :                         /* clears all selections */
; 4983 :                         App->bChangingSources = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 1

; 4984 :                         ListView_SetItemState(hwndSources, -1, 0, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$7[ebp+16], 3
	mov	DWORD PTR __macro_lvi$7[ebp+12], 0
	lea	eax, DWORD PTR __macro_lvi$7[ebp]
	push	eax
	push	-1
	push	4139					; 0000102bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 4985 :                         App->bChangingSources = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 0

; 4986 : 
; 4987 :                         App->scene->DeselectAll();

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?DeselectAll@Scene@@AAEXXZ
$LN202@RenderFram:

; 4988 :                     }
; 4989 : 
; 4990 :                     topItem->Select(true);

	push	1
	mov	ecx, DWORD PTR _topItem$134[ebp]
	call	DWORD PTR __imp_?Select@SceneItem@@QAEX_N@Z

; 4991 :                     App->bChangingSources = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 1

; 4992 :                     
; 4993 :                     ListView_SetItemState(hwndSources, topItem->GetID(), LVIS_SELECTED, LVIS_SELECTED);

	mov	DWORD PTR __macro_lvi$2[ebp+16], 2
	mov	DWORD PTR __macro_lvi$2[ebp+12], 2
	lea	edx, DWORD PTR __macro_lvi$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _topItem$134[ebp]
	call	DWORD PTR __imp_?GetID@SceneItem@@QAEIXZ
	push	eax
	push	4139					; 0000102bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 4994 :                     App->bChangingSources = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 0

; 4995 : 
; 4996 :                     if (App->bEditMode)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+741]
	test	eax, eax
	je	SHORT $LN200@RenderFram

; 4997 :                         if(App->modifyType == ItemModifyType_None)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+768], 0
	jne	SHORT $LN200@RenderFram

; 4998 :                             App->modifyType = ItemModifyType_Move;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+768], 1
$LN200@RenderFram:

; 4999 :                 }

	jmp	SHORT $LN198@RenderFram
$LN203@RenderFram:

; 5000 :                 else if(!bControlDown) //clicked on empty space without control

	movzx	eax, BYTE PTR _bControlDown$165[ebp]
	test	eax, eax
	jne	SHORT $LN198@RenderFram

; 5001 :                 {
; 5002 :                     /* clears all selections */
; 5003 :                     App->bChangingSources = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 1

; 5004 :                     ListView_SetItemState(hwndSources, -1, 0, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$4[ebp+16], 3
	mov	DWORD PTR __macro_lvi$4[ebp+12], 0
	lea	edx, DWORD PTR __macro_lvi$4[ebp]
	push	edx
	push	-1
	push	4139					; 0000102bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 5005 :                     App->bChangingSources = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 0

; 5006 : 
; 5007 :                     App->scene->DeselectAll();

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?DeselectAll@Scene@@AAEXXZ
$LN198@RenderFram:

; 5008 :                 }
; 5009 :             }
; 5010 :             else

	jmp	SHORT $LN196@RenderFram
$LN204@RenderFram:

; 5011 :             {
; 5012 :                 
; 5013 :                 App->scene->GetItemsOnPoint(framePos, items);

	lea	eax, DWORD PTR _items$154[ebp]
	push	eax
	lea	ecx, DWORD PTR _framePos$101[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?GetItemsOnPoint@Scene@@QBEXABUVect2@@AAV?$List@PAVSceneItem@@@@@Z

; 5014 :                 if(items.Num())

	lea	ecx, DWORD PTR _items$154[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	SHORT $LN196@RenderFram

; 5015 :                 {
; 5016 :                     SceneItem *topItem = items.Last();

	lea	ecx, DWORD PTR _items$154[ebp]
	call	?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ ; List<SceneItem *>::Last
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _topItem$111[ebp], eax

; 5017 :                     App->bItemWasSelected = topItem->bSelected;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR _topItem$111[ebp]
	mov	al, BYTE PTR [edx+64]
	mov	BYTE PTR [ecx+748], al
$LN196@RenderFram:

; 5018 :                 }
; 5019 :             }
; 5020 : 
; 5021 :             if (message == WM_LBUTTONDOWN)

	cmp	DWORD PTR _message$[ebx], 513		; 00000201H
	jne	$LN195@RenderFram

; 5022 :             {
; 5023 :                 App->bMouseDown = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+746], 1

; 5024 :                 App->lastMousePos = App->startMousePos = mousePos;

	lea	edx, DWORD PTR _mousePos$99[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 752				; 000002f0H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 760				; 000002f8H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5025 : 
; 5026 :                 App->scene->GetSelectedItems(items);

	lea	eax, DWORD PTR _items$154[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 5027 :                 for(UINT i=0; i<items.Num(); i++)

	mov	DWORD PTR _i$157[ebp], 0
	jmp	SHORT $LN194@RenderFram
$LN193@RenderFram:
	mov	edx, DWORD PTR _i$157[ebp]
	add	edx, 1
	mov	DWORD PTR _i$157[ebp], edx
$LN194@RenderFram:
	lea	ecx, DWORD PTR _items$154[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$157[ebp], eax
	jae	SHORT $LN192@RenderFram

; 5028 :                 {
; 5029 :                     items[i]->startPos  = items[i]->pos;

	mov	eax, DWORD PTR _i$157[ebp]
	push	eax
	lea	ecx, DWORD PTR _items$154[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _i$157[ebp]
	push	edx
	lea	ecx, DWORD PTR _items$154[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5030 :                     items[i]->startSize = items[i]->size;

	mov	eax, DWORD PTR _i$157[ebp]
	push	eax
	lea	ecx, DWORD PTR _items$154[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 36					; 00000024H
	push	ecx
	mov	edx, DWORD PTR _i$157[ebp]
	push	edx
	lea	ecx, DWORD PTR _items$154[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5031 :                 }

	jmp	SHORT $LN193@RenderFram
$LN192@RenderFram:

; 5032 :             }
; 5033 :             else

	jmp	SHORT $LN191@RenderFram
$LN195@RenderFram:

; 5034 :                 App->bRMouseDown = true;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+747], 1
$LN191@RenderFram:

; 5035 :         }

	lea	ecx, DWORD PTR _items$154[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>

; 5036 :         else

	jmp	SHORT $LN190@RenderFram
$LN206@RenderFram:

; 5037 :         {
; 5038 :             //SendMessage(hwndMain, WM_NCLBUTTONDOWN, HTCAPTION, (LPARAM)&pos);
; 5039 :             return 0;

	xor	eax, eax
	jmp	$LN213@RenderFram
$LN190@RenderFram:

; 5040 :         }

	jmp	$LN1@RenderFram
$LN208@RenderFram:

; 5041 :     }
; 5042 :     else if(message == WM_MOUSEMOVE)

	cmp	DWORD PTR _message$[ebx], 512		; 00000200H
	jne	$LN188@RenderFram

; 5043 :     {
; 5044 :         if(App->bEditMode && App->scene)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+741]
	test	edx, edx
	je	$LN48@RenderFram
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+144], 0
	je	$LN48@RenderFram

; 5045 :         {
; 5046 :             POINTS pos;
; 5047 :             pos.x = (short)LOWORD(lParam);

	mov	cx, WORD PTR _lParam$[ebx]
	mov	WORD PTR _pos$140[ebp], cx

; 5048 :             pos.y = (short)HIWORD(lParam);

	mov	edx, DWORD PTR _lParam$[ebx]
	sar	edx, 16					; 00000010H
	mov	WORD PTR _pos$140[ebp+2], dx

; 5049 :             Vect2 mousePos = Vect2(float(pos.x), float(pos.y));

	movsx	eax, WORD PTR _pos$140[ebp+2]
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movsx	ecx, WORD PTR _pos$140[ebp]
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _mousePos$121[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 5050 :             Vect2 scaleVal = GetWindowToFrameScale();

	lea	edx, DWORD PTR _scaleVal$118[ebp]
	push	edx
	call	?GetWindowToFrameScale@OBS@@CA?AUVect2@@XZ ; OBS::GetWindowToFrameScale
	add	esp, 4

; 5051 : 
; 5052 :             SceneItem *&scaleItem = App->scaleItem; //just reduces a bit of typing

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 772				; 00000304H
	mov	DWORD PTR _scaleItem$182[ebp], eax

; 5053 : 
; 5054 :             if(!App->bMouseDown)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+746]
	test	edx, edx
	jne	$LN186@RenderFram

; 5055 :             {
; 5056 :                 List<SceneItem*> items;

	lea	ecx, DWORD PTR _items$116[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 5057 :                 App->scene->GetSelectedItems(items);

	lea	eax, DWORD PTR _items$116[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 5058 : 
; 5059 :                 App->scaleItem = NULL;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+772], 0

; 5060 :                 App->modifyType = ItemModifyType_None;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [eax+768], 0

; 5061 : 
; 5062 :                 for(int i=int(items.Num()-1); i>=0; i--)

	lea	ecx, DWORD PTR _items$116[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	sub	eax, 1
	mov	DWORD PTR _i$144[ebp], eax
	jmp	SHORT $LN185@RenderFram
$LN184@RenderFram:
	mov	ecx, DWORD PTR _i$144[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$144[ebp], ecx
$LN185@RenderFram:
	cmp	DWORD PTR _i$144[ebp], 0
	jl	$LN183@RenderFram

; 5063 :                 {
; 5064 :                     SceneItem *item = items[i];

	mov	edx, DWORD PTR _i$144[ebp]
	push	edx
	lea	ecx, DWORD PTR _items$116[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _item$158[ebp], eax

; 5065 : 
; 5066 :                     // Get item in window coordinates
; 5067 :                     Vect2 adjPos  = MapFrameToWindowPos(item->GetPos());

	sub	esp, 8
	push	esp
	mov	ecx, DWORD PTR _item$158[ebp]
	call	DWORD PTR __imp_?GetPos@SceneItem@@QBE?AUVect2@@XZ
	lea	ecx, DWORD PTR _adjPos$90[ebp]
	push	ecx
	call	?MapFrameToWindowPos@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapFrameToWindowPos
	add	esp, 12					; 0000000cH

; 5068 :                     Vect2 adjSize = MapFrameToWindowSize(item->GetSize());

	sub	esp, 8
	push	esp
	mov	ecx, DWORD PTR _item$158[ebp]
	call	DWORD PTR __imp_?GetSize@SceneItem@@QBE?AUVect2@@XZ
	lea	edx, DWORD PTR _adjSize$92[ebp]
	push	edx
	call	?MapFrameToWindowSize@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapFrameToWindowSize
	add	esp, 12					; 0000000cH

; 5069 :                     Vect2 adjSizeBase = MapFrameToWindowSize(item->GetSource() ? item->GetSource()->GetSize() : item->GetSize());

	mov	ecx, DWORD PTR _item$158[ebp]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	test	eax, eax
	je	SHORT $LN217@RenderFram
	mov	ecx, DWORD PTR _item$158[ebp]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	mov	DWORD PTR tv366[ebp], eax
	lea	eax, DWORD PTR $T62[ebp]
	push	eax
	mov	ecx, DWORD PTR tv366[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv366[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR tv375[ebp], eax
	jmp	SHORT $LN218@RenderFram
$LN217@RenderFram:
	lea	ecx, DWORD PTR $T82[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$158[ebp]
	call	DWORD PTR __imp_?GetSize@SceneItem@@QBE?AUVect2@@XZ
	mov	DWORD PTR tv375[ebp], eax
$LN218@RenderFram:
	mov	edx, DWORD PTR tv375[ebp]
	mov	DWORD PTR $T103[ebp], edx
	sub	esp, 8
	mov	ecx, esp
	mov	eax, DWORD PTR $T103[ebp]
	push	eax
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z
	lea	ecx, DWORD PTR _adjSizeBase$34[ebp]
	push	ecx
	call	?MapFrameToWindowSize@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapFrameToWindowSize
	add	esp, 12					; 0000000cH

; 5070 : 
; 5071 :                     ItemModifyType curType = GetItemModifyType(mousePos, adjPos, adjSize, item->GetCrop(), scaleVal);

	lea	edx, DWORD PTR _scaleVal$118[ebp]
	push	edx
	lea	eax, DWORD PTR $T26[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$158[ebp]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	eax
	lea	ecx, DWORD PTR _adjSize$92[ebp]
	push	ecx
	lea	edx, DWORD PTR _adjPos$90[ebp]
	push	edx
	lea	eax, DWORD PTR _mousePos$121[ebp]
	push	eax
	call	?GetItemModifyType@@YA?AW4ItemModifyType@@ABUVect2@@00ABUVect4@@0@Z ; GetItemModifyType
	add	esp, 20					; 00000014H
	mov	DWORD PTR _curType$139[ebp], eax

; 5072 :                     if(curType > ItemModifyType_Move)

	cmp	DWORD PTR _curType$139[ebp], 1
	jle	SHORT $LN182@RenderFram

; 5073 :                     {
; 5074 :                         App->modifyType = curType;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR _curType$139[ebp]
	mov	DWORD PTR [ecx+768], edx

; 5075 :                         scaleItem = item;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR _item$158[ebp]
	mov	DWORD PTR [eax], ecx

; 5076 :                         break;

	jmp	SHORT $LN183@RenderFram
	jmp	SHORT $LN180@RenderFram
$LN182@RenderFram:

; 5077 :                     }
; 5078 :                     else if(curType == ItemModifyType_Move)

	cmp	DWORD PTR _curType$139[ebp], 1
	jne	SHORT $LN180@RenderFram

; 5079 :                         App->modifyType = ItemModifyType_Move;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+768], 1
$LN180@RenderFram:

; 5080 :                 }

	jmp	$LN184@RenderFram
$LN183@RenderFram:

; 5081 :             }

	lea	ecx, DWORD PTR _items$116[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>

; 5082 :             else

	jmp	$LN177@RenderFram
$LN186@RenderFram:

; 5083 :             {
; 5084 :                 Vect2 baseRenderSize = App->GetBaseSize();

	lea	eax, DWORD PTR _baseRenderSize$160[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize

; 5085 :                 Vect2 framePos = MapWindowToFramePos(mousePos);

	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _mousePos$121[ebp]
	push	edx
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z
	lea	eax, DWORD PTR _framePos$80[ebp]
	push	eax
	call	?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapWindowToFramePos
	add	esp, 12					; 0000000cH

; 5086 : 
; 5087 :                 if(!App->bMouseMoved && mousePos.Dist(App->startMousePos) > 2.0f)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+745]
	test	edx, edx
	jne	SHORT $LN178@RenderFram
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 752				; 000002f0H
	push	eax
	lea	ecx, DWORD PTR _mousePos$121[ebp]
	call	DWORD PTR __imp_?Dist@Vect2@@QBEMABU1@@Z
	fstp	DWORD PTR tv3178[ebp]
	movss	xmm0, DWORD PTR tv3178[ebp]
	comiss	xmm0, DWORD PTR __real@40000000
	jbe	SHORT $LN178@RenderFram

; 5088 :                 {
; 5089 :                     SetCapture(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebx]
	push	ecx
	call	DWORD PTR __imp__SetCapture@4

; 5090 :                     App->bMouseMoved = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+745], 1
$LN178@RenderFram:

; 5091 :                 }
; 5092 : 
; 5093 :                 if(App->bMouseMoved)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+745]
	test	ecx, ecx
	je	$LN177@RenderFram

; 5094 :                 {
; 5095 :                     bool bControlDown = HIBYTE(GetKeyState(VK_LCONTROL)) != 0 || HIBYTE(GetKeyState(VK_RCONTROL)) != 0;

	push	162					; 000000a2H
	call	DWORD PTR __imp__GetKeyState@4
	movsx	edx, ax
	shr	edx, 8
	and	edx, 255				; 000000ffH
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN219@RenderFram
	push	163					; 000000a3H
	call	DWORD PTR __imp__GetKeyState@4
	movsx	ecx, ax
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	movzx	edx, cl
	test	edx, edx
	jne	SHORT $LN219@RenderFram
	mov	DWORD PTR tv433[ebp], 0
	jmp	SHORT $LN220@RenderFram
$LN219@RenderFram:
	mov	DWORD PTR tv433[ebp], 1
$LN220@RenderFram:
	mov	al, BYTE PTR tv433[ebp]
	mov	BYTE PTR _bControlDown$180[ebp], al

; 5096 :                     bool bKeepAspect = HIBYTE(GetKeyState(VK_LSHIFT)) == 0 && HIBYTE(GetKeyState(VK_RSHIFT)) == 0;

	push	160					; 000000a0H
	call	DWORD PTR __imp__GetKeyState@4
	movsx	ecx, ax
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	movzx	edx, cl
	test	edx, edx
	jne	SHORT $LN221@RenderFram
	push	161					; 000000a1H
	call	DWORD PTR __imp__GetKeyState@4
	cwde
	shr	eax, 8
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN221@RenderFram
	mov	DWORD PTR tv451[ebp], 1
	jmp	SHORT $LN222@RenderFram
$LN221@RenderFram:
	mov	DWORD PTR tv451[ebp], 0
$LN222@RenderFram:
	mov	dl, BYTE PTR tv451[ebp]
	mov	BYTE PTR _bKeepAspect$179[ebp], dl

; 5097 :                     bool bCropSymmetric = bKeepAspect;

	mov	al, BYTE PTR _bKeepAspect$179[ebp]
	mov	BYTE PTR _bCropSymmetric$181[ebp], al

; 5098 :                     bool isCropping = HIBYTE(GetKeyState(VK_MENU)) != 0;

	push	18					; 00000012H
	call	DWORD PTR __imp__GetKeyState@4
	movsx	ecx, ax
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN223@RenderFram
	mov	DWORD PTR tv461[ebp], 1
	jmp	SHORT $LN224@RenderFram
$LN223@RenderFram:
	mov	DWORD PTR tv461[ebp], 0
$LN224@RenderFram:
	mov	al, BYTE PTR tv461[ebp]
	mov	BYTE PTR _isCropping$155[ebp], al

; 5099 : 
; 5100 :                     if (isCropping) {

	movzx	ecx, BYTE PTR _isCropping$155[ebp]
	test	ecx, ecx
	je	$LN174@RenderFram

; 5101 :                         switch(App->modifyType) {

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+768]
	mov	DWORD PTR tv466[ebp], eax
	mov	ecx, DWORD PTR tv466[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv466[ebp], ecx
	cmp	DWORD PTR tv466[ebp], 14		; 0000000eH
	ja	$LN174@RenderFram
	mov	edx, DWORD PTR tv466[ebp]
	movzx	eax, BYTE PTR $LN305@RenderFram[edx]
	jmp	DWORD PTR $LN307@RenderFram[eax*4]
$LN173@RenderFram:

; 5102 :                             case ItemModifyType_ScaleTop:
; 5103 :                                 App->modifyType = ItemModifyType_CropTop;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+768], 9

; 5104 :                                 break;

	jmp	SHORT $LN174@RenderFram
$LN172@RenderFram:

; 5105 :                             case ItemModifyType_ScaleLeft:
; 5106 :                                 App->modifyType = ItemModifyType_CropLeft;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+768], 5

; 5107 :                                 break;

	jmp	SHORT $LN174@RenderFram
$LN171@RenderFram:

; 5108 :                             case ItemModifyType_ScaleRight:
; 5109 :                                 App->modifyType = ItemModifyType_CropRight;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [eax+768], 13			; 0000000dH

; 5110 :                                 break;

	jmp	SHORT $LN174@RenderFram
$LN170@RenderFram:

; 5111 :                             case ItemModifyType_ScaleBottom:
; 5112 :                                 App->modifyType = ItemModifyType_CropBottom;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+768], 17			; 00000011H

; 5113 :                                 break;

	jmp	SHORT $LN174@RenderFram
$LN169@RenderFram:

; 5114 :                             case ItemModifyType_ScaleTopLeft:
; 5115 :                                 App->modifyType = ItemModifyType_CropTopLeft;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+768], 7

; 5116 :                                 break;

	jmp	SHORT $LN174@RenderFram
$LN168@RenderFram:

; 5117 :                             case ItemModifyType_ScaleTopRight:
; 5118 :                                 App->modifyType = ItemModifyType_CropTopRight;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [eax+768], 11			; 0000000bH

; 5119 :                                 break;

	jmp	SHORT $LN174@RenderFram
$LN167@RenderFram:

; 5120 :                             case ItemModifyType_ScaleBottomRight:
; 5121 :                                 App->modifyType = ItemModifyType_CropBottomRight;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+768], 15			; 0000000fH

; 5122 :                                 break;

	jmp	SHORT $LN174@RenderFram
$LN166@RenderFram:

; 5123 :                             case ItemModifyType_ScaleBottomLeft:
; 5124 :                                 App->modifyType = ItemModifyType_CropBottomLeft;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+768], 3
$LN174@RenderFram:

; 5125 :                                 break;
; 5126 :                         }
; 5127 :                     }
; 5128 : 
; 5129 :                     List<SceneItem*> items;

	lea	ecx, DWORD PTR _items$130[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 5130 :                     App->scene->GetSelectedItems(items);

	lea	eax, DWORD PTR _items$130[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 5131 : 
; 5132 :                     Vect2 totalAdjust = (mousePos-App->startMousePos)*scaleVal;

	lea	edx, DWORD PTR _scaleVal$118[ebp]
	push	edx
	lea	eax, DWORD PTR _totalAdjust$178[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 752				; 000002f0H
	push	ecx
	lea	edx, DWORD PTR $T40[ebp]
	push	edx
	lea	ecx, DWORD PTR _mousePos$121[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@ABU0@@Z

; 5133 :                     Vect2 frameStartMousePos = App->MapWindowToFramePos(App->startMousePos);

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 752				; 000002f0H
	sub	esp, 8
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z
	lea	ecx, DWORD PTR _frameStartMousePos$173[ebp]
	push	ecx
	call	?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapWindowToFramePos
	add	esp, 12					; 0000000cH

; 5134 :                     Vect2 minSize = scaleVal*21.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@41a80000
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	lea	ecx, DWORD PTR _scaleVal$118[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@M@Z

; 5135 :                     Vect2 snapSize = scaleVal*10.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _snapSize$174[ebp]
	push	eax
	lea	ecx, DWORD PTR _scaleVal$118[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@M@Z

; 5136 : 
; 5137 :                     Vect2 baseScale;

	lea	ecx, DWORD PTR _baseScale$120[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@XZ

; 5138 :                     float baseScaleAspect;
; 5139 :                     Vect2 cropFactor;

	lea	ecx, DWORD PTR _cropFactor$175[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@XZ

; 5140 : 
; 5141 :                     if(scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	je	$LN165@RenderFram

; 5142 :                     {
; 5143 :                         if(scaleItem->GetSource())

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	test	eax, eax
	je	SHORT $LN164@RenderFram

; 5144 :                         {
; 5145 :                             baseScale = scaleItem->GetSource()->GetSize();

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	mov	DWORD PTR tv552[ebp], eax
	lea	ecx, DWORD PTR $T78[ebp]
	push	ecx
	mov	edx, DWORD PTR tv552[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv552[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	push	eax
	lea	ecx, DWORD PTR _baseScale$120[ebp]
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5146 :                         }
; 5147 :                         else

	jmp	SHORT $LN163@RenderFram
$LN164@RenderFram:

; 5148 :                         {
; 5149 :                             bKeepAspect = false; //if the source is missing (due to invalid setting or missing plugin), don't allow aspect lock

	mov	BYTE PTR _bKeepAspect$179[ebp], 0

; 5150 :                             baseScale = scaleItem->size;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 36					; 00000024H
	push	ecx
	lea	ecx, DWORD PTR _baseScale$120[ebp]
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z
$LN163@RenderFram:

; 5151 :                         }
; 5152 :                         baseScaleAspect = baseScale.x/baseScale.y;

	movss	xmm0, DWORD PTR _baseScale$120[ebp]
	divss	xmm0, DWORD PTR _baseScale$120[ebp+4]
	movss	DWORD PTR _baseScaleAspect$177[ebp], xmm0

; 5153 :                         cropFactor = baseScale / scaleItem->GetSize();

	lea	edx, DWORD PTR $T30[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetSize@SceneItem@@QBE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR $T76[ebp]
	push	ecx
	lea	ecx, DWORD PTR _baseScale$120[ebp]
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR _cropFactor$175[ebp]
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z
$LN165@RenderFram:

; 5154 :                     }
; 5155 :                      
; 5156 : 
; 5157 :                     int edgeAll = edgeLeft | edgeRight | edgeBottom | edgeTop;

	mov	DWORD PTR _edgeAll$169[ebp], 15		; 0000000fH

; 5158 :                     //more clusterf*** action, straight to your doorstep.  does moving, scaling, snapping, as well as keeping aspect ratio with shift down
; 5159 :                     switch(App->modifyType)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+768]
	mov	DWORD PTR tv571[ebp], eax
	mov	ecx, DWORD PTR tv571[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv571[ebp], ecx
	cmp	DWORD PTR tv571[ebp], 16		; 00000010H
	ja	$LN161@RenderFram
	mov	edx, DWORD PTR tv571[ebp]
	jmp	DWORD PTR $LN308@RenderFram[edx*4]
$LN160@RenderFram:

; 5160 :                     {
; 5161 :                         case ItemModifyType_Move:
; 5162 :                             {
; 5163 :                                 bool bFoundSnap = false;

	mov	BYTE PTR _bFoundSnap$168[ebp], 0

; 5164 : 
; 5165 :                                 for(UINT i=0; i<items.Num(); i++)

	mov	DWORD PTR _i$149[ebp], 0
	jmp	SHORT $LN159@RenderFram
$LN158@RenderFram:
	mov	eax, DWORD PTR _i$149[ebp]
	add	eax, 1
	mov	DWORD PTR _i$149[ebp], eax
$LN159@RenderFram:
	lea	ecx, DWORD PTR _items$130[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$149[ebp], eax
	jae	$LN157@RenderFram

; 5166 :                                 {
; 5167 :                                     SceneItem *item = items[i];

	mov	ecx, DWORD PTR _i$149[ebp]
	push	ecx
	lea	ecx, DWORD PTR _items$130[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _item$176[ebp], edx

; 5168 :                                     item->pos = item->startPos+totalAdjust;

	lea	eax, DWORD PTR _totalAdjust$178[ebp]
	push	eax
	lea	ecx, DWORD PTR $T51[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$176[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR _item$176[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5169 : 
; 5170 :                                     if(!bControlDown)

	movzx	edx, BYTE PTR _bControlDown$180[ebp]
	test	edx, edx
	jne	$LN147@RenderFram

; 5171 :                                     {
; 5172 :                                         Vect2 pos = item->pos;

	mov	eax, DWORD PTR _item$176[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR _pos$117[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z

; 5173 :                                         Vect2 bottomRight = pos+item->size;

	mov	ecx, DWORD PTR _item$176[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	lea	edx, DWORD PTR _bottomRight$113[ebp]
	push	edx
	lea	ecx, DWORD PTR _pos$117[ebp]
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5174 :                                         pos += item->GetCropTL();

	lea	eax, DWORD PTR $T74[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$176[ebp]
	call	DWORD PTR __imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR _pos$117[ebp]
	call	DWORD PTR __imp_??YVect2@@QAEAAU0@ABU0@@Z

; 5175 :                                         bottomRight += item->GetCropBR();

	lea	ecx, DWORD PTR $T49[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$176[ebp]
	call	DWORD PTR __imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR _bottomRight$113[ebp]
	call	DWORD PTR __imp_??YVect2@@QAEAAU0@ABU0@@Z

; 5176 : 
; 5177 :                                         bool bVerticalSnap = true;

	mov	BYTE PTR _bVerticalSnap$164[ebp], 1

; 5178 :                                         if(CloseFloat(pos.x, 0.0f, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _pos$117[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN155@RenderFram

; 5179 :                                             item->pos.x = -item->GetCrop().x;

	lea	edx, DWORD PTR $T24[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$176[ebp]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [eax]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _item$176[ebp]
	movss	DWORD PTR [eax+28], xmm0
	jmp	SHORT $LN152@RenderFram
$LN155@RenderFram:

; 5180 :                                         else if(CloseFloat(bottomRight.x, baseRenderSize.x, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _bottomRight$113[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN153@RenderFram

; 5181 :                                             item->pos.x = baseRenderSize.x-item->size.x+item->GetCrop().w;

	mov	ecx, DWORD PTR _item$176[ebp]
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	subss	xmm0, DWORD PTR [ecx+36]
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$176[ebp]
	movss	DWORD PTR tv4317[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4317[ebp]
	addss	xmm0, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _item$176[ebp]
	movss	DWORD PTR [eax+28], xmm0

; 5182 :                                         else

	jmp	SHORT $LN152@RenderFram
$LN153@RenderFram:

; 5183 :                                             bVerticalSnap = false;

	mov	BYTE PTR _bVerticalSnap$164[ebp], 0
$LN152@RenderFram:

; 5184 : 
; 5185 :                                         bool bHorizontalSnap = true;

	mov	BYTE PTR _bHorizontalSnap$166[ebp], 1

; 5186 :                                         if(CloseFloat(pos.y, 0.0f, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _pos$117[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN151@RenderFram

; 5187 :                                             item->pos.y = -item->GetCrop().y;

	lea	ecx, DWORD PTR $T22[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$176[ebp]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [eax+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, DWORD PTR _item$176[ebp]
	movss	DWORD PTR [edx+32], xmm0
	jmp	SHORT $LN148@RenderFram
$LN151@RenderFram:

; 5188 :                                         else if(CloseFloat(bottomRight.y, baseRenderSize.y, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _bottomRight$113[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN149@RenderFram

; 5189 :                                             item->pos.y = baseRenderSize.y-item->size.y+item->GetCrop().z;

	mov	eax, DWORD PTR _item$176[ebp]
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	subss	xmm0, DWORD PTR [eax+40]
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$176[ebp]
	movss	DWORD PTR tv4319[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4319[ebp]
	addss	xmm0, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _item$176[ebp]
	movss	DWORD PTR [edx+32], xmm0

; 5190 :                                         else

	jmp	SHORT $LN148@RenderFram
$LN149@RenderFram:

; 5191 :                                             bHorizontalSnap = true;

	mov	BYTE PTR _bHorizontalSnap$166[ebp], 1
$LN148@RenderFram:

; 5192 : 
; 5193 :                                         if(bVerticalSnap || bHorizontalSnap)

	movzx	eax, BYTE PTR _bVerticalSnap$164[ebp]
	test	eax, eax
	jne	SHORT $LN146@RenderFram
	movzx	ecx, BYTE PTR _bHorizontalSnap$166[ebp]
	test	ecx, ecx
	je	SHORT $LN147@RenderFram
$LN146@RenderFram:

; 5194 :                                         {
; 5195 :                                             bFoundSnap = true;

	mov	BYTE PTR _bFoundSnap$168[ebp], 1

; 5196 :                                             totalAdjust = item->pos-item->startPos;

	mov	edx, DWORD PTR _item$176[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	lea	eax, DWORD PTR $T72[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$176[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR _totalAdjust$178[ebp]
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z
$LN147@RenderFram:

; 5197 :                                         }
; 5198 :                                     }
; 5199 :                                 }

	jmp	$LN158@RenderFram
$LN157@RenderFram:

; 5200 : 
; 5201 :                                 if(bFoundSnap)

	movzx	ecx, BYTE PTR _bFoundSnap$168[ebp]
	test	ecx, ecx
	je	SHORT $LN142@RenderFram

; 5202 :                                 {
; 5203 :                                     for(UINT i=0; i<items.Num(); i++)

	mov	DWORD PTR _i$147[ebp], 0
	jmp	SHORT $LN144@RenderFram
$LN143@RenderFram:
	mov	edx, DWORD PTR _i$147[ebp]
	add	edx, 1
	mov	DWORD PTR _i$147[ebp], edx
$LN144@RenderFram:
	lea	ecx, DWORD PTR _items$130[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$147[ebp], eax
	jae	SHORT $LN142@RenderFram

; 5204 :                                     {
; 5205 :                                         SceneItem *item = items[i];

	mov	eax, DWORD PTR _i$147[ebp]
	push	eax
	lea	ecx, DWORD PTR _items$130[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _item$123[ebp], ecx

; 5206 :                                         item->pos = item->startPos+totalAdjust;

	lea	edx, DWORD PTR _totalAdjust$178[ebp]
	push	edx
	lea	eax, DWORD PTR $T47[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$123[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR _item$123[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5207 :                                     }

	jmp	SHORT $LN143@RenderFram
$LN142@RenderFram:

; 5208 :                                 }
; 5209 : 
; 5210 :                                 break;

	jmp	$LN161@RenderFram
$LN141@RenderFram:

; 5211 :                             }
; 5212 : 
; 5213 :                         case ItemModifyType_CropTop:
; 5214 :                             if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN140@RenderFram

; 5215 :                                 break;

	jmp	$LN161@RenderFram
$LN140@RenderFram:

; 5216 :                             scaleItem->crop.y = ((frameStartMousePos.y - scaleItem->pos.y) + totalAdjust.y) * cropFactor.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [eax+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+52], xmm0

; 5217 :                             if (!bCropSymmetric)

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN139@RenderFram

; 5218 :                                 scaleItem->crop.z = ((frameStartMousePos.y - scaleItem->pos.y) + totalAdjust.y) * cropFactor.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [edx+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+56], xmm0
$LN139@RenderFram:

; 5219 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeTop | (!bCropSymmetric ? edgeBottom : 0), !bCropSymmetric);

	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	jne	SHORT $LN225@RenderFram
	mov	BYTE PTR tv777[ebp], 1
	jmp	SHORT $LN226@RenderFram
$LN225@RenderFram:
	mov	BYTE PTR tv777[ebp], 0
$LN226@RenderFram:
	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN227@RenderFram
	mov	DWORD PTR tv781[ebp], 8
	jmp	SHORT $LN228@RenderFram
$LN227@RenderFram:
	mov	DWORD PTR tv781[ebp], 0
$LN228@RenderFram:
	movzx	ecx, BYTE PTR _bControlDown$180[ebp]
	test	ecx, ecx
	jne	SHORT $LN229@RenderFram
	mov	BYTE PTR tv786[ebp], 1
	jmp	SHORT $LN230@RenderFram
$LN229@RenderFram:
	mov	BYTE PTR tv786[ebp], 0
$LN230@RenderFram:
	movzx	edx, BYTE PTR tv777[ebp]
	push	edx
	mov	eax, DWORD PTR tv781[ebp]
	or	eax, 4
	push	eax
	movzx	ecx, BYTE PTR tv786[ebp]
	push	ecx
	lea	edx, DWORD PTR _snapSize$174[ebp]
	push	edx
	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	push	ecx
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5220 :                             break;

	jmp	$LN161@RenderFram
$LN138@RenderFram:

; 5221 : 
; 5222 :                         case ItemModifyType_CropBottom:
; 5223 :                             if (!scaleItem)

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN137@RenderFram

; 5224 :                                 break;

	jmp	$LN161@RenderFram
$LN137@RenderFram:

; 5225 :                             scaleItem->crop.z = ((scaleItem->pos.y + scaleItem->size.y - frameStartMousePos.y) - totalAdjust.y) * cropFactor.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR [eax+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0

; 5226 :                             if (!bCropSymmetric)

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN136@RenderFram

; 5227 :                                 scaleItem->crop.y = ((scaleItem->pos.y + scaleItem->size.y - frameStartMousePos.y) - totalAdjust.y) * cropFactor.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+32]
	addss	xmm0, DWORD PTR [ecx+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0
$LN136@RenderFram:

; 5228 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeBottom | (!bCropSymmetric ? edgeTop : 0), !bCropSymmetric);

	movzx	ecx, BYTE PTR _bCropSymmetric$181[ebp]
	test	ecx, ecx
	jne	SHORT $LN231@RenderFram
	mov	BYTE PTR tv820[ebp], 1
	jmp	SHORT $LN232@RenderFram
$LN231@RenderFram:
	mov	BYTE PTR tv820[ebp], 0
$LN232@RenderFram:
	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	jne	SHORT $LN233@RenderFram
	mov	DWORD PTR tv824[ebp], 4
	jmp	SHORT $LN234@RenderFram
$LN233@RenderFram:
	mov	DWORD PTR tv824[ebp], 0
$LN234@RenderFram:
	movzx	eax, BYTE PTR _bControlDown$180[ebp]
	test	eax, eax
	jne	SHORT $LN235@RenderFram
	mov	BYTE PTR tv829[ebp], 1
	jmp	SHORT $LN236@RenderFram
$LN235@RenderFram:
	mov	BYTE PTR tv829[ebp], 0
$LN236@RenderFram:
	movzx	ecx, BYTE PTR tv820[ebp]
	push	ecx
	mov	edx, DWORD PTR tv824[ebp]
	or	edx, 8
	push	edx
	movzx	eax, BYTE PTR tv829[ebp]
	push	eax
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5229 :                             break;

	jmp	$LN161@RenderFram
$LN135@RenderFram:

; 5230 : 
; 5231 :                         case ItemModifyType_CropLeft:
; 5232 :                             if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN134@RenderFram

; 5233 :                                 break;

	jmp	$LN161@RenderFram
$LN134@RenderFram:

; 5234 :                             scaleItem->crop.x = ((frameStartMousePos.x - scaleItem->pos.x) + totalAdjust.x) * cropFactor.x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR [eax+28]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+48], xmm0

; 5235 :                             if (!bCropSymmetric)

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN133@RenderFram

; 5236 :                                 scaleItem->crop.w = ((frameStartMousePos.x - scaleItem->pos.x) + totalAdjust.x) * cropFactor.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+60], xmm0
$LN133@RenderFram:

; 5237 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeLeft | (!bCropSymmetric ? edgeRight : 0), !bCropSymmetric);

	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	jne	SHORT $LN237@RenderFram
	mov	BYTE PTR tv857[ebp], 1
	jmp	SHORT $LN238@RenderFram
$LN237@RenderFram:
	mov	BYTE PTR tv857[ebp], 0
$LN238@RenderFram:
	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN239@RenderFram
	mov	DWORD PTR tv861[ebp], 2
	jmp	SHORT $LN240@RenderFram
$LN239@RenderFram:
	mov	DWORD PTR tv861[ebp], 0
$LN240@RenderFram:
	movzx	ecx, BYTE PTR _bControlDown$180[ebp]
	test	ecx, ecx
	jne	SHORT $LN241@RenderFram
	mov	BYTE PTR tv866[ebp], 1
	jmp	SHORT $LN242@RenderFram
$LN241@RenderFram:
	mov	BYTE PTR tv866[ebp], 0
$LN242@RenderFram:
	movzx	edx, BYTE PTR tv857[ebp]
	push	edx
	mov	eax, DWORD PTR tv861[ebp]
	or	eax, 1
	push	eax
	movzx	ecx, BYTE PTR tv866[ebp]
	push	ecx
	lea	edx, DWORD PTR _snapSize$174[ebp]
	push	edx
	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	push	ecx
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5238 :                             break;

	jmp	$LN161@RenderFram
$LN132@RenderFram:

; 5239 : 
; 5240 :                         case ItemModifyType_CropRight:
; 5241 :                             if (!scaleItem)

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN131@RenderFram

; 5242 :                                 break;

	jmp	$LN161@RenderFram
$LN131@RenderFram:

; 5243 :                             scaleItem->crop.w = ((scaleItem->pos.x + scaleItem->size.x - frameStartMousePos.x) - totalAdjust.x) * cropFactor.x;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+28]
	addss	xmm0, DWORD PTR [eax+36]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+60], xmm0

; 5244 :                             if (!bCropSymmetric)

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN130@RenderFram

; 5245 :                                 scaleItem->crop.x = ((scaleItem->pos.x + scaleItem->size.x - frameStartMousePos.x) - totalAdjust.x) * cropFactor.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, DWORD PTR [ecx+36]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+48], xmm0
$LN130@RenderFram:

; 5246 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeRight | (!bCropSymmetric ? edgeLeft : 0), !bCropSymmetric);

	movzx	ecx, BYTE PTR _bCropSymmetric$181[ebp]
	test	ecx, ecx
	jne	SHORT $LN243@RenderFram
	mov	BYTE PTR tv900[ebp], 1
	jmp	SHORT $LN244@RenderFram
$LN243@RenderFram:
	mov	BYTE PTR tv900[ebp], 0
$LN244@RenderFram:
	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	jne	SHORT $LN245@RenderFram
	mov	DWORD PTR tv904[ebp], 1
	jmp	SHORT $LN246@RenderFram
$LN245@RenderFram:
	mov	DWORD PTR tv904[ebp], 0
$LN246@RenderFram:
	movzx	eax, BYTE PTR _bControlDown$180[ebp]
	test	eax, eax
	jne	SHORT $LN247@RenderFram
	mov	BYTE PTR tv909[ebp], 1
	jmp	SHORT $LN248@RenderFram
$LN247@RenderFram:
	mov	BYTE PTR tv909[ebp], 0
$LN248@RenderFram:
	movzx	ecx, BYTE PTR tv900[ebp]
	push	ecx
	mov	edx, DWORD PTR tv904[ebp]
	or	edx, 2
	push	edx
	movzx	eax, BYTE PTR tv909[ebp]
	push	eax
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5247 :                             break;

	jmp	$LN161@RenderFram
$LN129@RenderFram:

; 5248 :                             
; 5249 :                         case ItemModifyType_CropBottomLeft:
; 5250 :                             if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN128@RenderFram

; 5251 :                                 break;

	jmp	$LN161@RenderFram
$LN128@RenderFram:

; 5252 :                             if (bCropSymmetric)

	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	je	SHORT $LN127@RenderFram

; 5253 :                             {
; 5254 :                                 scaleItem->crop.z = ((scaleItem->pos.y + scaleItem->size.y - frameStartMousePos.y) - totalAdjust.y) * cropFactor.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR [eax+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0

; 5255 :                                 scaleItem->crop.x = ((frameStartMousePos.x - scaleItem->pos.x) + totalAdjust.x) * cropFactor.x;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR [ecx+28]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+48], xmm0

; 5256 :                             }
; 5257 :                             else

	jmp	$LN126@RenderFram
$LN127@RenderFram:

; 5258 :                             {
; 5259 :                                 float amount = MIN(((scaleItem->pos.y + scaleItem->size.y - frameStartMousePos.y) - totalAdjust.y), ((frameStartMousePos.x - scaleItem->pos.x) + totalAdjust.x));

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+32]
	addss	xmm0, DWORD PTR [ecx+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm1, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm1, DWORD PTR [eax+28]
	addss	xmm1, DWORD PTR _totalAdjust$178[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN249@RenderFram
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+32]
	addss	xmm0, DWORD PTR [ecx+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	movss	DWORD PTR tv972[ebp], xmm0
	jmp	SHORT $LN250@RenderFram
$LN249@RenderFram:
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR [eax+28]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	movss	DWORD PTR tv972[ebp], xmm0
$LN250@RenderFram:
	movss	xmm0, DWORD PTR tv972[ebp]
	movss	DWORD PTR _amount$145[ebp], xmm0

; 5260 :                                 scaleItem->crop.w = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$145[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+60], xmm0

; 5261 :                                 scaleItem->crop.x = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$145[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+48], xmm0

; 5262 :                                 scaleItem->crop.y = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$145[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0

; 5263 :                                 scaleItem->crop.z = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$145[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0
$LN126@RenderFram:

; 5264 :                             }
; 5265 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeLeft | edgeBottom | (!bCropSymmetric ? edgeAll : 0), !bCropSymmetric);

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN251@RenderFram
	mov	BYTE PTR tv988[ebp], 1
	jmp	SHORT $LN252@RenderFram
$LN251@RenderFram:
	mov	BYTE PTR tv988[ebp], 0
$LN252@RenderFram:
	movzx	ecx, BYTE PTR _bCropSymmetric$181[ebp]
	test	ecx, ecx
	jne	SHORT $LN253@RenderFram
	mov	edx, DWORD PTR _edgeAll$169[ebp]
	mov	DWORD PTR tv992[ebp], edx
	jmp	SHORT $LN254@RenderFram
$LN253@RenderFram:
	mov	DWORD PTR tv992[ebp], 0
$LN254@RenderFram:
	movzx	eax, BYTE PTR _bControlDown$180[ebp]
	test	eax, eax
	jne	SHORT $LN255@RenderFram
	mov	BYTE PTR tv997[ebp], 1
	jmp	SHORT $LN256@RenderFram
$LN255@RenderFram:
	mov	BYTE PTR tv997[ebp], 0
$LN256@RenderFram:
	movzx	ecx, BYTE PTR tv988[ebp]
	push	ecx
	mov	edx, DWORD PTR tv992[ebp]
	or	edx, 9
	push	edx
	movzx	eax, BYTE PTR tv997[ebp]
	push	eax
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5266 :                             break;

	jmp	$LN161@RenderFram
$LN125@RenderFram:

; 5267 : 
; 5268 :                         case ItemModifyType_CropBottomRight:
; 5269 :                             if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN124@RenderFram

; 5270 :                                 break;

	jmp	$LN161@RenderFram
$LN124@RenderFram:

; 5271 :                             if (bCropSymmetric)

	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	je	SHORT $LN123@RenderFram

; 5272 :                             {
; 5273 :                                 scaleItem->crop.z = ((scaleItem->pos.y + scaleItem->size.y - frameStartMousePos.y) - totalAdjust.y) * cropFactor.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR [eax+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0

; 5274 :                                 scaleItem->crop.w = ((scaleItem->pos.x + scaleItem->size.x - frameStartMousePos.x) - totalAdjust.x) * cropFactor.x;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+28]
	addss	xmm0, DWORD PTR [eax+36]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+60], xmm0

; 5275 :                             }
; 5276 :                             else

	jmp	$LN122@RenderFram
$LN123@RenderFram:

; 5277 :                             {
; 5278 :                                 float amount = MIN(((scaleItem->pos.y + scaleItem->size.y - frameStartMousePos.y) - totalAdjust.y), ((scaleItem->pos.x + scaleItem->size.x - frameStartMousePos.x) - totalAdjust.x));

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR [eax+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm1, DWORD PTR [edx+28]
	addss	xmm1, DWORD PTR [ecx+36]
	subss	xmm1, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm1, DWORD PTR _totalAdjust$178[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN257@RenderFram
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [eax+32]
	addss	xmm0, DWORD PTR [edx+40]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	movss	DWORD PTR tv1069[ebp], xmm0
	jmp	SHORT $LN258@RenderFram
$LN257@RenderFram:
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+28]
	addss	xmm0, DWORD PTR [eax+36]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	movss	DWORD PTR tv1069[ebp], xmm0
$LN258@RenderFram:
	movss	xmm0, DWORD PTR tv1069[ebp]
	movss	DWORD PTR _amount$143[ebp], xmm0

; 5279 :                                 scaleItem->crop.w = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$143[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+60], xmm0

; 5280 :                                 scaleItem->crop.x = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$143[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+48], xmm0

; 5281 :                                 scaleItem->crop.y = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$143[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0

; 5282 :                                 scaleItem->crop.z = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$143[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0
$LN122@RenderFram:

; 5283 :                             }
; 5284 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeRight | edgeBottom | (!bCropSymmetric ? edgeAll : 0), !bCropSymmetric);

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN259@RenderFram
	mov	BYTE PTR tv1085[ebp], 1
	jmp	SHORT $LN260@RenderFram
$LN259@RenderFram:
	mov	BYTE PTR tv1085[ebp], 0
$LN260@RenderFram:
	movzx	ecx, BYTE PTR _bCropSymmetric$181[ebp]
	test	ecx, ecx
	jne	SHORT $LN261@RenderFram
	mov	edx, DWORD PTR _edgeAll$169[ebp]
	mov	DWORD PTR tv1089[ebp], edx
	jmp	SHORT $LN262@RenderFram
$LN261@RenderFram:
	mov	DWORD PTR tv1089[ebp], 0
$LN262@RenderFram:
	movzx	eax, BYTE PTR _bControlDown$180[ebp]
	test	eax, eax
	jne	SHORT $LN263@RenderFram
	mov	BYTE PTR tv1094[ebp], 1
	jmp	SHORT $LN264@RenderFram
$LN263@RenderFram:
	mov	BYTE PTR tv1094[ebp], 0
$LN264@RenderFram:
	movzx	ecx, BYTE PTR tv1085[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1089[ebp]
	or	edx, 10					; 0000000aH
	push	edx
	movzx	eax, BYTE PTR tv1094[ebp]
	push	eax
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5285 :                             break;

	jmp	$LN161@RenderFram
$LN121@RenderFram:

; 5286 : 
; 5287 :                         case ItemModifyType_CropTopLeft:
; 5288 :                             if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN120@RenderFram

; 5289 :                                 break;

	jmp	$LN161@RenderFram
$LN120@RenderFram:

; 5290 :                             if (bCropSymmetric)

	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	je	SHORT $LN119@RenderFram

; 5291 :                             {
; 5292 :                                 scaleItem->crop.y = ((frameStartMousePos.y - scaleItem->pos.y) + totalAdjust.y) * cropFactor.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0

; 5293 :                                 scaleItem->crop.x = ((frameStartMousePos.x - scaleItem->pos.x) + totalAdjust.x) * cropFactor.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+48], xmm0

; 5294 :                             }
; 5295 :                             else

	jmp	$LN118@RenderFram
$LN119@RenderFram:

; 5296 :                             {
; 5297 :                                 float amount = MIN(((frameStartMousePos.y - scaleItem->pos.y) + totalAdjust.y), ((frameStartMousePos.x - scaleItem->pos.x) + totalAdjust.x));

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [eax+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm1, DWORD PTR [edx+28]
	addss	xmm1, DWORD PTR _totalAdjust$178[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN265@RenderFram
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	movss	DWORD PTR tv1148[ebp], xmm0
	jmp	SHORT $LN266@RenderFram
$LN265@RenderFram:
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR [eax+28]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	movss	DWORD PTR tv1148[ebp], xmm0
$LN266@RenderFram:
	movss	xmm0, DWORD PTR tv1148[ebp]
	movss	DWORD PTR _amount$142[ebp], xmm0

; 5298 :                                 scaleItem->crop.w = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$142[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+60], xmm0

; 5299 :                                 scaleItem->crop.x = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$142[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+48], xmm0

; 5300 :                                 scaleItem->crop.y = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$142[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0

; 5301 :                                 scaleItem->crop.z = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$142[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0
$LN118@RenderFram:

; 5302 :                             }
; 5303 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeLeft | edgeTop | (!bCropSymmetric ? edgeAll : 0), !bCropSymmetric);

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN267@RenderFram
	mov	BYTE PTR tv1164[ebp], 1
	jmp	SHORT $LN268@RenderFram
$LN267@RenderFram:
	mov	BYTE PTR tv1164[ebp], 0
$LN268@RenderFram:
	movzx	ecx, BYTE PTR _bCropSymmetric$181[ebp]
	test	ecx, ecx
	jne	SHORT $LN269@RenderFram
	mov	edx, DWORD PTR _edgeAll$169[ebp]
	mov	DWORD PTR tv1168[ebp], edx
	jmp	SHORT $LN270@RenderFram
$LN269@RenderFram:
	mov	DWORD PTR tv1168[ebp], 0
$LN270@RenderFram:
	movzx	eax, BYTE PTR _bControlDown$180[ebp]
	test	eax, eax
	jne	SHORT $LN271@RenderFram
	mov	BYTE PTR tv1173[ebp], 1
	jmp	SHORT $LN272@RenderFram
$LN271@RenderFram:
	mov	BYTE PTR tv1173[ebp], 0
$LN272@RenderFram:
	movzx	ecx, BYTE PTR tv1164[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1168[ebp]
	or	edx, 5
	push	edx
	movzx	eax, BYTE PTR tv1173[ebp]
	push	eax
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5304 :                             break;

	jmp	$LN161@RenderFram
$LN117@RenderFram:

; 5305 : 
; 5306 :                         case ItemModifyType_CropTopRight:
; 5307 :                             if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN116@RenderFram

; 5308 :                                 break;

	jmp	$LN161@RenderFram
$LN116@RenderFram:

; 5309 :                             if (bCropSymmetric)

	movzx	edx, BYTE PTR _bCropSymmetric$181[ebp]
	test	edx, edx
	je	SHORT $LN115@RenderFram

; 5310 :                             {
; 5311 :                                 scaleItem->crop.y = ((frameStartMousePos.y - scaleItem->pos.y) + totalAdjust.y) * cropFactor.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0

; 5312 :                                 scaleItem->crop.w = ((scaleItem->pos.x + scaleItem->size.x - frameStartMousePos.x) - totalAdjust.x) * cropFactor.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, DWORD PTR [ecx+36]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+60], xmm0

; 5313 :                             }
; 5314 :                             else

	jmp	$LN114@RenderFram
$LN115@RenderFram:

; 5315 :                             {
; 5316 :                                 float amount = MIN(((frameStartMousePos.y - scaleItem->pos.y) + totalAdjust.y), ((scaleItem->pos.x + scaleItem->size.x - frameStartMousePos.x) - totalAdjust.x));

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [edx+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm1, DWORD PTR [ecx+28]
	addss	xmm1, DWORD PTR [eax+36]
	subss	xmm1, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm1, DWORD PTR _totalAdjust$178[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN273@RenderFram
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _frameStartMousePos$173[ebp+4]
	subss	xmm0, DWORD PTR [edx+32]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	movss	DWORD PTR tv1236[ebp], xmm0
	jmp	SHORT $LN274@RenderFram
$LN273@RenderFram:
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+28]
	addss	xmm0, DWORD PTR [eax+36]
	subss	xmm0, DWORD PTR _frameStartMousePos$173[ebp]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	movss	DWORD PTR tv1236[ebp], xmm0
$LN274@RenderFram:
	movss	xmm0, DWORD PTR tv1236[ebp]
	movss	DWORD PTR _amount$152[ebp], xmm0

; 5317 :                                 scaleItem->crop.w = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$152[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+60], xmm0

; 5318 :                                 scaleItem->crop.x = amount * cropFactor.x;

	movss	xmm0, DWORD PTR _amount$152[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+48], xmm0

; 5319 :                                 scaleItem->crop.y = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$152[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0

; 5320 :                                 scaleItem->crop.z = amount * cropFactor.y;

	movss	xmm0, DWORD PTR _amount$152[ebp]
	mulss	xmm0, DWORD PTR _cropFactor$175[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0
$LN114@RenderFram:

; 5321 :                             }
; 5322 :                             EnsureCropValid(scaleItem, minSize, snapSize, !bControlDown, edgeRight | edgeTop | (!bCropSymmetric ? edgeAll : 0), !bCropSymmetric);

	movzx	eax, BYTE PTR _bCropSymmetric$181[ebp]
	test	eax, eax
	jne	SHORT $LN275@RenderFram
	mov	BYTE PTR tv1252[ebp], 1
	jmp	SHORT $LN276@RenderFram
$LN275@RenderFram:
	mov	BYTE PTR tv1252[ebp], 0
$LN276@RenderFram:
	movzx	ecx, BYTE PTR _bCropSymmetric$181[ebp]
	test	ecx, ecx
	jne	SHORT $LN277@RenderFram
	mov	edx, DWORD PTR _edgeAll$169[ebp]
	mov	DWORD PTR tv1256[ebp], edx
	jmp	SHORT $LN278@RenderFram
$LN277@RenderFram:
	mov	DWORD PTR tv1256[ebp], 0
$LN278@RenderFram:
	movzx	eax, BYTE PTR _bControlDown$180[ebp]
	test	eax, eax
	jne	SHORT $LN279@RenderFram
	mov	BYTE PTR tv1261[ebp], 1
	jmp	SHORT $LN280@RenderFram
$LN279@RenderFram:
	mov	BYTE PTR tv1261[ebp], 0
$LN280@RenderFram:
	movzx	ecx, BYTE PTR tv1252[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1256[ebp]
	or	edx, 6
	push	edx
	movzx	eax, BYTE PTR tv1261[ebp]
	push	eax
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5323 :                             break;

	jmp	$LN161@RenderFram
$LN113@RenderFram:

; 5324 : 
; 5325 :                         case ItemModifyType_ScaleBottom:
; 5326 :                             {
; 5327 :                                 if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN112@RenderFram

; 5328 :                                     break;

	jmp	$LN161@RenderFram
$LN112@RenderFram:

; 5329 :                                 Vect2 pos = scaleItem->pos + scaleItem->GetCropTL();

	lea	edx, DWORD PTR $T70[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR _pos$94[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5330 : 
; 5331 :                                 scaleItem->size.y = scaleItem->startSize.y+totalAdjust.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+24]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+40], xmm0

; 5332 :                                 if(scaleItem->size.y < minSize.y)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _minSize$170[ebp+4]
	comiss	xmm0, DWORD PTR [edx+40]
	jbe	SHORT $LN111@RenderFram

; 5333 :                                     scaleItem->size.y = minSize.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _minSize$170[ebp+4]
	movss	DWORD PTR [ecx+40], xmm0
$LN111@RenderFram:

; 5334 : 
; 5335 :                                 if(!bControlDown)

	movzx	edx, BYTE PTR _bControlDown$180[ebp]
	test	edx, edx
	jne	$LN109@RenderFram

; 5336 :                                 {
; 5337 :                                     float bottom = scaleItem->pos.y+scaleItem->size.y-scaleItem->GetCrop().z;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR [eax+40]
	lea	ecx, DWORD PTR $T20[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	movss	DWORD PTR tv4353[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4353[ebp]
	subss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR _bottom$137[ebp], xmm0

; 5338 : 
; 5339 :                                     if(CloseFloat(bottom, baseRenderSize.y, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _bottom$137[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN109@RenderFram

; 5340 :                                     {
; 5341 :                                         bottom = baseRenderSize.y;

	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	movss	DWORD PTR _bottom$137[ebp], xmm0

; 5342 :                                         scaleItem->size.y = bottom-scaleItem->pos.y+scaleItem->GetCrop().z;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _bottom$137[ebp]
	subss	xmm0, DWORD PTR [ecx+32]
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR tv4355[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4355[ebp]
	addss	xmm0, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0
$LN109@RenderFram:

; 5343 :                                     }
; 5344 :                                 }
; 5345 : 
; 5346 :                                 if(bKeepAspect)

	movzx	eax, BYTE PTR _bKeepAspect$179[ebp]
	test	eax, eax
	je	SHORT $LN108@RenderFram

; 5347 :                                     scaleItem->size.x = scaleItem->size.y*baseScaleAspect;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+40]
	mulss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+36], xmm0

; 5348 :                                 else

	jmp	SHORT $LN107@RenderFram
$LN108@RenderFram:

; 5349 :                                     scaleItem->size.x = scaleItem->startSize.x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+36], eax
$LN107@RenderFram:

; 5350 : 
; 5351 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	ecx, DWORD PTR _edgeAll$169[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _snapSize$174[ebp]
	push	edx
	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	push	ecx
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5352 : 
; 5353 :                                 scaleItem->pos = pos - scaleItem->GetCropTL();

	lea	edx, DWORD PTR $T45[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR $T68[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pos$94[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5354 :                             }
; 5355 :                             break;

	jmp	$LN161@RenderFram
$LN106@RenderFram:

; 5356 : 
; 5357 :                         case ItemModifyType_ScaleTop:
; 5358 :                             {
; 5359 :                                 if (!scaleItem)

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN105@RenderFram

; 5360 :                                     break;

	jmp	$LN161@RenderFram
$LN105@RenderFram:

; 5361 :                                 Vect2 pos = scaleItem->pos + scaleItem->size + scaleItem->GetCropBR();

	lea	ecx, DWORD PTR $T43[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR _pos$86[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 36					; 00000024H
	push	edx
	lea	eax, DWORD PTR $T66[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5362 : 
; 5363 :                                 scaleItem->size.y = scaleItem->startSize.y-totalAdjust.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+24]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0

; 5364 :                                 if(scaleItem->size.y < minSize.y)

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _minSize$170[ebp+4]
	comiss	xmm0, DWORD PTR [ecx+40]
	jbe	SHORT $LN104@RenderFram

; 5365 :                                     scaleItem->size.y = minSize.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _minSize$170[ebp+4]
	movss	DWORD PTR [eax+40], xmm0
$LN104@RenderFram:

; 5366 : 
; 5367 :                                 if(!bControlDown)

	movzx	ecx, BYTE PTR _bControlDown$180[ebp]
	test	ecx, ecx
	jne	$LN102@RenderFram

; 5368 :                                 {
; 5369 :                                     float top = scaleItem->startPos.y+(scaleItem->startSize.y-scaleItem->size.y)+scaleItem->GetCrop().x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+24]
	subss	xmm0, DWORD PTR [ecx+40]
	addss	xmm0, DWORD PTR [eax+16]
	lea	edx, DWORD PTR $T18[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR tv4357[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4357[ebp]
	addss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _top$102[ebp], xmm0

; 5370 :                                     if(CloseFloat(top, 0.0f, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _top$102[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN102@RenderFram

; 5371 :                                         scaleItem->size.y = scaleItem->startPos.y+scaleItem->startSize.y+scaleItem->GetCrop().x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+16]
	addss	xmm0, DWORD PTR [ecx+24]
	lea	edx, DWORD PTR $T12[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR tv4359[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4359[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0
$LN102@RenderFram:

; 5372 :                                 }
; 5373 : 
; 5374 :                                 if(bKeepAspect)

	movzx	eax, BYTE PTR _bKeepAspect$179[ebp]
	test	eax, eax
	je	SHORT $LN101@RenderFram

; 5375 :                                     scaleItem->size.x = scaleItem->size.y*baseScaleAspect;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+40]
	mulss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+36], xmm0

; 5376 :                                 else

	jmp	SHORT $LN100@RenderFram
$LN101@RenderFram:

; 5377 :                                     scaleItem->size.x = scaleItem->startSize.x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+36], eax
$LN100@RenderFram:

; 5378 : 
; 5379 :                                 totalAdjust.y = scaleItem->startSize.y-scaleItem->size.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+24]
	subss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR _totalAdjust$178[ebp+4], xmm0

; 5380 :                                 scaleItem->pos.y = scaleItem->startPos.y+totalAdjust.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+16]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+32], xmm0

; 5381 : 
; 5382 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	eax, DWORD PTR _edgeAll$169[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5383 : 
; 5384 :                                 scaleItem->pos = pos - scaleItem->GetCropBR() - scaleItem->size;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 36					; 00000024H
	push	edx
	lea	eax, DWORD PTR $T41[ebp]
	push	eax
	lea	ecx, DWORD PTR $T64[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR $T39[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$86[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5385 :                             }
; 5386 :                             break;

	jmp	$LN161@RenderFram
$LN99@RenderFram:

; 5387 : 
; 5388 :                         case ItemModifyType_ScaleRight:
; 5389 :                             {
; 5390 :                                 if (!scaleItem)

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN98@RenderFram

; 5391 :                                     break;

	jmp	$LN161@RenderFram
$LN98@RenderFram:

; 5392 :                                 Vect2 pos = scaleItem->pos + scaleItem->GetCropTL();

	lea	eax, DWORD PTR $T84[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	edx, DWORD PTR _pos$97[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5393 : 
; 5394 :                                 scaleItem->size.x = scaleItem->startSize.x+totalAdjust.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+20]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+36], xmm0

; 5395 :                                 if(scaleItem->size.x < minSize.x)

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _minSize$170[ebp]
	comiss	xmm0, DWORD PTR [eax+36]
	jbe	SHORT $LN97@RenderFram

; 5396 :                                     scaleItem->size.x = minSize.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _minSize$170[ebp]
	movss	DWORD PTR [edx+36], xmm0
$LN97@RenderFram:

; 5397 : 
; 5398 :                                 if(!bControlDown)

	movzx	eax, BYTE PTR _bControlDown$180[ebp]
	test	eax, eax
	jne	$LN95@RenderFram

; 5399 :                                 {
; 5400 :                                     float right = scaleItem->pos.x + scaleItem->size.x-scaleItem->GetCrop().y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, DWORD PTR [ecx+36]
	lea	edx, DWORD PTR $T16[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR tv4361[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4361[ebp]
	subss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR _right$141[ebp], xmm0

; 5401 : 
; 5402 :                                     if(CloseFloat(right, baseRenderSize.x, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _right$141[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN95@RenderFram

; 5403 :                                     {
; 5404 :                                         right = baseRenderSize.x;

	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	movss	DWORD PTR _right$141[ebp], xmm0

; 5405 :                                         scaleItem->size.x = right-scaleItem->pos.x+scaleItem->GetCrop().y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _right$141[ebp]
	subss	xmm0, DWORD PTR [edx+28]
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	movss	DWORD PTR tv4363[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4363[ebp]
	addss	xmm0, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+36], xmm0
$LN95@RenderFram:

; 5406 :                                     }
; 5407 :                                 }
; 5408 : 
; 5409 :                                 if(bKeepAspect)

	movzx	ecx, BYTE PTR _bKeepAspect$179[ebp]
	test	ecx, ecx
	je	SHORT $LN94@RenderFram

; 5410 :                                     scaleItem->size.y = scaleItem->size.x/baseScaleAspect;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+36]
	divss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0

; 5411 :                                 else

	jmp	SHORT $LN93@RenderFram
$LN94@RenderFram:

; 5412 :                                     scaleItem->size.y = scaleItem->startSize.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+40], ecx
$LN93@RenderFram:

; 5413 : 
; 5414 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	edx, DWORD PTR _edgeAll$169[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _snapSize$174[ebp]
	push	eax
	lea	ecx, DWORD PTR _minSize$170[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	push	edx
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5415 : 
; 5416 :                                 scaleItem->pos = pos - scaleItem->GetCropTL();

	lea	eax, DWORD PTR $T37[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	edx, DWORD PTR $T60[ebp]
	push	edx
	lea	ecx, DWORD PTR _pos$97[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5417 :                             }
; 5418 :                             break;

	jmp	$LN161@RenderFram
$LN92@RenderFram:

; 5419 : 
; 5420 :                         case ItemModifyType_ScaleLeft:
; 5421 :                             {
; 5422 :                                 if (!scaleItem)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN91@RenderFram

; 5423 :                                     break;

	jmp	$LN161@RenderFram
$LN91@RenderFram:

; 5424 :                                 Vect2 pos = scaleItem->pos + scaleItem->size + scaleItem->GetCropBR();

	lea	edx, DWORD PTR $T35[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR _pos$88[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 36					; 00000024H
	push	eax
	lea	ecx, DWORD PTR $T58[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5425 : 
; 5426 :                                 scaleItem->size.x = scaleItem->startSize.x-totalAdjust.x;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+36], xmm0

; 5427 :                                 if(scaleItem->size.x < minSize.x)

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _minSize$170[ebp]
	comiss	xmm0, DWORD PTR [edx+36]
	jbe	SHORT $LN90@RenderFram

; 5428 :                                     scaleItem->size.x = minSize.x;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR _minSize$170[ebp]
	movss	DWORD PTR [ecx+36], xmm0
$LN90@RenderFram:

; 5429 : 
; 5430 :                                 if(!bControlDown)

	movzx	edx, BYTE PTR _bControlDown$180[ebp]
	test	edx, edx
	jne	$LN88@RenderFram

; 5431 :                                 {
; 5432 :                                     float left = scaleItem->startPos.x+(scaleItem->startSize.x-scaleItem->size.x)+scaleItem->GetCrop().w;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+20]
	subss	xmm0, DWORD PTR [edx+36]
	addss	xmm0, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	movss	DWORD PTR tv4365[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4365[ebp]
	addss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR _left$108[ebp], xmm0

; 5433 : 
; 5434 :                                     if(CloseFloat(left, 0.0f, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _left$108[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN88@RenderFram

; 5435 :                                         scaleItem->size.x = scaleItem->startPos.x+scaleItem->startSize.x+scaleItem->GetCrop().w;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [eax+12]
	addss	xmm0, DWORD PTR [edx+20]
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	movss	DWORD PTR tv4367[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv4367[ebp]
	addss	xmm0, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+36], xmm0
$LN88@RenderFram:

; 5436 :                                 }
; 5437 : 
; 5438 :                                 if(bKeepAspect)

	movzx	ecx, BYTE PTR _bKeepAspect$179[ebp]
	test	ecx, ecx
	je	SHORT $LN87@RenderFram

; 5439 :                                     scaleItem->size.y = scaleItem->size.x/baseScaleAspect;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+36]
	divss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0

; 5440 :                                 else

	jmp	SHORT $LN86@RenderFram
$LN87@RenderFram:

; 5441 :                                     scaleItem->size.y = scaleItem->startSize.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+40], ecx
$LN86@RenderFram:

; 5442 : 
; 5443 :                                 totalAdjust.x = scaleItem->startSize.x-scaleItem->size.x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [eax+20]
	subss	xmm0, DWORD PTR [edx+36]
	movss	DWORD PTR _totalAdjust$178[ebp], xmm0

; 5444 :                                 scaleItem->pos.x = scaleItem->startPos.x+totalAdjust.x;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+12]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+28], xmm0

; 5445 : 
; 5446 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	ecx, DWORD PTR _edgeAll$169[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _snapSize$174[ebp]
	push	edx
	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	push	ecx
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5447 : 
; 5448 :                                 scaleItem->pos = pos - scaleItem->GetCropBR() - scaleItem->size;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 36					; 00000024H
	push	eax
	lea	ecx, DWORD PTR $T33[ebp]
	push	ecx
	lea	edx, DWORD PTR $T56[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR $T31[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pos$88[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5449 :                             }
; 5450 :                             break;

	jmp	$LN161@RenderFram
$LN85@RenderFram:

; 5451 : 
; 5452 :                         case ItemModifyType_ScaleBottomRight:
; 5453 :                             {
; 5454 :                                 if (!scaleItem)

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN84@RenderFram

; 5455 :                                     break;

	jmp	$LN161@RenderFram
$LN84@RenderFram:

; 5456 :                                 Vect2 pos = scaleItem->pos + scaleItem->GetCropTL();

	lea	ecx, DWORD PTR $T54[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR _pos$96[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5457 : 
; 5458 :                                 scaleItem->size = scaleItem->startSize+totalAdjust;

	lea	edx, DWORD PTR _totalAdjust$178[ebp]
	push	edx
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5459 :                                 scaleItem->size.ClampMin(minSize);

	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?ClampMin@Vect2@@QAEAAU1@ABU1@@Z

; 5460 : 
; 5461 :                                 if(!bControlDown)

	movzx	edx, BYTE PTR _bControlDown$180[ebp]
	test	edx, edx
	jne	$LN81@RenderFram

; 5462 :                                 {
; 5463 :                                     Vect2 cropPart = Vect2(scaleItem->GetCrop().y, scaleItem->GetCrop().z);

	lea	eax, DWORD PTR $T25[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T23[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _cropPart$112[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 5464 :                                     Vect2 lowerRight = scaleItem->pos+scaleItem->size-cropPart;

	lea	ecx, DWORD PTR _cropPart$112[ebp]
	push	ecx
	lea	edx, DWORD PTR _lowerRight$129[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 36					; 00000024H
	push	ecx
	lea	edx, DWORD PTR $T52[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z

; 5465 :                                 
; 5466 : 
; 5467 :                                     if(CloseFloat(lowerRight.x, baseRenderSize.x, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _lowerRight$129[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN82@RenderFram

; 5468 :                                     {
; 5469 :                                         lowerRight.x = baseRenderSize.x;

	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	movss	DWORD PTR _lowerRight$129[ebp], xmm0

; 5470 :                                         scaleItem->size.x = lowerRight.x-scaleItem->pos.x+cropPart.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _lowerRight$129[ebp]
	subss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, DWORD PTR _cropPart$112[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+36], xmm0
$LN82@RenderFram:

; 5471 :                                     }
; 5472 :                                     if(CloseFloat(lowerRight.y, baseRenderSize.y, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _lowerRight$129[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN81@RenderFram

; 5473 :                                     {
; 5474 :                                         lowerRight.y = baseRenderSize.y;

	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	movss	DWORD PTR _lowerRight$129[ebp+4], xmm0

; 5475 :                                         scaleItem->size.y = lowerRight.y-scaleItem->pos.y+cropPart.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _lowerRight$129[ebp+4]
	subss	xmm0, DWORD PTR [eax+32]
	addss	xmm0, DWORD PTR _cropPart$112[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0
$LN81@RenderFram:

; 5476 :                                     }
; 5477 :                                 }
; 5478 : 
; 5479 :                                 if(bKeepAspect)

	movzx	eax, BYTE PTR _bKeepAspect$179[ebp]
	test	eax, eax
	je	SHORT $LN77@RenderFram

; 5480 :                                 {
; 5481 :                                     float scaleAspect = scaleItem->size.x/scaleItem->size.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+36]
	divss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR _scaleAspect$127[ebp], xmm0

; 5482 :                                     if(scaleAspect < baseScaleAspect)

	movss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	comiss	xmm0, DWORD PTR _scaleAspect$127[ebp]
	jbe	SHORT $LN79@RenderFram

; 5483 :                                         scaleItem->size.x = scaleItem->size.y*baseScaleAspect;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+40]
	mulss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+36], xmm0
	jmp	SHORT $LN77@RenderFram
$LN79@RenderFram:

; 5484 :                                     else if(scaleAspect > baseScaleAspect)

	movss	xmm0, DWORD PTR _scaleAspect$127[ebp]
	comiss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	jbe	SHORT $LN77@RenderFram

; 5485 :                                         scaleItem->size.y = scaleItem->size.x/baseScaleAspect;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+36]
	divss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+40], xmm0
$LN77@RenderFram:

; 5486 :                                 }
; 5487 : 
; 5488 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	ecx, DWORD PTR _edgeAll$169[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _snapSize$174[ebp]
	push	edx
	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	push	ecx
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5489 : 
; 5490 :                                 scaleItem->pos = pos - scaleItem->GetCropTL();

	lea	edx, DWORD PTR $T27[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCropTL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	ecx, DWORD PTR $T50[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pos$96[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5491 :                             }
; 5492 :                             break;

	jmp	$LN161@RenderFram
$LN76@RenderFram:

; 5493 : 
; 5494 :                         case ItemModifyType_ScaleTopLeft:
; 5495 :                             {
; 5496 :                                 if (!scaleItem)

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN75@RenderFram

; 5497 :                                     break;

	jmp	$LN161@RenderFram
$LN75@RenderFram:

; 5498 :                                 Vect2 pos = scaleItem->pos + scaleItem->size + scaleItem->GetCropBR();

	lea	ecx, DWORD PTR $T38[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR _pos$95[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 36					; 00000024H
	push	edx
	lea	eax, DWORD PTR $T48[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5499 : 
; 5500 :                                 scaleItem->size = scaleItem->startSize-totalAdjust;

	lea	edx, DWORD PTR _totalAdjust$178[ebp]
	push	edx
	lea	eax, DWORD PTR $T32[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5501 :                                 scaleItem->size.ClampMin(minSize);

	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?ClampMin@Vect2@@QAEAAU1@ABU1@@Z

; 5502 : 
; 5503 :                                 if(!bControlDown)

	movzx	edx, BYTE PTR _bControlDown$180[ebp]
	test	edx, edx
	jne	$LN72@RenderFram

; 5504 :                                 {
; 5505 :                                     Vect2 cropPart = Vect2(scaleItem->crop.w, scaleItem->crop.x);

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+48]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	push	ecx
	movss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _cropPart$110[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 5506 :                                     Vect2 topLeft = scaleItem->startPos+(scaleItem->startSize-scaleItem->size)+cropPart;

	lea	ecx, DWORD PTR _cropPart$110[ebp]
	push	ecx
	lea	edx, DWORD PTR _topLeft$100[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 36					; 00000024H
	push	ecx
	lea	edx, DWORD PTR $T46[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR $T36[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5507 : 
; 5508 :                                     if(CloseFloat(topLeft.x, 0.0f, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _topLeft$100[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN73@RenderFram

; 5509 :                                         scaleItem->size.x = scaleItem->startPos.x+scaleItem->startSize.x+cropPart.x;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+12]
	addss	xmm0, DWORD PTR [eax+20]
	addss	xmm0, DWORD PTR _cropPart$110[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+36], xmm0
$LN73@RenderFram:

; 5510 :                                     if(CloseFloat(topLeft.y, 0.0f, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _topLeft$100[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN72@RenderFram

; 5511 :                                         scaleItem->size.y = scaleItem->startPos.y+scaleItem->startSize.y+cropPart.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, DWORD PTR [eax+24]
	addss	xmm0, DWORD PTR _cropPart$110[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0
$LN72@RenderFram:

; 5512 :                                 }
; 5513 : 
; 5514 :                                 if(bKeepAspect)

	movzx	eax, BYTE PTR _bKeepAspect$179[ebp]
	test	eax, eax
	je	SHORT $LN68@RenderFram

; 5515 :                                 {
; 5516 :                                     float scaleAspect = scaleItem->size.x/scaleItem->size.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+36]
	divss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR _scaleAspect$125[ebp], xmm0

; 5517 :                                     if(scaleAspect < baseScaleAspect)

	movss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	comiss	xmm0, DWORD PTR _scaleAspect$125[ebp]
	jbe	SHORT $LN70@RenderFram

; 5518 :                                         scaleItem->size.x = scaleItem->size.y*baseScaleAspect;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+40]
	mulss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+36], xmm0
	jmp	SHORT $LN68@RenderFram
$LN70@RenderFram:

; 5519 :                                     else if(scaleAspect > baseScaleAspect)

	movss	xmm0, DWORD PTR _scaleAspect$125[ebp]
	comiss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	jbe	SHORT $LN68@RenderFram

; 5520 :                                         scaleItem->size.y = scaleItem->size.x/baseScaleAspect;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+36]
	divss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+40], xmm0
$LN68@RenderFram:

; 5521 :                                 }
; 5522 : 
; 5523 :                                 totalAdjust = scaleItem->startSize-scaleItem->size;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 36					; 00000024H
	push	edx
	lea	eax, DWORD PTR $T44[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR _totalAdjust$178[ebp]
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5524 :                                 scaleItem->pos = scaleItem->startPos+totalAdjust;

	lea	edx, DWORD PTR _totalAdjust$178[ebp]
	push	edx
	lea	eax, DWORD PTR $T28[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5525 : 
; 5526 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	eax, DWORD PTR _edgeAll$169[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5527 : 
; 5528 :                                 scaleItem->pos = pos - scaleItem->GetCropBR() - scaleItem->size;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 36					; 00000024H
	push	edx
	lea	eax, DWORD PTR $T42[ebp]
	push	eax
	lea	ecx, DWORD PTR $T83[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCropBR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR $T81[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$95[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5529 :                             }
; 5530 :                             break;

	jmp	$LN161@RenderFram
$LN67@RenderFram:

; 5531 : 
; 5532 :                         case ItemModifyType_ScaleBottomLeft:
; 5533 :                             {
; 5534 :                                 if (!scaleItem)

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN66@RenderFram

; 5535 :                                     break;

	jmp	$LN161@RenderFram
$LN66@RenderFram:

; 5536 :                                 Vect2 pos = scaleItem->pos + Vect2(scaleItem->size.x, 0) + scaleItem->GetCropTR();

	lea	eax, DWORD PTR $T79[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCropTR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	edx, DWORD PTR _pos$93[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+36]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T77[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	lea	edx, DWORD PTR $T75[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5537 : 
; 5538 :                                 scaleItem->size.x = scaleItem->startSize.x-totalAdjust.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+20]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+36], xmm0

; 5539 :                                 scaleItem->size.y = scaleItem->startSize.y+totalAdjust.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+24]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0

; 5540 :                                 scaleItem->size.ClampMin(minSize);

	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?ClampMin@Vect2@@QAEAAU1@ABU1@@Z

; 5541 : 
; 5542 :                                 if(!bControlDown)

	movzx	edx, BYTE PTR _bControlDown$180[ebp]
	test	edx, edx
	jne	$LN63@RenderFram

; 5543 :                                 {
; 5544 :                                     Vect2 cropPart = Vect2(scaleItem->GetCrop().w, scaleItem->GetCrop().z);

	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T19[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _cropPart$115[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 5545 :                                     float left = scaleItem->startPos.x+(scaleItem->startSize.x-scaleItem->size.x)+cropPart.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, DWORD PTR [eax+36]
	addss	xmm0, DWORD PTR [edx+12]
	addss	xmm0, DWORD PTR _cropPart$115[ebp]
	movss	DWORD PTR _left$107[ebp], xmm0

; 5546 :                                     float bottom = scaleItem->pos.y+scaleItem->size.y-cropPart.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+32]
	addss	xmm0, DWORD PTR [ecx+40]
	subss	xmm0, DWORD PTR _cropPart$115[ebp+4]
	movss	DWORD PTR _bottom$135[ebp], xmm0

; 5547 : 
; 5548 :                                     if(CloseFloat(left, 0.0f, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _left$107[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN64@RenderFram

; 5549 :                                         scaleItem->size.x = scaleItem->startPos.x+scaleItem->startSize.x+cropPart.x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [eax+12]
	addss	xmm0, DWORD PTR [edx+20]
	addss	xmm0, DWORD PTR _cropPart$115[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+36], xmm0
$LN64@RenderFram:

; 5550 : 
; 5551 :                                     if(CloseFloat(bottom, baseRenderSize.y, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _bottom$135[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN63@RenderFram

; 5552 :                                     {
; 5553 :                                         bottom = baseRenderSize.y;

	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp+4]
	movss	DWORD PTR _bottom$135[ebp], xmm0

; 5554 :                                         scaleItem->size.y = bottom-scaleItem->pos.y+cropPart.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _bottom$135[ebp]
	subss	xmm0, DWORD PTR [eax+32]
	addss	xmm0, DWORD PTR _cropPart$115[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0
$LN63@RenderFram:

; 5555 :                                     }
; 5556 :                                 }
; 5557 : 
; 5558 :                                 if(bKeepAspect)

	movzx	eax, BYTE PTR _bKeepAspect$179[ebp]
	test	eax, eax
	je	SHORT $LN59@RenderFram

; 5559 :                                 {
; 5560 :                                     float scaleAspect = scaleItem->size.x/scaleItem->size.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+36]
	divss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR _scaleAspect$126[ebp], xmm0

; 5561 :                                     if(scaleAspect < baseScaleAspect)

	movss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	comiss	xmm0, DWORD PTR _scaleAspect$126[ebp]
	jbe	SHORT $LN61@RenderFram

; 5562 :                                         scaleItem->size.x = scaleItem->size.y*baseScaleAspect;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+40]
	mulss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+36], xmm0
	jmp	SHORT $LN59@RenderFram
$LN61@RenderFram:

; 5563 :                                     else if(scaleAspect > baseScaleAspect)

	movss	xmm0, DWORD PTR _scaleAspect$126[ebp]
	comiss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	jbe	SHORT $LN59@RenderFram

; 5564 :                                         scaleItem->size.y = scaleItem->size.x/baseScaleAspect;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+36]
	divss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+40], xmm0
$LN59@RenderFram:

; 5565 :                                 }
; 5566 : 
; 5567 :                                 totalAdjust.x = scaleItem->startSize.x-scaleItem->size.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+20]
	subss	xmm0, DWORD PTR [ecx+36]
	movss	DWORD PTR _totalAdjust$178[ebp], xmm0

; 5568 :                                 scaleItem->pos.x = scaleItem->startPos.x+totalAdjust.x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+12]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+28], xmm0

; 5569 : 
; 5570 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	eax, DWORD PTR _edgeAll$169[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid

; 5571 : 
; 5572 :                                 scaleItem->pos = pos - scaleItem->GetCropTR() - Vect2(scaleItem->size.x, 0);

	add	esp, 20					; 00000014H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	push	ecx
	movss	xmm0, DWORD PTR [edx+36]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T73[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	lea	eax, DWORD PTR $T71[ebp]
	push	eax
	lea	ecx, DWORD PTR $T69[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCropTR@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR $T67[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$93[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5573 :                             }
; 5574 :                             break;

	jmp	$LN161@RenderFram
$LN58@RenderFram:

; 5575 : 
; 5576 :                         case ItemModifyType_ScaleTopRight:
; 5577 :                             {
; 5578 :                                 if (!scaleItem)

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN57@RenderFram

; 5579 :                                     break;

	jmp	$LN161@RenderFram
$LN57@RenderFram:

; 5580 : 
; 5581 :                                 Vect2 pos = scaleItem->pos + Vect2(0, scaleItem->size.y) + scaleItem->GetCropBL();

	lea	eax, DWORD PTR $T65[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCropBL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	edx, DWORD PTR _pos$91[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T63[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	lea	edx, DWORD PTR $T61[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 5582 : 
; 5583 :                                 scaleItem->size.x = scaleItem->startSize.x+totalAdjust.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+20]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+36], xmm0

; 5584 :                                 scaleItem->size.y = scaleItem->startSize.y-totalAdjust.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+24]
	subss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0

; 5585 :                                 scaleItem->size.ClampMin(minSize);

	lea	eax, DWORD PTR _minSize$170[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?ClampMin@Vect2@@QAEAAU1@ABU1@@Z

; 5586 : 
; 5587 :                                 if(!bControlDown)

	movzx	edx, BYTE PTR _bControlDown$180[ebp]
	test	edx, edx
	jne	$LN54@RenderFram

; 5588 :                                 {
; 5589 :                                     Vect2 cropPart = Vect2(scaleItem->GetCrop().y, scaleItem->GetCrop().x);

	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T15[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _cropPart$119[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 5590 :                                     float right = scaleItem->pos.x+scaleItem->size.x-cropPart.x;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+28]
	addss	xmm0, DWORD PTR [ecx+36]
	subss	xmm0, DWORD PTR _cropPart$119[ebp]
	movss	DWORD PTR _right$131[ebp], xmm0

; 5591 :                                     float top = scaleItem->startPos.y+(scaleItem->startSize.y-scaleItem->size.y)+cropPart.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+24]
	subss	xmm0, DWORD PTR [ecx+40]
	addss	xmm0, DWORD PTR [eax+16]
	addss	xmm0, DWORD PTR _cropPart$119[ebp+4]
	movss	DWORD PTR _top$106[ebp], xmm0

; 5592 : 
; 5593 :                                     if(CloseFloat(right, baseRenderSize.x, snapSize.x))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _right$131[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN55@RenderFram

; 5594 :                                     {
; 5595 :                                         right = baseRenderSize.x;

	movss	xmm0, DWORD PTR _baseRenderSize$160[ebp]
	movss	DWORD PTR _right$131[ebp], xmm0

; 5596 :                                         scaleItem->size.x = right-scaleItem->pos.x+cropPart.x;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR _right$131[ebp]
	subss	xmm0, DWORD PTR [eax+28]
	addss	xmm0, DWORD PTR _cropPart$119[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+36], xmm0
$LN55@RenderFram:

; 5597 :                                     }
; 5598 : 
; 5599 :                                     if(CloseFloat(top, 0.0f, snapSize.y))

	push	ecx
	movss	xmm0, DWORD PTR _snapSize$174[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _top$106[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN54@RenderFram

; 5600 :                                         scaleItem->size.y = scaleItem->startPos.y+scaleItem->startSize.y+cropPart.y;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, DWORD PTR [eax+24]
	addss	xmm0, DWORD PTR _cropPart$119[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+40], xmm0
$LN54@RenderFram:

; 5601 :                                 }
; 5602 : 
; 5603 :                                 if(bKeepAspect)

	movzx	eax, BYTE PTR _bKeepAspect$179[ebp]
	test	eax, eax
	je	SHORT $LN50@RenderFram

; 5604 :                                 {
; 5605 :                                     float scaleAspect = scaleItem->size.x/scaleItem->size.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+36]
	divss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR _scaleAspect$122[ebp], xmm0

; 5606 :                                     if(scaleAspect < baseScaleAspect)

	movss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	comiss	xmm0, DWORD PTR _scaleAspect$122[ebp]
	jbe	SHORT $LN52@RenderFram

; 5607 :                                         scaleItem->size.x = scaleItem->size.y*baseScaleAspect;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+40]
	mulss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+36], xmm0
	jmp	SHORT $LN50@RenderFram
$LN52@RenderFram:

; 5608 :                                     else if(scaleAspect > baseScaleAspect)

	movss	xmm0, DWORD PTR _scaleAspect$122[ebp]
	comiss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	jbe	SHORT $LN50@RenderFram

; 5609 :                                         scaleItem->size.y = scaleItem->size.x/baseScaleAspect;

	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+36]
	divss	xmm0, DWORD PTR _baseScaleAspect$177[ebp]
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+40], xmm0
$LN50@RenderFram:

; 5610 :                                 }
; 5611 : 
; 5612 :                                 totalAdjust.y = scaleItem->startSize.y-scaleItem->size.y;

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [edx+24]
	subss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR _totalAdjust$178[ebp+4], xmm0

; 5613 :                                 scaleItem->pos.y = scaleItem->startPos.y+totalAdjust.y;

	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+16]
	addss	xmm0, DWORD PTR _totalAdjust$178[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+32], xmm0

; 5614 : 
; 5615 :                                 EnsureCropValid(scaleItem, minSize, snapSize, false, edgeAll, false);

	push	0
	mov	eax, DWORD PTR _edgeAll$169[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _snapSize$174[ebp]
	push	ecx
	lea	edx, DWORD PTR _minSize$170[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$182[ebp]
	push	eax
	call	?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ; OBS::EnsureCropValid
	add	esp, 24					; 00000018H

; 5616 : 
; 5617 :                                 scaleItem->pos = pos - scaleItem->GetCropBL() - Vect2(0, scaleItem->size.y);

	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	edx, DWORD PTR [ecx]
	push	ecx
	movss	xmm0, DWORD PTR [edx+40]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T59[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	lea	eax, DWORD PTR $T57[ebp]
	push	eax
	lea	ecx, DWORD PTR $T55[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCropBL@SceneItem@@QAE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR $T53[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$91[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR _scaleItem$182[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z
$LN161@RenderFram:

; 5618 :                             }
; 5619 :                             break;
; 5620 : 
; 5621 :                     }
; 5622 : 
; 5623 :                     App->lastMousePos = mousePos;

	lea	edx, DWORD PTR _mousePos$121[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 760				; 000002f8H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 5624 :                 }

	lea	ecx, DWORD PTR _items$130[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN177@RenderFram:

; 5625 :             }
; 5626 : 
; 5627 :             switch(App->modifyType)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+768]
	mov	DWORD PTR tv2244[ebp], ecx
	mov	edx, DWORD PTR tv2244[ebp]
	sub	edx, 2
	mov	DWORD PTR tv2244[ebp], edx
	cmp	DWORD PTR tv2244[ebp], 15		; 0000000fH
	ja	$LN43@RenderFram
	mov	eax, DWORD PTR tv2244[ebp]
	movzx	ecx, BYTE PTR $LN306@RenderFram[eax]
	jmp	DWORD PTR $LN309@RenderFram[ecx*4]
$LN47@RenderFram:

; 5628 :             {
; 5629 :                 case ItemModifyType_ScaleBottomLeft:
; 5630 :                 case ItemModifyType_ScaleTopRight:
; 5631 :                     SetCursor(LoadCursor(NULL, IDC_SIZENESW));

	push	32643					; 00007f83H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 5632 :                     return 0;

	xor	eax, eax
	jmp	$LN213@RenderFram
$LN46@RenderFram:

; 5633 : 
; 5634 :                 case ItemModifyType_ScaleBottomRight:
; 5635 :                 case ItemModifyType_ScaleTopLeft:
; 5636 :                     SetCursor(LoadCursor(NULL, IDC_SIZENWSE));

	push	32642					; 00007f82H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 5637 :                     return 0;

	xor	eax, eax
	jmp	$LN213@RenderFram
$LN45@RenderFram:

; 5638 : 
; 5639 :                 case ItemModifyType_CropLeft:
; 5640 :                 case ItemModifyType_CropRight:
; 5641 :                 case ItemModifyType_ScaleLeft:
; 5642 :                 case ItemModifyType_ScaleRight:
; 5643 :                     SetCursor(LoadCursor(NULL, IDC_SIZEWE));

	push	32644					; 00007f84H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 5644 :                     return 0;

	xor	eax, eax
	jmp	$LN213@RenderFram
$LN44@RenderFram:

; 5645 : 
; 5646 :                 case ItemModifyType_CropTop:
; 5647 :                 case ItemModifyType_CropBottom:
; 5648 :                 case ItemModifyType_ScaleTop:
; 5649 :                 case ItemModifyType_ScaleBottom:
; 5650 :                     SetCursor(LoadCursor(NULL, IDC_SIZENS));

	push	32645					; 00007f85H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 5651 :                     return 0;

	xor	eax, eax
	jmp	$LN213@RenderFram
$LN43@RenderFram:

; 5652 : 
; 5653 :                 default:
; 5654 :                     SetCursor(LoadCursor(NULL, IDC_ARROW));

	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 5655 :                     return 0;

	xor	eax, eax
	jmp	$LN213@RenderFram
$LN48@RenderFram:

; 5656 :             }
; 5657 :         }
; 5658 :     }

	jmp	$LN1@RenderFram
$LN188@RenderFram:

; 5659 :     else if(message == WM_LBUTTONUP || message == WM_RBUTTONUP)

	cmp	DWORD PTR _message$[ebx], 514		; 00000202H
	je	SHORT $LN40@RenderFram
	cmp	DWORD PTR _message$[ebx], 517		; 00000205H
	jne	$LN41@RenderFram
$LN40@RenderFram:

; 5660 :     {
; 5661 :         if((App->bEditMode || message == WM_RBUTTONUP) && App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+741]
	test	eax, eax
	jne	SHORT $LN38@RenderFram
	cmp	DWORD PTR _message$[ebx], 517		; 00000205H
	jne	$LN37@RenderFram
$LN38@RenderFram:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	$LN37@RenderFram

; 5662 :         {
; 5663 :             POINTS pos;
; 5664 :             pos.x = (short)LOWORD(lParam);

	mov	dx, WORD PTR _lParam$[ebx]
	mov	WORD PTR _pos$132[ebp], dx

; 5665 :             pos.y = (short)HIWORD(lParam);

	mov	eax, DWORD PTR _lParam$[ebx]
	sar	eax, 16					; 00000010H
	mov	WORD PTR _pos$132[ebp+2], ax

; 5666 : 
; 5667 :             if(App->bMouseDown || App->bRMouseDown)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+746]
	test	edx, edx
	jne	SHORT $LN36@RenderFram
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+747]
	test	ecx, ecx
	je	$LN37@RenderFram
$LN36@RenderFram:

; 5668 :             {
; 5669 :                 Vect2 mousePos = Vect2(float(pos.x), float(pos.y));

	movsx	edx, WORD PTR _pos$132[ebp+2]
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movsx	eax, WORD PTR _pos$132[ebp]
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _mousePos$89[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 5670 : 
; 5671 :                 bool bControlDown = HIBYTE(GetKeyState(VK_CONTROL)) != 0;

	push	17					; 00000011H
	call	DWORD PTR __imp__GetKeyState@4
	movsx	ecx, ax
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN281@RenderFram
	mov	DWORD PTR tv2298[ebp], 1
	jmp	SHORT $LN282@RenderFram
$LN281@RenderFram:
	mov	DWORD PTR tv2298[ebp], 0
$LN282@RenderFram:
	mov	al, BYTE PTR tv2298[ebp]
	mov	BYTE PTR _bControlDown$171[ebp], al

; 5672 : 
; 5673 :                 List<SceneItem*> items;

	lea	ecx, DWORD PTR _items$151[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 5674 : 
; 5675 :                 if(!App->bMouseMoved)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+745]
	test	edx, edx
	jne	$LN35@RenderFram

; 5676 :                 {
; 5677 :                     Vect2 framePos = MapWindowToFramePos(mousePos);

	sub	esp, 8
	mov	ecx, esp
	lea	eax, DWORD PTR _mousePos$89[ebp]
	push	eax
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z
	lea	ecx, DWORD PTR _framePos$87[ebp]
	push	ecx
	call	?MapWindowToFramePos@OBS@@CA?AUVect2@@U2@@Z ; OBS::MapWindowToFramePos
	add	esp, 12					; 0000000cH

; 5678 :                     App->scene->GetItemsOnPoint(framePos, items);

	lea	edx, DWORD PTR _items$151[ebp]
	push	edx
	lea	eax, DWORD PTR _framePos$87[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetItemsOnPoint@Scene@@QBEXABUVect2@@AAV?$List@PAVSceneItem@@@@@Z

; 5679 : 
; 5680 :                     if(bControlDown && App->bItemWasSelected && items.Num())

	movzx	edx, BYTE PTR _bControlDown$171[ebp]
	test	edx, edx
	je	SHORT $LN34@RenderFram
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+748]
	test	ecx, ecx
	je	SHORT $LN34@RenderFram
	lea	ecx, DWORD PTR _items$151[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	SHORT $LN34@RenderFram

; 5681 :                     {
; 5682 :                         SceneItem *lastItem = items.Last();

	lea	ecx, DWORD PTR _items$151[ebp]
	call	?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ ; List<SceneItem *>::Last
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _lastItem$124[ebp], edx

; 5683 :                         lastItem->Select(false);

	push	0
	mov	ecx, DWORD PTR _lastItem$124[ebp]
	call	DWORD PTR __imp_?Select@SceneItem@@QAEX_N@Z

; 5684 :                         ListView_SetItemState(hwndSources, lastItem->GetID(), 0, LVIS_SELECTED);

	mov	DWORD PTR __macro_lvi$6[ebp+16], 2
	mov	DWORD PTR __macro_lvi$6[ebp+12], 0
	lea	eax, DWORD PTR __macro_lvi$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastItem$124[ebp]
	call	DWORD PTR __imp_?GetID@SceneItem@@QAEIXZ
	push	eax
	push	4139					; 0000102bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 5685 :                     }
; 5686 :                     else

	jmp	$LN28@RenderFram
$LN34@RenderFram:

; 5687 :                     {
; 5688 :                         if(items.Num())

	lea	ecx, DWORD PTR _items$151[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	$LN32@RenderFram

; 5689 :                         {
; 5690 :                             SceneItem *topItem = items.Last();

	lea	ecx, DWORD PTR _items$151[ebp]
	call	?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ ; List<SceneItem *>::Last
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _topItem$128[ebp], edx

; 5691 : 
; 5692 :                             if(!bControlDown)

	movzx	eax, BYTE PTR _bControlDown$171[ebp]
	test	eax, eax
	jne	SHORT $LN31@RenderFram

; 5693 :                             {
; 5694 :                                 App->bChangingSources = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 1

; 5695 :                                 ListView_SetItemState(hwndSources, -1, 0, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$5[ebp+16], 3
	mov	DWORD PTR __macro_lvi$5[ebp+12], 0
	lea	edx, DWORD PTR __macro_lvi$5[ebp]
	push	edx
	push	-1
	push	4139					; 0000102bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 5696 :                                 App->bChangingSources = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 0

; 5697 : 
; 5698 :                                 App->scene->DeselectAll();

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?DeselectAll@Scene@@AAEXXZ
$LN31@RenderFram:

; 5699 :                             }
; 5700 : 
; 5701 :                             topItem->Select(true);

	push	1
	mov	ecx, DWORD PTR _topItem$128[ebp]
	call	DWORD PTR __imp_?Select@SceneItem@@QAEX_N@Z

; 5702 : 
; 5703 :                             App->bChangingSources = true;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+705], 1

; 5704 :                             SetFocus(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebx]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4

; 5705 :                             ListView_SetItemState(hwndSources, topItem->GetID(), LVIS_SELECTED, LVIS_SELECTED);

	mov	DWORD PTR __macro_lvi$3[ebp+16], 2
	mov	DWORD PTR __macro_lvi$3[ebp+12], 2
	lea	edx, DWORD PTR __macro_lvi$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _topItem$128[ebp]
	call	DWORD PTR __imp_?GetID@SceneItem@@QAEIXZ
	push	eax
	push	4139					; 0000102bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 5706 :                             App->bChangingSources = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 0

; 5707 : 
; 5708 :                             if(App->modifyType == ItemModifyType_None)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+768], 0
	jne	SHORT $LN30@RenderFram

; 5709 :                                 App->modifyType = ItemModifyType_Move;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [eax+768], 1
$LN30@RenderFram:

; 5710 :                         }

	jmp	SHORT $LN28@RenderFram
$LN32@RenderFram:

; 5711 :                         else if(!bControlDown) //clicked on empty space without control

	movzx	ecx, BYTE PTR _bControlDown$171[ebp]
	test	ecx, ecx
	jne	SHORT $LN28@RenderFram

; 5712 :                         {
; 5713 :                             App->bChangingSources = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 1

; 5714 :                             ListView_SetItemState(hwndSources, -1, 0, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$1[ebp+16], 3
	mov	DWORD PTR __macro_lvi$1[ebp+12], 0
	lea	eax, DWORD PTR __macro_lvi$1[ebp]
	push	eax
	push	-1
	push	4139					; 0000102bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 5715 :                             App->bChangingSources = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 0

; 5716 :                             App->scene->DeselectAll();

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?DeselectAll@Scene@@AAEXXZ
$LN28@RenderFram:

; 5717 :                         }
; 5718 :                     }

	jmp	$LN26@RenderFram
$LN35@RenderFram:

; 5719 :                 }
; 5720 :                 else if(message == WM_LBUTTONUP)

	cmp	DWORD PTR _message$[ebx], 514		; 00000202H
	jne	$LN26@RenderFram

; 5721 :                 {
; 5722 :                     App->scene->GetSelectedItems(items);

	lea	ecx, DWORD PTR _items$151[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 5723 : 
; 5724 :                     ReleaseCapture();

	call	DWORD PTR __imp__ReleaseCapture@0

; 5725 :                     App->bMouseMoved = false;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+745], 0

; 5726 : 
; 5727 :                     for(UINT i=0; i<items.Num(); i++)

	mov	DWORD PTR _i$146[ebp], 0
	jmp	SHORT $LN25@RenderFram
$LN24@RenderFram:
	mov	ecx, DWORD PTR _i$146[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$146[ebp], ecx
$LN25@RenderFram:
	lea	ecx, DWORD PTR _items$151[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$146[ebp], eax
	jae	$LN23@RenderFram

; 5728 :                     {
; 5729 :                         SceneItem *item = items[i];

	mov	edx, DWORD PTR _i$146[ebp]
	push	edx
	lea	ecx, DWORD PTR _items$151[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _item$167[ebp], eax

; 5730 :                         (item->pos  += 0.5f).Floor();

	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _item$167[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??YVect2@@QAEAAU0@M@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?Floor@Vect2@@QAEAAU1@XZ

; 5731 :                         (item->size += 0.5f).Floor();

	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _item$167[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_??YVect2@@QAEAAU0@M@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?Floor@Vect2@@QAEAAU1@XZ

; 5732 : 
; 5733 :                         XElement *itemElement = item->GetElement();

	mov	ecx, DWORD PTR _item$167[ebp]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _itemElement$162[ebp], eax

; 5734 :                         itemElement->SetInt(TEXT("x"),  int(item->pos.x));

	mov	ecx, DWORD PTR _item$167[ebp]
	cvttss2si edx, DWORD PTR [ecx+28]
	push	edx
	push	OFFSET $SG4294712374
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 5735 :                         itemElement->SetInt(TEXT("y"),  int(item->pos.y));

	mov	eax, DWORD PTR _item$167[ebp]
	cvttss2si ecx, DWORD PTR [eax+32]
	push	ecx
	push	OFFSET $SG4294712373
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 5736 :                         itemElement->SetInt(TEXT("cx"), int(item->size.x));

	mov	edx, DWORD PTR _item$167[ebp]
	cvttss2si eax, DWORD PTR [edx+36]
	push	eax
	push	OFFSET $SG4294712372
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 5737 :                         itemElement->SetInt(TEXT("cy"), int(item->size.y));

	mov	ecx, DWORD PTR _item$167[ebp]
	cvttss2si edx, DWORD PTR [ecx+40]
	push	edx
	push	OFFSET $SG4294712371
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 5738 :                         itemElement->SetFloat(TEXT("crop.left"), item->crop.x);

	mov	eax, DWORD PTR _item$167[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712370
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 5739 :                         itemElement->SetFloat(TEXT("crop.top"), item->crop.y);

	mov	ecx, DWORD PTR _item$167[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+52]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712369
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 5740 :                         itemElement->SetFloat(TEXT("crop.right"), item->crop.w);

	mov	edx, DWORD PTR _item$167[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+60]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712368
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 5741 :                         itemElement->SetFloat(TEXT("crop.bottom"), item->crop.z);

	mov	eax, DWORD PTR _item$167[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712367
	mov	ecx, DWORD PTR _itemElement$162[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 5742 :                     }

	jmp	$LN24@RenderFram
$LN23@RenderFram:

; 5743 : 
; 5744 :                     App->modifyType = ItemModifyType_None;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+768], 0
$LN26@RenderFram:

; 5745 :                 }
; 5746 : 
; 5747 :                 App->bMouseDown = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+746], 0

; 5748 :                 App->bRMouseDown = false;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+747], 0

; 5749 :             }

	lea	ecx, DWORD PTR _items$151[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN37@RenderFram:

; 5750 :         }
; 5751 :         if(message == WM_RBUTTONUP)

	cmp	DWORD PTR _message$[ebx], 517		; 00000205H
	jne	$LN22@RenderFram

; 5752 :         {
; 5753 :             HMENU hPopup = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hPopup$161[ebp], eax

; 5754 : 
; 5755 :             //---------------------------------------------------
; 5756 : 
; 5757 :             if (App->bRunning) {

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+622]
	test	edx, edx
	je	$LN21@RenderFram

; 5758 :                 HMENU hProjector = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hProjector$150[ebp], eax

; 5759 :                 AppendMenu(hProjector, MF_STRING | (App->bProjector ? 0 : MF_CHECKED),
; 5760 :                         ID_PROJECTOR, Str("Disable"));

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+709]
	test	ecx, ecx
	je	SHORT $LN283@RenderFram
	mov	DWORD PTR tv2496[ebp], 0
	jmp	SHORT $LN284@RenderFram
$LN283@RenderFram:
	mov	DWORD PTR tv2496[ebp], 8
$LN284@RenderFram:
	push	OFFSET $SG4294712366
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	6000					; 00001770H
	mov	eax, DWORD PTR tv2496[ebp]
	push	eax
	mov	ecx, DWORD PTR _hProjector$150[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 5761 :                 AppendMenu(hProjector, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	edx, DWORD PTR _hProjector$150[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 5762 :                 for (UINT i = 0; i < App->NumMonitors(); i++) {

	mov	DWORD PTR _i$153[ebp], 0
	jmp	SHORT $LN20@RenderFram
$LN19@RenderFram:
	mov	eax, DWORD PTR _i$153[ebp]
	add	eax, 1
	mov	DWORD PTR _i$153[ebp], eax
$LN20@RenderFram:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?NumMonitors@OBS@@QBEIXZ		; OBS::NumMonitors
	cmp	DWORD PTR _i$153[ebp], eax
	jae	$LN18@RenderFram

; 5763 :                     String strMonitor = Str("MonitorNum");

	push	OFFSET $SG4294712365
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMonitor$109[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 5764 :                     strMonitor.FindReplace(L"$1", UIntString(i+1));

	push	10					; 0000000aH
	mov	edx, DWORD PTR _i$153[ebp]
	add	edx, 1
	push	edx
	lea	eax, DWORD PTR $T85[ebp]
	push	eax
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712364
	lea	ecx, DWORD PTR _strMonitor$109[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	lea	ecx, DWORD PTR $T85[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 5765 : 
; 5766 :                     const MonitorInfo &mi = App->GetMonitor(i);

	mov	ecx, DWORD PTR _i$153[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetMonitor@OBS@@QBEABUMonitorInfo@@I@Z	; OBS::GetMonitor
	mov	DWORD PTR _mi$105[ebp], eax

; 5767 : 
; 5768 :                     bool grayed = mi.hMonitor == MonitorFromWindow(hwndMain, MONITOR_DEFAULTTONULL);

	push	0
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp__MonitorFromWindow@8
	mov	ecx, DWORD PTR _mi$105[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN285@RenderFram
	mov	DWORD PTR tv2533[ebp], 1
	jmp	SHORT $LN286@RenderFram
$LN285@RenderFram:
	mov	DWORD PTR tv2533[ebp], 0
$LN286@RenderFram:
	mov	dl, BYTE PTR tv2533[ebp]
	mov	BYTE PTR _grayed$159[ebp], dl

; 5769 : 
; 5770 :                     bool enabled = App->bProjector && App->projectorMonitorID == i;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+709]
	test	ecx, ecx
	je	SHORT $LN287@RenderFram
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+728]
	cmp	eax, DWORD PTR _i$153[ebp]
	jne	SHORT $LN287@RenderFram
	mov	DWORD PTR tv2540[ebp], 1
	jmp	SHORT $LN288@RenderFram
$LN287@RenderFram:
	mov	DWORD PTR tv2540[ebp], 0
$LN288@RenderFram:
	mov	cl, BYTE PTR tv2540[ebp]
	mov	BYTE PTR _enabled$156[ebp], cl

; 5771 : 
; 5772 :                     AppendMenu(hProjector, MF_STRING | (enabled ? MF_CHECKED : 0) | (grayed ? MF_GRAYED : 0),
; 5773 :                             ID_PROJECTOR+i+1, strMonitor);

	movzx	edx, BYTE PTR _enabled$156[ebp]
	test	edx, edx
	je	SHORT $LN289@RenderFram
	mov	DWORD PTR tv2551[ebp], 8
	jmp	SHORT $LN290@RenderFram
$LN289@RenderFram:
	mov	DWORD PTR tv2551[ebp], 0
$LN290@RenderFram:
	movzx	eax, BYTE PTR _grayed$159[ebp]
	test	eax, eax
	je	SHORT $LN291@RenderFram
	mov	DWORD PTR tv2554[ebp], 1
	jmp	SHORT $LN292@RenderFram
$LN291@RenderFram:
	mov	DWORD PTR tv2554[ebp], 0
$LN292@RenderFram:
	lea	ecx, DWORD PTR _strMonitor$109[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _i$153[ebp]
	add	ecx, 6001				; 00001771H
	push	ecx
	mov	edx, DWORD PTR tv2551[ebp]
	or	edx, DWORD PTR tv2554[ebp]
	push	edx
	mov	eax, DWORD PTR _hProjector$150[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 5774 :                 }

	lea	ecx, DWORD PTR _strMonitor$109[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN19@RenderFram
$LN18@RenderFram:

; 5775 : 
; 5776 :                 AppendMenu(hPopup, MF_STRING|MF_POPUP, (UINT_PTR)hProjector, Str("MainMenu.Settings.Projector"));

	push	OFFSET $SG4294712363
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _hProjector$150[ebp]
	push	edx
	push	16					; 00000010H
	mov	eax, DWORD PTR _hPopup$161[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 5777 :                 AppendMenu(hPopup, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _hPopup$161[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16
$LN21@RenderFram:

; 5778 :             }
; 5779 : 
; 5780 :             //---------------------------------------------------
; 5781 : 
; 5782 :             AppendMenu(hPopup, MF_STRING | (App->bFullscreenMode ? MF_CHECKED : 0), ID_TOGGLEFULLSCREEN, Str("MainMenu.Settings.FullscreenMode"));

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+740]
	test	eax, eax
	je	SHORT $LN293@RenderFram
	mov	DWORD PTR tv2577[ebp], 8
	jmp	SHORT $LN294@RenderFram
$LN293@RenderFram:
	mov	DWORD PTR tv2577[ebp], 0
$LN294@RenderFram:
	push	OFFSET $SG4294712362
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	22					; 00000016H
	mov	edx, DWORD PTR tv2577[ebp]
	push	edx
	mov	eax, DWORD PTR _hPopup$161[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 5783 : 
; 5784 :             HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$133[ebp], eax

; 5785 :             int numItems = ListView_GetItemCount(hwndSources);

	push	0
	push	0
	push	4100					; 00001004H
	mov	edx, DWORD PTR _hwndSources$133[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$104[ebp], eax

; 5786 :             bool bSelected = ListView_GetSelectedCount(hwndSources) != 0;

	push	0
	push	0
	push	4146					; 00001032H
	mov	eax, DWORD PTR _hwndSources$133[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN295@RenderFram
	mov	DWORD PTR tv2593[ebp], 1
	jmp	SHORT $LN296@RenderFram
$LN295@RenderFram:
	mov	DWORD PTR tv2593[ebp], 0
$LN296@RenderFram:
	mov	cl, BYTE PTR tv2593[ebp]
	mov	BYTE PTR _bSelected$172[ebp], cl

; 5787 :             HMENU hMenuPreview;
; 5788 : 
; 5789 :             if (App->IsRunning() && bSelected)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?IsRunning@OBS@@QBE_NXZ			; OBS::IsRunning
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN17@RenderFram
	movzx	eax, BYTE PTR _bSelected$172[ebp]
	test	eax, eax
	je	SHORT $LN17@RenderFram

; 5790 :                 hMenuPreview = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hMenuPreview$163[ebp], eax

; 5791 :             else

	jmp	SHORT $LN16@RenderFram
$LN17@RenderFram:

; 5792 :             {
; 5793 :                 hMenuPreview = hPopup;

	mov	ecx, DWORD PTR _hPopup$161[ebp]
	mov	DWORD PTR _hMenuPreview$163[ebp], ecx

; 5794 :                 AppendMenu(hMenuPreview, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	edx, DWORD PTR _hMenuPreview$163[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16
$LN16@RenderFram:

; 5795 :             }
; 5796 : 
; 5797 :             AppendMenu(hMenuPreview, MF_STRING | (!App->renderFrameIn1To1Mode ? MF_CHECKED : 0), ID_PREVIEWSCALETOFITMODE, Str("RenderView.ViewModeScaleToFit"));

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+668]
	test	ecx, ecx
	jne	SHORT $LN297@RenderFram
	mov	DWORD PTR tv2615[ebp], 8
	jmp	SHORT $LN298@RenderFram
$LN297@RenderFram:
	mov	DWORD PTR tv2615[ebp], 0
$LN298@RenderFram:
	push	OFFSET $SG4294712361
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	23					; 00000017H
	mov	eax, DWORD PTR tv2615[ebp]
	push	eax
	mov	ecx, DWORD PTR _hMenuPreview$163[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 5798 :             AppendMenu(hMenuPreview, MF_STRING | (App->renderFrameIn1To1Mode ? MF_CHECKED : 0), ID_PREVIEW1TO1MODE, Str("RenderView.ViewMode1To1"));

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+668]
	test	eax, eax
	je	SHORT $LN299@RenderFram
	mov	DWORD PTR tv2626[ebp], 8
	jmp	SHORT $LN300@RenderFram
$LN299@RenderFram:
	mov	DWORD PTR tv2626[ebp], 0
$LN300@RenderFram:
	push	OFFSET $SG4294712360
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	24					; 00000018H
	mov	edx, DWORD PTR tv2626[ebp]
	push	edx
	mov	eax, DWORD PTR _hMenuPreview$163[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 5799 :             AppendMenu(hMenuPreview, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _hMenuPreview$163[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 5800 :             AppendMenu(hMenuPreview, MF_STRING | (App->bRenderViewEnabled ? MF_CHECKED : 0), ID_TOGGLERENDERVIEW, Str("RenderView.EnableView"));

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+742]
	test	eax, eax
	je	SHORT $LN301@RenderFram
	mov	DWORD PTR tv2641[ebp], 8
	jmp	SHORT $LN302@RenderFram
$LN301@RenderFram:
	mov	DWORD PTR tv2641[ebp], 0
$LN302@RenderFram:
	push	OFFSET $SG4294712359
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	20					; 00000014H
	mov	edx, DWORD PTR tv2641[ebp]
	push	edx
	mov	eax, DWORD PTR _hMenuPreview$163[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 5801 :             AppendMenu(hMenuPreview, MF_STRING | (App->bPanelVisible ? MF_CHECKED : 0), ID_TOGGLEPANEL, Str("RenderView.DisplayPanel"));

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+690]
	test	edx, edx
	je	SHORT $LN303@RenderFram
	mov	DWORD PTR tv2652[ebp], 8
	jmp	SHORT $LN304@RenderFram
$LN303@RenderFram:
	mov	DWORD PTR tv2652[ebp], 0
$LN304@RenderFram:
	push	OFFSET $SG4294712358
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR tv2652[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMenuPreview$163[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 5802 : 
; 5803 :             if (App->IsRunning())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?IsRunning@OBS@@QBE_NXZ			; OBS::IsRunning
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@RenderFram

; 5804 :             {
; 5805 :                 if (bSelected)

	movzx	ecx, BYTE PTR _bSelected$172[ebp]
	test	ecx, ecx
	je	SHORT $LN14@RenderFram

; 5806 :                     AppendMenu(hPopup, MF_STRING|MF_POPUP, (UINT_PTR)hMenuPreview, Str("Preview"));

	push	OFFSET $SG4294712357
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hMenuPreview$163[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _hPopup$161[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16
$LN14@RenderFram:

; 5807 :                 App->AppendModifyListbox(hwndSources, hPopup, ID_SOURCES, numItems, bSelected);

	movzx	edx, BYTE PTR _bSelected$172[ebp]
	push	edx
	mov	eax, DWORD PTR _numItems$104[ebp]
	push	eax
	push	5013					; 00001395H
	mov	ecx, DWORD PTR _hPopup$161[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwndSources$133[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AppendModifyListbox@OBS@@AAEXPAUHWND__@@PAUHMENU__@@HH_N@Z ; OBS::AppendModifyListbox
$LN15@RenderFram:

; 5808 :             }
; 5809 : 
; 5810 :             POINT p;
; 5811 :             GetCursorPos(&p);

	lea	eax, DWORD PTR _p$98[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4

; 5812 : 
; 5813 :             int ret = (int)TrackPopupMenuEx(hPopup, TPM_RETURNCMD | TPM_LEFTALIGN | TPM_RIGHTBUTTON, p.x, p.y, hwndMain, NULL);

	push	0
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	mov	edx, DWORD PTR _p$98[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$98[ebp]
	push	eax
	push	258					; 00000102H
	mov	ecx, DWORD PTR _hPopup$161[ebp]
	push	ecx
	call	DWORD PTR __imp__TrackPopupMenuEx@24
	mov	DWORD PTR _ret$114[ebp], eax

; 5814 :             App->TrackModifyListbox(hwnd, ret);

	mov	edx, DWORD PTR _ret$114[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebx]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?TrackModifyListbox@OBS@@AAEXPAUHWND__@@H@Z ; OBS::TrackModifyListbox

; 5815 : 
; 5816 :             DestroyMenu(hPopup);

	mov	ecx, DWORD PTR _hPopup$161[ebp]
	push	ecx
	call	DWORD PTR __imp__DestroyMenu@4
$LN22@RenderFram:

; 5817 :         }
; 5818 :     }

	jmp	$LN1@RenderFram
$LN41@RenderFram:

; 5819 :     else if(message == WM_GETDLGCODE && App->bEditMode)

	cmp	DWORD PTR _message$[ebx], 135		; 00000087H
	jne	SHORT $LN12@RenderFram
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+741]
	test	eax, eax
	je	SHORT $LN12@RenderFram

; 5820 :     {
; 5821 :         return DLGC_WANTARROWS; 

	mov	eax, 1
	jmp	$LN213@RenderFram
	jmp	$LN1@RenderFram
$LN12@RenderFram:

; 5822 :     }
; 5823 :     else if(message == WM_KEYDOWN && App->bRunning && App->bEditMode)

	cmp	DWORD PTR _message$[ebx], 256		; 00000100H
	jne	$LN10@RenderFram
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+622]
	test	edx, edx
	je	$LN10@RenderFram
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+741]
	test	ecx, ecx
	je	$LN10@RenderFram

; 5824 :     {
; 5825 :         int dx, dy ;
; 5826 :         dx = dy = 0;

	mov	DWORD PTR _dy$148[ebp], 0
	mov	edx, DWORD PTR _dy$148[ebp]
	mov	DWORD PTR _dx$138[ebp], edx

; 5827 :         switch(wParam)

	mov	eax, DWORD PTR _wParam$[ebx]
	mov	DWORD PTR tv2696[ebp], eax
	mov	ecx, DWORD PTR tv2696[ebp]
	sub	ecx, 37					; 00000025H
	mov	DWORD PTR tv2696[ebp], ecx
	cmp	DWORD PTR tv2696[ebp], 3
	ja	SHORT $LN3@RenderFram
	mov	edx, DWORD PTR tv2696[ebp]
	jmp	DWORD PTR $LN310@RenderFram[edx*4]
$LN7@RenderFram:

; 5828 :         {
; 5829 :             case VK_UP:
; 5830 :                 dy = -1;

	mov	DWORD PTR _dy$148[ebp], -1

; 5831 :                 break;

	jmp	SHORT $LN8@RenderFram
$LN6@RenderFram:

; 5832 :             case VK_DOWN:
; 5833 :                 dy = 1;

	mov	DWORD PTR _dy$148[ebp], 1

; 5834 :                 break;

	jmp	SHORT $LN8@RenderFram
$LN5@RenderFram:

; 5835 :             case VK_RIGHT:
; 5836 :                 dx = 1;

	mov	DWORD PTR _dx$138[ebp], 1

; 5837 :                 break;

	jmp	SHORT $LN8@RenderFram
$LN4@RenderFram:

; 5838 :             case VK_LEFT:
; 5839 :                 dx = -1;

	mov	DWORD PTR _dx$138[ebp], -1

; 5840 :                 break;

	jmp	SHORT $LN8@RenderFram
$LN3@RenderFram:

; 5841 :             default:
; 5842 :                 return DefWindowProc(hwnd, message, wParam, lParam);

	mov	eax, DWORD PTR _lParam$[ebx]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebx]
	push	ecx
	mov	edx, DWORD PTR _message$[ebx]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebx]
	push	eax
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN213@RenderFram
$LN8@RenderFram:

; 5843 :         }
; 5844 :         App->MoveItemsByPixels(dx, dy);

	mov	ecx, DWORD PTR _dy$148[ebp]
	push	ecx
	mov	edx, DWORD PTR _dx$138[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsByPixels@OBS@@AAEXHH@Z	; OBS::MoveItemsByPixels

; 5845 :         return 0;

	xor	eax, eax
	jmp	SHORT $LN213@RenderFram
	jmp	SHORT $LN1@RenderFram
$LN10@RenderFram:

; 5846 :     }
; 5847 :     else if(message == WM_KEYUP && App->bEditMode)

	cmp	DWORD PTR _message$[ebx], 257		; 00000101H
	jne	SHORT $LN1@RenderFram
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+741]
	test	ecx, ecx
	je	SHORT $LN1@RenderFram

; 5848 :     {
; 5849 :         return 0;

	xor	eax, eax
	jmp	SHORT $LN213@RenderFram
$LN1@RenderFram:

; 5850 :     }
; 5851 : 
; 5852 : 
; 5853 :     return DefWindowProc(hwnd, message, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebx]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebx]
	push	eax
	mov	ecx, DWORD PTR _message$[ebx]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebx]
	push	edx
	call	DWORD PTR __imp__DefWindowProcW@16
$LN213@RenderFram:

; 5854 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	16					; 00000010H
	npad	3
$LN307@RenderFram:
	DD	$LN166@RenderFram
	DD	$LN172@RenderFram
	DD	$LN169@RenderFram
	DD	$LN173@RenderFram
	DD	$LN168@RenderFram
	DD	$LN171@RenderFram
	DD	$LN167@RenderFram
	DD	$LN170@RenderFram
	DD	$LN174@RenderFram
$LN305@RenderFram:
	DB	0
	DB	8
	DB	1
	DB	8
	DB	2
	DB	8
	DB	3
	DB	8
	DB	4
	DB	8
	DB	5
	DB	8
	DB	6
	DB	8
	DB	7
	npad	1
$LN308@RenderFram:
	DD	$LN160@RenderFram
	DD	$LN67@RenderFram
	DD	$LN129@RenderFram
	DD	$LN92@RenderFram
	DD	$LN135@RenderFram
	DD	$LN76@RenderFram
	DD	$LN121@RenderFram
	DD	$LN106@RenderFram
	DD	$LN141@RenderFram
	DD	$LN58@RenderFram
	DD	$LN117@RenderFram
	DD	$LN99@RenderFram
	DD	$LN132@RenderFram
	DD	$LN85@RenderFram
	DD	$LN125@RenderFram
	DD	$LN113@RenderFram
	DD	$LN138@RenderFram
$LN309@RenderFram:
	DD	$LN47@RenderFram
	DD	$LN45@RenderFram
	DD	$LN46@RenderFram
	DD	$LN44@RenderFram
	DD	$LN43@RenderFram
$LN306@RenderFram:
	DB	0
	DB	4
	DB	1
	DB	1
	DB	2
	DB	4
	DB	3
	DB	3
	DB	0
	DB	4
	DB	1
	DB	1
	DB	2
	DB	4
	DB	3
	DB	3
$LN310@RenderFram:
	DD	$LN4@RenderFram
	DD	$LN7@RenderFram
	DD	$LN5@RenderFram
	DD	$LN6@RenderFram
?RenderFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z ENDP		; OBS::RenderFrameProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ProjectorFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?ProjectorFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z PROC	; OBS::ProjectorFrameProc, COMDAT

; 4886 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 4887 :     switch (message) {

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 15					; 0000000fH
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 241		; 000000f1H
	ja	SHORT $LN1@ProjectorF
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN13@ProjectorF[edx]
	jmp	DWORD PTR $LN14@ProjectorF[eax*4]
$LN8@ProjectorF:

; 4888 :     case WM_KEYDOWN:
; 4889 :         if (wParam == VK_ESCAPE)

	cmp	DWORD PTR _wParam$[ebp], 27		; 0000001bH
	jne	SHORT $LN7@ProjectorF

; 4890 :             App->bPleaseDisableProjector = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+708], 1
$LN7@ProjectorF:

; 4891 :         break;

	jmp	SHORT $LN9@ProjectorF
$LN6@ProjectorF:

; 4892 : 
; 4893 :     case WM_CLOSE:
; 4894 :         App->bPleaseDisableProjector = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+708], 1

; 4895 :         break;

	jmp	SHORT $LN9@ProjectorF
$LN5@ProjectorF:

; 4896 : 
; 4897 :     case WM_SETCURSOR:
; 4898 :         if (App->bEnableProjectorCursor)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+710]
	test	ecx, ecx
	je	SHORT $LN4@ProjectorF

; 4899 :             return DefWindowProc(hwnd, message, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN11@ProjectorF

; 4900 :         else

	jmp	SHORT $LN3@ProjectorF
$LN4@ProjectorF:

; 4901 :             SetCursor(NULL);

	push	0
	call	DWORD PTR __imp__SetCursor@4
$LN3@ProjectorF:

; 4902 :         break;

	jmp	SHORT $LN9@ProjectorF
$LN2@ProjectorF:

; 4903 : 	case  WM_PAINT:
; 4904 : 		//SetBackground(hwnd, TEXT("d:\\test.jpg"));
; 4905 : 		 break;

	jmp	SHORT $LN9@ProjectorF
$LN1@ProjectorF:

; 4906 :     default:
; 4907 :         return DefWindowProc(hwnd, message, wParam, lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN11@ProjectorF
$LN9@ProjectorF:

; 4908 :     }
; 4909 : 
; 4910 :     return 0;

	xor	eax, eax
$LN11@ProjectorF:

; 4911 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN14@ProjectorF:
	DD	$LN2@ProjectorF
	DD	$LN6@ProjectorF
	DD	$LN5@ProjectorF
	DD	$LN8@ProjectorF
	DD	$LN1@ProjectorF
$LN13@ProjectorF:
	DB	0
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
?ProjectorFrameProc@OBS@@CGJPAUHWND__@@IIJ@Z ENDP	; OBS::ProjectorFrameProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?LogWindowProc@OBS@@CGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
tv64 = -24						; size = 4
_client$1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?LogWindowProc@OBS@@CGJPAUHWND__@@IIJ@Z PROC		; OBS::LogWindowProc, COMDAT

; 5857 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5858 :     switch (message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 5
	je	SHORT $LN6@LogWindowP
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	SHORT $LN1@LogWindowP
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN5@LogWindowP
	jmp	SHORT $LN7@LogWindowP
$LN6@LogWindowP:

; 5859 :     {
; 5860 :     case WM_SIZE:
; 5861 :         RECT client;
; 5862 :         GetClientRect(hwnd, &client);

	lea	ecx, DWORD PTR _client$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8

; 5863 : 
; 5864 :         MoveWindow(hwndLog, client.left, client.top, client.right, client.bottom, true);

	push	1
	mov	eax, DWORD PTR _client$1[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _client$1[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _client$1[ebp+4]
	push	edx
	mov	eax, DWORD PTR _client$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hwndLog@@3PAUHWND__@@A	; hwndLog
	push	ecx
	call	DWORD PTR __imp__MoveWindow@24

; 5865 :         return TRUE;

	mov	eax, 1
	jmp	SHORT $LN9@LogWindowP
$LN5@LogWindowP:

; 5866 : 
; 5867 :     case WM_COMMAND:
; 5868 :         switch (LOWORD(wParam))

	movzx	edx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv74[ebp], edx
	cmp	DWORD PTR tv74[ebp], 9025		; 00002341H
	je	SHORT $LN2@LogWindowP
	jmp	SHORT $LN3@LogWindowP
$LN2@LogWindowP:

; 5869 :         {
; 5870 :         case ID_LOG_WINDOW:
; 5871 :             OBSUpdateLog();

	call	?OBSUpdateLog@@YAXXZ			; OBSUpdateLog
$LN3@LogWindowP:

; 5872 :             break;
; 5873 :         }
; 5874 :         break;

	jmp	SHORT $LN7@LogWindowP
$LN1@LogWindowP:

; 5875 : 
; 5876 :     case WM_CLOSE:
; 5877 :         ShowWindow(hwnd, SW_HIDE);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 5878 :         return 0;

	xor	eax, eax
	jmp	SHORT $LN9@LogWindowP
$LN7@LogWindowP:

; 5879 :     }
; 5880 : 
; 5881 :     return DefWindowProc(hwnd, message, wParam, lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcW@16
$LN9@LogWindowP:

; 5882 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?LogWindowProc@OBS@@CGJPAUHWND__@@IIJ@Z ENDP		; OBS::LogWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?OBSProc@OBS@@CGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_itemActivate$1 = -1600					; size = 48
_pnmv$2 = -1552						; size = 44
$T3 = -1508						; size = 8
_result$4 = -1500					; size = 28
_result$5 = -1472					; size = 28
_result$6 = -1444					; size = 28
_mii$7 = -1416						; size = 48
_mii$8 = -1368						; size = 48
_dwStyle$9 = -1320					; size = 4
_baseSize$10 = -1316					; size = 8
$T11 = -1308						; size = 8
$T12 = -1300						; size = 8
_curSize$13 = -1292					; size = 8
$T14 = -1284						; size = 8
$T15 = -1276						; size = 8
_info$16 = -1268					; size = 12
_p$17 = -1256						; size = 8
_multiple$18 = -1248					; size = 8
$T19 = -1240						; size = 8
$T20 = -1232						; size = 8
_strAppPath$21 = -1224					; size = 8
_error$22 = -1216					; size = 8
$T23 = -1208						; size = 4
_oldTextColor$24 = -1204				; size = 4
tv1576 = -1200						; size = 4
tv813 = -1196						; size = 4
tv2600 = -1192						; size = 4
_strAppPath$25 = -1188					; size = 8
_hSence$26 = -1180					; size = 4
tv747 = -1176						; size = 4
_dis$27 = -1172						; size = 4
tv1806 = -1168						; size = 4
_selectedItem$28 = -1164				; size = 4
_message$29 = -1160					; size = 8
$T30 = -1152						; size = 4
_hmenuMain$31 = -1148					; size = 4
_hmenuBar$32 = -1144					; size = 4
_hmenuMain$33 = -1140					; size = 4
tv1014 = -1136						; size = 4
_bkMode$34 = -1132					; size = 4
_hdc$ = -1128						; size = 4
_newSize$35 = -1124					; size = 8
_bgpath$36 = -1116					; size = 8
_log$37 = -1108						; size = 8
_p$38 = -1100						; size = 8
_log$39 = -1092						; size = 8
_strProfilePath$40 = -1084				; size = 8
_strName$41 = -1076					; size = 8
_lpmis$42 = -1068					; size = 4
tv1911 = -1064						; size = 4
_hmenuSceneCollection$43 = -1060			; size = 4
tv177 = -1056						; size = 4
_hmenuProfiles$44 = -1052				; size = 4
_sourceName$45 = -1048					; size = 4
tv632 = -1044						; size = 4
tv1591 = -1040						; size = 4
tv567 = -1036						; size = 4
tv1848 = -1032						; size = 4
tv492 = -1028						; size = 4
$T46 = -1024						; size = 4
tv444 = -1020						; size = 4
_newWidth$47 = -1016					; size = 4
tv377 = -1012						; size = 4
_sources$48 = -1008					; size = 4
tv358 = -1004						; size = 4
tv1900 = -1000						; size = 4
tv1474 = -996						; size = 4
tv1816 = -992						; size = 4
_drop$49 = -988						; size = 4
tv1808 = -984						; size = 4
tv1442 = -980						; size = 4
_order$50 = -976					; size = 4
tv1396 = -972						; size = 4
_newHeight$51 = -968					; size = 4
_sourcesElement$52 = -964				; size = 4
tv1603 = -960						; size = 4
_checkedState$53 = -956					; size = 4
tv1010 = -952						; size = 4
tv1047 = -948						; size = 4
tv1452 = -944						; size = 4
_itemText$54 = -940					; size = 8
tv1450 = -932						; size = 4
_lastFile$55 = -928					; size = 8
tv1377 = -920						; size = 4
tv314 = -916						; size = 4
tv1191 = -912						; size = 4
tv308 = -908						; size = 4
tv1164 = -904						; size = 4
tv285 = -900						; size = 4
tv1041 = -896						; size = 4
tv231 = -892						; size = 4
tv192 = -888						; size = 4
_lpScene$56 = -884					; size = 4
_strSceneCollection$57 = -880				; size = 8
_hwndScenes$58 = -872					; size = 4
_id$59 = -868						; size = 4
_selectedID$60 = -864					; size = 4
_source$61 = -860					; size = 4
_lplvcd$62 = -856					; size = 4
_state$63 = -852					; size = 4
_nmh$64 = -848						; size = 12
tv2603 = -834						; size = 2
_log$65 = -832						; size = 8
_menu$66 = -824						; size = 4
_curClassInfo$67 = -820					; size = 4
_selectedItem$68 = -816					; size = 4
_strProfile$69 = -812					; size = 8
_tar$70 = -804						; size = 8
_item$71 = -796						; size = 4
_hTheme$72 = -792					; size = 4
_sourcesElement$73 = -788				; size = 4
$T74 = -784						; size = 4
_itemId$75 = -780					; size = 4
_brsh$76 = -776						; size = 4
_result$77 = -772					; size = 4
tv2597 = -768						; size = 4
_path$78 = -764						; size = 8
_bMinimizeToNotificationArea$79 = -755			; size = 1
$T80 = -754						; size = 1
_render$81 = -753					; size = 1
_selectedElement$82 = -752				; size = 4
_pDI$83 = -748						; size = 4
_isGlobalSource$84 = -741				; size = 1
_finalValue$85 = -740					; size = 1
tv1671 = -739						; size = 1
tv364 = -738						; size = 1
tv452 = -737						; size = 1
tv1788 = -736						; size = 1
_replayBuffer$86 = -735					; size = 1
_finalValue$87 = -734					; size = 1
tv500 = -733						; size = 1
_hMenu$88 = -732					; size = 4
_hdc$89 = -728						; size = 4
_screenSize$90 = -724					; size = 4
_id$91 = -720						; size = 4
tv66 = -716						; size = 4
tv64 = -712						; size = 4
_ps$ = -708						; size = 64
_client$92 = -644					; size = 16
_hitInfo$93 = -628					; size = 24
_client$94 = -604					; size = 16
_gsVIRect$95 = -588					; size = 16
_itemRect$96 = -572					; size = 16
_textRect$97 = -556					; size = 16
_iconRect$98 = -540					; size = 16
_szText$99 = -524					; size = 520
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?OBSProc@OBS@@CGJPAUHWND__@@IIJ@Z PROC			; OBS::OBSProc, COMDAT

; 3611 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1600				; 00000640H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR $T74[ebp], 0

; 3612 : 	PAINTSTRUCT ps;
; 3613 : 	HDC         hdc;
; 3614 :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 561		; 00000231H
	ja	$LN321@OBSProc
	cmp	DWORD PTR tv64[ebp], 561		; 00000231H
	je	$LN84@OBSProc
	cmp	DWORD PTR tv64[ebp], 44			; 0000002cH
	ja	SHORT $LN322@OBSProc
	cmp	DWORD PTR tv64[ebp], 44			; 0000002cH
	je	$LN132@OBSProc
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 5
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	ja	$LN3@OBSProc
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN326@OBSProc[edx]
	jmp	DWORD PTR $LN329@OBSProc[eax*4]
$LN322@OBSProc:
	cmp	DWORD PTR tv64[ebp], 513		; 00000201H
	ja	SHORT $LN323@OBSProc
	cmp	DWORD PTR tv64[ebp], 513		; 00000201H
	je	$LN6@OBSProc
	cmp	DWORD PTR tv64[ebp], 78			; 0000004eH
	je	$LN129@OBSProc
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN249@OBSProc
	jmp	$LN3@OBSProc
$LN323@OBSProc:
	cmp	DWORD PTR tv64[ebp], 532		; 00000214H
	je	$LN73@OBSProc
	jmp	$LN3@OBSProc
$LN321@OBSProc:
	cmp	DWORD PTR tv64[ebp], 1025		; 00000401H
	ja	SHORT $LN324@OBSProc
	cmp	DWORD PTR tv64[ebp], 1025		; 00000401H
	je	$LN58@OBSProc
	cmp	DWORD PTR tv64[ebp], 562		; 00000232H
	je	$LN83@OBSProc
	jmp	$LN3@OBSProc
$LN324@OBSProc:
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1026				; 00000402H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 8
	ja	$LN3@OBSProc
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN330@OBSProc[edx*4]
$LN249@OBSProc:

; 3615 :     {
; 3616 :         case WM_COMMAND:
; 3617 :             switch(LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 40018		; 00009c52H
	jg	$LN284@OBSProc
	cmp	DWORD PTR tv66[ebp], 40018		; 00009c52H
	je	$LN163@OBSProc
	cmp	DWORD PTR tv66[ebp], 5000		; 00001388H
	jg	SHORT $LN285@OBSProc
	cmp	DWORD PTR tv66[ebp], 5000		; 00001388H
	je	$LN246@OBSProc
	cmp	DWORD PTR tv66[ebp], 2
	je	$LN159@OBSProc
	jmp	$LN156@OBSProc
$LN285@OBSProc:
	cmp	DWORD PTR tv66[ebp], 8023		; 00001f57H
	jg	SHORT $LN286@OBSProc
	cmp	DWORD PTR tv66[ebp], 8023		; 00001f57H
	je	$LN220@OBSProc
	mov	ecx, DWORD PTR tv66[ebp]
	sub	ecx, 5001				; 00001389H
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 18			; 00000012H
	ja	$LN156@OBSProc
	mov	edx, DWORD PTR tv66[ebp]
	jmp	DWORD PTR $LN331@OBSProc[edx*4]
$LN286@OBSProc:
	cmp	DWORD PTR tv66[ebp], 10028		; 0000272cH
	je	$LN240@OBSProc
	cmp	DWORD PTR tv66[ebp], 10029		; 0000272dH
	je	$LN157@OBSProc
	cmp	DWORD PTR tv66[ebp], 10030		; 0000272eH
	je	SHORT $LN245@OBSProc
	jmp	$LN156@OBSProc
$LN284@OBSProc:
	mov	eax, DWORD PTR tv66[ebp]
	sub	eax, 40019				; 00009c53H
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 68			; 00000044H
	ja	$LN156@OBSProc
	mov	ecx, DWORD PTR tv66[ebp]
	movzx	edx, BYTE PTR $LN327@OBSProc[ecx]
	jmp	DWORD PTR $LN332@OBSProc[edx*4]
$LN246@OBSProc:

; 3618 :             {
; 3619 :                 case ID_SETTINGS_SETTINGS:
; 3620 :                 case ID_SETTINGS:
; 3621 :                     OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_SETTINGS), hwnd, (DLGPROC)OBS::SettingsDialogProc);

	push	0
	push	OFFSET ?SettingsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::SettingsDialogProc
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	push	101					; 00000065H
	mov	ecx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	ecx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H

; 3622 :                     break;

	jmp	$LN247@OBSProc
$LN245@OBSProc:

; 3623 : 				case ID_CARAMA:
; 3624 : 					App->AddVideoCaptureDevice();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddVideoCaptureDevice@OBS@@QAEXXZ	; OBS::AddVideoCaptureDevice

; 3625 : 					break;

	jmp	$LN247@OBSProc
$LN244@OBSProc:

; 3626 :                 case ID_GLOBALSOURCES:
; 3627 :                     OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_GLOBAL_SOURCES), hwnd, (DLGPROC)OBS::GlobalSourcesProc);

	push	0
	push	OFFSET ?GlobalSourcesProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::GlobalSourcesProc
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	push	126					; 0000007eH
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H

; 3628 :                     break;

	jmp	$LN247@OBSProc
$LN243@OBSProc:

; 3629 : 
; 3630 :                 case ID_FILE_SAVE2:
; 3631 :                     App->scenesConfig.SaveTo(String() << lpAppDataPath << "\\scenes.xconfig");

	push	OFFSET $SG4294712451
	lea	ecx, DWORD PTR $T20[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T20[ebp]
	push	ecx
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR $T12[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?SaveTo@XConfig@@QAEXPB_W@Z
	lea	ecx, DWORD PTR $T12[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T20[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3632 :                     App->scenesConfig.Save();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Save@XConfig@@QAEXXZ

; 3633 :                     break;

	jmp	$LN247@OBSProc
$LN242@OBSProc:

; 3634 : 
; 3635 :                 case ID_TOGGLERECORDING:
; 3636 :                    // App->RefreshStreamButtons(true);
; 3637 :                     App->ToggleRecording();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ToggleRecording@OBS@@AAEXXZ		; OBS::ToggleRecording

; 3638 :                     App->RefreshStreamButtons();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 3639 :                     break;

	jmp	$LN247@OBSProc
$LN241@OBSProc:

; 3640 : 
; 3641 :                 case ID_TOGGLERECORDINGREPLAYBUFFER:
; 3642 :                     App->RefreshStreamButtons(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 3643 :                     App->ToggleReplayBuffer();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ToggleReplayBuffer@OBS@@AAEXXZ		; OBS::ToggleReplayBuffer

; 3644 :                     App->RefreshStreamButtons();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 3645 :                     break;

	jmp	$LN247@OBSProc
$LN240@OBSProc:

; 3646 : 
; 3647 :                 case ID_FILE_EXIT:
; 3648 :                // case ID_EXIT:
; 3649 : 				case ID_BTN_CLOSE:
; 3650 :                     if (App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	$LN239@OBSProc

; 3651 :                     {
; 3652 :                         if (App->bRecording)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+623]
	test	edx, edx
	je	SHORT $LN238@OBSProc

; 3653 :                         {
; 3654 :                             if (OBSMessageBox(hwnd, Str("CloseWhileActiveWarning.Message"), Str("CloseWhileActiveWarning.Title"), MB_ICONQUESTION | MB_YESNO) == IDYES)

	push	36					; 00000024H
	push	OFFSET $SG4294712450
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712449
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	SHORT $LN237@OBSProc

; 3655 :                             {
; 3656 :                                 PostQuitMessage(0);

	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
$LN237@OBSProc:

; 3657 :                             }
; 3658 :                         }

	jmp	SHORT $LN234@OBSProc
$LN238@OBSProc:

; 3659 :                         else if (App->bStreaming)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+627]
	test	ecx, ecx
	je	SHORT $LN234@OBSProc

; 3660 :                         {
; 3661 :                             if (OBSMessageBox(hwnd, Str("CloseWhileActiveWarning.Message"), Str("CloseWhileActiveWarning.Title"), MB_ICONQUESTION | MB_YESNO) == IDYES)

	push	36					; 00000024H
	push	OFFSET $SG4294712448
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712447
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	SHORT $LN234@OBSProc

; 3662 :                             {
; 3663 :                                 PostQuitMessage(0);

	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
$LN234@OBSProc:

; 3664 :                             }
; 3665 :                         }
; 3666 :                     }
; 3667 :                     else

	jmp	SHORT $LN233@OBSProc
$LN239@OBSProc:

; 3668 :                         PostQuitMessage(0);

	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
$LN233@OBSProc:

; 3669 :                     break;

	jmp	$LN247@OBSProc
$LN232@OBSProc:

; 3670 : 
; 3671 :                 case ID_RECORDINGSFOLDER:
; 3672 :                 case ID_SAVEDREPLAYBUFFERS:
; 3673 :                     {
; 3674 :                         bool replayBuffer = LOWORD(wParam) == ID_SAVEDREPLAYBUFFERS;

	movzx	edx, WORD PTR _wParam$[ebp]
	cmp	edx, 40081				; 00009c91H
	jne	SHORT $LN254@OBSProc
	mov	DWORD PTR tv177[ebp], 1
	jmp	SHORT $LN255@OBSProc
$LN254@OBSProc:
	mov	DWORD PTR tv177[ebp], 0
$LN255@OBSProc:
	mov	al, BYTE PTR tv177[ebp]
	mov	BYTE PTR _replayBuffer$86[ebp], al

; 3675 :                         String path = OSGetDefaultVideoSavePath();

	push	0
	lea	ecx, DWORD PTR _path$78[ebp]
	push	ecx
	call	DWORD PTR __imp_?OSGetDefaultVideoSavePath@@YG?AVString@@PB_W@Z

; 3676 :                         path = AppConfig->GetString(L"Publish", replayBuffer ? L"ReplayBufferSavePath" : L"SavePath", path.Array());

	movzx	edx, BYTE PTR _replayBuffer$86[ebp]
	test	edx, edx
	je	SHORT $LN256@OBSProc
	mov	DWORD PTR tv192[ebp], OFFSET $SG4294712446
	jmp	SHORT $LN257@OBSProc
$LN256@OBSProc:
	mov	DWORD PTR tv192[ebp], OFFSET $SG4294712445
$LN257@OBSProc:
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR tv192[ebp]
	push	eax
	push	OFFSET $SG4294712444
	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	push	eax
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T15[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3677 :                         path = GetExpandedRecordingDirectoryBase(path);

	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _path$78[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	?GetExpandedRecordingDirectoryBase@@YA?AVString@@V1@@Z ; GetExpandedRecordingDirectoryBase
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T11[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3678 : 
; 3679 :                         if (!OSFileExists(path))

	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	jne	$LN231@OBSProc

; 3680 :                         {
; 3681 :                             String message = replayBuffer ? Str("MainMenu.File.ShowSavedReplayBuffers.DoesNotExist") : Str("MainMenu.File.OpenRecordingsFolder.DoesNotExist");

	movzx	ecx, BYTE PTR _replayBuffer$86[ebp]
	test	ecx, ecx
	je	SHORT $LN258@OBSProc
	push	OFFSET $SG4294712443
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv231[ebp], eax
	jmp	SHORT $LN259@OBSProc
$LN258@OBSProc:
	push	OFFSET $SG4294712442
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv231[ebp], eax
$LN259@OBSProc:
	mov	ecx, DWORD PTR tv231[ebp]
	push	ecx
	lea	ecx, DWORD PTR _message$29[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 3682 :                             message.FindReplace(L"$1", path);

	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712441
	lea	ecx, DWORD PTR _message$29[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 3683 :                             OBSMessageBox(hwnd, message, Str("MainMenu.File.DirectoryDoesNotExistCaption"), MB_ICONWARNING | MB_OK);

	push	48					; 00000030H
	push	OFFSET $SG4294712440
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _message$29[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 3684 :                             break;

	lea	ecx, DWORD PTR _message$29[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN231@OBSProc:

; 3685 :                         }
; 3686 : 
; 3687 :                         path.FindReplace(L"/", L"\\");

	push	OFFSET $SG4294712439
	push	OFFSET $SG4294712438
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 3688 :                         String lastFile = App->lastOutputFile.FindReplace(L"/", L"\\");

	push	OFFSET $SG4294712437
	push	OFFSET $SG4294712436
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1336				; 00000538H
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	push	eax
	lea	ecx, DWORD PTR _lastFile$55[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z

; 3689 : 
; 3690 :                         LPITEMIDLIST item = nullptr;

	mov	DWORD PTR _item$71[ebp], 0

; 3691 :                         if (lastFile.IsValid() && path == lastFile.Left(path.Length()) && OSFileExists(lastFile) && (item = ILCreateFromPath(lastFile)))

	lea	ecx, DWORD PTR _lastFile$55[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN260@OBSProc
	or	DWORD PTR $T74[ebp], 1
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	push	eax
	lea	ecx, DWORD PTR $T14[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lastFile$55[ebp]
	call	DWORD PTR __imp_?Left@String@@QAE?AV1@I@Z
	push	eax
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??8String@@QBEHABV0@@Z
	test	eax, eax
	je	SHORT $LN260@OBSProc
	lea	ecx, DWORD PTR _lastFile$55[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN260@OBSProc
	lea	ecx, DWORD PTR _lastFile$55[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp__ILCreateFromPathW@4
	mov	DWORD PTR _item$71[ebp], eax
	cmp	DWORD PTR _item$71[ebp], 0
	je	SHORT $LN260@OBSProc
	mov	DWORD PTR tv285[ebp], 1
	jmp	SHORT $LN261@OBSProc
$LN260@OBSProc:
	mov	DWORD PTR tv285[ebp], 0
$LN261@OBSProc:
	mov	dl, BYTE PTR tv285[ebp]
	mov	BYTE PTR $T80[ebp], dl
	mov	eax, DWORD PTR $T74[ebp]
	and	eax, 1
	je	SHORT $LN325@OBSProc
	and	DWORD PTR $T74[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T14[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN325@OBSProc:
	movzx	ecx, BYTE PTR $T80[ebp]
	test	ecx, ecx
	je	SHORT $LN230@OBSProc

; 3692 :                         {
; 3693 :                             SHOpenFolderAndSelectItems(item, 0, nullptr, 0);

	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _item$71[ebp]
	push	edx
	call	DWORD PTR __imp__SHOpenFolderAndSelectItems@16

; 3694 :                             ILFree(item);

	mov	eax, DWORD PTR _item$71[ebp]
	push	eax
	call	DWORD PTR __imp__ILFree@4

; 3695 :                         }
; 3696 :                         else

	jmp	SHORT $LN229@OBSProc
$LN230@OBSProc:

; 3697 :                             ShellExecute(NULL, L"open", path, 0, 0, SW_SHOWNORMAL);

	push	1
	push	0
	push	0
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712435
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24
$LN229@OBSProc:

; 3698 : 
; 3699 :                         break;

	lea	ecx, DWORD PTR _lastFile$55[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _path$78[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN228@OBSProc:

; 3700 :                     }
; 3701 : 
; 3702 :                 case ID_ALWAYSONTOP:
; 3703 :                     {
; 3704 :                         HMENU hmenuBar = GetMenu(hwnd); 

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	mov	DWORD PTR _hmenuBar$32[ebp], eax

; 3705 :                         App->bAlwaysOnTop = !App->bAlwaysOnTop;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+706]
	test	eax, eax
	jne	SHORT $LN262@OBSProc
	mov	DWORD PTR tv308[ebp], 1
	jmp	SHORT $LN263@OBSProc
$LN262@OBSProc:
	mov	DWORD PTR tv308[ebp], 0
$LN263@OBSProc:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	dl, BYTE PTR tv308[ebp]
	mov	BYTE PTR [ecx+706], dl

; 3706 :                         CheckMenuItem(hmenuBar, ID_ALWAYSONTOP, (App->bAlwaysOnTop)?MF_CHECKED:MF_UNCHECKED);

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+706]
	test	ecx, ecx
	je	SHORT $LN264@OBSProc
	mov	DWORD PTR tv314[ebp], 8
	jmp	SHORT $LN265@OBSProc
$LN264@OBSProc:
	mov	DWORD PTR tv314[ebp], 0
$LN265@OBSProc:
	mov	edx, DWORD PTR tv314[ebp]
	push	edx
	push	40045					; 00009c6dH
	mov	eax, DWORD PTR _hmenuBar$32[ebp]
	push	eax
	call	DWORD PTR __imp__CheckMenuItem@12

; 3707 :                         
; 3708 :                         SetWindowPos(hwndMain, (App->bAlwaysOnTop)?HWND_TOPMOST:HWND_NOTOPMOST, 0, 0, 0, 0,
; 3709 :                             SWP_NOSIZE | SWP_NOMOVE);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+706]
	test	edx, edx
	je	SHORT $LN266@OBSProc
	mov	DWORD PTR tv358[ebp], -1
	jmp	SHORT $LN267@OBSProc
$LN266@OBSProc:
	mov	DWORD PTR tv358[ebp], -2		; fffffffeH
$LN267@OBSProc:
	push	3
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR tv358[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28

; 3710 :                     }
; 3711 :                     break;

	jmp	$LN247@OBSProc
$LN227@OBSProc:

; 3712 : 
; 3713 :                 case ID_FULLSCREENMODE:
; 3714 :                     App->SetFullscreenMode(!App->bFullscreenMode);

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+740]
	test	eax, eax
	jne	SHORT $LN268@OBSProc
	mov	BYTE PTR tv364[ebp], 1
	jmp	SHORT $LN269@OBSProc
$LN268@OBSProc:
	mov	BYTE PTR tv364[ebp], 0
$LN269@OBSProc:
	movzx	ecx, BYTE PTR tv364[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SetFullscreenMode@OBS@@QAEX_N@Z	; OBS::SetFullscreenMode

; 3715 :                     break;

	jmp	$LN247@OBSProc
$LN226@OBSProc:

; 3716 : 
; 3717 :                 case ID_SHOWLOG:
; 3718 :                     ShowWindow(hwndLogWindow, SW_SHOW);

	push	5
	mov	edx, DWORD PTR ?hwndLogWindow@@3PAUHWND__@@A ; hwndLogWindow
	push	edx
	call	DWORD PTR __imp__ShowWindow@8

; 3719 :                     SetForegroundWindow(hwndLogWindow);

	mov	eax, DWORD PTR ?hwndLogWindow@@3PAUHWND__@@A ; hwndLogWindow
	push	eax
	call	DWORD PTR __imp__SetForegroundWindow@4

; 3720 :                     break;

	jmp	$LN247@OBSProc
$LN225@OBSProc:

; 3721 : 
; 3722 :                 case ID_HELP_VISITWEBSITE:
; 3723 :                     //ShellExecute(NULL, TEXT("open"), TEXT("https://obsproject.com"), 0, 0, SW_SHOWNORMAL);
; 3724 :                     break;

	jmp	$LN247@OBSProc
$LN224@OBSProc:

; 3725 : 
; 3726 :                 case ID_HELP_OPENHELP:
; 3727 :                     //ShellExecute(NULL, TEXT("open"), TEXT("http://jp9000.github.io/OBS/"), 0, 0, SW_SHOWNORMAL);
; 3728 :                     break;

	jmp	$LN247@OBSProc
$LN223@OBSProc:

; 3729 : 
; 3730 :                 case ID_HELP_CHECK_FOR_UPDATES:
; 3731 :                    // OSCloseThread(OSCreateThread((XTHREAD)CheckUpdateThread, (LPVOID)1));
; 3732 :                     break;

	jmp	$LN247@OBSProc
$LN222@OBSProc:

; 3733 : 
; 3734 :                 case ID_HELP_ANALYZE_CURRENT_LOG:
; 3735 :                 case ID_HELP_UPLOAD_CURRENT_LOG:
; 3736 :                     if (App->bRunning)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+622]
	test	edx, edx
	je	SHORT $LN221@OBSProc

; 3737 :                         break;

	jmp	$LN247@OBSProc
$LN221@OBSProc:

; 3738 : 
; 3739 :                     {
; 3740 :                         LogUploadResult result;

	lea	ecx, DWORD PTR _result$5[ebp]
	call	??0LogUploadResult@@QAE@XZ		; LogUploadResult::LogUploadResult

; 3741 :                         result.openAnalyzerOnSuccess = LOWORD(wParam) == ID_HELP_ANALYZE_CURRENT_LOG;

	movzx	eax, WORD PTR _wParam$[ebp]
	cmp	eax, 40063				; 00009c7fH
	jne	SHORT $LN270@OBSProc
	mov	DWORD PTR tv377[ebp], 1
	jmp	SHORT $LN271@OBSProc
$LN270@OBSProc:
	mov	DWORD PTR tv377[ebp], 0
$LN271@OBSProc:
	mov	cl, BYTE PTR tv377[ebp]
	mov	BYTE PTR _result$5[ebp+24], cl

; 3742 :                         ShowLogUploadResult(result, UploadCurrentLog(result));

	lea	edx, DWORD PTR _result$5[ebp]
	push	edx
	call	?UploadCurrentLog@@YA_NAAULogUploadResult@@@Z ; UploadCurrentLog
	add	esp, 4
	movzx	eax, al
	push	eax
	lea	ecx, DWORD PTR _result$5[ebp]
	push	ecx
	call	?ShowLogUploadResult@@YAXAAULogUploadResult@@_N@Z ; ShowLogUploadResult
	add	esp, 8

; 3743 :                         break;

	lea	ecx, DWORD PTR _result$5[ebp]
	call	??1LogUploadResult@@QAE@XZ
	jmp	$LN247@OBSProc
$LN220@OBSProc:

; 3744 :                     }
; 3745 : 
; 3746 :                 case ID_REFRESH_LOGS:
; 3747 :                     App->ResetLogUploadMenu();

	call	?ResetLogUploadMenu@OBS@@CAXXZ		; OBS::ResetLogUploadMenu

; 3748 :                     break;

	jmp	$LN247@OBSProc
$LN219@OBSProc:

; 3749 : 
; 3750 :                 /*case ID_DASHBOARD:
; 3751 :                     ShellExecute(NULL, TEXT("open"), App->strDashboard, 0, 0, SW_SHOWNORMAL);
; 3752 :                     break;*/
; 3753 : 
; 3754 :                 case ID_SETTINGS_OPENCONFIGFOLDER:
; 3755 :                     {
; 3756 :                         String strAppPath = API->GetAppDataPath();

	mov	edx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	push	eax
	lea	ecx, DWORD PTR _strAppPath$21[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 3757 :                         ShellExecute(NULL, TEXT("open"), strAppPath, 0, 0, SW_SHOWNORMAL);

	push	1
	push	0
	push	0
	lea	ecx, DWORD PTR _strAppPath$21[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712434
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24

; 3758 :                     }

	lea	ecx, DWORD PTR _strAppPath$21[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3759 :                     break;

	jmp	$LN247@OBSProc
$LN218@OBSProc:

; 3760 : 
; 3761 :                 case ID_SETTINGS_OPENLOGFOLDER:
; 3762 :                     {
; 3763 :                         String strAppPath = API->GetAppDataPath();

	mov	ecx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	push	eax
	lea	ecx, DWORD PTR _strAppPath$25[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 3764 :                         strAppPath << TEXT("\\logs");

	push	OFFSET $SG4294712433
	lea	ecx, DWORD PTR _strAppPath$25[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 3765 :                         ShellExecute(NULL, TEXT("open"), strAppPath, 0, 0, SW_SHOWNORMAL);

	push	1
	push	0
	push	0
	lea	ecx, DWORD PTR _strAppPath$25[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712432
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24

; 3766 :                     }

	lea	ecx, DWORD PTR _strAppPath$25[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3767 :                     break;

	jmp	$LN247@OBSProc
$LN217@OBSProc:

; 3768 : 
; 3769 :                 case ID_PLUGINS:
; 3770 :                     OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_PLUGINS), hwnd, (DLGPROC)OBS::PluginsDialogProc);

	push	0
	push	OFFSET ?PluginsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::PluginsDialogProc
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	129					; 00000081H
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H

; 3771 :                     break;

	jmp	$LN247@OBSProc
$LN216@OBSProc:

; 3772 : 
; 3773 :                 case ID_MICVOLUME:
; 3774 :                     if(HIWORD(wParam) == VOLN_ADJUSTING || HIWORD(wParam) == VOLN_FINALVALUE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 768				; 00000300H
	je	SHORT $LN214@OBSProc
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 769				; 00000301H
	jne	$LN210@OBSProc
$LN214@OBSProc:

; 3775 :                     {
; 3776 :                         if(IsWindowEnabled((HWND)lParam))

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsWindowEnabled@4
	test	eax, eax
	je	$LN210@OBSProc

; 3777 :                         {
; 3778 :                             App->micVol = GetVolumeControlValue((HWND)lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetVolumeControlValue@@YAMPAUHWND__@@@Z
	add	esp, 4
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	fstp	DWORD PTR [eax+1172]

; 3779 : 
; 3780 :                             bool finalValue = HIWORD(wParam) == VOLN_FINALVALUE;

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 769				; 00000301H
	jne	SHORT $LN272@OBSProc
	mov	DWORD PTR tv444[ebp], 1
	jmp	SHORT $LN273@OBSProc
$LN272@OBSProc:
	mov	DWORD PTR tv444[ebp], 0
$LN273@OBSProc:
	mov	al, BYTE PTR tv444[ebp]
	mov	BYTE PTR _finalValue$87[ebp], al

; 3781 : 
; 3782 :                             App->ReportMicVolumeChange(App->micVol, App->micVol < VOLN_MUTELEVEL, finalValue);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@3d4ccccd
	comiss	xmm0, DWORD PTR [ecx+1172]
	jbe	SHORT $LN274@OBSProc
	mov	BYTE PTR tv452[ebp], 1
	jmp	SHORT $LN275@OBSProc
$LN274@OBSProc:
	mov	BYTE PTR tv452[ebp], 0
$LN275@OBSProc:
	movzx	edx, BYTE PTR _finalValue$87[ebp]
	push	edx
	movzx	eax, BYTE PTR tv452[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	push	ecx
	movss	xmm0, DWORD PTR [ecx+1172]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax+140]
	call	edx

; 3783 : 
; 3784 :                             if(App->micVol < EPSILON)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [eax+1172]
	jbe	SHORT $LN212@OBSProc

; 3785 :                                 App->micVol = 0.0f;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+1172], xmm0
$LN212@OBSProc:

; 3786 : 
; 3787 :                             if(finalValue)

	movzx	edx, BYTE PTR _finalValue$87[ebp]
	test	edx, edx
	je	SHORT $LN210@OBSProc

; 3788 :                             {
; 3789 :                                 AppConfig->SetFloat(TEXT("Audio"), TEXT("MicVolume"), App->micVol);

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	push	ecx
	movss	xmm0, DWORD PTR [eax+1172]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712431
	push	OFFSET $SG4294712430
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetFloat@ConfigFile@@QAEXPB_W0M@Z

; 3790 :                                 if (App->micVol < EPSILON)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [ecx+1172]
	jbe	SHORT $LN210@OBSProc

; 3791 :                                     AppConfig->SetFloat(TEXT("Audio"), TEXT("MicMutedVolume"), GetVolumeControlMutedVal((HWND)lParam));

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetVolumeControlMutedVal@@YAMPAUHWND__@@@Z
	fstp	DWORD PTR [esp]
	push	OFFSET $SG4294712429
	push	OFFSET $SG4294712428
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetFloat@ConfigFile@@QAEXPB_W0M@Z
$LN210@OBSProc:

; 3792 :                             }
; 3793 :                         }
; 3794 :                     }
; 3795 :                     break;

	jmp	$LN247@OBSProc
$LN209@OBSProc:

; 3796 : 
; 3797 :                 case ID_DESKTOPVOLUME:
; 3798 :                     if(HIWORD(wParam) == VOLN_ADJUSTING || HIWORD(wParam) == VOLN_FINALVALUE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 768				; 00000300H
	je	SHORT $LN207@OBSProc
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 769				; 00000301H
	jne	$LN203@OBSProc
$LN207@OBSProc:

; 3799 :                     {
; 3800 :                         if(IsWindowEnabled((HWND)lParam))

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsWindowEnabled@4
	test	eax, eax
	je	$LN203@OBSProc

; 3801 :                         {
; 3802 :                             App->desktopVol = GetVolumeControlValue((HWND)lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetVolumeControlValue@@YAMPAUHWND__@@@Z
	add	esp, 4
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	fstp	DWORD PTR [eax+1168]

; 3803 :                             
; 3804 :                             bool finalValue = HIWORD(wParam) == VOLN_FINALVALUE;

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 769				; 00000301H
	jne	SHORT $LN276@OBSProc
	mov	DWORD PTR tv492[ebp], 1
	jmp	SHORT $LN277@OBSProc
$LN276@OBSProc:
	mov	DWORD PTR tv492[ebp], 0
$LN277@OBSProc:
	mov	al, BYTE PTR tv492[ebp]
	mov	BYTE PTR _finalValue$85[ebp], al

; 3805 : 
; 3806 :                             App->ReportDesktopVolumeChange(App->desktopVol, App->desktopVol < VOLN_MUTELEVEL, finalValue);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@3d4ccccd
	comiss	xmm0, DWORD PTR [ecx+1168]
	jbe	SHORT $LN278@OBSProc
	mov	BYTE PTR tv500[ebp], 1
	jmp	SHORT $LN279@OBSProc
$LN278@OBSProc:
	mov	BYTE PTR tv500[ebp], 0
$LN279@OBSProc:
	movzx	edx, BYTE PTR _finalValue$85[ebp]
	push	edx
	movzx	eax, BYTE PTR tv500[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	push	ecx
	movss	xmm0, DWORD PTR [ecx+1168]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax+144]
	call	edx

; 3807 : 
; 3808 :                             if(App->desktopVol < EPSILON)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [eax+1168]
	jbe	SHORT $LN205@OBSProc

; 3809 :                                 App->desktopVol = 0.0f;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+1168], xmm0
$LN205@OBSProc:

; 3810 : 
; 3811 :                             if(finalValue)

	movzx	edx, BYTE PTR _finalValue$85[ebp]
	test	edx, edx
	je	SHORT $LN203@OBSProc

; 3812 :                             {
; 3813 :                                 AppConfig->SetFloat(TEXT("Audio"), TEXT("DesktopVolume"), App->desktopVol);

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	push	ecx
	movss	xmm0, DWORD PTR [eax+1168]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712427
	push	OFFSET $SG4294712426
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetFloat@ConfigFile@@QAEXPB_W0M@Z

; 3814 :                                 if (App->desktopVol < EPSILON)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [ecx+1168]
	jbe	SHORT $LN203@OBSProc

; 3815 :                                     AppConfig->SetFloat(TEXT("Audio"), TEXT("DesktopMutedVolume"), GetVolumeControlMutedVal((HWND)lParam));

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetVolumeControlMutedVal@@YAMPAUHWND__@@@Z
	fstp	DWORD PTR [esp]
	push	OFFSET $SG4294712425
	push	OFFSET $SG4294712424
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetFloat@ConfigFile@@QAEXPB_W0M@Z
$LN203@OBSProc:

; 3816 :                             }
; 3817 :                         }
; 3818 :                     }
; 3819 :                     break;

	jmp	$LN247@OBSProc
$LN202@OBSProc:

; 3820 :                 case ID_DESKTOPVOLUMEMETER:
; 3821 :                 case ID_MICVOLUMEMETER:
; 3822 :                     if(HIWORD(wParam) == VOLN_METERED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 770				; 00000302H
	jne	SHORT $LN201@OBSProc

; 3823 :                     {
; 3824 :                         App->UpdateAudioMeters();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?UpdateAudioMeters@OBS@@AAEXXZ		; OBS::UpdateAudioMeters
$LN201@OBSProc:

; 3825 :                     }
; 3826 :                     break;

	jmp	$LN247@OBSProc
$LN200@OBSProc:

; 3827 :                 case ID_SCENEEDITOR:
; 3828 :                     if(HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN199@OBSProc

; 3829 :                         App->bEditMode = !App->bEditMode;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+741]
	test	edx, edx
	jne	SHORT $LN280@OBSProc
	mov	DWORD PTR tv567[ebp], 1
	jmp	SHORT $LN281@OBSProc
$LN280@OBSProc:
	mov	DWORD PTR tv567[ebp], 0
$LN281@OBSProc:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	cl, BYTE PTR tv567[ebp]
	mov	BYTE PTR [eax+741], cl
$LN199@OBSProc:

; 3830 :                     break;

	jmp	$LN247@OBSProc
$LN198@OBSProc:

; 3831 : 
; 3832 :                 case ID_SCENES:
; 3833 : 					//if sceenes changed do this
; 3834 :                     if(HIWORD(wParam) == LBN_SELCHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 1
	jne	$LN196@OBSProc

; 3835 :                     {
; 3836 :                         HWND hwndScenes = (HWND)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hwndScenes$58[ebp], ecx

; 3837 : 						
; 3838 :                         UINT id = (UINT)SendMessage(hwndScenes, LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	mov	edx, DWORD PTR _hwndScenes$58[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$59[ebp], eax

; 3839 :                         if(id != LB_ERR)

	cmp	DWORD PTR _id$59[ebp], -1
	je	$LN196@OBSProc

; 3840 :                         {
; 3841 :                             String strName;

	lea	ecx, DWORD PTR _strName$41[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3842 :                             strName.SetLength((UINT)SendMessage(hwndScenes, LB_GETTEXTLEN, id, 0));

	push	0
	mov	eax, DWORD PTR _id$59[ebp]
	push	eax
	push	394					; 0000018aH
	mov	ecx, DWORD PTR _hwndScenes$58[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	lea	ecx, DWORD PTR _strName$41[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 3843 :                             SendMessage(hwndScenes, LB_GETTEXT, id, (LPARAM)strName.Array());

	lea	ecx, DWORD PTR _strName$41[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _id$59[ebp]
	push	edx
	push	393					; 00000189H
	mov	eax, DWORD PTR _hwndScenes$58[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 3844 :                             App->SetScene(strName);

	lea	ecx, DWORD PTR _strName$41[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+24]
	call	eax

; 3845 :                         }

	lea	ecx, DWORD PTR _strName$41[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN196@OBSProc:

; 3846 : 						
; 3847 :                     }
; 3848 :                     break;

	jmp	$LN247@OBSProc
$LN195@OBSProc:

; 3849 : 
; 3850 :                 case ID_SCENECOLLECTION_NEW:
; 3851 :                     App->AddSceneCollection(SceneCollectionAction::Add);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddSceneCollection@OBS@@AAEXW4SceneCollectionAction@@@Z ; OBS::AddSceneCollection

; 3852 :                     break;

	jmp	$LN247@OBSProc
$LN194@OBSProc:

; 3853 :                 case ID_SCENECOLLECTION_CLONE:
; 3854 :                     App->AddSceneCollection(SceneCollectionAction::Clone);

	push	2
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddSceneCollection@OBS@@AAEXW4SceneCollectionAction@@@Z ; OBS::AddSceneCollection

; 3855 :                     break;

	jmp	$LN247@OBSProc
$LN193@OBSProc:

; 3856 :                 case ID_SCENECOLLECTION_RENAME:
; 3857 :                     App->AddSceneCollection(SceneCollectionAction::Rename);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddSceneCollection@OBS@@AAEXW4SceneCollectionAction@@@Z ; OBS::AddSceneCollection

; 3858 :                     break;

	jmp	$LN247@OBSProc
$LN192@OBSProc:

; 3859 :                 case ID_SCENECOLLECTION_REMOVE:
; 3860 :                     App->RemoveSceneCollection();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveSceneCollection@OBS@@AAEXXZ	; OBS::RemoveSceneCollection

; 3861 :                     break;

	jmp	$LN247@OBSProc
$LN191@OBSProc:

; 3862 :                 case ID_SCENECOLLECTION_IMPORT:
; 3863 :                     App->ImportSceneCollection();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ImportSceneCollection@OBS@@AAEXXZ	; OBS::ImportSceneCollection

; 3864 :                     break;

	jmp	$LN247@OBSProc
$LN190@OBSProc:

; 3865 :                 case ID_SCENECOLLECTION_EXPORT:
; 3866 :                     App->ExportSceneCollection();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ExportSceneCollection@OBS@@AAEXXZ	; OBS::ExportSceneCollection

; 3867 :                     break;

	jmp	$LN247@OBSProc
$LN189@OBSProc:

; 3868 : 
; 3869 :                 case ID_PROFILE_NEW:
; 3870 :                     App->AddProfile(ProfileAction::Add);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddProfile@OBS@@AAEXW4ProfileAction@@@Z ; OBS::AddProfile

; 3871 :                     break;

	jmp	$LN247@OBSProc
$LN188@OBSProc:

; 3872 :                 case ID_PROFILE_CLONE:
; 3873 :                     App->AddProfile(ProfileAction::Clone);

	push	2
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddProfile@OBS@@AAEXW4ProfileAction@@@Z ; OBS::AddProfile

; 3874 :                     break;

	jmp	$LN247@OBSProc
$LN187@OBSProc:

; 3875 :                 case ID_PROFILE_RENAME:
; 3876 :                     App->AddProfile(ProfileAction::Rename);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddProfile@OBS@@AAEXW4ProfileAction@@@Z ; OBS::AddProfile

; 3877 :                     break;

	jmp	$LN247@OBSProc
$LN186@OBSProc:

; 3878 :                 case ID_PROFILE_REMOVE:
; 3879 :                     App->RemoveProfile();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveProfile@OBS@@AAEXXZ		; OBS::RemoveProfile

; 3880 :                     break;

	jmp	$LN247@OBSProc
$LN185@OBSProc:

; 3881 :                 case ID_PROFILE_IMPORT:
; 3882 :                     App->ImportProfile();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ImportProfile@OBS@@AAEXXZ		; OBS::ImportProfile

; 3883 :                     break;

	jmp	$LN247@OBSProc
$LN184@OBSProc:

; 3884 :                 case ID_PROFILE_EXPORT:
; 3885 :                     App->ExportProfile();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ExportProfile@OBS@@AAEXXZ		; OBS::ExportProfile

; 3886 :                     break;

	jmp	$LN247@OBSProc
$LN183@OBSProc:

; 3887 : 
; 3888 :                 case ID_TESTSTREAM:
; 3889 :                    // App->RefreshStreamButtons(true);
; 3890 : 					
; 3891 :                     App->bTestStream = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+620], 1

; 3892 :                     App->ToggleCapturing();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ToggleCapturing@OBS@@AAEXXZ		; OBS::ToggleCapturing

; 3893 :                     App->RefreshStreamButtons();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 3894 :                     break;

	jmp	$LN247@OBSProc
$LN182@OBSProc:

; 3895 : 
; 3896 :                 case ID_STARTSTOP:
; 3897 :                   //  App->RefreshStreamButtons(true);
; 3898 :                     App->ToggleCapturing();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ToggleCapturing@OBS@@AAEXXZ		; OBS::ToggleCapturing

; 3899 :                     App->RefreshStreamButtons();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 3900 :                     break;

	jmp	$LN247@OBSProc
$LN181@OBSProc:

; 3901 : 
; 3902 :                 case ID_MINIMIZERESTORE:
; 3903 :                     {
; 3904 :                         bool bMinimizeToNotificationArea = AppConfig->GetInt(TEXT("General"), TEXT("MinimizeToNotificationArea"), 0) != 0;

	push	0
	push	OFFSET $SG4294712423
	push	OFFSET $SG4294712422
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN282@OBSProc
	mov	DWORD PTR tv632[ebp], 1
	jmp	SHORT $LN283@OBSProc
$LN282@OBSProc:
	mov	DWORD PTR tv632[ebp], 0
$LN283@OBSProc:
	mov	dl, BYTE PTR tv632[ebp]
	mov	BYTE PTR _bMinimizeToNotificationArea$79[ebp], dl

; 3905 :                         if (bMinimizeToNotificationArea)

	movzx	eax, BYTE PTR _bMinimizeToNotificationArea$79[ebp]
	test	eax, eax
	je	SHORT $LN180@OBSProc

; 3906 :                         {
; 3907 :                             if (IsWindowVisible(hwnd))

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	test	eax, eax
	je	SHORT $LN179@OBSProc

; 3908 :                             {
; 3909 :                                 ShowWindow(hwnd, SW_MINIMIZE);

	push	6
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8

; 3910 :                                 ShowWindow(hwnd, SW_HIDE);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 3911 :                             }
; 3912 :                             else

	jmp	SHORT $LN178@OBSProc
$LN179@OBSProc:

; 3913 :                             {
; 3914 :                                 ShowWindow(hwnd, SW_SHOW);

	push	5
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 3915 :                                 ShowWindow(hwnd, SW_RESTORE);

	push	9
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
$LN178@OBSProc:

; 3916 :                             }
; 3917 :                         }
; 3918 :                         else

	jmp	SHORT $LN175@OBSProc
$LN180@OBSProc:

; 3919 :                         {
; 3920 :                             if (IsIconic(hwnd))

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	test	eax, eax
	je	SHORT $LN176@OBSProc

; 3921 :                                 ShowWindow(hwnd, SW_RESTORE);

	push	9
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 3922 :                             else

	jmp	SHORT $LN175@OBSProc
$LN176@OBSProc:

; 3923 :                                 ShowWindow(hwnd, SW_MINIMIZE);

	push	6
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
$LN175@OBSProc:

; 3924 :                         }
; 3925 :                     }
; 3926 :                     break;

	jmp	$LN247@OBSProc
$LN174@OBSProc:

; 3927 : 
; 3928 :                 case IDA_SOURCE_DELETE:
; 3929 :                     App->DeleteItems();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?DeleteItems@OBS@@AAEXXZ		; OBS::DeleteItems

; 3930 :                     break;

	jmp	$LN247@OBSProc
$LN173@OBSProc:

; 3931 : 
; 3932 :                 case IDA_SOURCE_CENTER:
; 3933 :                     App->CenterItems(true, true);

	push	1
	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CenterItems@OBS@@AAEX_N0@Z		; OBS::CenterItems

; 3934 :                     break;

	jmp	$LN247@OBSProc
$LN172@OBSProc:

; 3935 : 
; 3936 :                 case IDA_SOURCE_CENTER_VER:
; 3937 :                     App->CenterItems(false, true);

	push	1
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CenterItems@OBS@@AAEX_N0@Z		; OBS::CenterItems

; 3938 :                     break;

	jmp	$LN247@OBSProc
$LN171@OBSProc:

; 3939 : 
; 3940 :                 case IDA_SOURCE_CENTER_HOR:
; 3941 :                     App->CenterItems(true, false);

	push	0
	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CenterItems@OBS@@AAEX_N0@Z		; OBS::CenterItems

; 3942 :                     break;

	jmp	$LN247@OBSProc
$LN170@OBSProc:

; 3943 : 
; 3944 :                 case IDA_SOURCE_LEFT_CANVAS:
; 3945 :                     App->MoveItemsToEdge(-1, 0);

	push	0
	push	-1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 3946 :                     break;

	jmp	$LN247@OBSProc
$LN169@OBSProc:

; 3947 : 
; 3948 :                 case IDA_SOURCE_TOP_CANVAS:
; 3949 :                     App->MoveItemsToEdge(0, -1);

	push	-1
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 3950 :                     break;

	jmp	$LN247@OBSProc
$LN168@OBSProc:

; 3951 : 
; 3952 :                 case IDA_SOURCE_RIGHT_CANVAS:
; 3953 :                     App->MoveItemsToEdge(1, 0);

	push	0
	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 3954 :                     break;

	jmp	$LN247@OBSProc
$LN167@OBSProc:

; 3955 : 
; 3956 :                 case IDA_SOURCE_BOTTOM_CANVAS:
; 3957 :                     App->MoveItemsToEdge(0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 3958 :                     break;

	jmp	$LN247@OBSProc
$LN166@OBSProc:

; 3959 : 
; 3960 :                 case IDA_SOURCE_FITTOSCREEN:
; 3961 :                     App->FitItemsToScreen();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?FitItemsToScreen@OBS@@AAEXXZ		; OBS::FitItemsToScreen

; 3962 :                     break;

	jmp	$LN247@OBSProc
$LN165@OBSProc:

; 3963 : 
; 3964 :                 case IDA_SOURCE_RESETSIZE:
; 3965 :                     App->ResetItemSizes();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResetItemSizes@OBS@@AAEXXZ		; OBS::ResetItemSizes

; 3966 :                     break;

	jmp	$LN247@OBSProc
$LN164@OBSProc:

; 3967 : 
; 3968 :                 case IDA_SOURCE_RESETCROP:
; 3969 :                     App->ResetItemCrops();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResetItemCrops@OBS@@AAEXXZ		; OBS::ResetItemCrops

; 3970 :                     break;

	jmp	$LN247@OBSProc
$LN163@OBSProc:

; 3971 : 
; 3972 :                 case IDA_SOURCE_MOVEUP:
; 3973 :                     App->MoveSourcesUp();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesUp@OBS@@AAEXXZ		; OBS::MoveSourcesUp

; 3974 :                     break;

	jmp	$LN247@OBSProc
$LN162@OBSProc:

; 3975 : 
; 3976 :                 case IDA_SOURCE_MOVEDOWN:
; 3977 :                     App->MoveSourcesDown();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesDown@OBS@@AAEXXZ		; OBS::MoveSourcesDown

; 3978 :                     break;

	jmp	$LN247@OBSProc
$LN161@OBSProc:

; 3979 : 
; 3980 :                 case IDA_SOURCE_MOVETOTOP:
; 3981 :                     App->MoveSourcesToTop();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesToTop@OBS@@AAEXXZ		; OBS::MoveSourcesToTop

; 3982 :                     break;

	jmp	$LN247@OBSProc
$LN160@OBSProc:

; 3983 : 
; 3984 :                 case IDA_SOURCE_MOVETOBOTTOM:
; 3985 :                     App->MoveSourcesToBottom();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesToBottom@OBS@@AAEXXZ	; OBS::MoveSourcesToBottom

; 3986 :                     break;

	jmp	$LN247@OBSProc
$LN159@OBSProc:

; 3987 : 
; 3988 :                 case IDCANCEL:
; 3989 :                     // This actually means the user pressed the ESC key
; 3990 :                     if(App->bFullscreenMode)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+740]
	test	ecx, ecx
	je	SHORT $LN158@OBSProc

; 3991 :                         App->SetFullscreenMode(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SetFullscreenMode@OBS@@QAEX_N@Z	; OBS::SetFullscreenMode
$LN158@OBSProc:

; 3992 :                     break;

	jmp	$LN247@OBSProc
$LN157@OBSProc:

; 3993 : 		
; 3994 : 				case ID_BTN_MINSIZE:
; 3995 : 					SendMessage(hwndMain,WM_SYSCOMMAND, SC_MINIMIZE, 0);

	push	0
	push	61472					; 0000f020H
	push	274					; 00000112H
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 3996 : 					break;

	jmp	$LN247@OBSProc
$LN156@OBSProc:

; 3997 : 
; 3998 :                 default:
; 3999 :                     {
; 4000 :                         UINT id = LOWORD(wParam);

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR _id$91[ebp], eax

; 4001 :                         if (id >= ID_SWITCHPROFILE && 
; 4002 :                             id <= ID_SWITCHPROFILE_END)

	cmp	DWORD PTR _id$91[ebp], 5020		; 0000139cH
	jb	$LN155@OBSProc
	cmp	DWORD PTR _id$91[ebp], 6020		; 00001784H
	ja	$LN155@OBSProc

; 4003 :                         {
; 4004 :                             if (App->bRunning)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+622]
	test	edx, edx
	je	SHORT $LN154@OBSProc

; 4005 :                                 break;

	jmp	$LN247@OBSProc
$LN154@OBSProc:

; 4006 : 
; 4007 :                             MENUITEMINFO mii;
; 4008 :                             zero(&mii, sizeof(mii));

	push	48					; 00000030H
	lea	eax, DWORD PTR _mii$8[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 4009 :                             mii.cbSize = sizeof(mii);

	mov	DWORD PTR _mii$8[ebp], 48		; 00000030H

; 4010 :                             mii.fMask = MIIM_STRING;

	mov	DWORD PTR _mii$8[ebp+4], 64		; 00000040H

; 4011 : 
; 4012 :                             HMENU hmenuMain = GetMenu(hwndMain);

	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	mov	DWORD PTR _hmenuMain$33[ebp], eax

; 4013 :                             HMENU hmenuProfiles = GetSubMenu(hmenuMain, 2);

	push	2
	mov	edx, DWORD PTR _hmenuMain$33[ebp]
	push	edx
	call	DWORD PTR __imp__GetSubMenu@8
	mov	DWORD PTR _hmenuProfiles$44[ebp], eax

; 4014 :                             GetMenuItemInfo(hmenuProfiles, id, FALSE, &mii);

	lea	eax, DWORD PTR _mii$8[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _id$91[ebp]
	push	ecx
	mov	edx, DWORD PTR _hmenuProfiles$44[ebp]
	push	edx
	call	DWORD PTR __imp__GetMenuItemInfoW@16

; 4015 : 
; 4016 :                             String strProfile;

	lea	ecx, DWORD PTR _strProfile$69[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 4017 :                             strProfile.SetLength(mii.cch++);

	mov	eax, DWORD PTR _mii$8[ebp+40]
	mov	DWORD PTR tv747[ebp], eax
	mov	ecx, DWORD PTR tv747[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strProfile$69[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z
	mov	edx, DWORD PTR _mii$8[ebp+40]
	add	edx, 1
	mov	DWORD PTR _mii$8[ebp+40], edx

; 4018 :                             mii.dwTypeData = strProfile.Array();

	lea	ecx, DWORD PTR _strProfile$69[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR _mii$8[ebp+36], eax

; 4019 : 
; 4020 :                             GetMenuItemInfo(hmenuProfiles, id, FALSE, &mii);

	lea	eax, DWORD PTR _mii$8[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _id$91[ebp]
	push	ecx
	mov	edx, DWORD PTR _hmenuProfiles$44[ebp]
	push	edx
	call	DWORD PTR __imp__GetMenuItemInfoW@16

; 4021 : 
; 4022 :                             if(!strProfile.CompareI(GetCurrentProfile()))

	call	?GetCurrentProfile@OBS@@SAPB_WXZ	; OBS::GetCurrentProfile
	push	eax
	lea	ecx, DWORD PTR _strProfile$69[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	$LN153@OBSProc

; 4023 :                             {
; 4024 :                                 String strProfilePath;

	lea	ecx, DWORD PTR _strProfilePath$40[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 4025 :                                 strProfilePath << lpAppDataPath << TEXT("\\profiles\\") << strProfile << TEXT(".ini");

	push	OFFSET $SG4294712420
	lea	eax, DWORD PTR _strProfile$69[ebp]
	push	eax
	push	OFFSET $SG4294712421
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strProfilePath$40[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 4026 : 
; 4027 :                                 if(!AppConfig->Open(strProfilePath))

	push	0
	lea	ecx, DWORD PTR _strProfilePath$40[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?Open@ConfigFile@@QAEHPB_WH@Z
	test	eax, eax
	jne	SHORT $LN152@OBSProc

; 4028 :                                 {
; 4029 :                                     OBSMessageBox(hwnd, TEXT("Error - unable to open ini file"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712419
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 4030 :                                     break;

	lea	ecx, DWORD PTR _strProfilePath$40[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strProfile$69[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN152@OBSProc:

; 4031 :                                 }
; 4032 : 
; 4033 :                                 GlobalConfig->SetString(TEXT("General"), TEXT("Profile"), strProfile);

	lea	ecx, DWORD PTR _strProfile$69[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712418
	push	OFFSET $SG4294712417
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 4034 :                                 App->ReloadIniSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ReloadIniSettings@OBS@@AAEXXZ		; OBS::ReloadIniSettings

; 4035 :                                 ResetProfileMenu();

	call	?ResetProfileMenu@OBS@@CAXXZ		; OBS::ResetProfileMenu

; 4036 :                                 ResetApplicationName();

	call	?ResetApplicationName@OBS@@CAXXZ	; OBS::ResetApplicationName

; 4037 :                             }

	lea	ecx, DWORD PTR _strProfilePath$40[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN153@OBSProc:

; 4038 :                         }

	lea	ecx, DWORD PTR _strProfile$69[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 4039 :                         else if (id >= ID_SWITCHSCENECOLLECTION &&

	jmp	$LN139@OBSProc
$LN155@OBSProc:

; 4040 :                             id <= ID_SWITCHSCENECOLLECTION_END)

	cmp	DWORD PTR _id$91[ebp], 9026		; 00002342H
	jb	$LN150@OBSProc
	cmp	DWORD PTR _id$91[ebp], 10026		; 0000272aH
	ja	$LN150@OBSProc

; 4041 :                         {
; 4042 :                             if (App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	SHORT $LN149@OBSProc

; 4043 :                                 break;

	jmp	$LN247@OBSProc
$LN149@OBSProc:

; 4044 : 
; 4045 :                             MENUITEMINFO mii;
; 4046 :                             zero(&mii, sizeof(mii));

	push	48					; 00000030H
	lea	ecx, DWORD PTR _mii$7[ebp]
	push	ecx
	call	?zero@@YGXPAXI@Z			; zero

; 4047 :                             mii.cbSize = sizeof(mii);

	mov	DWORD PTR _mii$7[ebp], 48		; 00000030H

; 4048 :                             mii.fMask = MIIM_STRING;

	mov	DWORD PTR _mii$7[ebp+4], 64		; 00000040H

; 4049 : 
; 4050 :                             HMENU hmenuMain = GetMenu(hwndMain);

	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp__GetMenu@4
	mov	DWORD PTR _hmenuMain$31[ebp], eax

; 4051 :                             HMENU hmenuSceneCollection = GetSubMenu(hmenuMain, 3);

	push	3
	mov	eax, DWORD PTR _hmenuMain$31[ebp]
	push	eax
	call	DWORD PTR __imp__GetSubMenu@8
	mov	DWORD PTR _hmenuSceneCollection$43[ebp], eax

; 4052 :                             GetMenuItemInfo(hmenuSceneCollection, id, FALSE, &mii);

	lea	ecx, DWORD PTR _mii$7[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _id$91[ebp]
	push	edx
	mov	eax, DWORD PTR _hmenuSceneCollection$43[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenuItemInfoW@16

; 4053 : 
; 4054 :                             String strSceneCollection;

	lea	ecx, DWORD PTR _strSceneCollection$57[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 4055 :                             strSceneCollection.SetLength(mii.cch++);

	mov	ecx, DWORD PTR _mii$7[ebp+40]
	mov	DWORD PTR tv813[ebp], ecx
	mov	edx, DWORD PTR tv813[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSceneCollection$57[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z
	mov	eax, DWORD PTR _mii$7[ebp+40]
	add	eax, 1
	mov	DWORD PTR _mii$7[ebp+40], eax

; 4056 :                             mii.dwTypeData = strSceneCollection.Array();

	lea	ecx, DWORD PTR _strSceneCollection$57[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR _mii$7[ebp+36], eax

; 4057 : 
; 4058 :                             GetMenuItemInfo(hmenuSceneCollection, id, FALSE, &mii);

	lea	ecx, DWORD PTR _mii$7[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _id$91[ebp]
	push	edx
	mov	eax, DWORD PTR _hmenuSceneCollection$43[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenuItemInfoW@16

; 4059 : 
; 4060 :                             if (!strSceneCollection.CompareI(GetCurrentSceneCollection()))

	call	?GetCurrentSceneCollection@OBS@@SAPB_WXZ ; OBS::GetCurrentSceneCollection
	push	eax
	lea	ecx, DWORD PTR _strSceneCollection$57[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	SHORT $LN147@OBSProc

; 4061 :                             {
; 4062 :                                 if (!App->SetSceneCollection(strSceneCollection))

	lea	ecx, DWORD PTR _strSceneCollection$57[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+32]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN147@OBSProc

; 4063 :                                 {
; 4064 :                                     OBSMessageBox(hwnd, TEXT("Error - unable to open xconfig file"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712416
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 4065 :                                     break;

	lea	ecx, DWORD PTR _strSceneCollection$57[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN147@OBSProc:

; 4066 :                                 }
; 4067 :                             }
; 4068 :                         }

	lea	ecx, DWORD PTR _strSceneCollection$57[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN139@OBSProc
$LN150@OBSProc:

; 4069 :                         else if (id >= ID_UPLOAD_LOG && id <= ID_UPLOAD_LOG_END)

	cmp	DWORD PTR _id$91[ebp], 6021		; 00001785H
	jb	$LN145@OBSProc
	cmp	DWORD PTR _id$91[ebp], 7021		; 00001b6dH
	ja	$LN145@OBSProc

; 4070 :                         {
; 4071 :                             String log = GetLogUploadMenuItem(id);

	mov	eax, DWORD PTR _id$91[ebp]
	push	eax
	lea	ecx, DWORD PTR _log$39[ebp]
	push	ecx
	call	?GetLogUploadMenuItem@@YA?AVString@@I@Z	; GetLogUploadMenuItem
	add	esp, 8

; 4072 :                             if (log.IsEmpty())

	lea	ecx, DWORD PTR _log$39[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN144@OBSProc

; 4073 :                                 break;

	lea	ecx, DWORD PTR _log$39[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN144@OBSProc:

; 4074 : 
; 4075 :                             LogUploadResult result;

	lea	ecx, DWORD PTR _result$4[ebp]
	call	??0LogUploadResult@@QAE@XZ		; LogUploadResult::LogUploadResult

; 4076 :                             ShowLogUploadResult(result, UploadLog(log, result));

	lea	edx, DWORD PTR _result$4[ebp]
	push	edx
	sub	esp, 8
	mov	ecx, esp
	lea	eax, DWORD PTR _log$39[ebp]
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?UploadLog@@YA_NVString@@AAULogUploadResult@@@Z ; UploadLog
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _result$4[ebp]
	push	edx
	call	?ShowLogUploadResult@@YAXAAULogUploadResult@@_N@Z ; ShowLogUploadResult
	add	esp, 8

; 4077 :                         }

	lea	ecx, DWORD PTR _result$4[ebp]
	call	??1LogUploadResult@@QAE@XZ
	lea	ecx, DWORD PTR _log$39[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN139@OBSProc
$LN145@OBSProc:

; 4078 :                         else if (id >= ID_UPLOAD_ANALYZE_LOG && id <= ID_UPLOAD_ANALYZE_LOG_END)

	cmp	DWORD PTR _id$91[ebp], 8024		; 00001f58H
	jb	$LN142@OBSProc
	cmp	DWORD PTR _id$91[ebp], 9024		; 00002340H
	ja	$LN142@OBSProc

; 4079 :                         {
; 4080 :                             String log = GetLogUploadMenuItem(id);

	mov	eax, DWORD PTR _id$91[ebp]
	push	eax
	lea	ecx, DWORD PTR _log$37[ebp]
	push	ecx
	call	?GetLogUploadMenuItem@@YA?AVString@@I@Z	; GetLogUploadMenuItem
	add	esp, 8

; 4081 :                             if (log.IsEmpty())

	lea	ecx, DWORD PTR _log$37[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN141@OBSProc

; 4082 :                                 break;

	lea	ecx, DWORD PTR _log$37[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN141@OBSProc:

; 4083 : 
; 4084 :                             LogUploadResult result;

	lea	ecx, DWORD PTR _result$6[ebp]
	call	??0LogUploadResult@@QAE@XZ		; LogUploadResult::LogUploadResult

; 4085 :                             result.openAnalyzerOnSuccess = true;

	mov	BYTE PTR _result$6[ebp+24], 1

; 4086 :                             ShowLogUploadResult(result, UploadLog(log, result));

	lea	edx, DWORD PTR _result$6[ebp]
	push	edx
	sub	esp, 8
	mov	ecx, esp
	lea	eax, DWORD PTR _log$37[ebp]
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?UploadLog@@YA_NVString@@AAULogUploadResult@@@Z ; UploadLog
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _result$6[ebp]
	push	edx
	call	?ShowLogUploadResult@@YAXAAULogUploadResult@@_N@Z ; ShowLogUploadResult
	add	esp, 8

; 4087 :                         }

	lea	ecx, DWORD PTR _result$6[ebp]
	call	??1LogUploadResult@@QAE@XZ
	lea	ecx, DWORD PTR _log$37[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN139@OBSProc
$LN142@OBSProc:

; 4088 :                         else if (id >= ID_VIEW_LOG && id <= ID_VIEW_LOG_END)

	cmp	DWORD PTR _id$91[ebp], 7022		; 00001b6eH
	jb	$LN139@OBSProc
	cmp	DWORD PTR _id$91[ebp], 8022		; 00001f56H
	ja	$LN139@OBSProc

; 4089 :                         {
; 4090 :                             String log = GetLogUploadMenuItem(id);

	mov	eax, DWORD PTR _id$91[ebp]
	push	eax
	lea	ecx, DWORD PTR _log$65[ebp]
	push	ecx
	call	?GetLogUploadMenuItem@@YA?AVString@@I@Z	; GetLogUploadMenuItem
	add	esp, 8

; 4091 :                             if (log.IsEmpty())

	lea	ecx, DWORD PTR _log$65[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN138@OBSProc

; 4092 :                                 break;

	lea	ecx, DWORD PTR _log$65[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN138@OBSProc:

; 4093 : 
; 4094 :                             String tar = FormattedString(L"%s\\logs\\%s", OBSGetAppDataPath(), log.Array());

	lea	ecx, DWORD PTR _log$65[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OBSGetAppDataPath@@YAPB_WXZ
	push	eax
	push	OFFSET $SG4294712415
	lea	edx, DWORD PTR _tar$70[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H

; 4095 : 
; 4096 :                             HINSTANCE result = ShellExecute(nullptr, L"edit", tar.Array(), 0, 0, SW_SHOWNORMAL);

	push	1
	push	0
	push	0
	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712414
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24
	mov	DWORD PTR _result$77[ebp], eax

; 4097 :                             if (result > (HINSTANCE)32)

	cmp	DWORD PTR _result$77[ebp], 32		; 00000020H
	jbe	SHORT $LN137@OBSProc

; 4098 :                                 break;

	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _log$65[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN137@OBSProc:

; 4099 :                             
; 4100 :                             result = ShellExecute(nullptr, nullptr, tar.Array(), 0, 0, SW_SHOWNORMAL);

	push	1
	push	0
	push	0
	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24
	mov	DWORD PTR _result$77[ebp], eax

; 4101 :                             if (result > (HINSTANCE)32)

	cmp	DWORD PTR _result$77[ebp], 32		; 00000020H
	jbe	SHORT $LN136@OBSProc

; 4102 :                                 break;

	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _log$65[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN247@OBSProc
$LN136@OBSProc:

; 4103 : 
; 4104 :                             if (result == (HINSTANCE)SE_ERR_NOASSOC || result == (HINSTANCE)SE_ERR_ASSOCINCOMPLETE)

	cmp	DWORD PTR _result$77[ebp], 31		; 0000001fH
	je	SHORT $LN134@OBSProc
	cmp	DWORD PTR _result$77[ebp], 27		; 0000001bH
	jne	SHORT $LN133@OBSProc
$LN134@OBSProc:

; 4105 :                             {
; 4106 :                                 OPENASINFO info;
; 4107 :                                 info.pcszFile = tar.Array();

	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR _info$16[ebp], eax

; 4108 :                                 info.pcszClass = nullptr;

	mov	DWORD PTR _info$16[ebp+4], 0

; 4109 :                                 info.oaifInFlags = OAIF_ALLOW_REGISTRATION | OAIF_EXEC;

	mov	DWORD PTR _info$16[ebp+8], 5

; 4110 :                                 if (SHOpenWithDialog(nullptr, &info) == S_OK)

	lea	eax, DWORD PTR _info$16[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__SHOpenWithDialog@8
	test	eax, eax
	jne	SHORT $LN133@OBSProc

; 4111 :                                     break;

	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _log$65[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN247@OBSProc
$LN133@OBSProc:

; 4112 :                             }
; 4113 : 
; 4114 :                             String error = Str("Sources.TextSource.FileNotFound");

	push	OFFSET $SG4294712413
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _error$22[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 4115 :                             OBSMessageBox(hwndMain, error.FindReplace(L"$1", tar.Array()).Array(), nullptr, MB_ICONERROR);

	push	16					; 00000010H
	push	0
	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712412
	lea	ecx, DWORD PTR _error$22[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 4116 :                         }

	lea	ecx, DWORD PTR _error$22[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _tar$70[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _log$65[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN139@OBSProc:
$LN247@OBSProc:

; 4117 :                     }
; 4118 :             }
; 4119 :             break;

	jmp	$LN250@OBSProc
$LN132@OBSProc:

; 4120 : 		case WM_MEASUREITEM://ODT_LISTBOX  
; 4121 : 			if (((UINT)wParam == ID_SCENES) || ((UINT)wParam == ID_SOURCES))

	cmp	DWORD PTR _wParam$[ebp], 5011		; 00001393H
	je	SHORT $LN130@OBSProc
	cmp	DWORD PTR _wParam$[ebp], 5013		; 00001395H
	jne	SHORT $LN131@OBSProc
$LN130@OBSProc:

; 4122 : 			{
; 4123 : 				LPMEASUREITEMSTRUCT lpmis = (LPMEASUREITEMSTRUCT)lParam;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _lpmis$42[ebp], eax

; 4124 : 				lpmis->itemWidth = 200;

	mov	ecx, DWORD PTR _lpmis$42[ebp]
	mov	DWORD PTR [ecx+12], 200			; 000000c8H

; 4125 : 				lpmis->itemHeight = 22;

	mov	edx, DWORD PTR _lpmis$42[ebp]
	mov	DWORD PTR [edx+16], 22			; 00000016H
$LN131@OBSProc:

; 4126 : 			}
; 4127 : 			break;

	jmp	$LN250@OBSProc
$LN129@OBSProc:

; 4128 :         case WM_NOTIFY:
; 4129 :             {
; 4130 :                 NMHDR nmh = *(LPNMHDR)lParam;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _nmh$64[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _nmh$64[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _nmh$64[ebp+8], eax

; 4131 : 
; 4132 :                 switch(wParam)

	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv1010[ebp], ecx
	cmp	DWORD PTR tv1010[ebp], 5002		; 0000138aH
	je	$LN91@OBSProc
	cmp	DWORD PTR tv1010[ebp], 5013		; 00001395H
	je	SHORT $LN126@OBSProc
	jmp	$LN127@OBSProc
$LN126@OBSProc:

; 4133 :                 {
; 4134 :                     case ID_SOURCES:
; 4135 :                         if(nmh.code == NM_CUSTOMDRAW)

	cmp	DWORD PTR _nmh$64[ebp+8], -12		; fffffff4H
	jne	$LN125@OBSProc

; 4136 :                         {
; 4137 :                             LPNMLVCUSTOMDRAW  lplvcd = (LPNMLVCUSTOMDRAW)lParam;

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _lplvcd$62[ebp], edx

; 4138 :                             switch( lplvcd->nmcd.dwDrawStage)

	mov	eax, DWORD PTR _lplvcd$62[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv1014[ebp], ecx
	cmp	DWORD PTR tv1014[ebp], 65537		; 00010001H
	je	SHORT $LN122@OBSProc
	jmp	$LN123@OBSProc
$LN122@OBSProc:

; 4139 :                             {
; 4140 :                                 case CDDS_ITEMPREPAINT:
; 4141 : 
; 4142 :                                     int state, bkMode;
; 4143 :                                     BOOL checkedState;
; 4144 :                                     RECT iconRect, textRect, itemRect, gsVIRect;
; 4145 :                                     COLORREF oldTextColor;
; 4146 : 
; 4147 :                                     String itemText;

	lea	ecx, DWORD PTR _itemText$54[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 4148 : 
; 4149 :                                     HDC hdc = lplvcd->nmcd.hdc;

	mov	edx, DWORD PTR _lplvcd$62[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _hdc$89[ebp], eax

; 4150 :                                     int itemId = (int)lplvcd->nmcd.dwItemSpec;

	mov	ecx, DWORD PTR _lplvcd$62[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _itemId$75[ebp], edx

; 4151 : 
; 4152 :                                     bool isGlobalSource = false;

	mov	BYTE PTR _isGlobalSource$84[ebp], 0

; 4153 : 
; 4154 :                                     XElement *sources, *sourcesElement = NULL;

	mov	DWORD PTR _sourcesElement$73[ebp], 0

; 4155 :                                     
; 4156 :                                     sources = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712411
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sources$48[ebp], eax

; 4157 :                                     
; 4158 :                                     if(sources)

	cmp	DWORD PTR _sources$48[ebp], 0
	je	SHORT $LN119@OBSProc

; 4159 :                                     {
; 4160 :                                         sourcesElement = sources->GetElementByID(itemId);

	mov	ecx, DWORD PTR _itemId$75[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sources$48[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sourcesElement$73[ebp], eax

; 4161 : 
; 4162 :                                         if(sourcesElement)

	cmp	DWORD PTR _sourcesElement$73[ebp], 0
	je	SHORT $LN119@OBSProc

; 4163 :                                             if(scmpi(sourcesElement->GetString(TEXT("class")), TEXT("GlobalSource")) == 0)

	push	OFFSET $SG4294712410
	push	0
	push	OFFSET $SG4294712409
	mov	ecx, DWORD PTR _sourcesElement$73[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN119@OBSProc

; 4164 :                                                 isGlobalSource = true;

	mov	BYTE PTR _isGlobalSource$84[ebp], 1
$LN119@OBSProc:

; 4165 :                                     }
; 4166 : 
; 4167 :                                     ListView_GetItemRect(nmh.hwndFrom,itemId, &itemRect, LVIR_BOUNDS);

	lea	edx, DWORD PTR _itemRect$96[ebp]
	test	edx, edx
	je	SHORT $LN287@OBSProc
	mov	DWORD PTR _itemRect$96[ebp], 0
	lea	eax, DWORD PTR _itemRect$96[ebp]
	mov	DWORD PTR tv1041[ebp], eax
	jmp	SHORT $LN288@OBSProc
$LN287@OBSProc:
	mov	DWORD PTR tv1041[ebp], 0
$LN288@OBSProc:
	mov	ecx, DWORD PTR tv1041[ebp]
	push	ecx
	mov	edx, DWORD PTR _itemId$75[ebp]
	push	edx
	push	4110					; 0000100eH
	mov	eax, DWORD PTR _nmh$64[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 4168 :                                     ListView_GetItemRect(nmh.hwndFrom,itemId, &textRect, LVIR_LABEL);

	lea	ecx, DWORD PTR _textRect$97[ebp]
	test	ecx, ecx
	je	SHORT $LN289@OBSProc
	mov	DWORD PTR _textRect$97[ebp], 2
	lea	edx, DWORD PTR _textRect$97[ebp]
	mov	DWORD PTR tv1047[ebp], edx
	jmp	SHORT $LN290@OBSProc
$LN289@OBSProc:
	mov	DWORD PTR tv1047[ebp], 0
$LN290@OBSProc:
	mov	eax, DWORD PTR tv1047[ebp]
	push	eax
	mov	ecx, DWORD PTR _itemId$75[ebp]
	push	ecx
	push	4110					; 0000100eH
	mov	edx, DWORD PTR _nmh$64[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 4169 : 								
; 4170 : 
; 4171 : 
; 4172 :                                     iconRect.right = textRect.left - 1;

	mov	eax, DWORD PTR _textRect$97[ebp]
	sub	eax, 1
	mov	DWORD PTR _iconRect$98[ebp+8], eax

; 4173 :                                     iconRect.left = iconRect.right - (textRect.bottom - textRect.top);

	mov	ecx, DWORD PTR _textRect$97[ebp+12]
	sub	ecx, DWORD PTR _textRect$97[ebp+4]
	mov	edx, DWORD PTR _iconRect$98[ebp+8]
	sub	edx, ecx
	mov	DWORD PTR _iconRect$98[ebp], edx

; 4174 :                                     iconRect.top  = textRect.top + 2;

	mov	eax, DWORD PTR _textRect$97[ebp+4]
	add	eax, 2
	mov	DWORD PTR _iconRect$98[ebp+4], eax

; 4175 :                                     iconRect.bottom = textRect.bottom - 2;

	mov	ecx, DWORD PTR _textRect$97[ebp+12]
	sub	ecx, 2
	mov	DWORD PTR _iconRect$98[ebp+12], ecx

; 4176 : 
; 4177 :                                     gsVIRect.left = itemRect.left + 1;

	mov	edx, DWORD PTR _itemRect$96[ebp]
	add	edx, 1
	mov	DWORD PTR _gsVIRect$95[ebp], edx

; 4178 :                                     gsVIRect.right = itemRect.left + 2;

	mov	eax, DWORD PTR _itemRect$96[ebp]
	add	eax, 2
	mov	DWORD PTR _gsVIRect$95[ebp+8], eax

; 4179 :                                     gsVIRect.top = iconRect.top + 1;

	mov	ecx, DWORD PTR _iconRect$98[ebp+4]
	add	ecx, 1
	mov	DWORD PTR _gsVIRect$95[ebp+4], ecx

; 4180 :                                     gsVIRect.bottom = iconRect.bottom - 1;

	mov	edx, DWORD PTR _iconRect$98[ebp+12]
	sub	edx, 1
	mov	DWORD PTR _gsVIRect$95[ebp+12], edx

; 4181 : 
; 4182 :                                     state = ListView_GetItemState(nmh.hwndFrom, itemId, LVIS_SELECTED);

	push	2
	mov	eax, DWORD PTR _itemId$75[ebp]
	push	eax
	push	4140					; 0000102cH
	mov	ecx, DWORD PTR _nmh$64[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _state$63[ebp], eax

; 4183 :                                     checkedState = ListView_GetCheckState(nmh.hwndFrom, itemId);

	push	61440					; 0000f000H
	mov	edx, DWORD PTR _itemId$75[ebp]
	push	edx
	push	4140					; 0000102cH
	mov	eax, DWORD PTR _nmh$64[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	shr	eax, 12					; 0000000cH
	sub	eax, 1
	mov	DWORD PTR _checkedState$53[ebp], eax

; 4184 : 
; 4185 :                                     oldTextColor = GetTextColor(hdc);

	mov	ecx, DWORD PTR _hdc$89[ebp]
	push	ecx
	call	DWORD PTR __imp__GetTextColor@4
	mov	DWORD PTR _oldTextColor$24[ebp], eax

; 4186 : 
; 4187 :                                     if(state&LVIS_SELECTED)

	mov	edx, DWORD PTR _state$63[ebp]
	and	edx, 2
	je	SHORT $LN118@OBSProc

; 4188 :                                     {
; 4189 : 										FillRect(hdc, &itemRect, (HBRUSH)GetStockObject(GRAY_BRUSH));

	push	2
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	lea	eax, DWORD PTR _itemRect$96[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$89[ebp]
	push	ecx
	call	DWORD PTR __imp__FillRect@12

; 4190 : 										SetTextColor(hdc, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	edx, DWORD PTR _hdc$89[ebp]
	push	edx
	call	DWORD PTR __imp__SetTextColor@8

; 4191 : 
; 4192 : 										
; 4193 :                                     }
; 4194 :                                     else

	jmp	SHORT $LN117@OBSProc
$LN118@OBSProc:

; 4195 :                                     {
; 4196 : 										FillRect(hdc, &itemRect, (HBRUSH)GetStockObject(BLACK_BRUSH));

	push	4
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	lea	eax, DWORD PTR _itemRect$96[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$89[ebp]
	push	ecx
	call	DWORD PTR __imp__FillRect@12

; 4197 : 										SetTextColor(hdc, RGB(150, 150, 150));

	push	9868950					; 00969696H
	mov	edx, DWORD PTR _hdc$89[ebp]
	push	edx
	call	DWORD PTR __imp__SetTextColor@8
$LN117@OBSProc:

; 4198 :                                     }
; 4199 :                                    
; 4200 : 
; 4201 : 									HTHEME hTheme = OpenThemeData(hwnd, TEXT("BUTTON"));

	push	OFFSET $SG4294712408
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__OpenThemeData@8
	mov	DWORD PTR _hTheme$72[ebp], eax

; 4202 : 									if (hTheme)

	cmp	DWORD PTR _hTheme$72[ebp], 0
	je	$LN116@OBSProc

; 4203 : 									{
; 4204 : 										if (checkedState)

	cmp	DWORD PTR _checkedState$53[ebp], 0
	je	SHORT $LN115@OBSProc

; 4205 : 											DrawThemeBackground(hTheme, hdc, BP_CHECKBOX, (state&LVIS_SELECTED) ? CBS_CHECKEDPRESSED : CBS_CHECKEDNORMAL, &iconRect, NULL);

	mov	ecx, DWORD PTR _state$63[ebp]
	and	ecx, 2
	je	SHORT $LN291@OBSProc
	mov	DWORD PTR tv1164[ebp], 7
	jmp	SHORT $LN292@OBSProc
$LN291@OBSProc:
	mov	DWORD PTR tv1164[ebp], 5
$LN292@OBSProc:
	push	0
	lea	edx, DWORD PTR _iconRect$98[ebp]
	push	edx
	mov	eax, DWORD PTR tv1164[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _hdc$89[ebp]
	push	ecx
	mov	edx, DWORD PTR _hTheme$72[ebp]
	push	edx
	call	DWORD PTR __imp__DrawThemeBackground@24

; 4206 : 										else

	jmp	SHORT $LN114@OBSProc
$LN115@OBSProc:

; 4207 : 											DrawThemeBackground(hTheme, hdc, BP_CHECKBOX, CBS_UNCHECKEDNORMAL, &iconRect, NULL);

	push	0
	lea	eax, DWORD PTR _iconRect$98[ebp]
	push	eax
	push	1
	push	3
	mov	ecx, DWORD PTR _hdc$89[ebp]
	push	ecx
	mov	edx, DWORD PTR _hTheme$72[ebp]
	push	edx
	call	DWORD PTR __imp__DrawThemeBackground@24
$LN114@OBSProc:

; 4208 : 										CloseThemeData(hTheme);

	mov	eax, DWORD PTR _hTheme$72[ebp]
	push	eax
	call	DWORD PTR __imp__CloseThemeData@4

; 4209 : 									}
; 4210 : 									else

	jmp	SHORT $LN111@OBSProc
$LN116@OBSProc:

; 4211 : 									{
; 4212 : 										iconRect.right = iconRect.left + iconRect.bottom - iconRect.top;

	mov	ecx, DWORD PTR _iconRect$98[ebp]
	add	ecx, DWORD PTR _iconRect$98[ebp+12]
	sub	ecx, DWORD PTR _iconRect$98[ebp+4]
	mov	DWORD PTR _iconRect$98[ebp+8], ecx

; 4213 : 										if (checkedState)

	cmp	DWORD PTR _checkedState$53[ebp], 0
	je	SHORT $LN112@OBSProc

; 4214 : 											DrawFrameControl(hdc, &iconRect, DFC_BUTTON, DFCS_BUTTONCHECK | DFCS_CHECKED | DFCS_FLAT);

	push	17408					; 00004400H
	push	4
	lea	edx, DWORD PTR _iconRect$98[ebp]
	push	edx
	mov	eax, DWORD PTR _hdc$89[ebp]
	push	eax
	call	DWORD PTR __imp__DrawFrameControl@16

; 4215 : 										else

	jmp	SHORT $LN111@OBSProc
$LN112@OBSProc:

; 4216 : 											DrawFrameControl(hdc, &iconRect, DFC_BUTTON, DFCS_BUTTONCHECK | DFCS_FLAT);

	push	16384					; 00004000H
	push	4
	lea	ecx, DWORD PTR _iconRect$98[ebp]
	push	ecx
	mov	edx, DWORD PTR _hdc$89[ebp]
	push	edx
	call	DWORD PTR __imp__DrawFrameControl@16
$LN111@OBSProc:

; 4217 : 									}
; 4218 : 
; 4219 :                                     if(isGlobalSource)

	movzx	eax, BYTE PTR _isGlobalSource$84[ebp]
	test	eax, eax
	je	SHORT $LN110@OBSProc

; 4220 :                                         FillRect(hdc, &gsVIRect, (state&LVIS_SELECTED) ? (HBRUSH)(COLOR_HIGHLIGHTTEXT + 1) : (HBRUSH)(COLOR_WINDOWTEXT + 1));

	mov	ecx, DWORD PTR _state$63[ebp]
	and	ecx, 2
	je	SHORT $LN293@OBSProc
	mov	DWORD PTR tv1191[ebp], 15		; 0000000fH
	jmp	SHORT $LN294@OBSProc
$LN293@OBSProc:
	mov	DWORD PTR tv1191[ebp], 9
$LN294@OBSProc:
	mov	edx, DWORD PTR tv1191[ebp]
	push	edx
	lea	eax, DWORD PTR _gsVIRect$95[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$89[ebp]
	push	ecx
	call	DWORD PTR __imp__FillRect@12
$LN110@OBSProc:

; 4221 :                                     
; 4222 :                                     textRect.left += 2;

	mov	edx, DWORD PTR _textRect$97[ebp]
	add	edx, 2
	mov	DWORD PTR _textRect$97[ebp], edx

; 4223 : 
; 4224 :                                     if(sourcesElement)

	cmp	DWORD PTR _sourcesElement$73[ebp], 0
	je	$LN108@OBSProc

; 4225 :                                     {
; 4226 :                                         itemText = sourcesElement->GetName();

	mov	ecx, DWORD PTR _sourcesElement$73[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	lea	ecx, DWORD PTR _itemText$54[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 4227 :                                         if(itemText.IsValid())

	lea	ecx, DWORD PTR _itemText$54[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN108@OBSProc

; 4228 :                                         {
; 4229 :                                             bkMode = SetBkMode(hdc, TRANSPARENT);

	push	1
	mov	eax, DWORD PTR _hdc$89[ebp]
	push	eax
	call	DWORD PTR __imp__SetBkMode@8
	mov	DWORD PTR _bkMode$34[ebp], eax

; 4230 :                                             DrawText(hdc, itemText, slen(itemText), &textRect, DT_LEFT | DT_END_ELLIPSIS | DT_VCENTER | DT_SINGLELINE | DT_NOPREFIX );

	push	34852					; 00008824H
	lea	ecx, DWORD PTR _textRect$97[ebp]
	push	ecx
	lea	ecx, DWORD PTR _itemText$54[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?slen@@YGIPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _itemText$54[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hdc$89[ebp]
	push	edx
	call	DWORD PTR __imp__DrawTextW@20

; 4231 :                                             SetBkMode(hdc, bkMode);

	mov	eax, DWORD PTR _bkMode$34[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$89[ebp]
	push	ecx
	call	DWORD PTR __imp__SetBkMode@8
$LN108@OBSProc:

; 4232 :                                         }
; 4233 :                                     }
; 4234 : 
; 4235 :                                     SetTextColor(hdc, oldTextColor);

	mov	edx, DWORD PTR _oldTextColor$24[ebp]
	push	edx
	mov	eax, DWORD PTR _hdc$89[ebp]
	push	eax
	call	DWORD PTR __imp__SetTextColor@8

; 4236 : 
; 4237 :                                     return CDRF_SKIPDEFAULT;

	mov	DWORD PTR $T30[ebp], 4
	lea	ecx, DWORD PTR _itemText$54[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR $T30[ebp]
	jmp	$LN252@OBSProc
$LN123@OBSProc:

; 4238 :                             }
; 4239 : 
; 4240 :                             return CDRF_NOTIFYPOSTPAINT | CDRF_NOTIFYITEMDRAW;

	mov	eax, 48					; 00000030H
	jmp	$LN252@OBSProc
$LN125@OBSProc:

; 4241 :                         }
; 4242 : 
; 4243 :                         if(nmh.code == LVN_ITEMCHANGED && !App->bChangingSources)

	cmp	DWORD PTR _nmh$64[ebp+8], -101		; ffffff9bH
	jne	SHORT $LN107@OBSProc
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+705]
	test	edx, edx
	jne	SHORT $LN107@OBSProc

; 4244 :                         {
; 4245 :                             NMLISTVIEW pnmv = *(LPNMLISTVIEW)lParam;

	mov	ecx, 11					; 0000000bH
	mov	esi, DWORD PTR _lParam$[ebp]
	lea	edi, DWORD PTR _pnmv$2[ebp]
	rep movsd

; 4246 :                             if((pnmv.uOldState & LVIS_SELECTED) != (pnmv.uNewState & LVIS_SELECTED))

	mov	eax, DWORD PTR _pnmv$2[ebp+24]
	and	eax, 2
	mov	ecx, DWORD PTR _pnmv$2[ebp+20]
	and	ecx, 2
	cmp	eax, ecx
	je	SHORT $LN106@OBSProc

; 4247 :                             {
; 4248 :                                 /*item selected*/
; 4249 :                                 App->SelectSources();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SelectSources@OBS@@AAEXXZ		; OBS::SelectSources
$LN106@OBSProc:

; 4250 :                             }
; 4251 :                             if((pnmv.uOldState & LVIS_STATEIMAGEMASK) != (pnmv.uNewState & LVIS_STATEIMAGEMASK))

	mov	edx, DWORD PTR _pnmv$2[ebp+24]
	and	edx, 61440				; 0000f000H
	mov	eax, DWORD PTR _pnmv$2[ebp+20]
	and	eax, 61440				; 0000f000H
	cmp	edx, eax
	je	SHORT $LN105@OBSProc

; 4252 :                             {
; 4253 :                                 //checks changed
; 4254 :                                 App->CheckSources();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CheckSources@OBS@@AAEXXZ		; OBS::CheckSources
$LN105@OBSProc:

; 4255 :                             }
; 4256 :                         }

	jmp	$LN98@OBSProc
$LN107@OBSProc:

; 4257 :                         else if(nmh.code == NM_DBLCLK)

	cmp	DWORD PTR _nmh$64[ebp+8], -3		; fffffffdH
	jne	$LN98@OBSProc

; 4258 :                         {
; 4259 :                             NMITEMACTIVATE itemActivate = *(LPNMITEMACTIVATE)lParam;

	mov	ecx, 12					; 0000000cH
	mov	esi, DWORD PTR _lParam$[ebp]
	lea	edi, DWORD PTR _itemActivate$1[ebp]
	rep movsd

; 4260 :                             UINT selectedID = itemActivate.iItem;

	mov	ecx, DWORD PTR _itemActivate$1[ebp+12]
	mov	DWORD PTR _selectedID$60[ebp], ecx

; 4261 : 
; 4262 :                             /* check to see if the double click is on top of the checkbox
; 4263 :                                if so, forget about it */
; 4264 :                             LVHITTESTINFO hitInfo;
; 4265 :                             hitInfo.pt = itemActivate.ptAction;

	mov	edx, DWORD PTR _itemActivate$1[ebp+32]
	mov	DWORD PTR _hitInfo$93[ebp], edx
	mov	eax, DWORD PTR _itemActivate$1[ebp+36]
	mov	DWORD PTR _hitInfo$93[ebp+4], eax

; 4266 :                             ListView_HitTestEx(nmh.hwndFrom, &hitInfo);

	lea	ecx, DWORD PTR _hitInfo$93[ebp]
	push	ecx
	push	-1
	push	4114					; 00001012H
	mov	edx, DWORD PTR _nmh$64[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 4267 :                             if(hitInfo.flags & LVHT_ONITEMSTATEICON)

	mov	eax, DWORD PTR _hitInfo$93[ebp+8]
	and	eax, 8
	je	SHORT $LN102@OBSProc

; 4268 :                                 break;

	jmp	$LN127@OBSProc
$LN102@OBSProc:

; 4269 :                             
; 4270 :                             if(!App->sceneElement)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+212], 0
	jne	SHORT $LN101@OBSProc

; 4271 :                                 break;

	jmp	$LN127@OBSProc
$LN101@OBSProc:

; 4272 : 
; 4273 :                             XElement *sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712407
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$52[ebp], eax

; 4274 :                             if(!sourcesElement)

	cmp	DWORD PTR _sourcesElement$52[ebp], 0
	jne	SHORT $LN100@OBSProc

; 4275 :                                 break;

	jmp	$LN127@OBSProc
$LN100@OBSProc:

; 4276 : 
; 4277 :                             XElement *selectedElement = sourcesElement->GetElementByID(selectedID);

	mov	eax, DWORD PTR _selectedID$60[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourcesElement$52[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _selectedElement$82[ebp], eax

; 4278 :                             if(!selectedElement)

	cmp	DWORD PTR _selectedElement$82[ebp], 0
	jne	SHORT $LN99@OBSProc

; 4279 :                                 break;

	jmp	$LN127@OBSProc
$LN99@OBSProc:

; 4280 : 
; 4281 :                             ClassInfo *curClassInfo = App->GetImageSourceClass(selectedElement->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712406
	mov	ecx, DWORD PTR _selectedElement$82[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetImageSourceClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetImageSourceClass
	mov	DWORD PTR _curClassInfo$67[ebp], eax

; 4282 :                             if(curClassInfo && curClassInfo->configProc)

	cmp	DWORD PTR _curClassInfo$67[ebp], 0
	je	$LN98@OBSProc
	mov	ecx, DWORD PTR _curClassInfo$67[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	$LN98@OBSProc

; 4283 :                             {
; 4284 :                                 Vect2 multiple;

	lea	ecx, DWORD PTR _multiple$18[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@XZ

; 4285 :                                 ImageSource *source;
; 4286 : 
; 4287 :                                 App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 4288 : 
; 4289 :                                 if(App->bRunning && App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	$LN96@OBSProc
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	$LN96@OBSProc

; 4290 :                                 {
; 4291 :                                     SceneItem* selectedItem = App->scene->GetSceneItem(selectedID);

	mov	edx, DWORD PTR _selectedID$60[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSceneItem@Scene@@QBEPAVSceneItem@@I@Z
	mov	DWORD PTR _selectedItem$28[ebp], eax

; 4292 :                                     source = selectedItem->GetSource();

	mov	ecx, DWORD PTR _selectedItem$28[ebp]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	mov	DWORD PTR _source$61[ebp], eax

; 4293 :                                     if(source)

	cmp	DWORD PTR _source$61[ebp], 0
	je	$LN96@OBSProc

; 4294 :                                     {
; 4295 :                                         Vect2 curSize = Vect2(selectedElement->GetFloat(TEXT("cx"), 32.0f), selectedElement->GetFloat(TEXT("cy"), 32.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712405
	mov	ecx, DWORD PTR _selectedElement$82[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712404
	mov	ecx, DWORD PTR _selectedElement$82[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _curSize$13[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 4296 :                                         Vect2 baseSize = source->GetSize();

	lea	ecx, DWORD PTR _baseSize$10[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$61[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _source$61[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx

; 4297 : 
; 4298 :                                         multiple = curSize/baseSize;

	lea	eax, DWORD PTR _baseSize$10[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	ecx, DWORD PTR _curSize$13[ebp]
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR _multiple$18[ebp]
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z
$LN96@OBSProc:

; 4299 :                                     }
; 4300 :                                 }
; 4301 : 
; 4302 :                                 if(curClassInfo->configProc(selectedElement, false))

	push	0
	mov	edx, DWORD PTR _selectedElement$82[ebp]
	push	edx
	mov	eax, DWORD PTR _curClassInfo$67[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	movzx	edx, al
	test	edx, edx
	je	$LN94@OBSProc

; 4303 :                                 {
; 4304 :                                     if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN94@OBSProc

; 4305 :                                     {
; 4306 :                                         App->EnterSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 4307 : 
; 4308 :                                         if(App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+144], 0
	je	$LN93@OBSProc

; 4309 :                                         {
; 4310 :                                             Vect2 newSize = Vect2(selectedElement->GetFloat(TEXT("cx"), 32.0f), selectedElement->GetFloat(TEXT("cy"), 32.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712403
	mov	ecx, DWORD PTR _selectedElement$82[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712402
	mov	ecx, DWORD PTR _selectedElement$82[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _newSize$35[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 4311 :                                             newSize *= multiple;

	lea	eax, DWORD PTR _multiple$18[ebp]
	push	eax
	lea	ecx, DWORD PTR _newSize$35[ebp]
	call	DWORD PTR __imp_??XVect2@@QAEAAU0@ABU0@@Z

; 4312 : 
; 4313 :                                             selectedElement->SetFloat(TEXT("cx"), newSize.x);

	push	ecx
	movss	xmm0, DWORD PTR _newSize$35[ebp]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712401
	mov	ecx, DWORD PTR _selectedElement$82[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 4314 :                                             selectedElement->SetFloat(TEXT("cy"), newSize.y);

	push	ecx
	movss	xmm0, DWORD PTR _newSize$35[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712400
	mov	ecx, DWORD PTR _selectedElement$82[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 4315 : 
; 4316 :                                             SceneItem* selectedItem = App->scene->GetSceneItem(selectedID);

	mov	ecx, DWORD PTR _selectedID$60[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?GetSceneItem@Scene@@QBEPAVSceneItem@@I@Z
	mov	DWORD PTR _selectedItem$68[ebp], eax

; 4317 :                                             if(selectedItem->GetSource())

	mov	ecx, DWORD PTR _selectedItem$68[ebp]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	test	eax, eax
	je	SHORT $LN92@OBSProc

; 4318 :                                                 selectedItem->GetSource()->UpdateSettings();

	mov	ecx, DWORD PTR _selectedItem$68[ebp]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	mov	DWORD PTR tv1377[ebp], eax
	mov	eax, DWORD PTR tv1377[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv1377[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
$LN92@OBSProc:

; 4319 :                                             selectedItem->Update();

	mov	ecx, DWORD PTR _selectedItem$68[ebp]
	call	DWORD PTR __imp_?Update@SceneItem@@QAEXXZ
$LN93@OBSProc:

; 4320 :                                         }
; 4321 : 
; 4322 :                                         App->LeaveSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex
$LN94@OBSProc:

; 4323 :                                     }
; 4324 :                                 }
; 4325 : 
; 4326 :                                 App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching
$LN98@OBSProc:

; 4327 :                             }
; 4328 :                         }
; 4329 :                         break;

	jmp	$LN127@OBSProc
$LN91@OBSProc:

; 4330 : 
; 4331 :                         case ID_TOGGLERECORDING:
; 4332 :                             if (nmh.code == BCN_DROPDOWN)

	cmp	DWORD PTR _nmh$64[ebp+8], -1248		; fffffb20H
	jne	$LN88@OBSProc

; 4333 :                             {
; 4334 :                                 LPNMBCDROPDOWN drop = (LPNMBCDROPDOWN)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _drop$49[ebp], ecx

; 4335 : 
; 4336 :                                 HMENU menu = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _menu$66[ebp], eax

; 4337 :                                 AppendMenu(menu, MF_STRING, 1, App->bRecordingReplayBuffer ? Str("MainWindow.StopReplayBuffer") : Str("MainWindow.StartReplayBuffer"));

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+624]
	test	eax, eax
	je	SHORT $LN295@OBSProc
	push	OFFSET $SG4294712399
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv1396[ebp], eax
	jmp	SHORT $LN296@OBSProc
$LN295@OBSProc:
	push	OFFSET $SG4294712398
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv1396[ebp], eax
$LN296@OBSProc:
	mov	eax, DWORD PTR tv1396[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _menu$66[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 4338 :                                 AppendMenu(menu, MF_STRING | (App->bRecording == !App->bRecordingReplayBuffer ? MF_DISABLED : 0), 2,
; 4339 :                                     App->bRecording ? Str("MainWindow.StopRecordingAndReplayBuffer") : Str("MainWindow.StartRecordingAndReplayBuffer"));

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+623]
	test	eax, eax
	je	SHORT $LN297@OBSProc
	push	OFFSET $SG4294712397
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv1442[ebp], eax
	jmp	SHORT $LN298@OBSProc
$LN297@OBSProc:
	push	OFFSET $SG4294712396
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv1442[ebp], eax
$LN298@OBSProc:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+624]
	test	ecx, ecx
	jne	SHORT $LN299@OBSProc
	mov	DWORD PTR tv1450[ebp], 1
	jmp	SHORT $LN300@OBSProc
$LN299@OBSProc:
	mov	DWORD PTR tv1450[ebp], 0
$LN300@OBSProc:
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+623]
	cmp	eax, DWORD PTR tv1450[ebp]
	jne	SHORT $LN301@OBSProc
	mov	DWORD PTR tv1452[ebp], 2
	jmp	SHORT $LN302@OBSProc
$LN301@OBSProc:
	mov	DWORD PTR tv1452[ebp], 0
$LN302@OBSProc:
	mov	ecx, DWORD PTR tv1442[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR tv1452[ebp]
	push	edx
	mov	eax, DWORD PTR _menu$66[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 4340 : 
; 4341 :                                 POINT p;
; 4342 :                                 p.x = drop->rcButton.right;

	mov	ecx, DWORD PTR _drop$49[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _p$38[ebp], edx

; 4343 :                                 p.y = drop->rcButton.bottom;

	mov	eax, DWORD PTR _drop$49[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _p$38[ebp+4], ecx

; 4344 :                                 ClientToScreen(GetDlgItem(hwndMain, ID_TOGGLERECORDING), &p);

	lea	edx, DWORD PTR _p$38[ebp]
	push	edx
	push	5002					; 0000138aH
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ClientToScreen@8

; 4345 : 
; 4346 :                                 switch (TrackPopupMenu(menu, TPM_RETURNCMD | TPM_RIGHTALIGN, p.x, p.y, 0, GetDlgItem(hwndMain, ID_TOGGLERECORDING), nullptr))

	push	0
	push	5002					; 0000138aH
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	push	0
	mov	edx, DWORD PTR _p$38[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$38[ebp]
	push	eax
	push	264					; 00000108H
	mov	ecx, DWORD PTR _menu$66[ebp]
	push	ecx
	call	DWORD PTR __imp__TrackPopupMenu@28
	mov	DWORD PTR tv1474[ebp], eax
	cmp	DWORD PTR tv1474[ebp], 1
	je	SHORT $LN87@OBSProc
	cmp	DWORD PTR tv1474[ebp], 2
	je	SHORT $LN86@OBSProc
	jmp	SHORT $LN88@OBSProc
$LN87@OBSProc:

; 4347 :                                 {
; 4348 :                                 case 1:
; 4349 :                                     App->RefreshStreamButtons(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 4350 :                                     App->ToggleReplayBuffer();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ToggleReplayBuffer@OBS@@AAEXXZ		; OBS::ToggleReplayBuffer

; 4351 :                                     App->RefreshStreamButtons();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 4352 :                                     break;

	jmp	SHORT $LN88@OBSProc
$LN86@OBSProc:

; 4353 :                                 case 2:
; 4354 :                                     App->RefreshStreamButtons(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons

; 4355 :                                     App->ToggleRecording();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ToggleRecording@OBS@@AAEXXZ		; OBS::ToggleRecording

; 4356 :                                     App->ToggleReplayBuffer();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ToggleReplayBuffer@OBS@@AAEXXZ		; OBS::ToggleReplayBuffer

; 4357 :                                     App->RefreshStreamButtons();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RefreshStreamButtons@OBS@@AAEX_N@Z	; OBS::RefreshStreamButtons
$LN88@OBSProc:
$LN127@OBSProc:

; 4358 :                                     break;
; 4359 :                                 case 0:
; 4360 :                                     break;
; 4361 :                                 }
; 4362 :                             }
; 4363 :                 }
; 4364 :             }
; 4365 :             break;

	jmp	$LN250@OBSProc
$LN84@OBSProc:

; 4366 : 
; 4367 :         case WM_ENTERSIZEMOVE:
; 4368 :             App->bDragResize = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+692], 1

; 4369 :             break;

	jmp	$LN250@OBSProc
$LN83@OBSProc:

; 4370 : 
; 4371 :         case WM_EXITSIZEMOVE:
; 4372 :             if(App->bSizeChanging)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+693]
	test	ecx, ecx
	je	SHORT $LN82@OBSProc

; 4373 :             {
; 4374 :                 RECT client;
; 4375 :                 GetClientRect(hwnd, &client);

	lea	edx, DWORD PTR _client$92[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8

; 4376 :                 App->ResizeWindow(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResizeWindow@OBS@@QAEX_N@Z		; OBS::ResizeWindow

; 4377 :                 App->bSizeChanging = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+693], 0
$LN82@OBSProc:

; 4378 :             }
; 4379 :             App->bDragResize = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+692], 0

; 4380 :             break;

	jmp	$LN250@OBSProc
$LN81@OBSProc:

; 4381 : 
; 4382 :         case WM_DRAWITEM:
; 4383 :             if(wParam == ID_STATUS)

	cmp	DWORD PTR _wParam$[ebp], 5010		; 00001392H
	jne	SHORT $LN80@OBSProc

; 4384 :             {
; 4385 :                 DRAWITEMSTRUCT &dis = *(DRAWITEMSTRUCT*)lParam; //don't dis me bro

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _dis$27[ebp], eax

; 4386 :                 App->DrawStatusBar(dis);

	mov	ecx, DWORD PTR _dis$27[ebp]
	push	ecx
	call	?DrawStatusBar@OBS@@CAXAAUtagDRAWITEMSTRUCT@@@Z ; OBS::DrawStatusBar
	add	esp, 4
	jmp	$LN78@OBSProc
$LN80@OBSProc:

; 4387 :             } else if (wParam==ID_SCENES) {

	cmp	DWORD PTR _wParam$[ebp], 5011		; 00001393H
	jne	$LN78@OBSProc

; 4388 : 				//如果是场景控件
; 4389 : 				LPDRAWITEMSTRUCT pDI = (LPDRAWITEMSTRUCT)lParam;

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _pDI$83[ebp], edx

; 4390 : 				HWND hSence = GetDlgItem(hwnd, ID_SCENES);

	push	5011					; 00001393H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hSence$26[ebp], eax

; 4391 : 
; 4392 : 				HBRUSH brsh = NULL;

	mov	DWORD PTR _brsh$76[ebp], 0

; 4393 : 				if (pDI->itemState &ODS_SELECTED)

	mov	ecx, DWORD PTR _pDI$83[ebp]
	mov	edx, DWORD PTR [ecx+16]
	and	edx, 1
	je	SHORT $LN77@OBSProc

; 4394 : 				{
; 4395 : 					brsh = CreateSolidBrush(RGB(120, 120, 120));

	push	7895160					; 00787878H
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _brsh$76[ebp], eax

; 4396 : 					//设置字体颜色
; 4397 : 					SetTextColor(pDI->hDC, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR _pDI$83[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8

; 4398 : 				}
; 4399 : 				else

	jmp	SHORT $LN76@OBSProc
$LN77@OBSProc:

; 4400 : 				{
; 4401 : 					if (pDI->itemID % 2 == 0)

	mov	edx, DWORD PTR _pDI$83[ebp]
	mov	eax, DWORD PTR [edx+8]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	SHORT $LN75@OBSProc

; 4402 : 					{
; 4403 : 						brsh = CreateSolidBrush(RGB(40, 40, 40));//yellow

	push	2631720					; 00282828H
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _brsh$76[ebp], eax

; 4404 : 					}
; 4405 : 					else

	jmp	SHORT $LN74@OBSProc
$LN75@OBSProc:

; 4406 : 					{
; 4407 : 						brsh = CreateSolidBrush(RGB(10, 10, 10));

	push	657930					; 000a0a0aH
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _brsh$76[ebp], eax
$LN74@OBSProc:

; 4408 : 					}
; 4409 : 					//设置字体颜色
; 4410 : 					SetTextColor(pDI->hDC, RGB(136, 136, 136));

	push	8947848					; 00888888H
	mov	edx, DWORD PTR _pDI$83[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	DWORD PTR __imp__SetTextColor@8
$LN76@OBSProc:

; 4411 : 				}
; 4412 : 				FillRect(pDI->hDC, &pDI->rcItem, brsh);

	mov	ecx, DWORD PTR _brsh$76[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDI$83[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR _pDI$83[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__FillRect@12

; 4413 : 			
; 4414 : 				DeleteObject(brsh);

	mov	edx, DWORD PTR _brsh$76[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteObject@4

; 4415 : 		
; 4416 : 				SetBkMode(pDI->hDC, TRANSPARENT);

	push	1
	mov	eax, DWORD PTR _pDI$83[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__SetBkMode@8

; 4417 : 				TCHAR szText[260];
; 4418 : 	
; 4419 : 
; 4420 : 				SendMessage(hSence, LB_GETTEXT, pDI->itemID, (LPARAM)szText);

	lea	edx, DWORD PTR _szText$99[ebp]
	push	edx
	mov	eax, DWORD PTR _pDI$83[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	393					; 00000189H
	mov	edx, DWORD PTR _hSence$26[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 4421 : 				const DWORD dwStyle = DT_CENTER | DT_SINGLELINE | DT_VCENTER | DT_NOPREFIX | DT_END_ELLIPSIS;

	mov	DWORD PTR _dwStyle$9[ebp], 34853	; 00008825H

; 4422 : 				
; 4423 : 				DrawText(pDI->hDC, szText, _tcsclen(szText), &pDI->rcItem, dwStyle);

	lea	eax, DWORD PTR _szText$99[ebp]
	mov	DWORD PTR tv2597[ebp], eax
	mov	ecx, DWORD PTR tv2597[ebp]
	add	ecx, 2
	mov	DWORD PTR tv2600[ebp], ecx
$LL328@OBSProc:
	mov	edx, DWORD PTR tv2597[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv2603[ebp], ax
	add	DWORD PTR tv2597[ebp], 2
	cmp	WORD PTR tv2603[ebp], 0
	jne	SHORT $LL328@OBSProc
	mov	ecx, DWORD PTR tv2597[ebp]
	sub	ecx, DWORD PTR tv2600[ebp]
	sar	ecx, 1
	mov	DWORD PTR tv1576[ebp], ecx
	push	34853					; 00008825H
	mov	edx, DWORD PTR _pDI$83[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR tv1576[ebp]
	push	eax
	lea	ecx, DWORD PTR _szText$99[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDI$83[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	DWORD PTR __imp__DrawTextW@20
$LN78@OBSProc:

; 4424 : 				
; 4425 : 				
; 4426 : 			}
; 4427 : 			
; 4428 :             break;

	jmp	$LN250@OBSProc
$LN73@OBSProc:

; 4429 : 
; 4430 :         case WM_SIZING:
; 4431 :             {
; 4432 : 				
; 4433 :                 RECT &screenSize = *(RECT*)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _screenSize$90[ebp], ecx

; 4434 : 
; 4435 :                 int newWidth  = MAX(screenSize.right  - screenSize.left, minClientWidth+App->borderXSize);

	mov	edx, DWORD PTR _screenSize$90[ebp]
	mov	eax, DWORD PTR _screenSize$90[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+672]
	add	eax, 640				; 00000280H
	cmp	ecx, eax
	jle	SHORT $LN303@OBSProc
	mov	ecx, DWORD PTR _screenSize$90[ebp]
	mov	edx, DWORD PTR _screenSize$90[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	mov	DWORD PTR tv1591[ebp], eax
	jmp	SHORT $LN304@OBSProc
$LN303@OBSProc:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+672]
	add	edx, 640				; 00000280H
	mov	DWORD PTR tv1591[ebp], edx
$LN304@OBSProc:
	mov	eax, DWORD PTR tv1591[ebp]
	mov	DWORD PTR _newWidth$47[ebp], eax

; 4436 :                 int newHeight = MAX(screenSize.bottom - screenSize.top , minClientHeight+App->borderYSize);

	mov	ecx, DWORD PTR _screenSize$90[ebp]
	mov	edx, DWORD PTR _screenSize$90[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+676]
	add	edx, 275				; 00000113H
	cmp	eax, edx
	jle	SHORT $LN305@OBSProc
	mov	eax, DWORD PTR _screenSize$90[ebp]
	mov	ecx, DWORD PTR _screenSize$90[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv1603[ebp], edx
	jmp	SHORT $LN306@OBSProc
$LN305@OBSProc:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+676]
	add	ecx, 275				; 00000113H
	mov	DWORD PTR tv1603[ebp], ecx
$LN306@OBSProc:
	mov	edx, DWORD PTR tv1603[ebp]
	mov	DWORD PTR _newHeight$51[ebp], edx

; 4437 : 
; 4438 :                 /*int maxCX = GetSystemMetrics(SM_CXFULLSCREEN);
; 4439 :                 int maxCY = GetSystemMetrics(SM_CYFULLSCREEN);
; 4440 : 
; 4441 :                 if(newWidth > maxCX)
; 4442 :                     newWidth = maxCX;
; 4443 :                 if(newHeight > maxCY)
; 4444 :                     newHeight = maxCY;*/
; 4445 : 
; 4446 :                 if(wParam == WMSZ_LEFT || wParam == WMSZ_BOTTOMLEFT || wParam == WMSZ_TOPLEFT)

	cmp	DWORD PTR _wParam$[ebp], 1
	je	SHORT $LN71@OBSProc
	cmp	DWORD PTR _wParam$[ebp], 7
	je	SHORT $LN71@OBSProc
	cmp	DWORD PTR _wParam$[ebp], 4
	jne	SHORT $LN72@OBSProc
$LN71@OBSProc:

; 4447 :                     screenSize.left = screenSize.right - newWidth;

	mov	eax, DWORD PTR _screenSize$90[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _newWidth$47[ebp]
	mov	edx, DWORD PTR _screenSize$90[ebp]
	mov	DWORD PTR [edx], ecx

; 4448 :                 else

	jmp	SHORT $LN70@OBSProc
$LN72@OBSProc:

; 4449 :                     screenSize.right = screenSize.left + newWidth;

	mov	eax, DWORD PTR _screenSize$90[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _newWidth$47[ebp]
	mov	edx, DWORD PTR _screenSize$90[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN70@OBSProc:

; 4450 : 
; 4451 :                 if(wParam == WMSZ_BOTTOM || wParam == WMSZ_BOTTOMLEFT || wParam == WMSZ_BOTTOMRIGHT)

	cmp	DWORD PTR _wParam$[ebp], 6
	je	SHORT $LN68@OBSProc
	cmp	DWORD PTR _wParam$[ebp], 7
	je	SHORT $LN68@OBSProc
	cmp	DWORD PTR _wParam$[ebp], 8
	jne	SHORT $LN69@OBSProc
$LN68@OBSProc:

; 4452 :                     screenSize.bottom = screenSize.top + newHeight;

	mov	eax, DWORD PTR _screenSize$90[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _newHeight$51[ebp]
	mov	edx, DWORD PTR _screenSize$90[ebp]
	mov	DWORD PTR [edx+12], ecx

; 4453 :                 else

	jmp	SHORT $LN67@OBSProc
$LN69@OBSProc:

; 4454 :                     screenSize.top = screenSize.bottom - newHeight;

	mov	eax, DWORD PTR _screenSize$90[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _newHeight$51[ebp]
	mov	edx, DWORD PTR _screenSize$90[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN67@OBSProc:

; 4455 : 
; 4456 :                 return TRUE;

	mov	eax, 1
	jmp	$LN252@OBSProc
$LN66@OBSProc:

; 4457 :             }
; 4458 : 
; 4459 :         case WM_SIZE:
; 4460 :             {
; 4461 : 			    
; 4462 :                 RECT client;
; 4463 :                 GetClientRect(hwnd, &client);

	lea	eax, DWORD PTR _client$94[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8

; 4464 : 
; 4465 :                 if(wParam != SIZE_MINIMIZED && (App->clientWidth != client.right || App->clientHeight != client.bottom))

	cmp	DWORD PTR _wParam$[ebp], 1
	je	$LN65@OBSProc
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+680]
	cmp	eax, DWORD PTR _client$94[ebp+8]
	jne	SHORT $LN64@OBSProc
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+684]
	cmp	edx, DWORD PTR _client$94[ebp+12]
	je	$LN65@OBSProc
$LN64@OBSProc:

; 4466 :                 {
; 4467 :                     App->clientWidth  = client.right;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR _client$94[ebp+8]
	mov	DWORD PTR [eax+680], ecx

; 4468 :                     App->clientHeight = client.bottom;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR _client$94[ebp+12]
	mov	DWORD PTR [edx+684], eax

; 4469 :                     App->bSizeChanging = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+693], 1

; 4470 : 
; 4471 :                     if(wParam == SIZE_MAXIMIZED)

	cmp	DWORD PTR _wParam$[ebp], 2
	jne	SHORT $LN63@OBSProc

; 4472 :                         App->ResizeWindow(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResizeWindow@OBS@@QAEX_N@Z		; OBS::ResizeWindow

; 4473 :                     else

	jmp	SHORT $LN62@OBSProc
$LN63@OBSProc:

; 4474 :                         App->ResizeWindow(!App->bDragResize);

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+692]
	test	eax, eax
	jne	SHORT $LN307@OBSProc
	mov	BYTE PTR tv1671[ebp], 1
	jmp	SHORT $LN308@OBSProc
$LN307@OBSProc:
	mov	BYTE PTR tv1671[ebp], 0
$LN308@OBSProc:
	movzx	ecx, BYTE PTR tv1671[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResizeWindow@OBS@@QAEX_N@Z		; OBS::ResizeWindow
$LN62@OBSProc:

; 4475 : 
; 4476 :                     if(!App->bDragResize)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+692]
	test	eax, eax
	jne	SHORT $LN61@OBSProc

; 4477 :                         App->bSizeChanging = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+693], 0
$LN61@OBSProc:

; 4478 :                 }

	jmp	SHORT $LN59@OBSProc
$LN65@OBSProc:

; 4479 :                 else if (wParam == SIZE_MINIMIZED && AppConfig->GetInt(TEXT("General"), TEXT("MinimizeToNotificationArea"), 0) != 0)

	cmp	DWORD PTR _wParam$[ebp], 1
	jne	SHORT $LN59@OBSProc
	push	0
	push	OFFSET $SG4294712395
	push	OFFSET $SG4294712394
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN59@OBSProc

; 4480 :                 {
; 4481 :                     ShowWindow(hwnd, SW_HIDE);

	push	0
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
$LN59@OBSProc:

; 4482 :                 }
; 4483 :                 break;

	jmp	$LN250@OBSProc
$LN58@OBSProc:

; 4484 :             }
; 4485 : 
; 4486 :         case OBS_REQUESTSTOP:
; 4487 :             if (!App->IsRunning())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?IsRunning@OBS@@QBE_NXZ			; OBS::IsRunning
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN57@OBSProc

; 4488 :                 break;

	jmp	$LN250@OBSProc
$LN57@OBSProc:

; 4489 : 
; 4490 :             App->Stop();

	push	0
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?Stop@OBS@@AAEX_N0@Z			; OBS::Stop

; 4491 : 
; 4492 :             if((App->bFirstConnect && App->totalStreamTime < 30000) || !App->bAutoReconnect)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+932]
	test	edx, edx
	je	SHORT $LN54@OBSProc
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+928], 30000		; 00007530H
	jb	SHORT $LN55@OBSProc
$LN54@OBSProc:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+695]
	test	edx, edx
	jne	$LN56@OBSProc
$LN55@OBSProc:

; 4493 :             {
; 4494 :                 if(App->streamReport.IsValid())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1328				; 00000530H
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN53@OBSProc

; 4495 :                 {
; 4496 :                     OBSMessageBox(hwndMain, App->streamReport.Array(), Str("StreamReport"), MB_ICONEXCLAMATION);

	push	48					; 00000030H
	push	OFFSET $SG4294712393
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1328				; 00000530H
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 4497 :                     App->streamReport.Clear();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1328				; 00000530H
	call	DWORD PTR __imp_?Clear@String@@QAEAAV1@XZ
	jmp	SHORT $LN51@OBSProc
$LN53@OBSProc:

; 4498 :                 }
; 4499 :                 else if (wParam != 1)

	cmp	DWORD PTR _wParam$[ebp], 1
	je	SHORT $LN51@OBSProc

; 4500 :                     OBSMessageBox(hwnd, Str("Connection.Disconnected"), NULL, MB_ICONEXCLAMATION);

	push	48					; 00000030H
	push	0
	push	OFFSET $SG4294712392
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
$LN51@OBSProc:

; 4501 :             }

	jmp	SHORT $LN47@OBSProc
$LN56@OBSProc:

; 4502 :             else if(wParam == 0)

	cmp	DWORD PTR _wParam$[ebp], 0
	jne	SHORT $LN47@OBSProc

; 4503 :             {
; 4504 :                 //FIXME: show some kind of non-modal notice to the user explaining why they got disconnected
; 4505 :                 //status bar would be nice, but that only renders when we're streaming.
; 4506 :                 PlaySound((LPCTSTR)SND_ALIAS_SYSTEMASTERISK, NULL, SND_ALIAS_ID | SND_ASYNC);

	push	1114113					; 00110001H
	push	0
	push	10835					; 00002a53H
	call	DWORD PTR __imp__PlaySoundW@12

; 4507 : 
; 4508 :                 if (!App->reconnectTimeout)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+700], 0
	jne	SHORT $LN48@OBSProc

; 4509 :                 {
; 4510 :                     //fire immediately
; 4511 :                     PostMessage(hwndMain, OBS_RECONNECT, 0, 0);

	push	0
	push	0
	push	1027					; 00000403H
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp__PostMessageW@16

; 4512 :                 }
; 4513 :                 else

	jmp	SHORT $LN47@OBSProc
$LN48@OBSProc:

; 4514 :                 {
; 4515 :                     App->bReconnecting = false;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+697], 0

; 4516 :                     OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_RECONNECTING), hwnd, OBS::ReconnectDialogProc);

	push	0
	push	OFFSET ?ReconnectDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::ReconnectDialogProc
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	131					; 00000083H
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
$LN47@OBSProc:

; 4517 :                 }
; 4518 :             }
; 4519 : 
; 4520 :             break;

	jmp	$LN250@OBSProc
$LN46@OBSProc:

; 4521 : 
; 4522 :         case OBS_NETWORK_FAILED:
; 4523 :             if ((App->bFirstConnect && App->totalStreamTime < 30000) || !App->bAutoReconnect)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+932]
	test	ecx, ecx
	je	SHORT $LN43@OBSProc
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+928], 30000		; 00007530H
	jb	SHORT $LN44@OBSProc
$LN43@OBSProc:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+695]
	test	ecx, ecx
	jne	$LN45@OBSProc
$LN44@OBSProc:

; 4524 :             {
; 4525 :                 //no reconnect, or the connection died very early in the stream
; 4526 :                 App->Stop();

	push	0
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?Stop@OBS@@AAEX_N0@Z			; OBS::Stop

; 4527 :                 if (App->streamReport.IsValid())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1328				; 00000530H
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN42@OBSProc

; 4528 :                 {
; 4529 :                     OBSMessageBox(hwndMain, App->streamReport.Array(), Str("StreamReport"), MB_ICONEXCLAMATION);

	push	48					; 00000030H
	push	OFFSET $SG4294712391
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1328				; 00000530H
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 4530 :                     App->streamReport.Clear();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1328				; 00000530H
	call	DWORD PTR __imp_?Clear@String@@QAEAAV1@XZ

; 4531 :                 }
; 4532 :                 else

	jmp	SHORT $LN41@OBSProc
$LN42@OBSProc:

; 4533 :                     OBSMessageBox(hwnd, Str("Connection.Disconnected"), NULL, MB_ICONEXCLAMATION);

	push	48					; 00000030H
	push	0
	push	OFFSET $SG4294712390
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
$LN41@OBSProc:

; 4534 :             }
; 4535 :             else

	jmp	SHORT $LN38@OBSProc
$LN45@OBSProc:

; 4536 :             {
; 4537 :                 PlaySound((LPCTSTR)SND_ALIAS_SYSTEMASTERISK, NULL, SND_ALIAS_ID | SND_ASYNC);

	push	1114113					; 00110001H
	push	0
	push	10835					; 00002a53H
	call	DWORD PTR __imp__PlaySoundW@12

; 4538 : 
; 4539 :                 if (!App->reconnectTimeout)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+700], 0
	jne	SHORT $LN39@OBSProc

; 4540 :                 {
; 4541 :                     //fire immediately
; 4542 :                     App->RestartNetwork();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RestartNetwork@OBS@@AAEXXZ		; OBS::RestartNetwork

; 4543 :                 }
; 4544 :                 else

	jmp	SHORT $LN38@OBSProc
$LN39@OBSProc:

; 4545 :                 {
; 4546 :                     OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_RECONNECTING), hwnd, OBS::ReconnectDialogProc);

	push	0
	push	OFFSET ?ReconnectDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::ReconnectDialogProc
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	131					; 00000083H
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
$LN38@OBSProc:

; 4547 :                 }
; 4548 :             }
; 4549 :             break;

	jmp	$LN250@OBSProc
$LN37@OBSProc:

; 4550 : 
; 4551 :         case OBS_CALLHOTKEY:
; 4552 : 			//热键处理消息
; 4553 :             App->CallHotkey((DWORD)lParam, wParam != 0);

	cmp	DWORD PTR _wParam$[ebp], 0
	je	SHORT $LN309@OBSProc
	mov	BYTE PTR tv1788[ebp], 1
	jmp	SHORT $LN310@OBSProc
$LN309@OBSProc:
	mov	BYTE PTR tv1788[ebp], 0
$LN310@OBSProc:
	movzx	eax, BYTE PTR tv1788[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CallHotkey@OBS@@AAEXK_N@Z		; OBS::CallHotkey

; 4554 :             break;

	jmp	$LN250@OBSProc
$LN36@OBSProc:

; 4555 : 
; 4556 :         case OBS_RECONNECT:
; 4557 :             App->bReconnecting = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+697], 1

; 4558 :             App->Start();

	push	0
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?Start@OBS@@AAEX_N0@Z			; OBS::Start

; 4559 :             break;

	jmp	$LN250@OBSProc
$LN35@OBSProc:

; 4560 : 
; 4561 :         case OBS_SETSCENE:
; 4562 :             {
; 4563 :                 TSTR lpScene = (TSTR)lParam;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _lpScene$56[ebp], eax

; 4564 :                 App->SetScene(lpScene);

	mov	ecx, DWORD PTR _lpScene$56[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax+24]
	call	edx

; 4565 :                 Free(lpScene);

	mov	eax, DWORD PTR _lpScene$56[ebp]
	push	eax
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 4566 :                 break;

	jmp	$LN250@OBSProc
$LN34@OBSProc:

; 4567 :             }
; 4568 :         case OBS_SETSOURCEORDER:
; 4569 :             {
; 4570 :                 StringList *order = (StringList*)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _order$50[ebp], ecx

; 4571 :                 App->SetSourceOrder(*order);

	mov	edx, DWORD PTR _order$50[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SetSourceOrder@OBS@@AAEXAAVStringList@@@Z ; OBS::SetSourceOrder

; 4572 :                 delete(order);

	mov	eax, DWORD PTR _order$50[ebp]
	mov	DWORD PTR $T23[ebp], eax
	mov	ecx, DWORD PTR $T23[ebp]
	mov	DWORD PTR $T46[ebp], ecx
	cmp	DWORD PTR $T46[ebp], 0
	je	SHORT $LN311@OBSProc
	push	1
	mov	ecx, DWORD PTR $T46[ebp]
	call	??_GStringList@@QAEPAXI@Z
	mov	DWORD PTR tv1806[ebp], eax
	jmp	SHORT $LN312@OBSProc
$LN311@OBSProc:
	mov	DWORD PTR tv1806[ebp], 0
$LN312@OBSProc:

; 4573 :                 break;

	jmp	$LN250@OBSProc
$LN33@OBSProc:

; 4574 :             }
; 4575 :         case OBS_SETSOURCERENDER:
; 4576 :             {
; 4577 :                 bool render = lParam > 0;

	cmp	DWORD PTR _lParam$[ebp], 0
	jle	SHORT $LN313@OBSProc
	mov	DWORD PTR tv1808[ebp], 1
	jmp	SHORT $LN314@OBSProc
$LN313@OBSProc:
	mov	DWORD PTR tv1808[ebp], 0
$LN314@OBSProc:
	mov	dl, BYTE PTR tv1808[ebp]
	mov	BYTE PTR _render$81[ebp], dl

; 4578 :                 CTSTR sourceName = (CTSTR) wParam;

	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR _sourceName$45[ebp], eax

; 4579 :                 App->SetSourceRender(sourceName, render);

	movzx	ecx, BYTE PTR _render$81[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceName$45[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SetSourceRender@OBS@@AAEXPB_W_N@Z	; OBS::SetSourceRender

; 4580 :                 Free((void *)sourceName);

	mov	eax, DWORD PTR _sourceName$45[ebp]
	push	eax
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 4581 :                 break;

	jmp	$LN250@OBSProc
$LN32@OBSProc:

; 4582 :             }
; 4583 :         case OBS_UPDATESTATUSBAR:
; 4584 :             App->SetStatusBarData();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SetStatusBarData@OBS@@AAEXXZ		; OBS::SetStatusBarData

; 4585 :             break;

	jmp	$LN250@OBSProc
$LN31@OBSProc:

; 4586 : 
; 4587 :         case OBS_CONFIGURE_STREAM_BUTTONS:
; 4588 :             App->ConfigureStreamButtons();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ConfigureStreamButtons@OBS@@AAEXXZ	; OBS::ConfigureStreamButtons

; 4589 :             break;

	jmp	$LN250@OBSProc
$LN30@OBSProc:

; 4590 : 
; 4591 :         case OBS_NOTIFICATIONAREA:
; 4592 :             // the point is to only perform the show/hide (minimize) or the menu creation if no modal dialogs are opened
; 4593 :             // if a modal dialog is topmost, then simply focus it
; 4594 :             switch (lParam)

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR tv1816[ebp], ecx
	cmp	DWORD PTR tv1816[ebp], 514		; 00000202H
	je	SHORT $LN27@OBSProc
	cmp	DWORD PTR tv1816[ebp], 517		; 00000205H
	je	SHORT $LN24@OBSProc
	jmp	$LN28@OBSProc
$LN27@OBSProc:

; 4595 :             {
; 4596 :                 case WM_LBUTTONUP:
; 4597 :                     if (IsWindowEnabled(hwnd))

	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__IsWindowEnabled@4
	test	eax, eax
	je	SHORT $LN26@OBSProc

; 4598 :                         PostMessage(hwnd, WM_COMMAND, MAKEWPARAM(ID_MINIMIZERESTORE, 0), 0);

	push	0
	push	5019					; 0000139bH
	push	273					; 00000111H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__PostMessageW@16

; 4599 :                     else

	jmp	SHORT $LN25@OBSProc
$LN26@OBSProc:

; 4600 :                         SetForegroundWindow(GetWindow(hwnd, GW_ENABLEDPOPUP));

	push	6
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindow@8
	push	eax
	call	DWORD PTR __imp__SetForegroundWindow@4
$LN25@OBSProc:

; 4601 :                     break;

	jmp	$LN28@OBSProc
$LN24@OBSProc:

; 4602 :                 case WM_RBUTTONUP:
; 4603 :                     if (IsWindowEnabled(hwnd))

	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__IsWindowEnabled@4
	test	eax, eax
	je	$LN23@OBSProc

; 4604 :                     {
; 4605 :                         HMENU hMenu = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hMenu$88[ebp], eax

; 4606 :                         if (AppConfig->GetInt(TEXT("General"), TEXT("MinimizeToNotificationArea"), 0) != 0)

	push	0
	push	OFFSET $SG4294712389
	push	OFFSET $SG4294712388
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN22@OBSProc

; 4607 :                         {
; 4608 :                             AppendMenu(hMenu, MF_STRING, ID_MINIMIZERESTORE, IsWindowVisible(hwnd) ? Str("Settings.General.HideObs") : Str("Settings.General.ShowObs"));

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__IsWindowVisible@4
	test	eax, eax
	je	SHORT $LN315@OBSProc
	push	OFFSET $SG4294712387
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv1848[ebp], eax
	jmp	SHORT $LN316@OBSProc
$LN315@OBSProc:
	push	OFFSET $SG4294712386
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR tv1848[ebp], eax
$LN316@OBSProc:
	mov	eax, DWORD PTR tv1848[ebp]
	push	eax
	push	5019					; 0000139bH
	push	0
	mov	ecx, DWORD PTR _hMenu$88[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 4609 :                             AppendMenu(hMenu, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	edx, DWORD PTR _hMenu$88[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16
$LN22@OBSProc:

; 4610 :                         }
; 4611 :                         AddProfilesToMenu(hMenu);

	mov	eax, DWORD PTR _hMenu$88[ebp]
	push	eax
	call	?AddProfilesToMenu@OBS@@CAXPAUHMENU__@@@Z ; OBS::AddProfilesToMenu
	add	esp, 4

; 4612 :                         AppendMenu(hMenu, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _hMenu$88[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 4613 :                         if (App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	SHORT $LN21@OBSProc

; 4614 :                         {
; 4615 :                             if (App->bTestStream)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+620]
	test	edx, edx
	je	SHORT $LN20@OBSProc

; 4616 :                                 AppendMenu(hMenu, MF_STRING, ID_TESTSTREAM, Str("MainWindow.StopTest"));

	push	OFFSET $SG4294712385
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	5015					; 00001397H
	push	0
	mov	ecx, DWORD PTR _hMenu$88[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 4617 :                             else

	jmp	SHORT $LN19@OBSProc
$LN20@OBSProc:

; 4618 :                                 AppendMenu(hMenu, MF_STRING, ID_STARTSTOP, Str("MainWindow.StopStream"));

	push	OFFSET $SG4294712384
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	5003					; 0000138bH
	push	0
	mov	eax, DWORD PTR _hMenu$88[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16
$LN19@OBSProc:

; 4619 :                         }
; 4620 :                         else

	jmp	SHORT $LN18@OBSProc
$LN21@OBSProc:

; 4621 :                             AppendMenu(hMenu, MF_STRING, ID_STARTSTOP, Str("MainWindow.StartStream"));

	push	OFFSET $SG4294712383
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	5003					; 0000138bH
	push	0
	mov	edx, DWORD PTR _hMenu$88[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16
$LN18@OBSProc:

; 4622 :                         if (!IsIconic(hwnd))

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__IsIconic@4
	test	eax, eax
	jne	SHORT $LN17@OBSProc

; 4623 :                             AppendMenu(hMenu, MF_STRING | (App->bFullscreenMode ? MF_CHECKED : 0), ID_FULLSCREENMODE, Str("MainMenu.Settings.FullscreenMode"));

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+740]
	test	edx, edx
	je	SHORT $LN317@OBSProc
	mov	DWORD PTR tv1900[ebp], 8
	jmp	SHORT $LN318@OBSProc
$LN317@OBSProc:
	mov	DWORD PTR tv1900[ebp], 0
$LN318@OBSProc:
	push	OFFSET $SG4294712382
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	40046					; 00009c6eH
	mov	ecx, DWORD PTR tv1900[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMenu$88[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16
$LN17@OBSProc:

; 4624 :                         AppendMenu(hMenu, MF_STRING | (App->bAlwaysOnTop ? MF_CHECKED : 0), ID_ALWAYSONTOP, Str("MainMenu.Settings.AlwaysOnTop"));

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+706]
	test	ecx, ecx
	je	SHORT $LN319@OBSProc
	mov	DWORD PTR tv1911[ebp], 8
	jmp	SHORT $LN320@OBSProc
$LN319@OBSProc:
	mov	DWORD PTR tv1911[ebp], 0
$LN320@OBSProc:
	push	OFFSET $SG4294712381
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	40045					; 00009c6dH
	mov	eax, DWORD PTR tv1911[ebp]
	push	eax
	mov	ecx, DWORD PTR _hMenu$88[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 4625 :                         AppendMenu(hMenu, MF_STRING, ID_FILE_EXIT, Str("MainWindow.Exit"));

	push	OFFSET $SG4294712380
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	40039					; 00009c67H
	push	0
	mov	eax, DWORD PTR _hMenu$88[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 4626 :                     
; 4627 :                         SetForegroundWindow(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetForegroundWindow@4

; 4628 :                         POINT p;
; 4629 :                         GetCursorPos(&p);

	lea	edx, DWORD PTR _p$17[ebp]
	push	edx
	call	DWORD PTR __imp__GetCursorPos@4

; 4630 :                         TrackPopupMenu(hMenu, TPM_LEFTALIGN, p.x, p.y, 0, hwnd, NULL);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _p$17[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _p$17[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _hMenu$88[ebp]
	push	eax
	call	DWORD PTR __imp__TrackPopupMenu@28

; 4631 :                         DestroyMenu(hMenu);

	mov	ecx, DWORD PTR _hMenu$88[ebp]
	push	ecx
	call	DWORD PTR __imp__DestroyMenu@4

; 4632 :                     }
; 4633 :                     else

	jmp	SHORT $LN16@OBSProc
$LN23@OBSProc:

; 4634 :                         SetForegroundWindow(GetWindow(hwnd, GW_ENABLEDPOPUP));

	push	6
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindow@8
	push	eax
	call	DWORD PTR __imp__SetForegroundWindow@4
$LN16@OBSProc:
$LN28@OBSProc:

; 4635 :                     break;
; 4636 :             }
; 4637 :             break;

	jmp	$LN250@OBSProc
$LN15@OBSProc:

; 4638 : 
; 4639 :         case WM_CLOSE:
; 4640 :             if (App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN14@OBSProc

; 4641 :             {
; 4642 :                 if (App->bRecording)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+623]
	test	eax, eax
	je	SHORT $LN13@OBSProc

; 4643 :                 {
; 4644 :                     if (OBSMessageBox(hwnd, Str("CloseWhileActiveWarning.Message"), Str("CloseWhileActiveWarning.Title"), MB_ICONQUESTION | MB_YESNO) == IDYES)

	push	36					; 00000024H
	push	OFFSET $SG4294712379
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712378
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	SHORT $LN12@OBSProc

; 4645 :                     {
; 4646 :                         PostQuitMessage(0);

	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
$LN12@OBSProc:

; 4647 :                     }
; 4648 :                 }

	jmp	SHORT $LN9@OBSProc
$LN13@OBSProc:

; 4649 :                 else if (App->bStreaming)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+627]
	test	edx, edx
	je	SHORT $LN9@OBSProc

; 4650 :                 {
; 4651 :                     if (OBSMessageBox(hwnd, Str("CloseWhileActiveWarning.Message"), Str("CloseWhileActiveWarning.Title"), MB_ICONQUESTION | MB_YESNO) == IDYES)

	push	36					; 00000024H
	push	OFFSET $SG4294712377
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712376
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	SHORT $LN9@OBSProc

; 4652 :                     {
; 4653 :                         PostQuitMessage(0);

	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
$LN9@OBSProc:

; 4654 :                     }
; 4655 :                 }
; 4656 :             }
; 4657 :             else

	jmp	SHORT $LN8@OBSProc
$LN14@OBSProc:

; 4658 :                 PostQuitMessage(0);

	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
$LN8@OBSProc:

; 4659 :             break;

	jmp	$LN250@OBSProc
$LN7@OBSProc:

; 4660 : 
; 4661 :         case WM_ENDSESSION:
; 4662 :             if (wParam == TRUE)

	cmp	DWORD PTR _wParam$[ebp], 1
	jne	SHORT $LN6@OBSProc

; 4663 :             {
; 4664 :                 // AppConfig / GlobalConfig should already save most important changes. A few UI
; 4665 :                 // things like last window size / position and other UI state gets lost though.
; 4666 :                 App->scenesConfig.Save();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Save@XConfig@@QAEXXZ

; 4667 :                 return TRUE;

	mov	eax, 1
	jmp	$LN252@OBSProc
$LN6@OBSProc:

; 4668 :             }
; 4669 : 
; 4670 : 		case WM_LBUTTONDOWN:
; 4671 : 			//欺骗窗口使其跟随鼠标移动
; 4672 : 			SystemParametersInfo(SPI_SETDRAGFULLWINDOWS, true, NULL, 0);

	push	0
	push	0
	push	1
	push	37					; 00000025H
	call	DWORD PTR __imp__SystemParametersInfoW@16

; 4673 : 			SendMessage(hwnd, WM_NCLBUTTONDOWN, HTCAPTION, 0);

	push	0
	push	2
	push	161					; 000000a1H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 4674 : 			break;

	jmp	$LN250@OBSProc
$LN4@OBSProc:

; 4675 : 		case WM_PAINT:
; 4676 : 		     {
; 4677 : 				  hdc = BeginPaint(hwnd, &ps);

	lea	ecx, DWORD PTR _ps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__BeginPaint@8
	mov	DWORD PTR _hdc$[ebp], eax

; 4678 : 				  String bgpath;

	lea	ecx, DWORD PTR _bgpath$36[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 4679 : 				  bgpath << lpAppPath << "\\skin\\Dialog_Default_back.png";

	push	OFFSET $SG4294712375
	lea	ecx, DWORD PTR $T19[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	push	OFFSET ?lpAppPath@@3PA_WA		; lpAppPath
	lea	ecx, DWORD PTR _bgpath$36[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T19[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 4680 : 				  SetBackground(hwnd, bgpath.Array(),hdc);

	push	0
	push	1
	mov	ecx, DWORD PTR _hdc$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bgpath$36[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	?SetBackground@@YAXPAUHWND__@@PB_WPAUHDC__@@H1@Z ; SetBackground
	add	esp, 20					; 00000014H

; 4681 : 				  EndPaint(hwnd, &ps);

	lea	eax, DWORD PTR _ps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndPaint@8

; 4682 : 				  break;

	lea	ecx, DWORD PTR _bgpath$36[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN250@OBSProc
$LN3@OBSProc:

; 4683 : 		      }
; 4684 : 
; 4685 :         default:
; 4686 :             if (App && message == App->wmExplorerRestarted)

	cmp	DWORD PTR ?App@@3PAVOBS@@A, 0		; App
	je	SHORT $LN1@OBSProc
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR _message$[ebp]
	cmp	eax, DWORD PTR [edx+1320]
	jne	SHORT $LN1@OBSProc

; 4687 :             {
; 4688 :                 if(App->bNotificationAreaIcon)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+1324]
	test	edx, edx
	je	SHORT $LN1@OBSProc

; 4689 :                 {
; 4690 :                     App->bNotificationAreaIcon = false;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+1324], 0

; 4691 :                     App->ShowNotificationAreaIcon();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ShowNotificationAreaIcon@OBS@@QAEHXZ	; OBS::ShowNotificationAreaIcon
$LN1@OBSProc:

; 4692 :                 }
; 4693 :             }
; 4694 :             return DefWindowProc(hwnd, message, wParam, lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN252@OBSProc
$LN250@OBSProc:

; 4695 :     }
; 4696 : 
; 4697 :     return 0;

	xor	eax, eax
$LN252@OBSProc:

; 4698 : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN329@OBSProc:
	DD	$LN66@OBSProc
	DD	$LN4@OBSProc
	DD	$LN15@OBSProc
	DD	$LN7@OBSProc
	DD	$LN81@OBSProc
	DD	$LN3@OBSProc
$LN326@OBSProc:
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
	npad	1
$LN330@OBSProc:
	DD	$LN37@OBSProc
	DD	$LN36@OBSProc
	DD	$LN35@OBSProc
	DD	$LN34@OBSProc
	DD	$LN33@OBSProc
	DD	$LN32@OBSProc
	DD	$LN30@OBSProc
	DD	$LN46@OBSProc
	DD	$LN31@OBSProc
$LN331@OBSProc:
	DD	$LN241@OBSProc
	DD	$LN242@OBSProc
	DD	$LN182@OBSProc
	DD	$LN156@OBSProc
	DD	$LN200@OBSProc
	DD	$LN209@OBSProc
	DD	$LN216@OBSProc
	DD	$LN202@OBSProc
	DD	$LN202@OBSProc
	DD	$LN156@OBSProc
	DD	$LN198@OBSProc
	DD	$LN156@OBSProc
	DD	$LN156@OBSProc
	DD	$LN156@OBSProc
	DD	$LN183@OBSProc
	DD	$LN244@OBSProc
	DD	$LN217@OBSProc
	DD	$LN156@OBSProc
	DD	$LN181@OBSProc
$LN332@OBSProc:
	DD	$LN162@OBSProc
	DD	$LN161@OBSProc
	DD	$LN160@OBSProc
	DD	$LN173@OBSProc
	DD	$LN165@OBSProc
	DD	$LN174@OBSProc
	DD	$LN166@OBSProc
	DD	$LN219@OBSProc
	DD	$LN218@OBSProc
	DD	$LN224@OBSProc
	DD	$LN240@OBSProc
	DD	$LN246@OBSProc
	DD	$LN225@OBSProc
	DD	$LN228@OBSProc
	DD	$LN227@OBSProc
	DD	$LN243@OBSProc
	DD	$LN170@OBSProc
	DD	$LN169@OBSProc
	DD	$LN168@OBSProc
	DD	$LN167@OBSProc
	DD	$LN172@OBSProc
	DD	$LN171@OBSProc
	DD	$LN164@OBSProc
	DD	$LN223@OBSProc
	DD	$LN222@OBSProc
	DD	$LN226@OBSProc
	DD	$LN232@OBSProc
	DD	$LN192@OBSProc
	DD	$LN194@OBSProc
	DD	$LN195@OBSProc
	DD	$LN193@OBSProc
	DD	$LN191@OBSProc
	DD	$LN190@OBSProc
	DD	$LN189@OBSProc
	DD	$LN187@OBSProc
	DD	$LN188@OBSProc
	DD	$LN186@OBSProc
	DD	$LN185@OBSProc
	DD	$LN184@OBSProc
	DD	$LN156@OBSProc
$LN327@OBSProc:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	39					; 00000027H
	DB	6
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	7
	DB	8
	DB	9
	DB	39					; 00000027H
	DB	10					; 0000000aH
	DB	39					; 00000027H
	DB	11					; 0000000bH
	DB	39					; 00000027H
	DB	12					; 0000000cH
	DB	39					; 00000027H
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	21					; 00000015H
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	39					; 00000027H
	DB	24					; 00000018H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	24					; 00000018H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	25					; 00000019H
	DB	26					; 0000001aH
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	27					; 0000001bH
	DB	28					; 0000001cH
	DB	29					; 0000001dH
	DB	39					; 00000027H
	DB	30					; 0000001eH
	DB	39					; 00000027H
	DB	39					; 00000027H
	DB	31					; 0000001fH
	DB	32					; 00000020H
	DB	26					; 0000001aH
	DB	33					; 00000021H
	DB	34					; 00000022H
	DB	35					; 00000023H
	DB	36					; 00000024H
	DB	37					; 00000025H
	DB	38					; 00000026H
?OBSProc@OBS@@CGJPAUHWND__@@IIJ@Z ENDP			; OBS::OBSProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?OBSStaticProc@OBS@@CGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_id$ = -240						; size = 4
$T1 = -236						; size = 8
tv67 = -228						; size = 4
_hDC$ = -224						; size = 4
_bgpath$2 = -220					; size = 8
_ps$ = -212						; size = 64
_rcWnd$3 = -148						; size = 16
_szCaption$4 = -132					; size = 128
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?OBSStaticProc@OBS@@CGJPAUHWND__@@IIJ@Z PROC		; OBS::OBSStaticProc, COMDAT

; 400  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 401  : 	UINT id = (UINT)GetWindowLongPtr(hwnd, GWL_ID);

	push	-12					; fffffff4H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _id$[ebp], eax

; 402  : 	PAINTSTRUCT ps;
; 403  : 	HDC         hDC;
; 404  : 	switch (message)

	mov	ecx, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 15			; 0000000fH
	je	SHORT $LN2@OBSStaticP
	jmp	$LN3@OBSStaticP
$LN2@OBSStaticP:

; 405  : 	{
; 406  : 	case WM_PAINT:
; 407  : 	     {
; 408  : 			    RECT rcWnd = {};

	xor	edx, edx
	mov	DWORD PTR _rcWnd$3[ebp], edx
	mov	DWORD PTR _rcWnd$3[ebp+4], edx
	mov	DWORD PTR _rcWnd$3[ebp+8], edx
	mov	DWORD PTR _rcWnd$3[ebp+12], edx

; 409  : 			    GetClientRect(hwnd, &rcWnd);

	lea	eax, DWORD PTR _rcWnd$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8

; 410  : 				hDC = BeginPaint(hwnd, &ps);

	lea	edx, DWORD PTR _ps$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__BeginPaint@8
	mov	DWORD PTR _hDC$[ebp], eax

; 411  : 				String bgpath;

	lea	ecx, DWORD PTR _bgpath$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 412  : 				//bgpath << lpAppPath << "\\skin\\StaticSourceInfo.png";
; 413  : 				bgpath << lpAppPath << "\\skin\\staticbg.png";

	push	OFFSET $SG4294712767
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	push	OFFSET ?lpAppPath@@3PA_WA		; lpAppPath
	lea	ecx, DWORD PTR _bgpath$2[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 414  : 				TCHAR szCaption[64] = {};

	push	128					; 00000080H
	push	0
	lea	edx, DWORD PTR _szCaption$4[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 415  : 				GetWindowText(hwnd, szCaption, 63);

	push	63					; 0000003fH
	lea	eax, DWORD PTR _szCaption$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowTextW@12

; 416  : 				SetBackground(hwnd, bgpath.Array(), hDC,FALSE,szCaption);

	lea	edx, DWORD PTR _szCaption$4[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _hDC$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bgpath$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	?SetBackground@@YAXPAUHWND__@@PB_WPAUHDC__@@H1@Z ; SetBackground
	add	esp, 20					; 00000014H

; 417  : 				EndPaint(hwnd, &ps);

	lea	edx, DWORD PTR _ps$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EndPaint@8

; 418  : 	     }

	lea	ecx, DWORD PTR _bgpath$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN3@OBSStaticP:

; 419  : 		break;
; 420  : 	default:
; 421  : 		break;
; 422  : 	}
; 423  : 	
; 424  : 	return DefWindowProc( hwnd, message, wParam, lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcW@16

; 425  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OBSStaticProc@OBS@@CGJPAUHWND__@@IIJ@Z ENDP		; OBS::OBSStaticProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GetApplicationName@OBS@@CA?AVString@@XZ
_TEXT	SEGMENT
$T1 = -32						; size = 8
$T2 = -24						; size = 8
$T3 = -16						; size = 8
_name$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
?GetApplicationName@OBS@@CA?AVString@@XZ PROC		; OBS::GetApplicationName, COMDAT

; 3586 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 3587 :     String name;

	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3588 : 
; 3589 :     // we hide the bit version on 32 bit to avoid confusing users who have a 64
; 3590 :     // bit pc unncessarily asking for the 64 bit version under the assumption
; 3591 :     // that the 32 bit version doesn't work or something.
; 3592 :     name << "Profile: " << App->GetCurrentProfile() << " - " << "Scenes: " << App->GetCurrentSceneCollection() << L" - " OBS_VERSION_STRING
; 3593 : #ifdef _WIN64
; 3594 :     L" - 64bit";
; 3595 : #else
; 3596 :     L"";

	push	OFFSET $SG4294712453
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	push	OFFSET $SG4294712454
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	push	OFFSET $SG4294712455
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	push	OFFSET $SG4294712452
	call	?GetCurrentSceneCollection@OBS@@SAPB_WXZ ; OBS::GetCurrentSceneCollection
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	?GetCurrentProfile@OBS@@SAPB_WXZ	; OBS::GetCurrentProfile
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3597 : #endif
; 3598 :     return name;

	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 3599 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetApplicationName@OBS@@CA?AVString@@XZ ENDP		; OBS::GetApplicationName
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ReconnectDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
$T2 = -72						; size = 8
$T3 = -64						; size = 8
$T4 = -56						; size = 8
_strText$5 = -48					; size = 8
_strText$6 = -40					; size = 8
$T7 = -32						; size = 4
$T8 = -28						; size = 4
$T9 = -24						; size = 4
$T10 = -20						; size = 4
_ri$11 = -16						; size = 4
_ri$12 = -12						; size = 4
_ri$13 = -8						; size = 4
tv64 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?ReconnectDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::ReconnectDialogProc, COMDAT

; 2651 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 2652 :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	ja	SHORT $LN23@ReconnectD
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN18@ReconnectD
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN1@ReconnectD
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN3@ReconnectD
	jmp	$LN19@ReconnectD
$LN23@ReconnectD:
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN6@ReconnectD
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	$LN14@ReconnectD
	jmp	$LN19@ReconnectD
$LN18@ReconnectD:

; 2653 :     {
; 2654 :         case WM_INITDIALOG:
; 2655 :             {
; 2656 :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 2657 : 
; 2658 :                 ReconnectInfo *ri = new ReconnectInfo;

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	edx, DWORD PTR $T10[ebp]
	mov	DWORD PTR _ri$13[ebp], edx

; 2659 :                 ri->secondsLeft = App->reconnectTimeout;

	mov	eax, DWORD PTR _ri$13[ebp]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+700]
	mov	DWORD PTR [eax+4], edx

; 2660 :                 ri->timerID = 1;

	mov	eax, DWORD PTR _ri$13[ebp]
	mov	DWORD PTR [eax], 1

; 2661 : 
; 2662 :                 if(!SetTimer(hwnd, 1, 1000, NULL))

	push	0
	push	1000					; 000003e8H
	push	1
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetTimer@16
	test	eax, eax
	jne	SHORT $LN17@ReconnectD

; 2663 :                 {
; 2664 :                     App->bReconnecting = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+697], 0

; 2665 :                     EndDialog(hwnd, IDCANCEL);

	push	2
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8

; 2666 :                     delete ri;

	mov	ecx, DWORD PTR _ri$13[ebp]
	mov	DWORD PTR $T9[ebp], ecx
	mov	edx, DWORD PTR $T9[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 2667 :                     return TRUE;

	mov	eax, 1
	jmp	$LN21@ReconnectD
$LN17@ReconnectD:

; 2668 :                 }
; 2669 : 
; 2670 :                 String strText;

	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2671 :                 if(App->bReconnecting)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+697]
	test	ecx, ecx
	je	SHORT $LN16@ReconnectD

; 2672 :                     strText << Str("Reconnecting.Retrying") << UIntString(ri->secondsLeft);

	push	10					; 0000000aH
	mov	edx, DWORD PTR _ri$13[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294712572
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2673 :                 else

	jmp	SHORT $LN15@ReconnectD
$LN16@ReconnectD:

; 2674 :                     strText << Str("Reconnecting") << UIntString(ri->secondsLeft);

	push	10					; 0000000aH
	mov	eax, DWORD PTR _ri$13[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294712571
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN15@ReconnectD:

; 2675 : 
; 2676 :                 SetWindowText(GetDlgItem(hwnd, IDC_RECONNECTING), strText);

	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1081					; 00000439H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 2677 : 
; 2678 :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)ri);

	mov	edx, DWORD PTR _ri$13[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongW@12

; 2679 :                 return TRUE;

	mov	DWORD PTR $T8[ebp], 1
	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN21@ReconnectD
$LN14@ReconnectD:

; 2680 :             }
; 2681 : 
; 2682 :         case WM_TIMER:
; 2683 :             {
; 2684 :                 ReconnectInfo *ri = (ReconnectInfo*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _ri$12[ebp], eax

; 2685 :                 if(wParam != 1)

	cmp	DWORD PTR _wParam$[ebp], 1
	je	SHORT $LN13@ReconnectD

; 2686 :                     break;

	jmp	$LN19@ReconnectD
$LN13@ReconnectD:

; 2687 : 
; 2688 :                 if(!ri->secondsLeft)

	mov	edx, DWORD PTR _ri$12[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN12@ReconnectD

; 2689 :                 {
; 2690 :                     if (AppConfig->GetInt(TEXT("Publish"), TEXT("ExperimentalReconnectMode")) == 1 && AppConfig->GetInt(TEXT("Publish"), TEXT("Delay")) == 0)

	push	0
	push	OFFSET $SG4294712570
	push	OFFSET $SG4294712569
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	cmp	eax, 1
	jne	SHORT $LN11@ReconnectD
	push	0
	push	OFFSET $SG4294712568
	push	OFFSET $SG4294712567
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	jne	SHORT $LN11@ReconnectD

; 2691 :                         App->RestartNetwork();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RestartNetwork@OBS@@AAEXXZ		; OBS::RestartNetwork

; 2692 :                     else

	jmp	SHORT $LN10@ReconnectD
$LN11@ReconnectD:

; 2693 :                         SendMessage(hwndMain, OBS_RECONNECT, 0, 0);

	push	0
	push	0
	push	1027					; 00000403H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN10@ReconnectD:

; 2694 :                     EndDialog(hwnd, IDOK);

	push	1
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8

; 2695 :                 }
; 2696 :                 else

	jmp	$LN9@ReconnectD
$LN12@ReconnectD:

; 2697 :                 {
; 2698 :                     String strText;

	lea	ecx, DWORD PTR _strText$5[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2699 : 
; 2700 :                     ri->secondsLeft--;

	mov	edx, DWORD PTR _ri$12[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	ecx, DWORD PTR _ri$12[ebp]
	mov	DWORD PTR [ecx+4], eax

; 2701 : 
; 2702 :                     if(App->bReconnecting)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+697]
	test	eax, eax
	je	SHORT $LN8@ReconnectD

; 2703 :                         strText << Str("Reconnecting.Retrying") << UIntString(ri->secondsLeft);

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _ri$12[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294712566
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strText$5[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2704 :                     else

	jmp	SHORT $LN7@ReconnectD
$LN8@ReconnectD:

; 2705 :                         strText << Str("Reconnecting") << UIntString(ri->secondsLeft);

	push	10					; 0000000aH
	mov	edx, DWORD PTR _ri$12[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294712565
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strText$5[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN7@ReconnectD:

; 2706 : 
; 2707 :                     SetWindowText(GetDlgItem(hwnd, IDC_RECONNECTING), strText);

	lea	ecx, DWORD PTR _strText$5[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1081					; 00000439H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 2708 :                 }

	lea	ecx, DWORD PTR _strText$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@ReconnectD:

; 2709 :                 break;

	jmp	$LN19@ReconnectD
$LN6@ReconnectD:

; 2710 :             }
; 2711 : 
; 2712 :         case WM_COMMAND:
; 2713 :             if(LOWORD(wParam) == IDCANCEL)

	movzx	ecx, WORD PTR _wParam$[ebp]
	cmp	ecx, 2
	jne	SHORT $LN5@ReconnectD

; 2714 :             {
; 2715 :                 App->bReconnecting = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+697], 0

; 2716 :                 if (AppConfig->GetInt(TEXT("Publish"), TEXT("ExperimentalReconnectMode")) == 1 && AppConfig->GetInt(TEXT("Publish"), TEXT("Delay")) == 0)

	push	0
	push	OFFSET $SG4294712564
	push	OFFSET $SG4294712563
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	cmp	eax, 1
	jne	SHORT $LN4@ReconnectD
	push	0
	push	OFFSET $SG4294712562
	push	OFFSET $SG4294712561
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	jne	SHORT $LN4@ReconnectD

; 2717 :                     App->Stop();

	push	0
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?Stop@OBS@@AAEX_N0@Z			; OBS::Stop
$LN4@ReconnectD:

; 2718 :                 EndDialog(hwnd, IDCANCEL);

	push	2
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8
$LN5@ReconnectD:

; 2719 :             }
; 2720 :             break;

	jmp	$LN19@ReconnectD
$LN3@ReconnectD:

; 2721 : 
; 2722 :         case WM_CLOSE:
; 2723 :             App->bReconnecting = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+697], 0

; 2724 :             if (AppConfig->GetInt(TEXT("Publish"), TEXT("ExperimentalReconnectMode")) == 1 && AppConfig->GetInt(TEXT("Publish"), TEXT("Delay")) == 0)

	push	0
	push	OFFSET $SG4294712560
	push	OFFSET $SG4294712559
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	cmp	eax, 1
	jne	SHORT $LN2@ReconnectD
	push	0
	push	OFFSET $SG4294712558
	push	OFFSET $SG4294712557
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	jne	SHORT $LN2@ReconnectD

; 2725 :                 App->Stop();

	push	0
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?Stop@OBS@@AAEX_N0@Z			; OBS::Stop
$LN2@ReconnectD:

; 2726 :             EndDialog(hwnd, IDCANCEL);

	push	2
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8

; 2727 :             break;

	jmp	SHORT $LN19@ReconnectD
$LN1@ReconnectD:

; 2728 : 
; 2729 :         case WM_DESTROY:
; 2730 :             {
; 2731 :                 ReconnectInfo *ri = (ReconnectInfo*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _ri$11[ebp], eax

; 2732 :                 KillTimer(hwnd, ri->timerID);

	mov	ecx, DWORD PTR _ri$11[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__KillTimer@8

; 2733 :                 delete ri;

	mov	ecx, DWORD PTR _ri$11[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T7[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@ReconnectD:

; 2734 :             }
; 2735 :     }
; 2736 : 
; 2737 :     return FALSE;

	xor	eax, eax
$LN21@ReconnectD:

; 2738 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ReconnectDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::ReconnectDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ResetProfileMenu@OBS@@CAXXZ
_TEXT	SEGMENT
_hmenuMain$ = -8					; size = 4
_hmenuProfiles$ = -4					; size = 4
?ResetProfileMenu@OBS@@CAXXZ PROC			; OBS::ResetProfileMenu, COMDAT

; 3185 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3186 :     HMENU hmenuMain = GetMenu(hwndMain);

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	mov	DWORD PTR _hmenuMain$[ebp], eax

; 3187 :     HMENU hmenuProfiles = GetSubMenu(hmenuMain, 2);

	push	2
	mov	ecx, DWORD PTR _hmenuMain$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetSubMenu@8
	mov	DWORD PTR _hmenuProfiles$[ebp], eax
$LN2@ResetProfi:

; 3188 :     while (DeleteMenu(hmenuProfiles, 8, MF_BYPOSITION));

	push	1024					; 00000400H
	push	8
	mov	edx, DWORD PTR _hmenuProfiles$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteMenu@12
	test	eax, eax
	je	SHORT $LN1@ResetProfi
	jmp	SHORT $LN2@ResetProfi
$LN1@ResetProfi:

; 3189 :     AddProfilesToMenu(hmenuProfiles);

	mov	eax, DWORD PTR _hmenuProfiles$[ebp]
	push	eax
	call	?AddProfilesToMenu@OBS@@CAXPAUHMENU__@@@Z ; OBS::AddProfilesToMenu
	add	esp, 4

; 3190 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetProfileMenu@OBS@@CAXXZ ENDP			; OBS::ResetProfileMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?RemoveSceneHotkey@OBS@@AAEXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
_hotkey$ = 8						; size = 4
?RemoveSceneHotkey@OBS@@AAEXK@Z PROC			; OBS::RemoveSceneHotkey, COMDAT
; _this$ = ecx

; 707  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 708  :         for(UINT i=0; i<sceneHotkeys.Num(); i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@RemoveScen
$LN3@RemoveScen:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@RemoveScen:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?Num@?$List@USceneHotkeyInfo@@@@QBEIXZ	; List<SceneHotkeyInfo>::Num
	cmp	DWORD PTR _i$1[ebp], eax
	jae	SHORT $LN5@RemoveScen

; 709  :         {
; 710  :             if(sceneHotkeys[i].hotkey == hotkey)

	mov	ecx, DWORD PTR _i$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??A?$List@USceneHotkeyInfo@@@@QAEAAUSceneHotkeyInfo@@I@Z ; List<SceneHotkeyInfo>::operator[]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR _hotkey$[ebp]
	jne	SHORT $LN1@RemoveScen

; 711  :             {
; 712  :                 API->DeleteHotkey(sceneHotkeys[i].hotkeyID);

	mov	eax, DWORD PTR _i$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??A?$List@USceneHotkeyInfo@@@@QAEAAUSceneHotkeyInfo@@I@Z ; List<SceneHotkeyInfo>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 713  :                 sceneHotkeys.Remove(i);

	mov	ecx, DWORD PTR _i$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?Remove@?$List@USceneHotkeyInfo@@@@QAEXI@Z ; List<SceneHotkeyInfo>::Remove

; 714  :                 break;

	jmp	SHORT $LN5@RemoveScen
$LN1@RemoveScen:

; 715  :             }
; 716  :         }

	jmp	SHORT $LN3@RemoveScen
$LN5@RemoveScen:

; 717  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveSceneHotkey@OBS@@AAEXK@Z ENDP			; OBS::RemoveSceneHotkey
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?GetBaseSize@OBS@@QBE?AUVect2@@XZ
_TEXT	SEGMENT
tv87 = -36						; size = 8
tv78 = -28						; size = 8
_width$ = -20						; size = 4
_height$ = -16						; size = 4
_this$ = -12						; size = 4
tv83 = -8						; size = 4
tv74 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetBaseSize@OBS@@QBE?AUVect2@@XZ PROC			; OBS::GetBaseSize, COMDAT
; _this$ = ecx

; 1217 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1218 :         UINT width, height;
; 1219 :         GetBaseSize(width, height);

	lea	eax, DWORD PTR _height$[ebp]
	push	eax
	lea	ecx, DWORD PTR _width$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBaseSize@OBS@@QBEXAAI0@Z		; OBS::GetBaseSize

; 1220 :         return Vect2(float(width), float(height));

	mov	edx, DWORD PTR _height$[ebp]
	mov	DWORD PTR tv74[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR tv74[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv78[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv78[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR tv83[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR tv83[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv87[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv87[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1221 :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBaseSize@OBS@@QBE?AUVect2@@XZ ENDP			; OBS::GetBaseSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?GetOutputSize@OBS@@QBE?AUVect2@@XZ
_TEXT	SEGMENT
tv86 = -28						; size = 8
tv76 = -20						; size = 8
tv82 = -12						; size = 4
_this$ = -8						; size = 4
tv72 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetOutputSize@OBS@@QBE?AUVect2@@XZ PROC		; OBS::GetOutputSize, COMDAT
; _this$ = ecx

; 1223 :     inline Vect2 GetOutputSize()      const         {return Vect2(float(outputCX), float(outputCY));}

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+876]
	mov	DWORD PTR tv72[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR tv72[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv76[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv76[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+872]
	mov	DWORD PTR tv82[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR tv82[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv86[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv86[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetOutputSize@OBS@@QBE?AUVect2@@XZ ENDP		; OBS::GetOutputSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?GetCurrentProfile@OBS@@SAPB_WXZ
_TEXT	SEGMENT
?GetCurrentProfile@OBS@@SAPB_WXZ PROC			; OBS::GetCurrentProfile, COMDAT

; 1263 :     inline static CTSTR GetCurrentProfile() {return GlobalConfig->GetStringPtr(TEXT("General"), TEXT("Profile"));}

	push	ebp
	mov	ebp, esp
	push	0
	push	OFFSET ??_C@_1BA@OKEJPPOI@?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AA?$AA@
	push	OFFSET ??_C@_1BA@GCDNCJOK@?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetStringPtr@ConfigFile@@QAEPB_WPB_W00@Z
	pop	ebp
	ret	0
?GetCurrentProfile@OBS@@SAPB_WXZ ENDP			; OBS::GetCurrentProfile
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.h
;	COMDAT ??0LogUploadResult@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0LogUploadResult@@QAE@XZ PROC				; LogUploadResult::LogUploadResult, COMDAT
; _this$ = ecx

; 26   :     LogUploadResult() : openAnalyzerOnSuccess(false) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0LogUploadResult@@QAE@XZ ENDP				; LogUploadResult::LogUploadResult
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplustypes.h
;	COMDAT ??0Point@Gdiplus@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??0Point@Gdiplus@@QAE@HH@Z PROC				; Gdiplus::Point::Point, COMDAT
; _this$ = ecx

; 313  :    Point(IN INT x,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 314  :          IN INT y)
; 315  :    {
; 316  :        X = x;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx

; 317  :        Y = y;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+4], eax

; 318  :    }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0Point@Gdiplus@@QAE@HH@Z ENDP				; Gdiplus::Point::Point
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdipluscolor.h
;	COMDAT ??0Color@Gdiplus@@QAE@EEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 1
_g$ = 12						; size = 1
_b$ = 16						; size = 1
??0Color@Gdiplus@@QAE@EEE@Z PROC			; Gdiplus::Color::Color, COMDAT
; _this$ = ecx

; 64   :     Color(IN BYTE r,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   :           IN BYTE g,
; 66   :           IN BYTE b)
; 67   :     {
; 68   :         Argb = MakeARGB(255, r, g, b);

	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _g$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _r$[ebp]
	push	edx
	push	255					; 000000ffH
	call	?MakeARGB@Color@Gdiplus@@SAKEEEE@Z	; Gdiplus::Color::MakeARGB
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 69   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Color@Gdiplus@@QAE@EEE@Z ENDP			; Gdiplus::Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdipluscolor.h
;	COMDAT ?MakeARGB@Color@Gdiplus@@SAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?MakeARGB@Color@Gdiplus@@SAKEEEE@Z PROC			; Gdiplus::Color::MakeARGB, COMDAT

; 317  :     {

	push	ebp
	mov	ebp, esp

; 318  :         return (((ARGB) (b) <<  BlueShift) |
; 319  :                 ((ARGB) (g) << GreenShift) |
; 320  :                 ((ARGB) (r) <<   RedShift) |
; 321  :                 ((ARGB) (a) << AlphaShift));

	movzx	eax, BYTE PTR _b$[ebp]
	movzx	ecx, BYTE PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _r$[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	movzx	ecx, BYTE PTR _a$[ebp]
	shl	ecx, 24					; 00000018H
	or	eax, ecx

; 322  :     }

	pop	ebp
	ret	0
?MakeARGB@Color@Gdiplus@@SAKEEEE@Z ENDP			; Gdiplus::Color::MakeARGB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusgraphics.h
;	COMDAT ?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hdc$ = 8						; size = 4
?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z PROC	; Gdiplus::Graphics::ReleaseHDC, COMDAT
; _this$ = ecx

; 132  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 133  :         SetStatus(DllExports::GdipReleaseDC(nativeGraphics, hdc));

	mov	eax, DWORD PTR _hdc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GdipReleaseDC@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 134  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z ENDP	; Gdiplus::Graphics::ReleaseHDC
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusgraphics.h
;	COMDAT ?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pen$ = 8						; size = 4
_x1$ = 12						; size = 4
_y1$ = 16						; size = 4
_x2$ = 20						; size = 4
_y2$ = 24						; size = 4
?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z PROC ; Gdiplus::Graphics::DrawLine, COMDAT
; _this$ = ecx

; 458  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 459  :         return SetStatus(DllExports::GdipDrawLineI(nativeGraphics,
; 460  :                                                    pen->nativePen,
; 461  :                                                    x1,
; 462  :                                                    y1,
; 463  :                                                    x2,
; 464  :                                                    y2));

	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pen$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GdipDrawLineI@24
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 465  :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ENDP ; Gdiplus::Graphics::DrawLine
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusgraphics.h
;	COMDAT ?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@ABVPoint@2@1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pen$ = 8						; size = 4
_pt1$ = 12						; size = 4
_pt2$ = 16						; size = 4
?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@ABVPoint@2@1@Z PROC ; Gdiplus::Graphics::DrawLine, COMDAT
; _this$ = ecx

; 470  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 471  :         return DrawLine(pen,
; 472  :                         pt1.X,
; 473  :                         pt1.Y,
; 474  :                         pt2.X,
; 475  :                         pt2.Y);

	mov	eax, DWORD PTR _pt2$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pt2$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pt1$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pt1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine

; 476  :     }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@ABVPoint@2@1@Z ENDP ; Gdiplus::Graphics::DrawLine
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusgraphics.h
;	COMDAT ?DrawRectangle@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pen$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
?DrawRectangle@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z PROC ; Gdiplus::Graphics::DrawRectangle, COMDAT
; _this$ = ecx

; 680  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 681  :         return SetStatus(DllExports::GdipDrawRectangleI(nativeGraphics,
; 682  :                                                         pen->nativePen,
; 683  :                                                         x,
; 684  :                                                         y,
; 685  :                                                         width,
; 686  :                                                         height));

	mov	eax, DWORD PTR _height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pen$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GdipDrawRectangleI@24
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 687  :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?DrawRectangle@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ENDP ; Gdiplus::Graphics::DrawRectangle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusgraphics.h
;	COMDAT ?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z
_TEXT	SEGMENT
_rect$ = -28						; size = 16
_this$ = -12						; size = 4
tv82 = -8						; size = 4
tv76 = -4						; size = 4
_string$ = 8						; size = 4
_length$ = 12						; size = 4
_font$ = 16						; size = 4
_origin$ = 20						; size = 4
_brush$ = 24						; size = 4
?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z PROC ; Gdiplus::Graphics::DrawString, COMDAT
; _this$ = ecx

; 1225 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1226 :         RectF rect(origin.X, origin.Y, 0.0f, 0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _origin$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _origin$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _rect$[ebp]
	call	??0RectF@Gdiplus@@QAE@MMMM@Z		; Gdiplus::RectF::RectF

; 1227 : 
; 1228 :         return SetStatus(DllExports::GdipDrawString(
; 1229 :             nativeGraphics,
; 1230 :             string,
; 1231 :             length,
; 1232 :             font ? font->nativeFont : NULL,
; 1233 :             &rect,
; 1234 :             NULL,
; 1235 :             brush ? brush->nativeBrush : NULL
; 1236 :         ));

	cmp	DWORD PTR _brush$[ebp], 0
	je	SHORT $LN3@DrawString
	mov	edx, DWORD PTR _brush$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@DrawString
$LN3@DrawString:
	mov	DWORD PTR tv76[ebp], 0
$LN4@DrawString:
	cmp	DWORD PTR _font$[ebp], 0
	je	SHORT $LN5@DrawString
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN6@DrawString
$LN5@DrawString:
	mov	DWORD PTR tv82[ebp], 0
$LN6@DrawString:
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__GdipDrawString@28
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus

; 1237 :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ENDP ; Gdiplus::Graphics::DrawString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusfontfamily.h
;	COMDAT ??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_fontCollection$ = 12					; size = 4
??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z PROC ; Gdiplus::FontFamily::FontFamily, COMDAT
; _this$ = ecx

; 35   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 36   :     nativeFamily = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 37   :     lastResult = DllExports::GdipCreateFontFamilyFromName(
; 38   :         name,
; 39   :         fontCollection ? fontCollection->nativeFontCollection : NULL,
; 40   :         &nativeFamily
; 41   :     );

	cmp	DWORD PTR _fontCollection$[ebp], 0
	je	SHORT $LN3@FontFamily
	mov	ecx, DWORD PTR _fontCollection$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN4@FontFamily
$LN3@FontFamily:
	mov	DWORD PTR tv71[ebp], 0
$LN4@FontFamily:
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp__GdipCreateFontFamilyFromName@12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 42   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ENDP ; Gdiplus::FontFamily::FontFamily
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusfontfamily.h
;	COMDAT ?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ
_TEXT	SEGMENT
?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ PROC	; Gdiplus::FontFamily::GenericSansSerif, COMDAT

; 56   : {

	push	ebp
	mov	ebp, esp

; 57   :     if (GenericSansSerifFontFamily != NULL)

	cmp	DWORD PTR _GenericSansSerifFontFamily, 0
	je	SHORT $LN1@GenericSan

; 58   :     {
; 59   :         return GenericSansSerifFontFamily;

	mov	eax, DWORD PTR _GenericSansSerifFontFamily
	jmp	SHORT $LN2@GenericSan
$LN1@GenericSan:

; 60   :     }
; 61   : 
; 62   :     GenericSansSerifFontFamily =
; 63   :         (FontFamily*) GenericSansSerifFontFamilyBuffer;

	mov	DWORD PTR _GenericSansSerifFontFamily, OFFSET _GenericSansSerifFontFamilyBuffer

; 64   : 
; 65   :     GenericSansSerifFontFamily->lastResult =
; 66   :         DllExports::GdipGetGenericFontFamilySansSerif(
; 67   :             &(GenericSansSerifFontFamily->nativeFamily)
; 68   :         );

	mov	eax, DWORD PTR _GenericSansSerifFontFamily
	push	eax
	call	DWORD PTR __imp__GdipGetGenericFontFamilySansSerif@4
	mov	ecx, DWORD PTR _GenericSansSerifFontFamily
	mov	DWORD PTR [ecx+4], eax

; 69   : 
; 70   :     return GenericSansSerifFontFamily;

	mov	eax, DWORD PTR _GenericSansSerifFontFamily
$LN2@GenericSan:

; 71   : }

	pop	ebp
	ret	0
?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ ENDP	; Gdiplus::FontFamily::GenericSansSerif
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusfontfamily.h
;	COMDAT ?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ
_TEXT	SEGMENT
_lastStatus$ = -8					; size = 4
_this$ = -4						; size = 4
?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ PROC ; Gdiplus::FontFamily::GetLastStatus, COMDAT
; _this$ = ecx

; 196  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 197  :     Status lastStatus = lastResult;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _lastStatus$[ebp], ecx

; 198  :     lastResult = Ok;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 199  : 
; 200  :     return lastStatus;

	mov	eax, DWORD PTR _lastStatus$[ebp]

; 201  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ENDP ; Gdiplus::FontFamily::GetLastStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\gdiplusfont.h
;	COMDAT ??0Font@Gdiplus@@QAE@PB_WMHW4Unit@1@PBVFontCollection@1@@Z
_TEXT	SEGMENT
_family$ = -16						; size = 8
_nativeFamily$ = -8					; size = 4
_this$ = -4						; size = 4
_familyName$ = 8					; size = 4
_emSize$ = 12						; size = 4
_style$ = 16						; size = 4
_unit$ = 20						; size = 4
_fontCollection$ = 24					; size = 4
??0Font@Gdiplus@@QAE@PB_WMHW4Unit@1@PBVFontCollection@1@@Z PROC ; Gdiplus::Font::Font, COMDAT
; _this$ = ecx

; 117  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 118  :     nativeFont = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 119  : 
; 120  :     FontFamily family(familyName, fontCollection);

	mov	ecx, DWORD PTR _fontCollection$[ebp]
	push	ecx
	mov	edx, DWORD PTR _familyName$[ebp]
	push	edx
	lea	ecx, DWORD PTR _family$[ebp]
	call	??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ; Gdiplus::FontFamily::FontFamily

; 121  :     GpFontFamily *nativeFamily = family.nativeFamily;

	mov	eax, DWORD PTR _family$[ebp]
	mov	DWORD PTR _nativeFamily$[ebp], eax

; 122  : 
; 123  :     lastResult = family.GetLastStatus();

	lea	ecx, DWORD PTR _family$[ebp]
	call	?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ; Gdiplus::FontFamily::GetLastStatus
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 124  : 
; 125  :     if (lastResult != Ok)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN3@Font

; 126  :     {
; 127  :         nativeFamily = FontFamily::GenericSansSerif()->nativeFamily;

	call	?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ ; Gdiplus::FontFamily::GenericSansSerif
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _nativeFamily$[ebp], eax

; 128  :         lastResult = FontFamily::GenericSansSerif()->lastResult;

	call	?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ ; Gdiplus::FontFamily::GenericSansSerif
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx

; 129  :         if (lastResult != Ok)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Font

; 130  :             return;

	lea	ecx, DWORD PTR _family$[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	jmp	$LN5@Font
$LN3@Font:

; 131  :     }
; 132  : 
; 133  :     lastResult = DllExports::GdipCreateFont(nativeFamily,
; 134  :                             emSize,
; 135  :                             style,
; 136  :                             unit,
; 137  :                             &nativeFont);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _unit$[ebp]
	push	edx
	mov	eax, DWORD PTR _style$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _emSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _nativeFamily$[ebp]
	push	ecx
	call	DWORD PTR __imp__GdipCreateFont@20
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 138  : 
; 139  :     if (lastResult != Ok)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Font

; 140  :     {
; 141  :         nativeFamily = FontFamily::GenericSansSerif()->nativeFamily;

	call	?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ ; Gdiplus::FontFamily::GenericSansSerif
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _nativeFamily$[ebp], ecx

; 142  :         lastResult = FontFamily::GenericSansSerif()->lastResult;

	call	?GenericSansSerif@FontFamily@Gdiplus@@SAPBV12@XZ ; Gdiplus::FontFamily::GenericSansSerif
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], eax

; 143  :         if (lastResult != Ok)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Font

; 144  :             return;

	lea	ecx, DWORD PTR _family$[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	jmp	SHORT $LN5@Font
$LN1@Font:

; 145  : 
; 146  :         lastResult = DllExports::GdipCreateFont(
; 147  :             nativeFamily,
; 148  :             emSize,
; 149  :             style,
; 150  :             unit,
; 151  :             &nativeFont);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _style$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _emSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _nativeFamily$[ebp]
	push	edx
	call	DWORD PTR __imp__GdipCreateFont@20
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN2@Font:

; 152  :     }
; 153  : }

	lea	ecx, DWORD PTR _family$[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
$LN5@Font:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0Font@Gdiplus@@QAE@PB_WMHW4Unit@1@PBVFontCollection@1@@Z ENDP ; Gdiplus::Font::Font
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?EnterSceneCollectionDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_strExists$1 = -40					; size = 8
_strSceneCollectionPath$2 = -32				; size = 8
_str$3 = -24						; size = 8
_strOut$4 = -16						; size = 4
_strOut$5 = -12						; size = 4
tv81 = -8						; size = 4
tv64 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?EnterSceneCollectionDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC ; OBS::EnterSceneCollectionDialogProc, COMDAT

; 81   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 82   :     switch (message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN8@EnterScene
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN7@EnterScene
	jmp	$LN9@EnterScene
$LN8@EnterScene:

; 83   :     {
; 84   :         case WM_INITDIALOG:
; 85   :             {
; 86   :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 87   :                 LocalizeWindow(hwnd);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 88   : 
; 89   :                 String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$5[ebp], eax

; 90   :                 SetWindowText(GetDlgItem(hwnd, IDC_NAME), strOut);

	mov	ecx, DWORD PTR _strOut$5[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1048					; 00000418H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 91   : 
; 92   :                 return true;

	mov	eax, 1
	jmp	$LN11@EnterScene
$LN7@EnterScene:

; 93   :             }
; 94   : 
; 95   :         case WM_COMMAND:
; 96   :             switch (LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN4@EnterScene
	cmp	DWORD PTR tv81[ebp], 2
	je	$LN1@EnterScene
	jmp	$LN9@EnterScene
$LN4@EnterScene:

; 97   :             {
; 98   :                 case IDOK:
; 99   :                     {
; 100  :                         String str;

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 101  :                         str.SetLength((UINT)SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXTLENGTH, 0, 0));

	push	0
	push	0
	push	14					; 0000000eH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 102  :                         if (!str.Length())

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN3@EnterScene

; 103  :                         {
; 104  :                             OBSMessageBox(hwnd, Str("EnterName"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712793
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 105  :                             break;

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN9@EnterScene
$LN3@EnterScene:

; 106  :                         }
; 107  : 
; 108  :                         SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXT, str.Length()+1, (LPARAM)str.Array());

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 109  : 
; 110  :                         String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$4[ebp], eax

; 111  : 
; 112  :                         String strSceneCollectionPath;

	lea	ecx, DWORD PTR _strSceneCollectionPath$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 113  :                         strSceneCollectionPath << lpAppDataPath << TEXT("\\sceneCollection\\") << str << TEXT(".xconfig");

	push	OFFSET $SG4294712791
	lea	eax, DWORD PTR _str$3[ebp]
	push	eax
	push	OFFSET $SG4294712792
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strSceneCollectionPath$2[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 114  : 
; 115  :                         if (OSFileExists(strSceneCollectionPath))

	lea	ecx, DWORD PTR _strSceneCollectionPath$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN2@EnterScene

; 116  :                         {
; 117  :                             String strExists = Str("NameExists");

	push	OFFSET $SG4294712790
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 118  :                             strExists.FindReplace(TEXT("$1"), str);

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712789
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 119  :                             OBSMessageBox(hwnd, strExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 120  :                             break;

	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSceneCollectionPath$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN9@EnterScene
$LN2@EnterScene:

; 121  :                         }
; 122  : 
; 123  :                         strOut = str;

	lea	eax, DWORD PTR _str$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _strOut$4[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 124  :                     }

	lea	ecx, DWORD PTR _strSceneCollectionPath$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@EnterScene:

; 125  : 
; 126  :                 case IDCANCEL:
; 127  :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	ecx, WORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
$LN9@EnterScene:

; 128  :                     break;
; 129  :             }
; 130  :     }
; 131  : 
; 132  :     return false;

	xor	eax, eax
$LN11@EnterScene:

; 133  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnterSceneCollectionDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP ; OBS::EnterSceneCollectionDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?EnterProfileDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_strExists$1 = -40					; size = 8
_strProfilePath$2 = -32					; size = 8
_str$3 = -24						; size = 8
_strOut$4 = -16						; size = 4
_strOut$5 = -12						; size = 4
tv81 = -8						; size = 4
tv64 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?EnterProfileDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::EnterProfileDialogProc, COMDAT

; 136  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 137  :     switch (message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN8@EnterProfi
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN7@EnterProfi
	jmp	$LN9@EnterProfi
$LN8@EnterProfi:

; 138  :     {
; 139  :         case WM_INITDIALOG:
; 140  :             {
; 141  :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 142  :                 LocalizeWindow(hwnd);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 143  : 
; 144  :                 String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$5[ebp], eax

; 145  :                 SetWindowText(GetDlgItem(hwnd, IDC_NAME), strOut);

	mov	ecx, DWORD PTR _strOut$5[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1048					; 00000418H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 146  : 
; 147  :                 return true;

	mov	eax, 1
	jmp	$LN11@EnterProfi
$LN7@EnterProfi:

; 148  :             }
; 149  : 
; 150  :         case WM_COMMAND:
; 151  :             switch (LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN4@EnterProfi
	cmp	DWORD PTR tv81[ebp], 2
	je	$LN1@EnterProfi
	jmp	$LN9@EnterProfi
$LN4@EnterProfi:

; 152  :             {
; 153  :                 case IDOK:
; 154  :                     {
; 155  :                         String str;

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 156  :                         str.SetLength((UINT)SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXTLENGTH, 0, 0));

	push	0
	push	0
	push	14					; 0000000eH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 157  :                         if (!str.Length())

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN3@EnterProfi

; 158  :                         {
; 159  :                             OBSMessageBox(hwnd, Str("EnterName"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712788
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 160  :                             break;

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN9@EnterProfi
$LN3@EnterProfi:

; 161  :                         }
; 162  : 
; 163  :                         SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXT, str.Length()+1, (LPARAM)str.Array());

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 164  : 
; 165  :                         String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$4[ebp], eax

; 166  : 
; 167  :                         String strProfilePath;

	lea	ecx, DWORD PTR _strProfilePath$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 168  :                         strProfilePath << lpAppDataPath << TEXT("\\profiles\\") << str << TEXT(".ini");

	push	OFFSET $SG4294712786
	lea	eax, DWORD PTR _str$3[ebp]
	push	eax
	push	OFFSET $SG4294712787
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strProfilePath$2[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 169  : 
; 170  :                         if (OSFileExists(strProfilePath))

	lea	ecx, DWORD PTR _strProfilePath$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN2@EnterProfi

; 171  :                         {
; 172  :                             String strExists = Str("NameExists");

	push	OFFSET $SG4294712785
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 173  :                             strExists.FindReplace(TEXT("$1"), str);

	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712784
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 174  :                             OBSMessageBox(hwnd, strExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 175  :                             break;

	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strProfilePath$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN9@EnterProfi
$LN2@EnterProfi:

; 176  :                         }
; 177  : 
; 178  :                         strOut = str;

	lea	eax, DWORD PTR _str$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _strOut$4[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 179  :                     }

	lea	ecx, DWORD PTR _strProfilePath$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _str$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@EnterProfi:

; 180  : 
; 181  :                 case IDCANCEL:
; 182  :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	ecx, WORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
$LN9@EnterProfi:

; 183  :                     break;
; 184  :             }
; 185  :     }
; 186  : 
; 187  :     return false;

	xor	eax, eax
$LN11@EnterProfi:

; 188  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnterProfileDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::EnterProfileDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?SceneHotkeyDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_sceneElement$1 = -36					; size = 4
_numScenes$2 = -32					; size = 4
_hotkeyInfo$3 = -28					; size = 4
_hotkeyInfo$4 = -24					; size = 4
_scenes$5 = -20						; size = 4
tv64 = -16						; size = 4
tv79 = -12						; size = 4
_hotkey$6 = -8						; size = 4
_i$7 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?SceneHotkeyDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::SceneHotkeyDialogProc, COMDAT

; 252  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 253  :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN14@SceneHotke
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN13@SceneHotke
	jmp	$LN15@SceneHotke
$LN14@SceneHotke:

; 254  :     {
; 255  :         case WM_INITDIALOG:
; 256  :             {
; 257  :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 258  :                 LocalizeWindow(hwnd);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 259  : 
; 260  :                 SceneHotkeyInfo *hotkeyInfo = (SceneHotkeyInfo*)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hotkeyInfo$3[ebp], ecx

; 261  :                 SendMessage(GetDlgItem(hwnd, IDC_HOTKEY), HKM_SETHOTKEY, hotkeyInfo->hotkey, 0);

	push	0
	mov	edx, DWORD PTR _hotkeyInfo$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	1025					; 00000401H
	push	1073					; 00000431H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 262  : 
; 263  :                 return TRUE;                    

	mov	eax, 1
	jmp	$LN17@SceneHotke
$LN13@SceneHotke:

; 264  :             }
; 265  : 
; 266  :         case WM_COMMAND:
; 267  :             switch(LOWORD(wParam))

	movzx	edx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv79[ebp], edx
	cmp	DWORD PTR tv79[ebp], 1
	je	SHORT $LN8@SceneHotke
	cmp	DWORD PTR tv79[ebp], 2
	je	$LN1@SceneHotke
	cmp	DWORD PTR tv79[ebp], 1074		; 00000432H
	je	SHORT $LN10@SceneHotke
	jmp	$LN15@SceneHotke
$LN10@SceneHotke:

; 268  :             {
; 269  :                 case IDC_CLEAR:
; 270  :                     if(HIWORD(wParam) == BN_CLICKED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN9@SceneHotke

; 271  :                         SendMessage(GetDlgItem(hwnd, IDC_HOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1073					; 00000431H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN9@SceneHotke:

; 272  :                     break;

	jmp	$LN15@SceneHotke
$LN8@SceneHotke:

; 273  : 
; 274  :                 case IDOK:
; 275  :                     {
; 276  :                         SceneHotkeyInfo *hotkeyInfo = (SceneHotkeyInfo*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _hotkeyInfo$4[ebp], eax

; 277  : 
; 278  :                         DWORD hotkey = (DWORD)SendMessage(GetDlgItem(hwnd, IDC_HOTKEY), HKM_GETHOTKEY, 0, 0);

	push	0
	push	0
	push	1026					; 00000402H
	push	1073					; 00000431H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _hotkey$6[ebp], eax

; 279  : 
; 280  :                         if(hotkey == hotkeyInfo->hotkey)

	mov	edx, DWORD PTR _hotkeyInfo$4[ebp]
	mov	eax, DWORD PTR _hotkey$6[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN7@SceneHotke

; 281  :                         {
; 282  :                             EndDialog(hwnd, IDCANCEL);

	push	2
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8

; 283  :                             break;

	jmp	$LN15@SceneHotke
$LN7@SceneHotke:

; 284  :                         }
; 285  : 
; 286  :                         if(hotkey)

	cmp	DWORD PTR _hotkey$6[ebp], 0
	je	$LN6@SceneHotke

; 287  :                         {
; 288  :                             XElement *scenes = API->GetSceneListElement();

	mov	edx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	mov	DWORD PTR _scenes$5[ebp], eax

; 289  :                             UINT numScenes = scenes->NumElements();

	push	0
	mov	ecx, DWORD PTR _scenes$5[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numScenes$2[ebp], eax

; 290  :                             for(UINT i=0; i<numScenes; i++)

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN5@SceneHotke
$LN4@SceneHotke:
	mov	ecx, DWORD PTR _i$7[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$7[ebp], ecx
$LN5@SceneHotke:
	mov	edx, DWORD PTR _i$7[ebp]
	cmp	edx, DWORD PTR _numScenes$2[ebp]
	jae	SHORT $LN6@SceneHotke

; 291  :                             {
; 292  :                                 XElement *sceneElement = scenes->GetElementByID(i);

	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _scenes$5[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sceneElement$1[ebp], eax

; 293  :                                 if(sceneElement->GetInt(TEXT("hotkey")) == hotkey)

	push	0
	push	OFFSET $SG4294712778
	mov	ecx, DWORD PTR _sceneElement$1[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	cmp	eax, DWORD PTR _hotkey$6[ebp]
	jne	SHORT $LN2@SceneHotke

; 294  :                                 {
; 295  :                                     OBSMessageBox(hwnd, Str("Scene.Hotkey.AlreadyInUse"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712777
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 296  :                                     return 0;

	xor	eax, eax
	jmp	SHORT $LN17@SceneHotke
$LN2@SceneHotke:

; 297  :                                 }
; 298  :                             }

	jmp	SHORT $LN4@SceneHotke
$LN6@SceneHotke:

; 299  :                         }
; 300  : 
; 301  :                         hotkeyInfo->hotkey = hotkey;

	mov	eax, DWORD PTR _hotkeyInfo$4[ebp]
	mov	ecx, DWORD PTR _hotkey$6[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN1@SceneHotke:

; 302  :                     }
; 303  : 
; 304  :                 case IDCANCEL:
; 305  :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	edx, WORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8
$LN15@SceneHotke:

; 306  :                     break;
; 307  :             }
; 308  :     }
; 309  : 
; 310  :     return 0;

	xor	eax, eax
$LN17@SceneHotke:

; 311  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SceneHotkeyDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::SceneHotkeyDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?EnterSceneNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_strExists$1 = -40					; size = 8
_str$2 = -32						; size = 8
_scenes$3 = -24						; size = 4
_strOut$4 = -20						; size = 4
_strOut$5 = -16						; size = 4
_foundScene$6 = -12					; size = 4
tv81 = -8						; size = 4
tv64 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?EnterSceneNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::EnterSceneNameDialogProc, COMDAT

; 314  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 315  :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN8@EnterScene
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN7@EnterScene
	jmp	$LN9@EnterScene
$LN8@EnterScene:

; 316  :     {
; 317  :         case WM_INITDIALOG:
; 318  :             {
; 319  :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 320  :                 LocalizeWindow(hwnd);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 321  : 
; 322  :                 String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$4[ebp], eax

; 323  :                 SetWindowText(GetDlgItem(hwnd, IDC_NAME), strOut);

	mov	ecx, DWORD PTR _strOut$4[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1048					; 00000418H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 324  : 
; 325  :                 return TRUE;

	mov	eax, 1
	jmp	$LN11@EnterScene
$LN7@EnterScene:

; 326  :             }
; 327  : 
; 328  :         case WM_COMMAND:
; 329  :             switch(LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN4@EnterScene
	cmp	DWORD PTR tv81[ebp], 2
	je	$LN1@EnterScene
	jmp	$LN9@EnterScene
$LN4@EnterScene:

; 330  :             {
; 331  :                 case IDOK:
; 332  :                     {
; 333  :                         String str;

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 334  :                         str.SetLength((UINT)SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXTLENGTH, 0, 0));

	push	0
	push	0
	push	14					; 0000000eH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 335  :                         if(!str.Length())

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN3@EnterScene

; 336  :                         {
; 337  :                             OBSMessageBox(hwnd, Str("EnterName"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712776
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 338  :                             break;

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN9@EnterScene
$LN3@EnterScene:

; 339  :                         }
; 340  : 
; 341  :                         SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXT, str.Length()+1, (LPARAM)str.Array());

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 342  : 
; 343  :                         String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$5[ebp], eax

; 344  : 
; 345  :                         XElement *scenes = App->scenesConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712775
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _scenes$3[ebp], eax

; 346  :                         XElement *foundScene = scenes->GetElement(str);

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _scenes$3[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _foundScene$6[ebp], eax

; 347  :                         if(foundScene != NULL && strOut != foundScene->GetName())

	cmp	DWORD PTR _foundScene$6[ebp], 0
	je	SHORT $LN2@EnterScene
	mov	ecx, DWORD PTR _foundScene$6[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _strOut$5[ebp]
	call	DWORD PTR __imp_??9String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN2@EnterScene

; 348  :                         {
; 349  :                             String strExists = Str("NameExists");

	push	OFFSET $SG4294712774
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 350  :                             strExists.FindReplace(TEXT("$1"), str);

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712773
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 351  :                             OBSMessageBox(hwnd, strExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 352  :                             break;

	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN9@EnterScene
$LN2@EnterScene:

; 353  :                         }
; 354  : 
; 355  :                         strOut = str;

	lea	edx, DWORD PTR _str$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _strOut$5[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 356  :                     }

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@EnterScene:

; 357  : 
; 358  :                 case IDCANCEL:
; 359  :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	eax, WORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
$LN9@EnterScene:

; 360  :                     break;
; 361  :             }
; 362  :     }
; 363  :     return 0;

	xor	eax, eax
$LN11@EnterScene:

; 364  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnterSceneNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::EnterSceneNameDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GetNewSceneName@OBS@@CAXAAVString@@@Z
_TEXT	SEGMENT
$T1 = -24						; size = 8
_strTestName$2 = -16					; size = 8
_scenes$ = -8						; size = 4
_num$3 = -4						; size = 4
_strScene$ = 8						; size = 4
?GetNewSceneName@OBS@@CAXAAVString@@@Z PROC		; OBS::GetNewSceneName, COMDAT

; 367  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 368  :     XElement *scenes = App->scenesConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712772
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _scenes$[ebp], eax

; 369  :     if(scenes)

	cmp	DWORD PTR _scenes$[ebp], 0
	je	$LN4@GetNewScen

; 370  :     {
; 371  :         String strTestName = strScene;

	mov	eax, DWORD PTR _strScene$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z

; 372  : 
; 373  :         UINT num = 1;

	mov	DWORD PTR _num$3[ebp], 1
$LN2@GetNewScen:

; 374  :         while(scenes->GetElement(strTestName) != NULL)

	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _scenes$[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	test	eax, eax
	je	SHORT $LN1@GetNewScen

; 375  :             strTestName.Clear() << strScene << FormattedString(TEXT(" %u"), ++num);

	mov	ecx, DWORD PTR _num$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _num$3[ebp], ecx
	mov	edx, DWORD PTR _num$3[ebp]
	push	edx
	push	OFFSET $SG4294712771
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _strScene$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_?Clear@String@@QAEAAV1@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN2@GetNewScen
$LN1@GetNewScen:

; 376  : 
; 377  :         strScene = strTestName;

	lea	edx, DWORD PTR _strTestName$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _strScene$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 378  :     }

	lea	ecx, DWORD PTR _strTestName$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN4@GetNewScen:

; 379  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNewSceneName@OBS@@CAXAAVString@@@Z ENDP		; OBS::GetNewSceneName
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?TrackModifyListbox@OBS@@AAEXPAUHWND__@@H@Z
_TEXT	SEGMENT
__macro_lvi$1 = -368					; size = 60
__macro_lvi$2 = -308					; size = 60
__macro_lvi$3 = -248					; size = 60
$T4 = -188						; size = 8
_curSize$5 = -180					; size = 8
_baseSize$6 = -172					; size = 8
_multiple$7 = -164					; size = 8
_curSel$8 = -156					; size = 4
_selectedID$9 = -152					; size = 4
_data$10 = -148						; size = 4
_sourcesElement$11 = -144				; size = 4
_sourceNames$12 = -140					; size = 8
_this$ = -132						; size = 4
_numSources$13 = -128					; size = 4
_newSize$14 = -124					; size = 8
_classID$15 = -116					; size = 4
_sourceNames$16 = -112					; size = 8
_numSelected$ = -104					; size = 4
tv145 = -100						; size = 4
tv129 = -96						; size = 4
_strName$17 = -92					; size = 8
tv151 = -84						; size = 4
tv135 = -80						; size = 4
_monitorID$18 = -76					; size = 4
tv559 = -72						; size = 4
_oldStrName$19 = -68					; size = 4
_lpName$20 = -64					; size = 4
_globalElement$21 = -60					; size = 4
_selectedSceneItems$22 = -56				; size = 8
_curSceneElement$23 = -48				; size = 4
_strName$24 = -44					; size = 8
_curClassInfo$ = -36					; size = 4
tv92 = -32						; size = 4
_source$25 = -28					; size = 4
_sources$26 = -24					; size = 4
_ci$27 = -20						; size = 4
_newSourceElement$28 = -16				; size = 4
tv167 = -10						; size = 1
tv159 = -9						; size = 1
_hwndSources$ = -8					; size = 4
_selectedElement$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_ret$ = 12						; size = 4
?TrackModifyListbox@OBS@@AAEXPAUHWND__@@H@Z PROC	; OBS::TrackModifyListbox, COMDAT
; _this$ = ecx

; 974  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	mov	DWORD PTR _this$[ebp], ecx

; 975  :     HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 976  :     UINT numSelected = (ListView_GetSelectedCount(hwndSources));

	push	0
	push	0
	push	4146					; 00001032H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numSelected$[ebp], eax

; 977  :     XElement *selectedElement = NULL;

	mov	DWORD PTR _selectedElement$[ebp], 0

; 978  :     ClassInfo *curClassInfo = NULL;

	mov	DWORD PTR _curClassInfo$[ebp], 0

; 979  :     if(numSelected == 1)

	cmp	DWORD PTR _numSelected$[ebp], 1
	jne	SHORT $LN54@TrackModif

; 980  :     {
; 981  :         UINT selectedID = ListView_GetNextItem(hwndSources, -1, LVNI_SELECTED);

	push	2
	push	-1
	push	4108					; 0000100cH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _selectedID$9[ebp], eax

; 982  :         XElement *sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712715
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$11[ebp], eax

; 983  :         selectedElement = sourcesElement->GetElementByID(selectedID);

	mov	ecx, DWORD PTR _selectedID$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sourcesElement$11[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _selectedElement$[ebp], eax

; 984  :         curClassInfo = App->GetImageSourceClass(selectedElement->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712714
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetImageSourceClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetImageSourceClass
	mov	DWORD PTR _curClassInfo$[ebp], eax
$LN54@TrackModif:

; 985  :     }
; 986  : 
; 987  :     switch(ret)

	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR tv92[ebp], edx
	mov	eax, DWORD PTR tv92[ebp]
	sub	eax, 1
	mov	DWORD PTR tv92[ebp], eax
	cmp	DWORD PTR tv92[ebp], 23			; 00000017H
	ja	$LN44@TrackModif
	mov	ecx, DWORD PTR tv92[ebp]
	jmp	DWORD PTR $LN69@TrackModif[ecx*4]
$LN51@TrackModif:

; 988  :     {
; 989  :         // General render frame stuff above here
; 990  :         case ID_TOGGLERENDERVIEW:
; 991  :             App->bRenderViewEnabled = !App->bRenderViewEnabled;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+742]
	test	eax, eax
	jne	SHORT $LN57@TrackModif
	mov	DWORD PTR tv129[ebp], 1
	jmp	SHORT $LN58@TrackModif
$LN57@TrackModif:
	mov	DWORD PTR tv129[ebp], 0
$LN58@TrackModif:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	dl, BYTE PTR tv129[ebp]
	mov	BYTE PTR [ecx+742], dl

; 992  :             App->bForceRenderViewErase = !App->bRenderViewEnabled;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+742]
	test	ecx, ecx
	jne	SHORT $LN59@TrackModif
	mov	DWORD PTR tv135[ebp], 1
	jmp	SHORT $LN60@TrackModif
$LN59@TrackModif:
	mov	DWORD PTR tv135[ebp], 0
$LN60@TrackModif:
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	al, BYTE PTR tv135[ebp]
	mov	BYTE PTR [edx+743], al

; 993  :             App->UpdateRenderViewMessage();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?UpdateRenderViewMessage@OBS@@AAEXXZ	; OBS::UpdateRenderViewMessage

; 994  :             break;

	jmp	$LN52@TrackModif
$LN50@TrackModif:

; 995  :         case ID_TOGGLEPANEL:
; 996  :             if (App->bFullscreenMode)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+740]
	test	edx, edx
	je	SHORT $LN49@TrackModif

; 997  :                 App->bPanelVisibleFullscreen = !App->bPanelVisibleFullscreen;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+689]
	test	ecx, ecx
	jne	SHORT $LN61@TrackModif
	mov	DWORD PTR tv145[ebp], 1
	jmp	SHORT $LN62@TrackModif
$LN61@TrackModif:
	mov	DWORD PTR tv145[ebp], 0
$LN62@TrackModif:
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	al, BYTE PTR tv145[ebp]
	mov	BYTE PTR [edx+689], al

; 998  :             else

	jmp	SHORT $LN48@TrackModif
$LN49@TrackModif:

; 999  :                 App->bPanelVisibleWindowed = !App->bPanelVisibleWindowed;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+688]
	test	edx, edx
	jne	SHORT $LN63@TrackModif
	mov	DWORD PTR tv151[ebp], 1
	jmp	SHORT $LN64@TrackModif
$LN63@TrackModif:
	mov	DWORD PTR tv151[ebp], 0
$LN64@TrackModif:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	cl, BYTE PTR tv151[ebp]
	mov	BYTE PTR [eax+688], cl
$LN48@TrackModif:

; 1000 :             App->bPanelVisible = App->bFullscreenMode ? App->bPanelVisibleFullscreen : App->bPanelVisibleWindowed;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+740]
	test	eax, eax
	je	SHORT $LN65@TrackModif
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	dl, BYTE PTR [ecx+689]
	mov	BYTE PTR tv159[ebp], dl
	jmp	SHORT $LN66@TrackModif
$LN65@TrackModif:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	cl, BYTE PTR [eax+688]
	mov	BYTE PTR tv159[ebp], cl
$LN66@TrackModif:
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	al, BYTE PTR tv159[ebp]
	mov	BYTE PTR [edx+690], al

; 1001 :             App->bPanelVisibleProcessed = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+691], 0

; 1002 :             App->ResizeWindow(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResizeWindow@OBS@@QAEX_N@Z		; OBS::ResizeWindow

; 1003 :             break;

	jmp	$LN52@TrackModif
$LN47@TrackModif:

; 1004 :         case ID_TOGGLEFULLSCREEN:
; 1005 :             App->SetFullscreenMode(!App->bFullscreenMode);

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+740]
	test	eax, eax
	jne	SHORT $LN67@TrackModif
	mov	BYTE PTR tv167[ebp], 1
	jmp	SHORT $LN68@TrackModif
$LN67@TrackModif:
	mov	BYTE PTR tv167[ebp], 0
$LN68@TrackModif:
	movzx	ecx, BYTE PTR tv167[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SetFullscreenMode@OBS@@QAEX_N@Z	; OBS::SetFullscreenMode

; 1006 :             break;

	jmp	$LN52@TrackModif
$LN46@TrackModif:

; 1007 :         case ID_PREVIEWSCALETOFITMODE:
; 1008 :             App->renderFrameIn1To1Mode = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+668], 0

; 1009 :             App->ResizeRenderFrame(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResizeRenderFrame@OBS@@AAEX_N@Z	; OBS::ResizeRenderFrame

; 1010 :             break;

	jmp	$LN52@TrackModif
$LN45@TrackModif:

; 1011 :         case ID_PREVIEW1TO1MODE:
; 1012 :             App->renderFrameIn1To1Mode = true;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+668], 1

; 1013 :             App->ResizeRenderFrame(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResizeRenderFrame@OBS@@AAEX_N@Z	; OBS::ResizeRenderFrame

; 1014 :             break;

	jmp	$LN52@TrackModif
$LN44@TrackModif:

; 1015 : 
; 1016 :         // Sources below here
; 1017 :         default:
; 1018 :             if (ret >= ID_PROJECTOR)

	cmp	DWORD PTR _ret$[ebp], 6000		; 00001770H
	jl	SHORT $LN43@TrackModif

; 1019 :             {
; 1020 :                 UINT monitorID = ret-ID_PROJECTOR;

	mov	ecx, DWORD PTR _ret$[ebp]
	sub	ecx, 6000				; 00001770H
	mov	DWORD PTR _monitorID$18[ebp], ecx

; 1021 :                 if (monitorID == 0)

	jne	SHORT $LN42@TrackModif

; 1022 :                     App->bPleaseDisableProjector = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+708], 1

; 1023 :                 else

	jmp	SHORT $LN41@TrackModif
$LN42@TrackModif:

; 1024 :                     EnableProjector(monitorID-1);

	mov	eax, DWORD PTR _monitorID$18[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnableProjector@OBS@@AAEXI@Z		; OBS::EnableProjector
$LN41@TrackModif:
	jmp	$LN39@TrackModif
$LN43@TrackModif:

; 1025 :             }
; 1026 :             else if(ret >= ID_LISTBOX_ADD)

	cmp	DWORD PTR _ret$[ebp], 25		; 00000019H
	jl	$LN39@TrackModif

; 1027 :             {
; 1028 :                 App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 1029 : 
; 1030 :                 ClassInfo *ci;
; 1031 :                 if(ret >= ID_LISTBOX_GLOBALSOURCE)

	cmp	DWORD PTR _ret$[ebp], 5000		; 00001388H
	jl	SHORT $LN38@TrackModif

; 1032 :                     ci = App->GetImageSourceClass(TEXT("GlobalSource"));

	push	OFFSET $SG4294712713
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetImageSourceClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetImageSourceClass
	mov	DWORD PTR _ci$27[ebp], eax

; 1033 :                 else

	jmp	SHORT $LN37@TrackModif
$LN38@TrackModif:

; 1034 :                 {
; 1035 :                     UINT classID = ret-ID_LISTBOX_ADD;

	mov	ecx, DWORD PTR _ret$[ebp]
	sub	ecx, 25					; 00000019H
	mov	DWORD PTR _classID$15[ebp], ecx

; 1036 :                     ci = App->imageSourceClasses+classID;

	mov	edx, DWORD PTR _classID$15[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??H?$List@UClassInfo@@@@QAEPAUClassInfo@@I@Z ; List<ClassInfo>::operator+
	mov	DWORD PTR _ci$27[ebp], eax
$LN37@TrackModif:

; 1037 :                 }
; 1038 : 
; 1039 :                 String strName;

	lea	ecx, DWORD PTR _strName$24[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 1040 :                 if(ret >= ID_LISTBOX_GLOBALSOURCE)

	cmp	DWORD PTR _ret$[ebp], 5000		; 00001388H
	jl	SHORT $LN36@TrackModif

; 1041 :                 {
; 1042 :                     List<CTSTR> sourceNames;

	lea	ecx, DWORD PTR _sourceNames$12[ebp]
	call	??0?$List@PB_W@@QAE@XZ			; List<wchar_t const *>::List<wchar_t const *>

; 1043 :                     App->GetGlobalSourceNames(sourceNames);

	push	0
	lea	eax, DWORD PTR _sourceNames$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSourceNames@OBS@@AAEXAAV?$List@PB_W@@_N@Z ; OBS::GetGlobalSourceNames

; 1044 :                     strName = sourceNames[ret-ID_LISTBOX_GLOBALSOURCE];

	mov	ecx, DWORD PTR _ret$[ebp]
	sub	ecx, 5000				; 00001388H
	push	ecx
	lea	ecx, DWORD PTR _sourceNames$12[ebp]
	call	??A?$List@PB_W@@QAEAAPB_WI@Z		; List<wchar_t const *>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _strName$24[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 1045 :                 }

	lea	ecx, DWORD PTR _sourceNames$12[ebp]
	call	??1?$List@PB_W@@QAE@XZ			; List<wchar_t const *>::~List<wchar_t const *>

; 1046 :                 else

	jmp	SHORT $LN35@TrackModif
$LN36@TrackModif:

; 1047 :                     strName = ci->strName;

	mov	eax, DWORD PTR _ci$27[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _strName$24[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
$LN35@TrackModif:

; 1048 : 
; 1049 :                 GetNewSourceName(strName);

	lea	ecx, DWORD PTR _strName$24[ebp]
	push	ecx
	call	?GetNewSourceName@OBS@@CAXAAVString@@@Z	; OBS::GetNewSourceName
	add	esp, 4

; 1050 : 
; 1051 :                 if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterSourceNameDialogProc, (LPARAM)&strName) == IDOK)

	lea	edx, DWORD PTR _strName$24[ebp]
	push	edx
	push	OFFSET ?EnterSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSourceNameDialogProc
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	push	122					; 0000007aH
	mov	ecx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	ecx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	$LN27@TrackModif

; 1052 :                 {
; 1053 :                     XElement *curSceneElement = App->sceneElement;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+212]
	mov	DWORD PTR _curSceneElement$23[ebp], eax

; 1054 :                     XElement *sources = curSceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712712
	mov	ecx, DWORD PTR _curSceneElement$23[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sources$26[ebp], eax

; 1055 :                     if(!sources)

	cmp	DWORD PTR _sources$26[ebp], 0
	jne	SHORT $LN33@TrackModif

; 1056 :                         sources = curSceneElement->CreateElement(TEXT("sources"));

	push	OFFSET $SG4294712711
	mov	ecx, DWORD PTR _curSceneElement$23[ebp]
	call	DWORD PTR __imp_?CreateElement@XElement@@QAEPAV1@PB_W@Z
	mov	DWORD PTR _sources$26[ebp], eax
$LN33@TrackModif:

; 1057 :                     XElement *newSourceElement = sources->InsertElement(0, strName);

	lea	ecx, DWORD PTR _strName$24[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	0
	mov	ecx, DWORD PTR _sources$26[ebp]
	call	DWORD PTR __imp_?InsertElement@XElement@@QAEPAV1@IPB_W@Z
	mov	DWORD PTR _newSourceElement$28[ebp], eax

; 1058 :                     newSourceElement->SetInt(TEXT("render"), 1);

	push	1
	push	OFFSET $SG4294712710
	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 1059 : 
; 1060 :                     if(ret >= ID_LISTBOX_GLOBALSOURCE)

	cmp	DWORD PTR _ret$[ebp], 5000		; 00001388H
	jl	$LN32@TrackModif

; 1061 :                     {
; 1062 :                         newSourceElement->SetString(TEXT("class"), TEXT("GlobalSource"));

	push	OFFSET $SG4294712709
	push	OFFSET $SG4294712708
	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 1063 :                                 
; 1064 :                         List<CTSTR> sourceNames;

	lea	ecx, DWORD PTR _sourceNames$16[ebp]
	call	??0?$List@PB_W@@QAE@XZ			; List<wchar_t const *>::List<wchar_t const *>

; 1065 :                         App->GetGlobalSourceNames(sourceNames);

	push	0
	lea	ecx, DWORD PTR _sourceNames$16[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSourceNames@OBS@@AAEXAAV?$List@PB_W@@_N@Z ; OBS::GetGlobalSourceNames

; 1066 : 
; 1067 :                         CTSTR lpName = sourceNames[ret-ID_LISTBOX_GLOBALSOURCE];

	mov	edx, DWORD PTR _ret$[ebp]
	sub	edx, 5000				; 00001388H
	push	edx
	lea	ecx, DWORD PTR _sourceNames$16[ebp]
	call	??A?$List@PB_W@@QAEAAPB_WI@Z		; List<wchar_t const *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _lpName$20[ebp], eax

; 1068 : 
; 1069 :                         XElement *data = newSourceElement->CreateElement(TEXT("data"));

	push	OFFSET $SG4294712707
	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	call	DWORD PTR __imp_?CreateElement@XElement@@QAEPAV1@PB_W@Z
	mov	DWORD PTR _data$10[ebp], eax

; 1070 :                         data->SetString(TEXT("name"), lpName);

	mov	ecx, DWORD PTR _lpName$20[ebp]
	push	ecx
	push	OFFSET $SG4294712706
	mov	ecx, DWORD PTR _data$10[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 1071 : 
; 1072 :                         XElement *globalElement = App->GetGlobalSourceElement(lpName);

	mov	edx, DWORD PTR _lpName$20[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSourceElement@OBS@@AAEPAVXElement@@PB_W@Z ; OBS::GetGlobalSourceElement
	mov	DWORD PTR _globalElement$21[ebp], eax

; 1073 :                         if(globalElement)

	cmp	DWORD PTR _globalElement$21[ebp], 0
	je	SHORT $LN31@TrackModif

; 1074 :                         {
; 1075 :                             newSourceElement->SetInt(TEXT("cx"), globalElement->GetInt(TEXT("cx"), 100));

	push	100					; 00000064H
	push	OFFSET $SG4294712705
	mov	ecx, DWORD PTR _globalElement$21[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	push	eax
	push	OFFSET $SG4294712704
	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 1076 :                             newSourceElement->SetInt(TEXT("cy"), globalElement->GetInt(TEXT("cy"), 100));

	push	100					; 00000064H
	push	OFFSET $SG4294712703
	mov	ecx, DWORD PTR _globalElement$21[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	push	eax
	push	OFFSET $SG4294712702
	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z
$LN31@TrackModif:

; 1077 :                         }
; 1078 :                     }

	lea	ecx, DWORD PTR _sourceNames$16[ebp]
	call	??1?$List@PB_W@@QAE@XZ			; List<wchar_t const *>::~List<wchar_t const *>

; 1079 :                     else

	jmp	SHORT $LN28@TrackModif
$LN32@TrackModif:

; 1080 :                     {
; 1081 :                         newSourceElement->SetString(TEXT("class"), ci->strClass);

	mov	ecx, DWORD PTR _ci$27[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712701
	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 1082 :                         if(ci->configProc)

	mov	eax, DWORD PTR _ci$27[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN28@TrackModif

; 1083 :                         {
; 1084 :                             if(!ci->configProc(newSourceElement, true))

	push	1
	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	push	ecx
	mov	edx, DWORD PTR _ci$27[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN28@TrackModif

; 1085 :                             {
; 1086 :                                 sources->RemoveElement(newSourceElement);

	mov	edx, DWORD PTR _newSourceElement$28[ebp]
	push	edx
	mov	ecx, DWORD PTR _sources$26[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z

; 1087 :                                 App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 1088 :                                 break;

	lea	ecx, DWORD PTR _strName$24[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN52@TrackModif
$LN28@TrackModif:

; 1089 :                             }
; 1090 :                         }
; 1091 :                     }
; 1092 : 
; 1093 :                     if(App->sceneElement == curSceneElement)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+212]
	cmp	ecx, DWORD PTR _curSceneElement$23[ebp]
	jne	$LN27@TrackModif

; 1094 :                     {
; 1095 :                         if(App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	SHORT $LN26@TrackModif

; 1096 :                         {
; 1097 :                             App->EnterSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 1098 :                             App->scene->InsertImageSource(0, newSourceElement);

	mov	ecx, DWORD PTR _newSourceElement$28[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 1099 :                             App->LeaveSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex
$LN26@TrackModif:

; 1100 :                         }
; 1101 : 
; 1102 :                         UINT numSources = sources->NumElements();

	push	0
	mov	ecx, DWORD PTR _sources$26[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$13[ebp], eax

; 1103 : 
; 1104 :                         // clear selection/focus for all items before adding the new item
; 1105 :                         ListView_SetItemState(hwndSources , -1 , 0, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$2[ebp+16], 3
	mov	DWORD PTR __macro_lvi$2[ebp+12], 0
	lea	ecx, DWORD PTR __macro_lvi$2[ebp]
	push	ecx
	push	-1
	push	4139					; 0000102bH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 1106 :                         ListView_SetItemCount(hwndSources, numSources);

	push	0
	mov	eax, DWORD PTR _numSources$13[ebp]
	push	eax
	push	4143					; 0000102fH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1107 :                                 
; 1108 :                         App->bChangingSources = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 1

; 1109 :                         App->InsertSourceItem(0, (LPWSTR)strName.Array(), true);

	push	1
	lea	ecx, DWORD PTR _strName$24[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 1110 :                         App->bChangingSources = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 0

; 1111 : 
; 1112 :                         SetFocus(hwndSources);

	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SetFocus@4

; 1113 :                                 
; 1114 :                         // make sure the added item is visible/selected/focused and selection mark moved to it.
; 1115 :                         ListView_EnsureVisible(hwndSources, 0, false);

	push	0
	push	0
	push	4115					; 00001013H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1116 :                         ListView_SetItemState(hwndSources, 0, LVIS_SELECTED | LVIS_FOCUSED, LVIS_SELECTED | LVIS_FOCUSED);

	mov	DWORD PTR __macro_lvi$3[ebp+16], 3
	mov	DWORD PTR __macro_lvi$3[ebp+12], 3
	lea	ecx, DWORD PTR __macro_lvi$3[ebp]
	push	ecx
	push	0
	push	4139					; 0000102bH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 1117 :                         ListView_SetSelectionMark(hwndSources, 0);

	push	0
	push	0
	push	4163					; 00001043H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1118 : 
; 1119 :                         App->ReportSourcesAddedOrRemoved();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+136]
	call	eax
$LN27@TrackModif:

; 1120 :                     }
; 1121 :                 }
; 1122 : 
; 1123 :                 App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 1124 :             }

	lea	ecx, DWORD PTR _strName$24[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN39@TrackModif:

; 1125 :             break;

	jmp	$LN52@TrackModif
$LN25@TrackModif:

; 1126 : 
; 1127 :         case ID_LISTBOX_REMOVE:
; 1128 :             App->DeleteItems();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?DeleteItems@OBS@@AAEXXZ		; OBS::DeleteItems

; 1129 :             break;

	jmp	$LN52@TrackModif
$LN24@TrackModif:

; 1130 : 
; 1131 :         case ID_LISTBOX_RENAME:
; 1132 :             {
; 1133 :                 if (!selectedElement)

	cmp	DWORD PTR _selectedElement$[ebp], 0
	jne	SHORT $LN23@TrackModif

; 1134 :                     break;

	jmp	$LN52@TrackModif
$LN23@TrackModif:

; 1135 : 
; 1136 :                 App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 1137 : 
; 1138 :                 String strName = selectedElement->GetName();

	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	lea	ecx, DWORD PTR _strName$17[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1139 :                 TSTR oldStrName = sdup(strName.Array());

	lea	ecx, DWORD PTR _strName$17[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?sdup@@YGPA_WPB_W@Z
	mov	DWORD PTR _oldStrName$19[ebp], eax

; 1140 :                 if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterSourceNameDialogProc, (LPARAM)&strName) == IDOK)

	lea	ecx, DWORD PTR _strName$17[ebp]
	push	ecx
	push	OFFSET ?EnterSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSourceNameDialogProc
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	push	122					; 0000007aH
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	$LN22@TrackModif

; 1141 :                 {
; 1142 :                     int curSel = (int)SendMessage(hwndSources, LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _curSel$8[ebp], eax

; 1143 :                     ListView_SetItemText(hwndSources, curSel, 0, strName.Array());

	mov	DWORD PTR __macro_lvi$1[ebp+8], 0
	lea	ecx, DWORD PTR _strName$17[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR __macro_lvi$1[ebp+20], eax
	lea	edx, DWORD PTR __macro_lvi$1[ebp]
	push	edx
	mov	eax, DWORD PTR _curSel$8[ebp]
	push	eax
	push	4212					; 00001074H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1144 :                     selectedElement->SetName(strName);

	lea	ecx, DWORD PTR _strName$17[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?SetName@XBaseItem@@QAEXPB_W@Z

; 1145 :                             
; 1146 :                     App->ReportSourceChanged(oldStrName, selectedElement);

	mov	edx, DWORD PTR _selectedElement$[ebp]
	push	edx
	mov	eax, DWORD PTR _oldStrName$19[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+132]
	call	eax

; 1147 :                     Free((void*)oldStrName);

	mov	ecx, DWORD PTR _oldStrName$19[ebp]
	push	ecx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 1148 :                             
; 1149 :                     ListView_SetColumnWidth(hwndSources, 0, LVSCW_AUTOSIZE_USEHEADER);

	push	65534					; 0000fffeH
	push	0
	push	4126					; 0000101eH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 1150 :                     ListView_SetColumnWidth(hwndSources, 1, LVSCW_AUTOSIZE_USEHEADER);

	push	65534					; 0000fffeH
	push	1
	push	4126					; 0000101eH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN22@TrackModif:

; 1151 :                 }
; 1152 : 
; 1153 :                 App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 1154 :                 break;

	lea	ecx, DWORD PTR _strName$17[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN52@TrackModif
$LN21@TrackModif:

; 1155 :             }
; 1156 : 
; 1157 :         case ID_LISTBOX_CONFIG:
; 1158 :             {
; 1159 :                 App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 1160 : 
; 1161 :                 List<SceneItem*> selectedSceneItems;

	lea	ecx, DWORD PTR _selectedSceneItems$22[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1162 : 
; 1163 :                 if(App->scene)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	SHORT $LN20@TrackModif

; 1164 :                     App->scene->GetSelectedItems(selectedSceneItems);

	lea	edx, DWORD PTR _selectedSceneItems$22[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z
$LN20@TrackModif:

; 1165 : 
; 1166 :                 ImageSource *source = NULL;

	mov	DWORD PTR _source$25[ebp], 0

; 1167 :                 Vect2 multiple;

	lea	ecx, DWORD PTR _multiple$7[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@XZ

; 1168 : 
; 1169 :                 if(App->bRunning && selectedSceneItems.Num())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+622]
	test	edx, edx
	je	$LN18@TrackModif
	lea	ecx, DWORD PTR _selectedSceneItems$22[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	$LN18@TrackModif

; 1170 :                 {
; 1171 :                     source = selectedSceneItems[0]->GetSource();

	push	0
	lea	ecx, DWORD PTR _selectedSceneItems$22[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	mov	DWORD PTR _source$25[ebp], eax

; 1172 :                     if(source)

	cmp	DWORD PTR _source$25[ebp], 0
	je	$LN18@TrackModif

; 1173 :                     {
; 1174 :                         Vect2 curSize = Vect2(selectedElement->GetFloat(TEXT("cx"), 32.0f), selectedElement->GetFloat(TEXT("cy"), 32.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712700
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712699
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _curSize$5[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 1175 :                         Vect2 baseSize = source->GetSize();

	lea	eax, DWORD PTR _baseSize$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$25[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _source$25[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 1176 : 
; 1177 :                         multiple = curSize/baseSize;

	lea	ecx, DWORD PTR _baseSize$6[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	ecx, DWORD PTR _curSize$5[ebp]
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z
	push	eax
	lea	ecx, DWORD PTR _multiple$7[ebp]
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z
$LN18@TrackModif:

; 1178 :                     }
; 1179 :                 }
; 1180 : 
; 1181 :                 if(curClassInfo && curClassInfo->configProc && curClassInfo->configProc(selectedElement, false))

	cmp	DWORD PTR _curClassInfo$[ebp], 0
	je	$LN16@TrackModif
	mov	eax, DWORD PTR _curClassInfo$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	$LN16@TrackModif
	push	0
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curClassInfo$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN16@TrackModif

; 1182 :                 {
; 1183 : 
; 1184 :                     if(App->bRunning && selectedSceneItems.Num())

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	$LN16@TrackModif
	lea	ecx, DWORD PTR _selectedSceneItems$22[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	$LN16@TrackModif

; 1185 :                     {
; 1186 :                         App->EnterSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 1187 : 
; 1188 :                         if(source)

	cmp	DWORD PTR _source$25[ebp], 0
	je	$LN15@TrackModif

; 1189 :                         {
; 1190 :                             Vect2 newSize = Vect2(selectedElement->GetFloat(TEXT("cx"), 32.0f), selectedElement->GetFloat(TEXT("cy"), 32.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712698
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712697
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?GetFloat@XElement@@QBEMPB_WM@Z
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _newSize$14[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z

; 1191 :                             newSize *= multiple;

	lea	ecx, DWORD PTR _multiple$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _newSize$14[ebp]
	call	DWORD PTR __imp_??XVect2@@QAEAAU0@ABU0@@Z

; 1192 : 
; 1193 :                             selectedElement->SetFloat(TEXT("cx"), newSize.x);

	push	ecx
	movss	xmm0, DWORD PTR _newSize$14[ebp]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712696
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 1194 :                             selectedElement->SetFloat(TEXT("cy"), newSize.y);

	push	ecx
	movss	xmm0, DWORD PTR _newSize$14[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712695
	mov	ecx, DWORD PTR _selectedElement$[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 1195 : 
; 1196 :                             selectedSceneItems[0]->GetSource()->UpdateSettings();

	push	0
	lea	ecx, DWORD PTR _selectedSceneItems$22[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	mov	DWORD PTR tv559[ebp], eax
	mov	edx, DWORD PTR tv559[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv559[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN15@TrackModif:

; 1197 :                         }
; 1198 : 
; 1199 :                         selectedSceneItems[0]->Update();

	push	0
	lea	ecx, DWORD PTR _selectedSceneItems$22[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?Update@SceneItem@@QAEXXZ

; 1200 : 
; 1201 :                         App->LeaveSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex
$LN16@TrackModif:

; 1202 :                     }
; 1203 :                 }
; 1204 : 
; 1205 :                 App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 1206 :             }

	lea	ecx, DWORD PTR _selectedSceneItems$22[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>

; 1207 :             break;

	jmp	$LN52@TrackModif
$LN14@TrackModif:

; 1208 : 
; 1209 :         case ID_LISTBOX_MOVEUP:
; 1210 :             App->MoveSourcesUp();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesUp@OBS@@AAEXXZ		; OBS::MoveSourcesUp

; 1211 :             break;

	jmp	$LN52@TrackModif
$LN13@TrackModif:

; 1212 : 
; 1213 :         case ID_LISTBOX_MOVEDOWN:
; 1214 :             App->MoveSourcesDown();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesDown@OBS@@AAEXXZ		; OBS::MoveSourcesDown

; 1215 :             break;

	jmp	$LN52@TrackModif
$LN12@TrackModif:

; 1216 : 
; 1217 :         case ID_LISTBOX_MOVETOTOP:
; 1218 :             App->MoveSourcesToTop();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesToTop@OBS@@AAEXXZ		; OBS::MoveSourcesToTop

; 1219 :             break;

	jmp	$LN52@TrackModif
$LN11@TrackModif:

; 1220 : 
; 1221 :         case ID_LISTBOX_MOVETOBOTTOM:
; 1222 :             App->MoveSourcesToBottom();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveSourcesToBottom@OBS@@AAEXXZ	; OBS::MoveSourcesToBottom

; 1223 :             break;

	jmp	$LN52@TrackModif
$LN10@TrackModif:

; 1224 : 
; 1225 :         case ID_LISTBOX_CENTER:
; 1226 :             App->CenterItems(true, true);

	push	1
	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CenterItems@OBS@@AAEX_N0@Z		; OBS::CenterItems

; 1227 :             break;

	jmp	$LN52@TrackModif
$LN9@TrackModif:

; 1228 : 
; 1229 :         case ID_LISTBOX_CENTERHOR:
; 1230 :             App->CenterItems(true, false);

	push	0
	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CenterItems@OBS@@AAEX_N0@Z		; OBS::CenterItems

; 1231 :             break;

	jmp	SHORT $LN52@TrackModif
$LN8@TrackModif:

; 1232 : 
; 1233 :         case ID_LISTBOX_CENTERVER:
; 1234 :             App->CenterItems(false, true);

	push	1
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CenterItems@OBS@@AAEX_N0@Z		; OBS::CenterItems

; 1235 :             break;

	jmp	SHORT $LN52@TrackModif
$LN7@TrackModif:

; 1236 : 
; 1237 :         case ID_LISTBOX_MOVELEFT:
; 1238 :             App->MoveItemsToEdge(-1, 0);

	push	0
	push	-1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 1239 :             break;

	jmp	SHORT $LN52@TrackModif
$LN6@TrackModif:

; 1240 : 
; 1241 :         case ID_LISTBOX_MOVETOP:
; 1242 :             App->MoveItemsToEdge(0, -1);

	push	-1
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 1243 :             break;

	jmp	SHORT $LN52@TrackModif
$LN5@TrackModif:

; 1244 : 
; 1245 :         case ID_LISTBOX_MOVERIGHT:
; 1246 :             App->MoveItemsToEdge(1, 0);

	push	0
	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 1247 :             break;

	jmp	SHORT $LN52@TrackModif
$LN4@TrackModif:

; 1248 : 
; 1249 :         case ID_LISTBOX_MOVEBOTTOM:
; 1250 :             App->MoveItemsToEdge(0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?MoveItemsToEdge@OBS@@AAEXHH@Z		; OBS::MoveItemsToEdge

; 1251 :             break;

	jmp	SHORT $LN52@TrackModif
$LN3@TrackModif:

; 1252 : 
; 1253 :         case ID_LISTBOX_FITTOSCREEN:
; 1254 :             App->FitItemsToScreen();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?FitItemsToScreen@OBS@@AAEXXZ		; OBS::FitItemsToScreen

; 1255 :             break;

	jmp	SHORT $LN52@TrackModif
$LN2@TrackModif:

; 1256 : 
; 1257 :         case ID_LISTBOX_RESETSIZE:
; 1258 :             App->ResetItemSizes();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResetItemSizes@OBS@@AAEXXZ		; OBS::ResetItemSizes

; 1259 :             break;

	jmp	SHORT $LN52@TrackModif
$LN1@TrackModif:

; 1260 : 
; 1261 :         case ID_LISTBOX_RESETCROP:
; 1262 :             App->ResetItemCrops();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResetItemCrops@OBS@@AAEXXZ		; OBS::ResetItemCrops
$LN52@TrackModif:

; 1263 :             break;
; 1264 :     }
; 1265 : }

	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN69@TrackModif:
	DD	$LN25@TrackModif
	DD	$LN14@TrackModif
	DD	$LN13@TrackModif
	DD	$LN12@TrackModif
	DD	$LN11@TrackModif
	DD	$LN10@TrackModif
	DD	$LN9@TrackModif
	DD	$LN8@TrackModif
	DD	$LN7@TrackModif
	DD	$LN6@TrackModif
	DD	$LN5@TrackModif
	DD	$LN4@TrackModif
	DD	$LN3@TrackModif
	DD	$LN2@TrackModif
	DD	$LN1@TrackModif
	DD	$LN24@TrackModif
	DD	$LN44@TrackModif
	DD	$LN44@TrackModif
	DD	$LN21@TrackModif
	DD	$LN51@TrackModif
	DD	$LN50@TrackModif
	DD	$LN47@TrackModif
	DD	$LN46@TrackModif
	DD	$LN45@TrackModif
?TrackModifyListbox@OBS@@AAEXPAUHWND__@@H@Z ENDP	; OBS::TrackModifyListbox
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?AppendModifyListbox@OBS@@AAEXPAUHWND__@@PAUHMENU__@@HH_N@Z
_TEXT	SEGMENT
_strConfig$1 = -252					; size = 8
_this$ = -244						; size = 4
_strCopy$2 = -240					; size = 8
_strRename$3 = -232					; size = 8
_strCopyTo$4 = -224					; size = 8
_strPositionSize$5 = -216				; size = 8
_strFitToScreen$6 = -208				; size = 8
_strMoveRightOfCanvas$7 = -200				; size = 8
_strRemove$8 = -192					; size = 8
_strResetCrop$9 = -184					; size = 8
_selectedID$10 = -176					; size = 4
_strMoveLeftOfCanvas$11 = -172				; size = 8
_strMoveUp$12 = -164					; size = 8
_strMoveTopOfCanvas$13 = -156				; size = 8
_strMoveDown$14 = -148					; size = 8
_strMoveBottomOfCanvas$15 = -140			; size = 8
_strMoveTop$16 = -132					; size = 8
_strResize$17 = -124					; size = 8
_strMoveToBottom$18 = -116				; size = 8
_sourcesElement$19 = -108				; size = 4
_strCenter$20 = -104					; size = 8
_numSelected$21 = -96					; size = 4
_strCenterHor$22 = -92					; size = 8
_strCenterVer$23 = -84					; size = 8
_strAdd$24 = -76					; size = 8
_hmenuGlobals$25 = -68					; size = 4
_hMenuCopyTo$26 = -64					; size = 4
tv549 = -60						; size = 4
_selectedElement$27 = -56				; size = 4
_numSelected$28 = -52					; size = 4
_sourceNames$29 = -48					; size = 8
_sceneCollectionList$30 = -40				; size = 8
_hmenuAdd$31 = -32					; size = 4
_curClassInfo$32 = -28					; size = 4
_i$33 = -24						; size = 4
_j$34 = -20						; size = 4
_k$35 = -16						; size = 4
_hMenuOrder$36 = -12					; size = 4
_i$37 = -8						; size = 4
_hmenuPositioning$38 = -4				; size = 4
_hwnd$ = 8						; size = 4
_hMenu$ = 12						; size = 4
_id$ = 16						; size = 4
_numItems$ = 20						; size = 4
_bSelected$ = 24					; size = 1
?AppendModifyListbox@OBS@@AAEXPAUHWND__@@PAUHMENU__@@HH_N@Z PROC ; OBS::AppendModifyListbox, COMDAT
; _this$ = ecx

; 1268 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	mov	DWORD PTR _this$[ebp], ecx

; 1269 :     if(GetMenuItemCount(hMenu) > 0 && id == ID_SOURCES)

	mov	eax, DWORD PTR _hMenu$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenuItemCount@4
	test	eax, eax
	jle	SHORT $LN28@AppendModi
	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	SHORT $LN28@AppendModi

; 1270 :         AppendMenu(hMenu, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _hMenu$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16
$LN28@AppendModi:

; 1271 : 
; 1272 :         if(id == ID_SOURCES)

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	$LN27@AppendModi

; 1273 :         {
; 1274 :             HMENU hmenuAdd = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hmenuAdd$31[ebp], eax

; 1275 : 
; 1276 :             for(UINT i=0; i<App->imageSourceClasses.Num(); i++)

	mov	DWORD PTR _i$37[ebp], 0
	jmp	SHORT $LN26@AppendModi
$LN25@AppendModi:
	mov	edx, DWORD PTR _i$37[ebp]
	add	edx, 1
	mov	DWORD PTR _i$37[ebp], edx
$LN26@AppendModi:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	?Num@?$List@UClassInfo@@@@QBEIXZ	; List<ClassInfo>::Num
	cmp	DWORD PTR _i$37[ebp], eax
	jae	$LN24@AppendModi

; 1277 :             {
; 1278 :                 if (App->imageSourceClasses[i].bDeprecated)

	mov	eax, DWORD PTR _i$37[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN23@AppendModi

; 1279 :                     continue;

	jmp	SHORT $LN25@AppendModi
$LN23@AppendModi:

; 1280 : 
; 1281 :                 String strAdd = App->imageSourceClasses[i].strName;

	mov	edx, DWORD PTR _i$37[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _strAdd$24[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z

; 1282 : 
; 1283 :                 if(App->imageSourceClasses[i].strClass == TEXT("GlobalSource"))

	push	OFFSET $SG4294712694
	mov	eax, DWORD PTR _i$37[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	mov	ecx, eax
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	$LN22@AppendModi

; 1284 :                 {
; 1285 :                     List<CTSTR> sourceNames;

	lea	ecx, DWORD PTR _sourceNames$29[ebp]
	call	??0?$List@PB_W@@QAE@XZ			; List<wchar_t const *>::List<wchar_t const *>

; 1286 :                     App->GetGlobalSourceNames(sourceNames);

	push	0
	lea	ecx, DWORD PTR _sourceNames$29[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSourceNames@OBS@@AAEXAAV?$List@PB_W@@_N@Z ; OBS::GetGlobalSourceNames

; 1287 : 
; 1288 :                     if(!sourceNames.Num())

	lea	ecx, DWORD PTR _sourceNames$29[ebp]
	call	?Num@?$List@PB_W@@QBEIXZ		; List<wchar_t const *>::Num
	test	eax, eax
	jne	SHORT $LN21@AppendModi

; 1289 :                         continue;

	lea	ecx, DWORD PTR _sourceNames$29[ebp]
	call	??1?$List@PB_W@@QAE@XZ			; List<wchar_t const *>::~List<wchar_t const *>
	lea	ecx, DWORD PTR _strAdd$24[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN25@AppendModi
$LN21@AppendModi:

; 1290 : 
; 1291 :                     HMENU hmenuGlobals = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hmenuGlobals$25[ebp], eax

; 1292 : 
; 1293 :                     for(UINT j=0; j<sourceNames.Num(); j++)

	mov	DWORD PTR _j$34[ebp], 0
	jmp	SHORT $LN20@AppendModi
$LN19@AppendModi:
	mov	edx, DWORD PTR _j$34[ebp]
	add	edx, 1
	mov	DWORD PTR _j$34[ebp], edx
$LN20@AppendModi:
	lea	ecx, DWORD PTR _sourceNames$29[ebp]
	call	?Num@?$List@PB_W@@QBEIXZ		; List<wchar_t const *>::Num
	cmp	DWORD PTR _j$34[ebp], eax
	jae	SHORT $LN18@AppendModi

; 1294 :                         AppendMenu(hmenuGlobals, MF_STRING, ID_LISTBOX_GLOBALSOURCE+j, sourceNames[j]);

	mov	eax, DWORD PTR _j$34[ebp]
	push	eax
	lea	ecx, DWORD PTR _sourceNames$29[ebp]
	call	??A?$List@PB_W@@QAEAAPB_WI@Z		; List<wchar_t const *>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _j$34[ebp]
	add	edx, 5000				; 00001388H
	push	edx
	push	0
	mov	eax, DWORD PTR _hmenuGlobals$25[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16
	jmp	SHORT $LN19@AppendModi
$LN18@AppendModi:

; 1295 : 
; 1296 :                     AppendMenu(hmenuAdd, MF_STRING|MF_POPUP, (UINT_PTR)hmenuGlobals, strAdd.Array());

	lea	ecx, DWORD PTR _strAdd$24[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hmenuGlobals$25[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _hmenuAdd$31[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1297 :                 }

	lea	ecx, DWORD PTR _sourceNames$29[ebp]
	call	??1?$List@PB_W@@QAE@XZ			; List<wchar_t const *>::~List<wchar_t const *>

; 1298 :                 else

	jmp	SHORT $LN17@AppendModi
$LN22@AppendModi:

; 1299 :                     AppendMenu(hmenuAdd, MF_STRING, ID_LISTBOX_ADD+i, strAdd.Array());

	lea	ecx, DWORD PTR _strAdd$24[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _i$37[ebp]
	add	eax, 25					; 00000019H
	push	eax
	push	0
	mov	ecx, DWORD PTR _hmenuAdd$31[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16
$LN17@AppendModi:

; 1300 :             }

	lea	ecx, DWORD PTR _strAdd$24[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN25@AppendModi
$LN24@AppendModi:

; 1301 : 
; 1302 :             AppendMenu(hMenu, MF_STRING|MF_POPUP, (UINT_PTR)hmenuAdd, Str("Add"));

	push	OFFSET $SG4294712693
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hmenuAdd$31[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _hMenu$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16
$LN27@AppendModi:

; 1303 :         }
; 1304 : 
; 1305 :     if(numItems && bSelected)

	cmp	DWORD PTR _numItems$[ebp], 0
	je	$LN29@AppendModi
	movzx	edx, BYTE PTR _bSelected$[ebp]
	test	edx, edx
	je	$LN29@AppendModi

; 1306 :     {
; 1307 :         String strRemove               = Str("Remove");

	push	OFFSET $SG4294712692
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strRemove$8[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1308 :         String strRename               = Str("Rename");

	push	OFFSET $SG4294712691
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strRename$3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1309 :         String strCopy                 = Str("Copy");

	push	OFFSET $SG4294712690
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strCopy$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1310 :         String strCopyTo               = Str("CopyTo");

	push	OFFSET $SG4294712689
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strCopyTo$4[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1311 :         String strMoveUp               = Str("MoveUp");

	push	OFFSET $SG4294712688
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveUp$12[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1312 :         String strMoveDown             = Str("MoveDown");

	push	OFFSET $SG4294712687
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveDown$14[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1313 :         String strMoveTop              = Str("MoveToTop");

	push	OFFSET $SG4294712686
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveTop$16[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1314 :         String strMoveToBottom         = Str("MoveToBottom");

	push	OFFSET $SG4294712685
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveToBottom$18[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1315 :         String strPositionSize         = Str("Listbox.Positioning");

	push	OFFSET $SG4294712684
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strPositionSize$5[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1316 :         String strCenter               = Str("Listbox.Center");

	push	OFFSET $SG4294712683
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strCenter$20[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1317 :         String strCenterHor            = Str("Listbox.CenterHorizontally");

	push	OFFSET $SG4294712682
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strCenterHor$22[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1318 :         String strCenterVer            = Str("Listbox.CenterVertically");

	push	OFFSET $SG4294712681
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strCenterVer$23[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1319 :         String strMoveLeftOfCanvas     = Str("Listbox.MoveLeft");

	push	OFFSET $SG4294712680
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveLeftOfCanvas$11[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1320 :         String strMoveTopOfCanvas      = Str("Listbox.MoveTop");

	push	OFFSET $SG4294712679
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveTopOfCanvas$13[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1321 :         String strMoveRightOfCanvas    = Str("Listbox.MoveRight");

	push	OFFSET $SG4294712678
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveRightOfCanvas$7[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1322 :         String strMoveBottomOfCanvas   = Str("Listbox.MoveBottom");

	push	OFFSET $SG4294712677
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strMoveBottomOfCanvas$15[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1323 :         String strFitToScreen          = Str("Listbox.FitToScreen");

	push	OFFSET $SG4294712676
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strFitToScreen$6[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1324 :         String strResize               = Str("Listbox.ResetSize");

	push	OFFSET $SG4294712675
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strResize$17[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1325 :         String strResetCrop            = Str("Listbox.ResetCrop");

	push	OFFSET $SG4294712674
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strResetCrop$9[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1326 :         String strConfig               = Str("Listbox.Config");

	push	OFFSET $SG4294712673
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strConfig$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1327 : 
; 1328 :         if(id == ID_SOURCES)

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	$LN15@AppendModi

; 1329 :         {
; 1330 :             strRemove       << TEXT("\tDel");

	push	OFFSET $SG4294712672
	lea	ecx, DWORD PTR _strRemove$8[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1331 :             strMoveUp       << TEXT("\tCtrl-Up");

	push	OFFSET $SG4294712671
	lea	ecx, DWORD PTR _strMoveUp$12[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1332 :             strMoveDown     << TEXT("\tCtrl-Down");

	push	OFFSET $SG4294712670
	lea	ecx, DWORD PTR _strMoveDown$14[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1333 :             strMoveTop      << TEXT("\tCtrl-Home");

	push	OFFSET $SG4294712669
	lea	ecx, DWORD PTR _strMoveTop$16[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1334 :             strMoveToBottom << TEXT("\tCtrl-End");

	push	OFFSET $SG4294712668
	lea	ecx, DWORD PTR _strMoveToBottom$18[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1335 :             strCenter       << TEXT("\tCtrl-C");

	push	OFFSET $SG4294712667
	lea	ecx, DWORD PTR _strCenter$20[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1336 :             strCenterVer    << TEXT("\tCtrl-Shift-C");

	push	OFFSET $SG4294712666
	lea	ecx, DWORD PTR _strCenterVer$23[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1337 :             strCenterHor    << TEXT("\tCtrl-Alt-C");

	push	OFFSET $SG4294712665
	lea	ecx, DWORD PTR _strCenterHor$22[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1338 :             strFitToScreen  << TEXT("\tCtrl-F");

	push	OFFSET $SG4294712664
	lea	ecx, DWORD PTR _strFitToScreen$6[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1339 :             strResize       << TEXT("\tCtrl-R");

	push	OFFSET $SG4294712663
	lea	ecx, DWORD PTR _strResize$17[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1340 :             strMoveLeftOfCanvas << TEXT("\tCtrl-Alt-Left");

	push	OFFSET $SG4294712662
	lea	ecx, DWORD PTR _strMoveLeftOfCanvas$11[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1341 :             strMoveTopOfCanvas << TEXT("\tCtrl-Alt-Up");

	push	OFFSET $SG4294712661
	lea	ecx, DWORD PTR _strMoveTopOfCanvas$13[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1342 :             strMoveRightOfCanvas << TEXT("\tCtrl-Alt-Right");

	push	OFFSET $SG4294712660
	lea	ecx, DWORD PTR _strMoveRightOfCanvas$7[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1343 :             strMoveBottomOfCanvas << TEXT("\tCtrl-Alt-Down");

	push	OFFSET $SG4294712659
	lea	ecx, DWORD PTR _strMoveBottomOfCanvas$15[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 1344 :             strResetCrop    << TEXT("\tCtrl-Alt-R");

	push	OFFSET $SG4294712658
	lea	ecx, DWORD PTR _strResetCrop$9[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
$LN15@AppendModi:

; 1345 :         }
; 1346 : 
; 1347 :         AppendMenu(hMenu, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	edx, DWORD PTR _hMenu$[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1348 : 
; 1349 :         HMENU hMenuOrder = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hMenuOrder$36[ebp], eax

; 1350 : 
; 1351 :         AppendMenu(hMenuOrder, MF_STRING, ID_LISTBOX_MOVEUP,         strMoveUp);

	lea	ecx, DWORD PTR _strMoveUp$12[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	2
	push	0
	mov	eax, DWORD PTR _hMenuOrder$36[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 1352 :         AppendMenu(hMenuOrder, MF_STRING, ID_LISTBOX_MOVEDOWN,       strMoveDown);

	lea	ecx, DWORD PTR _strMoveDown$14[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	3
	push	0
	mov	ecx, DWORD PTR _hMenuOrder$36[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1353 :         AppendMenu(hMenuOrder, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	edx, DWORD PTR _hMenuOrder$36[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1354 :         AppendMenu(hMenuOrder, MF_STRING, ID_LISTBOX_MOVETOTOP,      strMoveTop);

	lea	ecx, DWORD PTR _strMoveTop$16[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	4
	push	0
	mov	eax, DWORD PTR _hMenuOrder$36[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 1355 :         AppendMenu(hMenuOrder, MF_STRING, ID_LISTBOX_MOVETOBOTTOM,   strMoveToBottom);

	lea	ecx, DWORD PTR _strMoveToBottom$18[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	5
	push	0
	mov	ecx, DWORD PTR _hMenuOrder$36[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1356 : 
; 1357 :         AppendMenu(hMenu, MF_STRING|MF_POPUP, (UINT_PTR)hMenuOrder, Str("Order"));

	push	OFFSET $SG4294712657
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hMenuOrder$36[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _hMenu$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1358 : 
; 1359 : 
; 1360 :         if (id == ID_SOURCES)

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	$LN14@AppendModi

; 1361 :         {
; 1362 :             HMENU hmenuPositioning = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hmenuPositioning$38[ebp], eax

; 1363 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_FITTOSCREEN,    strFitToScreen);

	lea	ecx, DWORD PTR _strFitToScreen$6[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	13					; 0000000dH
	push	0
	mov	edx, DWORD PTR _hmenuPositioning$38[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1364 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_RESETSIZE,      strResize);

	lea	ecx, DWORD PTR _strResize$17[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	14					; 0000000eH
	push	0
	mov	eax, DWORD PTR _hmenuPositioning$38[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 1365 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_RESETCROP,      strResetCrop);

	lea	ecx, DWORD PTR _strResetCrop$9[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	15					; 0000000fH
	push	0
	mov	ecx, DWORD PTR _hmenuPositioning$38[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1366 :             AppendMenu(hmenuPositioning, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	edx, DWORD PTR _hmenuPositioning$38[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1367 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_CENTER,         strCenter);

	lea	ecx, DWORD PTR _strCenter$20[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	6
	push	0
	mov	eax, DWORD PTR _hmenuPositioning$38[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 1368 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_CENTERHOR,         strCenterHor);

	lea	ecx, DWORD PTR _strCenterHor$22[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	7
	push	0
	mov	ecx, DWORD PTR _hmenuPositioning$38[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1369 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_CENTERVER,         strCenterVer);

	lea	ecx, DWORD PTR _strCenterVer$23[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	8
	push	0
	mov	edx, DWORD PTR _hmenuPositioning$38[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1370 :             AppendMenu(hmenuPositioning, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _hmenuPositioning$38[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 1371 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_MOVELEFT,         strMoveLeftOfCanvas);

	lea	ecx, DWORD PTR _strMoveLeftOfCanvas$11[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	9
	push	0
	mov	ecx, DWORD PTR _hmenuPositioning$38[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1372 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_MOVETOP,         strMoveTopOfCanvas);

	lea	ecx, DWORD PTR _strMoveTopOfCanvas$13[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	10					; 0000000aH
	push	0
	mov	edx, DWORD PTR _hmenuPositioning$38[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1373 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_MOVERIGHT,         strMoveRightOfCanvas);

	lea	ecx, DWORD PTR _strMoveRightOfCanvas$7[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	11					; 0000000bH
	push	0
	mov	eax, DWORD PTR _hmenuPositioning$38[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 1374 :             AppendMenu(hmenuPositioning, MF_STRING, ID_LISTBOX_MOVEBOTTOM,         strMoveBottomOfCanvas);

	lea	ecx, DWORD PTR _strMoveBottomOfCanvas$15[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	12					; 0000000cH
	push	0
	mov	ecx, DWORD PTR _hmenuPositioning$38[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1375 : 
; 1376 :             AppendMenu(hMenu, MF_STRING|MF_POPUP, (UINT_PTR)hmenuPositioning, strPositionSize.Array());

	lea	ecx, DWORD PTR _strPositionSize$5[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hmenuPositioning$38[ebp]
	push	edx
	push	16					; 00000010H
	mov	eax, DWORD PTR _hMenu$[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16
$LN14@AppendModi:

; 1377 :         }
; 1378 : 
; 1379 :         /////AppendMenu(hMenu, MF_SEPARATOR, 0, 0);
; 1380 :         AppendMenu(hMenu, MF_STRING, ID_LISTBOX_REMOVE,         strRemove);

	lea	ecx, DWORD PTR _strRemove$8[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _hMenu$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1381 : 
; 1382 : 
; 1383 :         UINT numSelected = (id==ID_SOURCES)?(ListView_GetSelectedCount(hwnd)):((UINT)SendMessage(hwnd, LB_GETSELCOUNT, 0, 0));

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	SHORT $LN31@AppendModi
	push	0
	push	0
	push	4146					; 00001032H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR tv549[ebp], eax
	jmp	SHORT $LN32@AppendModi
$LN31@AppendModi:
	push	0
	push	0
	push	400					; 00000190H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR tv549[ebp], eax
$LN32@AppendModi:
	mov	ecx, DWORD PTR tv549[ebp]
	mov	DWORD PTR _numSelected$28[ebp], ecx

; 1384 :         if(id == ID_SCENES || numSelected == 1)

	cmp	DWORD PTR _id$[ebp], 5011		; 00001393H
	je	SHORT $LN12@AppendModi
	cmp	DWORD PTR _numSelected$28[ebp], 1
	jne	SHORT $LN13@AppendModi
$LN12@AppendModi:

; 1385 :         {
; 1386 :             /////AppendMenu(hMenu, MF_SEPARATOR, 0, 0);
; 1387 :             AppendMenu(hMenu, MF_STRING, ID_LISTBOX_RENAME,         strRename);

	lea	ecx, DWORD PTR _strRename$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	16					; 00000010H
	push	0
	mov	edx, DWORD PTR _hMenu$[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16
$LN13@AppendModi:

; 1388 :         }
; 1389 : 
; 1390 :         if(id == ID_SCENES && numSelected)

	cmp	DWORD PTR _id$[ebp], 5011		; 00001393H
	jne	$LN11@AppendModi
	cmp	DWORD PTR _numSelected$28[ebp], 0
	je	$LN11@AppendModi

; 1391 :         {
; 1392 :             HMENU hMenuCopyTo = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hMenuCopyTo$26[ebp], eax

; 1393 :             StringList sceneCollectionList;

	lea	ecx, DWORD PTR _sceneCollectionList$30[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 1394 :             GetSceneCollection(sceneCollectionList);

	lea	eax, DWORD PTR _sceneCollectionList$30[ebp]
	push	eax
	call	?GetSceneCollection@OBS@@SAXAAVStringList@@@Z ; OBS::GetSceneCollection
	add	esp, 4

; 1395 : 
; 1396 :             for(UINT k = 0; k < sceneCollectionList.Num(); k++)

	mov	DWORD PTR _k$35[ebp], 0
	jmp	SHORT $LN10@AppendModi
$LN9@AppendModi:
	mov	ecx, DWORD PTR _k$35[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$35[ebp], ecx
$LN10@AppendModi:
	lea	ecx, DWORD PTR _sceneCollectionList$30[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	DWORD PTR _k$35[ebp], eax
	jae	SHORT $LN8@AppendModi

; 1397 :             {
; 1398 :                 if(sceneCollectionList[k] == App->GetCurrentSceneCollection())

	call	?GetCurrentSceneCollection@OBS@@SAPB_WXZ ; OBS::GetCurrentSceneCollection
	push	eax
	mov	edx, DWORD PTR _k$35[ebp]
	push	edx
	lea	ecx, DWORD PTR _sceneCollectionList$30[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN7@AppendModi

; 1399 :                 {
; 1400 :                     sceneCollectionList.Remove(k);

	mov	eax, DWORD PTR _k$35[ebp]
	push	eax
	lea	ecx, DWORD PTR _sceneCollectionList$30[ebp]
	call	DWORD PTR __imp_?Remove@StringList@@QAEXI@Z
$LN7@AppendModi:

; 1401 :                 }
; 1402 :             }

	jmp	SHORT $LN9@AppendModi
$LN8@AppendModi:

; 1403 : 
; 1404 :             for(UINT i = 0; i < sceneCollectionList.Num(); i++)

	mov	DWORD PTR _i$33[ebp], 0
	jmp	SHORT $LN6@AppendModi
$LN5@AppendModi:
	mov	ecx, DWORD PTR _i$33[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$33[ebp], ecx
$LN6@AppendModi:
	lea	ecx, DWORD PTR _sceneCollectionList$30[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	DWORD PTR _i$33[ebp], eax
	jae	SHORT $LN4@AppendModi

; 1405 :             {
; 1406 :                 AppendMenu(hMenuCopyTo, MF_STRING, ID_LISTBOX_COPYTO + i, sceneCollectionList[i]);

	mov	edx, DWORD PTR _i$33[ebp]
	push	edx
	lea	ecx, DWORD PTR _sceneCollectionList$30[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _i$33[ebp]
	add	eax, 7000				; 00001b58H
	push	eax
	push	0
	mov	ecx, DWORD PTR _hMenuCopyTo$26[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1407 :             }

	jmp	SHORT $LN5@AppendModi
$LN4@AppendModi:

; 1408 : 
; 1409 :             AppendMenu(hMenu, MF_STRING, ID_LISTBOX_COPY,           strCopy);

	lea	ecx, DWORD PTR _strCopy$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	17					; 00000011H
	push	0
	mov	edx, DWORD PTR _hMenu$[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1410 :             AppendMenu(hMenu, MF_STRING|MF_POPUP,(UINT_PTR)hMenuCopyTo,          strCopyTo);

	lea	ecx, DWORD PTR _strCopyTo$4[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _hMenuCopyTo$26[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _hMenu$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1411 :             AppendMenu(hMenu, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	edx, DWORD PTR _hMenu$[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 1412 :             AppendMenu(hMenu, MF_STRING, ID_LISTBOX_HOTKEY, Str("Listbox.SetHotkey"));

	push	OFFSET $SG4294712656
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	18					; 00000012H
	push	0
	mov	ecx, DWORD PTR _hMenu$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1413 :         }

	lea	ecx, DWORD PTR _sceneCollectionList$30[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
$LN11@AppendModi:

; 1414 : 
; 1415 :         if(id == ID_SOURCES)

	cmp	DWORD PTR _id$[ebp], 5013		; 00001395H
	jne	$LN3@AppendModi

; 1416 :         {
; 1417 :             UINT numSelected = (ListView_GetSelectedCount(hwnd));

	push	0
	push	0
	push	4146					; 00001032H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numSelected$21[ebp], eax

; 1418 :             XElement *selectedElement = NULL;

	mov	DWORD PTR _selectedElement$27[ebp], 0

; 1419 :             ClassInfo *curClassInfo = NULL;

	mov	DWORD PTR _curClassInfo$32[ebp], 0

; 1420 :             if(numSelected == 1)

	cmp	DWORD PTR _numSelected$21[ebp], 1
	jne	$LN3@AppendModi

; 1421 :             {
; 1422 :                 UINT selectedID = ListView_GetNextItem(hwnd, -1, LVNI_SELECTED);

	push	2
	push	-1
	push	4108					; 0000100cH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _selectedID$10[ebp], eax

; 1423 :                 
; 1424 :                 XElement *sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712655
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$19[ebp], eax

; 1425 :                 selectedElement = sourcesElement->GetElementByID(selectedID);

	mov	edx, DWORD PTR _selectedID$10[ebp]
	push	edx
	mov	ecx, DWORD PTR _sourcesElement$19[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _selectedElement$27[ebp], eax

; 1426 : 
; 1427 :                 curClassInfo = App->GetImageSourceClass(selectedElement->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712654
	mov	ecx, DWORD PTR _selectedElement$27[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetImageSourceClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetImageSourceClass
	mov	DWORD PTR _curClassInfo$32[ebp], eax

; 1428 :                 if(curClassInfo && curClassInfo->configProc)

	cmp	DWORD PTR _curClassInfo$32[ebp], 0
	je	SHORT $LN3@AppendModi
	mov	eax, DWORD PTR _curClassInfo$32[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@AppendModi

; 1429 :                 {
; 1430 :                     AppendMenu(hMenu, MF_SEPARATOR, 0, 0);

	push	0
	push	0
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _hMenu$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 1431 :                     AppendMenu(hMenu, MF_STRING, ID_LISTBOX_CONFIG, Str("Listbox.Config"));

	push	OFFSET $SG4294712653
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	19					; 00000013H
	push	0
	mov	eax, DWORD PTR _hMenu$[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16
$LN3@AppendModi:

; 1432 :                 }
; 1433 :             }
; 1434 :         }
; 1435 :     }

	lea	ecx, DWORD PTR _strConfig$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strResetCrop$9[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strResize$17[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strFitToScreen$6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveBottomOfCanvas$15[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveRightOfCanvas$7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveTopOfCanvas$13[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveLeftOfCanvas$11[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCenterVer$23[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCenterHor$22[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCenter$20[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strPositionSize$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveToBottom$18[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveTop$16[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveDown$14[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strMoveUp$12[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCopyTo$4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCopy$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strRename$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strRemove$8[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN29@AppendModi:

; 1436 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AppendModifyListbox@OBS@@AAEXPAUHWND__@@PAUHMENU__@@HH_N@Z ENDP ; OBS::AppendModifyListbox
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?DeleteItems@OBS@@AAEXXZ
_TEXT	SEGMENT
_className$1 = -120					; size = 8
$T2 = -112						; size = 8
_globalSourceName$3 = -104				; size = 8
_selectedElements$ = -96				; size = 8
_selectedSceneItems$ = -88				; size = 8
_selectedIDs$ = -80					; size = 8
_item$4 = -72						; size = 4
$T5 = -68						; size = 4
$T6 = -64						; size = 4
_numItems$ = -60					; size = 4
$T7 = -56						; size = 4
_this$ = -52						; size = 4
_id$8 = -48						; size = 4
tv257 = -44						; size = 4
tv218 = -40						; size = 4
_source$9 = -36						; size = 4
_sourcesElement$ = -32					; size = 4
_i$10 = -28						; size = 4
_i$11 = -24						; size = 4
_iPos$ = -20						; size = 4
_i$12 = -16						; size = 4
_i$13 = -12						; size = 4
_hwndSources$ = -8					; size = 4
_globalSourcesRemain$14 = -1				; size = 1
?DeleteItems@OBS@@AAEXXZ PROC				; OBS::DeleteItems, COMDAT
; _this$ = ecx

; 1441 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	DWORD PTR _this$[ebp], ecx

; 1442 :     HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 1443 :     int numItems = ListView_GetItemCount(hwndSources);

	push	0
	push	0
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$[ebp], eax

; 1444 : 
; 1445 :     List<SceneItem*> selectedSceneItems;

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1446 :     if(App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+144], 0
	je	SHORT $LN26@DeleteItem

; 1447 :         App->scene->GetSelectedItems(selectedSceneItems);

	lea	eax, DWORD PTR _selectedSceneItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z
$LN26@DeleteItem:

; 1448 : 
; 1449 :     List<UINT> selectedIDs;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??0?$List@I@@QAE@XZ			; List<unsigned int>::List<unsigned int>

; 1450 :        
; 1451 :     //get selected items
; 1452 :     int iPos = ListView_GetNextItem(hwndSources, -1, LVNI_SELECTED);

	push	2
	push	-1
	push	4108					; 0000100cH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax
$LN25@DeleteItem:

; 1453 :     while (iPos != -1)

	cmp	DWORD PTR _iPos$[ebp], -1
	je	SHORT $LN24@DeleteItem

; 1454 :     {
; 1455 :         selectedIDs.Add((UINT) iPos);

	mov	eax, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR $T7[ebp], eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Add@?$List@I@@QAEIABI@Z		; List<unsigned int>::Add

; 1456 :         iPos = ListView_GetNextItem(hwndSources, iPos, LVNI_SELECTED);

	push	2
	mov	edx, DWORD PTR _iPos$[ebp]
	push	edx
	push	4108					; 0000100cH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax

; 1457 :     }

	jmp	SHORT $LN25@DeleteItem
$LN24@DeleteItem:

; 1458 : 
; 1459 :     XElement *sourcesElement = NULL;

	mov	DWORD PTR _sourcesElement$[ebp], 0

; 1460 :     List<XElement*> selectedElements;

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??0?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::List<XElement *>

; 1461 :     if(numItems)

	cmp	DWORD PTR _numItems$[ebp], 0
	je	SHORT $LN23@DeleteItem

; 1462 :     {
; 1463 :         sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712652
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$[ebp], eax

; 1464 :         for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$11[ebp], 0
	jmp	SHORT $LN22@DeleteItem
$LN21@DeleteItem:
	mov	edx, DWORD PTR _i$11[ebp]
	add	edx, 1
	mov	DWORD PTR _i$11[ebp], edx
$LN22@DeleteItem:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$11[ebp], eax
	jae	SHORT $LN23@DeleteItem

; 1465 :             selectedElements << sourcesElement->GetElementByID(selectedIDs[i]);

	mov	eax, DWORD PTR _i$11[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR $T6[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z ; List<XElement *>::operator<<
	jmp	SHORT $LN21@DeleteItem
$LN23@DeleteItem:

; 1466 :     }
; 1467 : 
; 1468 :     if(selectedIDs.Num())

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	test	eax, eax
	je	$LN19@DeleteItem

; 1469 :     {
; 1470 :         if(OBSMessageBox(hwndMain, Str("DeleteConfirm"), Str("DeleteConfirm.Title"), MB_YESNO) == IDYES)

	push	4
	push	OFFSET $SG4294712651
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712650
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	$LN19@DeleteItem

; 1471 :         {
; 1472 :             if(selectedSceneItems.Num())

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	$LN17@DeleteItem

; 1473 :             {
; 1474 :                 App->EnterSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 1475 : 
; 1476 :                 for(UINT i=0; i<selectedSceneItems.Num(); i++)

	mov	DWORD PTR _i$13[ebp], 0
	jmp	SHORT $LN16@DeleteItem
$LN15@DeleteItem:
	mov	eax, DWORD PTR _i$13[ebp]
	add	eax, 1
	mov	DWORD PTR _i$13[ebp], eax
$LN16@DeleteItem:
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$13[ebp], eax
	jae	$LN14@DeleteItem

; 1477 :                 {
; 1478 :                     bool globalSourcesRemain = false;

	mov	BYTE PTR _globalSourcesRemain$14[ebp], 0

; 1479 : 
; 1480 :                     SceneItem *item = selectedSceneItems[i];

	mov	ecx, DWORD PTR _i$13[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _item$4[ebp], edx

; 1481 :                     XElement *source = selectedSceneItems[i]->GetElement();

	mov	eax, DWORD PTR _i$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _source$9[ebp], eax

; 1482 :                     String className = source->GetString(TEXT("class"));

	push	0
	push	OFFSET $SG4294712649
	mov	ecx, DWORD PTR _source$9[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _className$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1483 : 
; 1484 :                     if(className == "GlobalSource") {

	push	OFFSET $SG4294712648
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR _className$1[ebp]
	call	DWORD PTR __imp_??8String@@QBEHABV0@@Z
	mov	DWORD PTR $T5[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN13@DeleteItem

; 1485 :                         String globalSourceName = source->GetElement(TEXT("data"))->GetString(TEXT("name"));

	push	0
	push	OFFSET $SG4294712646
	push	OFFSET $SG4294712647
	mov	ecx, DWORD PTR _source$9[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _globalSourceName$3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1486 :                         if (App->GetGlobalSource(globalSourceName) != NULL)

	lea	ecx, DWORD PTR _globalSourceName$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSource@OBS@@AAEPAVImageSource@@PB_W@Z ; OBS::GetGlobalSource
	test	eax, eax
	je	SHORT $LN12@DeleteItem

; 1487 :                             App->GetGlobalSource(globalSourceName)->GlobalSourceLeaveScene();

	lea	ecx, DWORD PTR _globalSourceName$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetGlobalSource@OBS@@AAEPAVImageSource@@PB_W@Z ; OBS::GetGlobalSource
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv218[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx
$LN12@DeleteItem:

; 1488 :                     }

	lea	ecx, DWORD PTR _globalSourceName$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN13@DeleteItem:

; 1489 : 
; 1490 :                     App->scene->RemoveImageSource(item);

	mov	eax, DWORD PTR _item$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+144]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1491 :                 }

	lea	ecx, DWORD PTR _className$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN15@DeleteItem
$LN14@DeleteItem:

; 1492 :             }
; 1493 :             else

	jmp	SHORT $LN7@DeleteItem
$LN17@DeleteItem:

; 1494 :             {
; 1495 :                 for(UINT i=0; i<selectedElements.Num(); i++)

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN10@DeleteItem
$LN9@DeleteItem:
	mov	ecx, DWORD PTR _i$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$10[ebp], ecx
$LN10@DeleteItem:
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	?Num@?$List@PAVXElement@@@@QBEIXZ	; List<XElement *>::Num
	cmp	DWORD PTR _i$10[ebp], eax
	jae	SHORT $LN7@DeleteItem

; 1496 :                     sourcesElement->RemoveElement(selectedElements[i]);

	mov	edx, DWORD PTR _i$10[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z ; List<XElement *>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z
	jmp	SHORT $LN9@DeleteItem
$LN7@DeleteItem:

; 1497 :             }
; 1498 : 
; 1499 :             while(selectedIDs.Num())

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	test	eax, eax
	je	$LN6@DeleteItem

; 1500 :             {
; 1501 :                 UINT id = selectedIDs[0];

	push	0
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _id$8[ebp], ecx

; 1502 :                 selectedIDs.Remove(0);

	push	0
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Remove@?$List@I@@QAEXI@Z		; List<unsigned int>::Remove

; 1503 : 
; 1504 :                 for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$12[ebp], 0
	jmp	SHORT $LN5@DeleteItem
$LN4@DeleteItem:
	mov	edx, DWORD PTR _i$12[ebp]
	add	edx, 1
	mov	DWORD PTR _i$12[ebp], edx
$LN5@DeleteItem:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$12[ebp], eax
	jae	SHORT $LN3@DeleteItem

; 1505 :                 {
; 1506 :                     if(selectedIDs[i] > id)

	mov	eax, DWORD PTR _i$12[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _id$8[ebp]
	jbe	SHORT $LN2@DeleteItem

; 1507 :                         selectedIDs[i]--;

	mov	edx, DWORD PTR _i$12[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	DWORD PTR tv257[ebp], eax
	mov	eax, DWORD PTR tv257[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR tv257[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@DeleteItem:

; 1508 :                 }

	jmp	SHORT $LN4@DeleteItem
$LN3@DeleteItem:

; 1509 :                 App->bChangingSources = true;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [eax+705], 1

; 1510 :                 ListView_DeleteItem(hwndSources, id);

	push	0
	mov	ecx, DWORD PTR _id$8[ebp]
	push	ecx
	push	4104					; 00001008H
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 1511 :                 ListView_SetColumnWidth(hwndSources, 0, LVSCW_AUTOSIZE_USEHEADER);

	push	65534					; 0000fffeH
	push	0
	push	4126					; 0000101eH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1512 :                 ListView_SetColumnWidth(hwndSources, 1, LVSCW_AUTOSIZE_USEHEADER);

	push	65534					; 0000fffeH
	push	1
	push	4126					; 0000101eH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1513 :                 App->bChangingSources = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 0

; 1514 :             }

	jmp	$LN7@DeleteItem
$LN6@DeleteItem:

; 1515 : 
; 1516 :             if(selectedSceneItems.Num())

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	SHORT $LN1@DeleteItem

; 1517 :                 App->LeaveSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex
$LN1@DeleteItem:

; 1518 :             ReportSourcesAddedOrRemoved();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	call	eax
$LN19@DeleteItem:

; 1519 :         }
; 1520 :     }
; 1521 : }

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??1?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::~List<XElement *>
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteItems@OBS@@AAEXXZ ENDP				; OBS::DeleteItems
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?SetSourceOrder@OBS@@AAEXAAVStringList@@@Z
_TEXT	SEGMENT
_strName$1 = -48					; size = 8
_source$2 = -40						; size = 4
_numItems$ = -36					; size = 4
tv173 = -32						; size = 4
_sourcesElement$ = -28					; size = 4
_i$3 = -24						; size = 4
_j$4 = -20						; size = 4
_this$ = -16						; size = 4
_hwndSources$ = -12					; size = 4
_id$5 = -8						; size = 4
_checkState$6 = -1					; size = 1
_sourceNames$ = 8					; size = 4
?SetSourceOrder@OBS@@AAEXAAVStringList@@@Z PROC		; OBS::SetSourceOrder, COMDAT
; _this$ = ecx

; 1524 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 1525 :     HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 1526 :     int numItems = ListView_GetItemCount(hwndSources);

	push	0
	push	0
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$[ebp], eax

; 1527 : 
; 1528 :     if(numItems == 0)

	cmp	DWORD PTR _numItems$[ebp], 0
	jne	SHORT $LN11@SetSourceO

; 1529 :         return;

	jmp	$LN12@SetSourceO
$LN11@SetSourceO:

; 1530 : 
; 1531 :     XElement* sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712645
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$[ebp], eax

; 1532 :     
; 1533 :     FREEZE_WND(hwndSources);

	push	0
	push	0
	push	11					; 0000000bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1534 : 
; 1535 :     for(UINT i=0; i<sourceNames.Num(); i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN10@SetSourceO
$LN9@SetSourceO:
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
$LN10@SetSourceO:
	mov	ecx, DWORD PTR _sourceNames$[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	DWORD PTR _i$3[ebp], eax
	jae	$LN8@SetSourceO

; 1536 :     {
; 1537 :         
; 1538 :         /* find id of source by name */
; 1539 :         int id = -1;

	mov	DWORD PTR _id$5[ebp], -1

; 1540 :         for(UINT j = 0; j < sourcesElement->NumElements(); j++)

	mov	DWORD PTR _j$4[ebp], 0
	jmp	SHORT $LN7@SetSourceO
$LN6@SetSourceO:
	mov	edx, DWORD PTR _j$4[ebp]
	add	edx, 1
	mov	DWORD PTR _j$4[ebp], edx
$LN7@SetSourceO:
	push	0
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	cmp	DWORD PTR _j$4[ebp], eax
	jae	SHORT $LN5@SetSourceO

; 1541 :         {
; 1542 :             XElement* source = sourcesElement->GetElementByID(j);

	mov	eax, DWORD PTR _j$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _source$2[ebp], eax

; 1543 :             if(scmp(source->GetName(), sourceNames[i].Array()) == 0)

	mov	ecx, DWORD PTR _i$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _sourceNames$[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _source$2[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN4@SetSourceO

; 1544 :             {
; 1545 :                 id = j;

	mov	edx, DWORD PTR _j$4[ebp]
	mov	DWORD PTR _id$5[ebp], edx

; 1546 :                 break;

	jmp	SHORT $LN5@SetSourceO
$LN4@SetSourceO:

; 1547 :             }
; 1548 :         }

	jmp	SHORT $LN6@SetSourceO
$LN5@SetSourceO:

; 1549 : 
; 1550 :         if(id >= 0)

	cmp	DWORD PTR _id$5[ebp], 0
	jl	$LN3@SetSourceO

; 1551 :         {
; 1552 :             if(App->scene)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+144], 0
	je	SHORT $LN2@SetSourceO

; 1553 :             {
; 1554 :                 App->scene->GetSceneItem(id)->MoveToBottom();

	mov	ecx, DWORD PTR _id$5[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?GetSceneItem@Scene@@QBEPAVSceneItem@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?MoveToBottom@SceneItem@@QAEXXZ

; 1555 :             }
; 1556 :             else

	jmp	SHORT $LN1@SetSourceO
$LN2@SetSourceO:

; 1557 :             {
; 1558 :                 sourcesElement->GetElementByID(id)->MoveToBottom();

	mov	eax, DWORD PTR _id$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?MoveToBottom@XElement@@QAEXXZ
$LN1@SetSourceO:

; 1559 :             }
; 1560 : 
; 1561 :             String strName = GetLVText(hwndSources, id);

	mov	ecx, DWORD PTR _id$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	lea	eax, DWORD PTR _strName$1[ebp]
	push	eax
	call	DWORD PTR __imp_?GetLVText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 1562 :             bool checkState = ListView_GetCheckState(hwndSources, id) > 0;

	push	61440					; 0000f000H
	mov	ecx, DWORD PTR _id$5[ebp]
	push	ecx
	push	4140					; 0000102cH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	shr	eax, 12					; 0000000cH
	sub	eax, 1
	je	SHORT $LN14@SetSourceO
	mov	DWORD PTR tv173[ebp], 1
	jmp	SHORT $LN15@SetSourceO
$LN14@SetSourceO:
	mov	DWORD PTR tv173[ebp], 0
$LN15@SetSourceO:
	mov	al, BYTE PTR tv173[ebp]
	mov	BYTE PTR _checkState$6[ebp], al

; 1563 :             
; 1564 :             bChangingSources = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+705], 1

; 1565 :             ListView_DeleteItem(hwndSources, id);

	push	0
	mov	edx, DWORD PTR _id$5[ebp]
	push	edx
	push	4104					; 00001008H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1566 :             InsertSourceItem(numItems-1, (LPWSTR)strName.Array(), checkState);

	movzx	ecx, BYTE PTR _checkState$6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strName$1[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _numItems$[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 1567 :             bChangingSources = false;    

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+705], 0

; 1568 :         }

	lea	ecx, DWORD PTR _strName$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN3@SetSourceO:

; 1569 :     }

	jmp	$LN9@SetSourceO
$LN8@SetSourceO:

; 1570 : 
; 1571 :     THAW_WND(hwndSources);

	push	0
	push	1
	push	11					; 0000000bH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	push	1157					; 00000485H
	push	0
	push	0
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__RedrawWindow@16

; 1572 : 
; 1573 :     ReportSourceOrderChanged();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	call	eax
$LN12@SetSourceO:

; 1574 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetSourceOrder@OBS@@AAEXAAVStringList@@@Z ENDP		; OBS::SetSourceOrder
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MoveSourcesUp@OBS@@AAEXXZ
_TEXT	SEGMENT
__macro_lvi$1 = -152					; size = 60
_strName$2 = -92					; size = 8
$T3 = -84						; size = 4
_numItems$ = -80					; size = 4
_selectedElements$ = -76				; size = 8
$T4 = -68						; size = 4
_selectionMark$ = -64					; size = 4
_sourcesElement$ = -60					; size = 4
_selectedSceneItems$ = -56				; size = 8
_focusedItem$ = -48					; size = 4
tv218 = -44						; size = 4
_stateFlags$ = -40					; size = 4
tv238 = -36						; size = 4
_i$5 = -32						; size = 4
_iPos$ = -28						; size = 4
_this$ = -24						; size = 4
_checkState$6 = -17					; size = 1
_selectedIDs$ = -16					; size = 8
_hwndSources$ = -8					; size = 4
_i$7 = -4						; size = 4
?MoveSourcesUp@OBS@@AAEXXZ PROC				; OBS::MoveSourcesUp, COMDAT
; _this$ = ecx

; 1578 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1579 :     HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 1580 :     int numItems = ListView_GetItemCount(hwndSources);

	push	0
	push	0
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$[ebp], eax

; 1581 :     UINT focusedItem = -1, selectionMark;

	mov	DWORD PTR _focusedItem$[ebp], -1

; 1582 : 
; 1583 :     List<SceneItem*> selectedSceneItems;

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1584 :     if(App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+144], 0
	je	SHORT $LN20@MoveSource

; 1585 :         App->scene->GetSelectedItems(selectedSceneItems);

	lea	eax, DWORD PTR _selectedSceneItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z
$LN20@MoveSource:

; 1586 : 
; 1587 :     List<UINT> selectedIDs;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??0?$List@I@@QAE@XZ			; List<unsigned int>::List<unsigned int>

; 1588 : 
; 1589 :     selectionMark = ListView_GetSelectionMark(hwndSources);

	push	0
	push	0
	push	4162					; 00001042H
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _selectionMark$[ebp], eax

; 1590 : 
; 1591 :     //get selected items
; 1592 :     int iPos = ListView_GetNextItem(hwndSources, -1, LVNI_SELECTED);

	push	2
	push	-1
	push	4108					; 0000100cH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax
$LN19@MoveSource:

; 1593 :     while (iPos != -1)

	cmp	DWORD PTR _iPos$[ebp], -1
	je	SHORT $LN18@MoveSource

; 1594 :     {
; 1595 :         selectedIDs.Add((UINT) iPos);

	mov	ecx, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Add@?$List@I@@QAEIABI@Z		; List<unsigned int>::Add

; 1596 :         if(ListView_GetItemState(hwndSources, iPos, LVIS_FOCUSED) & LVIS_FOCUSED)

	push	1
	mov	eax, DWORD PTR _iPos$[ebp]
	push	eax
	push	4140					; 0000102cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	and	eax, 1
	je	SHORT $LN17@MoveSource

; 1597 :             focusedItem = iPos;

	mov	edx, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR _focusedItem$[ebp], edx
$LN17@MoveSource:

; 1598 :         iPos = ListView_GetNextItem(hwndSources, iPos, LVNI_SELECTED);

	push	2
	mov	eax, DWORD PTR _iPos$[ebp]
	push	eax
	push	4108					; 0000100cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax

; 1599 :     }

	jmp	SHORT $LN19@MoveSource
$LN18@MoveSource:

; 1600 : 
; 1601 :     if (!selectedSceneItems.Num() && !selectedIDs.Num())

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	jne	SHORT $LN16@MoveSource
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	test	eax, eax
	jne	SHORT $LN16@MoveSource

; 1602 :         return;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
	jmp	$LN21@MoveSource
$LN16@MoveSource:

; 1603 : 
; 1604 :     XElement *sourcesElement = NULL;

	mov	DWORD PTR _sourcesElement$[ebp], 0

; 1605 :     List<XElement*> selectedElements;

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??0?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::List<XElement *>

; 1606 :     if(numItems)

	cmp	DWORD PTR _numItems$[ebp], 0
	je	SHORT $LN15@MoveSource

; 1607 :     {
; 1608 :         sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712644
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$[ebp], eax

; 1609 :         for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN14@MoveSource
$LN13@MoveSource:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN14@MoveSource:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$5[ebp], eax
	jae	SHORT $LN15@MoveSource

; 1610 :             selectedElements << sourcesElement->GetElementByID(selectedIDs[i]);

	mov	ecx, DWORD PTR _i$5[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR $T4[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z ; List<XElement *>::operator<<
	jmp	SHORT $LN13@MoveSource
$LN15@MoveSource:

; 1611 :     }
; 1612 : 
; 1613 :     UINT stateFlags;
; 1614 :     FREEZE_WND(hwndSources);

	push	0
	push	0
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1615 :     for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN11@MoveSource
$LN10@MoveSource:
	mov	edx, DWORD PTR _i$7[ebp]
	add	edx, 1
	mov	DWORD PTR _i$7[ebp], edx
$LN11@MoveSource:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$7[ebp], eax
	jae	$LN9@MoveSource

; 1616 :     {
; 1617 :         if( (i == 0 && selectedIDs[i] > 0) ||
; 1618 :             (i != 0 && selectedIDs[i-1] != selectedIDs[i]-1) )

	cmp	DWORD PTR _i$7[ebp], 0
	jne	SHORT $LN6@MoveSource
	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	cmp	DWORD PTR [eax], 0
	ja	SHORT $LN7@MoveSource
$LN6@MoveSource:
	cmp	DWORD PTR _i$7[ebp], 0
	je	$LN8@MoveSource
	mov	ecx, DWORD PTR _i$7[ebp]
	sub	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	esi, eax
	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	sub	eax, 1
	cmp	DWORD PTR [esi], eax
	je	$LN8@MoveSource
$LN7@MoveSource:

; 1619 :         {
; 1620 :             if(App->scene)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	SHORT $LN5@MoveSource

; 1621 :                 selectedSceneItems[i]->MoveUp();

	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveUp@SceneItem@@QAEXXZ

; 1622 :             else

	jmp	SHORT $LN4@MoveSource
$LN5@MoveSource:

; 1623 :                 selectedElements[i]->MoveUp();

	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z ; List<XElement *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveUp@XElement@@QAEXXZ
$LN4@MoveSource:

; 1624 : 
; 1625 :             String strName = GetLVText(hwndSources, selectedIDs[i]);

	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strName$2[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetLVText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 1626 :             bool checkState = ListView_GetCheckState(hwndSources, selectedIDs[i]) > 0;

	push	61440					; 0000f000H
	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	push	4140					; 0000102cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	shr	eax, 12					; 0000000cH
	sub	eax, 1
	je	SHORT $LN23@MoveSource
	mov	DWORD PTR tv218[ebp], 1
	jmp	SHORT $LN24@MoveSource
$LN23@MoveSource:
	mov	DWORD PTR tv218[ebp], 0
$LN24@MoveSource:
	mov	dl, BYTE PTR tv218[ebp]
	mov	BYTE PTR _checkState$6[ebp], dl

; 1627 :             
; 1628 :             bChangingSources = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+705], 1

; 1629 :             ListView_DeleteItem(hwndSources, selectedIDs[i]);

	push	0
	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	push	4104					; 00001008H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1630 :             InsertSourceItem(--selectedIDs[i], (LPWSTR)strName.Array(), checkState);

	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	DWORD PTR tv238[ebp], eax
	mov	edx, DWORD PTR tv238[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR tv238[ebp]
	mov	DWORD PTR [ecx], eax
	movzx	edx, BYTE PTR _checkState$6[ebp]
	push	edx
	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR tv238[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 1631 : 
; 1632 :             if(focusedItem == selectedIDs[i]+1)

	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	cmp	DWORD PTR _focusedItem$[ebp], ecx
	jne	SHORT $LN3@MoveSource

; 1633 :                 stateFlags = LVIS_SELECTED | LVIS_FOCUSED;

	mov	DWORD PTR _stateFlags$[ebp], 3

; 1634 :             else

	jmp	SHORT $LN2@MoveSource
$LN3@MoveSource:

; 1635 :                 stateFlags = LVIS_SELECTED;

	mov	DWORD PTR _stateFlags$[ebp], 2
$LN2@MoveSource:

; 1636 :             if(selectionMark == selectedIDs[i]+1)

	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	add	eax, 1
	cmp	DWORD PTR _selectionMark$[ebp], eax
	jne	SHORT $LN1@MoveSource

; 1637 :                 ListView_SetSelectionMark(hwndSources, selectedIDs[i]);

	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	push	0
	push	4163					; 00001043H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN1@MoveSource:

; 1638 : 
; 1639 :             ListView_SetItemState(hwndSources, selectedIDs[i], stateFlags, stateFlags);

	mov	ecx, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+16], ecx
	mov	edx, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+12], edx
	lea	eax, DWORD PTR __macro_lvi$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	push	4139					; 0000102bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1640 :             bChangingSources = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+705], 0

; 1641 :             
; 1642 :         }

	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN8@MoveSource:

; 1643 :     }

	jmp	$LN10@MoveSource
$LN9@MoveSource:

; 1644 :     THAW_WND(hwndSources);

	push	0
	push	1
	push	11					; 0000000bH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	push	1157					; 00000485H
	push	0
	push	0
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__RedrawWindow@16

; 1645 : 
; 1646 :     ReportSourceOrderChanged();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	call	eax

; 1647 : }

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??1?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::~List<XElement *>
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN21@MoveSource:
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveSourcesUp@OBS@@AAEXXZ ENDP				; OBS::MoveSourcesUp
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MoveSourcesDown@OBS@@AAEXXZ
_TEXT	SEGMENT
__macro_lvi$1 = -164					; size = 60
_strName$2 = -104					; size = 8
_selectionMark$ = -96					; size = 4
_numSelected$ = -92					; size = 4
_selectedElements$ = -88				; size = 8
$T3 = -80						; size = 4
$T4 = -76						; size = 4
_numItems$ = -72					; size = 4
_lastItem$ = -68					; size = 4
tv228 = -64						; size = 4
_selectedSceneItems$ = -60				; size = 8
_sourcesElement$ = -52					; size = 4
_focusedItem$ = -48					; size = 4
_lastSelectedID$ = -44					; size = 4
_stateFlags$ = -40					; size = 4
tv248 = -36						; size = 4
_i$5 = -32						; size = 4
_iPos$ = -28						; size = 4
_this$ = -24						; size = 4
_checkState$6 = -17					; size = 1
_selectedIDs$ = -16					; size = 8
_hwndSources$ = -8					; size = 4
_i$7 = -4						; size = 4
?MoveSourcesDown@OBS@@AAEXXZ PROC			; OBS::MoveSourcesDown, COMDAT
; _this$ = ecx

; 1650 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1651 :    HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 1652 :     UINT numSelected = ListView_GetSelectedCount(hwndSources);

	push	0
	push	0
	push	4146					; 00001032H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numSelected$[ebp], eax

; 1653 :     int numItems = ListView_GetItemCount(hwndSources);

	push	0
	push	0
	push	4100					; 00001004H
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$[ebp], eax

; 1654 :     int focusedItem = -1, selectionMark;

	mov	DWORD PTR _focusedItem$[ebp], -1

; 1655 : 
; 1656 :     List<SceneItem*> selectedSceneItems;

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1657 :     if(App->scene)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+144], 0
	je	SHORT $LN20@MoveSource

; 1658 :         App->scene->GetSelectedItems(selectedSceneItems);

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z
$LN20@MoveSource:

; 1659 : 
; 1660 :     List<UINT> selectedIDs;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??0?$List@I@@QAE@XZ			; List<unsigned int>::List<unsigned int>

; 1661 : 
; 1662 :     selectionMark = ListView_GetSelectionMark(hwndSources);

	push	0
	push	0
	push	4162					; 00001042H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _selectionMark$[ebp], eax

; 1663 : 
; 1664 :     //get selected items
; 1665 :     int iPos = ListView_GetNextItem(hwndSources, -1, LVNI_SELECTED);

	push	2
	push	-1
	push	4108					; 0000100cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax
$LN19@MoveSource:

; 1666 :     while (iPos != -1)

	cmp	DWORD PTR _iPos$[ebp], -1
	je	SHORT $LN18@MoveSource

; 1667 :     {
; 1668 :         selectedIDs.Add((UINT) iPos);

	mov	edx, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR $T3[ebp], edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Add@?$List@I@@QAEIABI@Z		; List<unsigned int>::Add

; 1669 :         if(ListView_GetItemState(hwndSources, iPos, LVIS_FOCUSED) &  LVIS_FOCUSED)

	push	1
	mov	ecx, DWORD PTR _iPos$[ebp]
	push	ecx
	push	4140					; 0000102cH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	and	eax, 1
	je	SHORT $LN17@MoveSource

; 1670 :             focusedItem = iPos;

	mov	eax, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR _focusedItem$[ebp], eax
$LN17@MoveSource:

; 1671 :         iPos = ListView_GetNextItem(hwndSources, iPos, LVNI_SELECTED);

	push	2
	mov	ecx, DWORD PTR _iPos$[ebp]
	push	ecx
	push	4108					; 0000100cH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax

; 1672 :     }

	jmp	SHORT $LN19@MoveSource
$LN18@MoveSource:

; 1673 : 
; 1674 :     if (!selectedSceneItems.Num() && !selectedIDs.Num())

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	jne	SHORT $LN16@MoveSource
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	test	eax, eax
	jne	SHORT $LN16@MoveSource

; 1675 :         return;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
	jmp	$LN21@MoveSource
$LN16@MoveSource:

; 1676 : 
; 1677 :     XElement *sourcesElement = NULL;

	mov	DWORD PTR _sourcesElement$[ebp], 0

; 1678 :     List<XElement*> selectedElements;

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??0?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::List<XElement *>

; 1679 :     if(numItems)

	cmp	DWORD PTR _numItems$[ebp], 0
	je	SHORT $LN15@MoveSource

; 1680 :     {
; 1681 :         sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712643
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$[ebp], eax

; 1682 :         for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN14@MoveSource
$LN13@MoveSource:
	mov	ecx, DWORD PTR _i$5[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$5[ebp], ecx
$LN14@MoveSource:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$5[ebp], eax
	jae	SHORT $LN15@MoveSource

; 1683 :             selectedElements << sourcesElement->GetElementByID(selectedIDs[i]);

	mov	edx, DWORD PTR _i$5[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z ; List<XElement *>::operator<<
	jmp	SHORT $LN13@MoveSource
$LN15@MoveSource:

; 1684 :     }
; 1685 : 
; 1686 :     UINT lastItem = (UINT)ListView_GetItemCount(hwndSources)-1;

	push	0
	push	0
	push	4100					; 00001004H
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	sub	eax, 1
	mov	DWORD PTR _lastItem$[ebp], eax

; 1687 :     UINT lastSelectedID = numSelected-1;

	mov	eax, DWORD PTR _numSelected$[ebp]
	sub	eax, 1
	mov	DWORD PTR _lastSelectedID$[ebp], eax

; 1688 :     UINT stateFlags;
; 1689 : 
; 1690 :     FREEZE_WND(hwndSources);

	push	0
	push	0
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1691 :     for(int i=(int)lastSelectedID; i>=0; i--)

	mov	edx, DWORD PTR _lastSelectedID$[ebp]
	mov	DWORD PTR _i$7[ebp], edx
	jmp	SHORT $LN11@MoveSource
$LN10@MoveSource:
	mov	eax, DWORD PTR _i$7[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$7[ebp], eax
$LN11@MoveSource:
	cmp	DWORD PTR _i$7[ebp], 0
	jl	$LN9@MoveSource

; 1692 :     {
; 1693 :         if( (i == lastSelectedID && selectedIDs[i] < lastItem) ||
; 1694 :             (i != lastSelectedID && selectedIDs[i+1] != selectedIDs[i]+1) )

	mov	ecx, DWORD PTR _i$7[ebp]
	cmp	ecx, DWORD PTR _lastSelectedID$[ebp]
	jne	SHORT $LN6@MoveSource
	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _lastItem$[ebp]
	jb	SHORT $LN7@MoveSource
$LN6@MoveSource:
	mov	ecx, DWORD PTR _i$7[ebp]
	cmp	ecx, DWORD PTR _lastSelectedID$[ebp]
	je	$LN8@MoveSource
	mov	edx, DWORD PTR _i$7[ebp]
	add	edx, 1
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	esi, eax
	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	cmp	DWORD PTR [esi], ecx
	je	$LN8@MoveSource
$LN7@MoveSource:

; 1695 :         {
; 1696 :             if(App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+144], 0
	je	SHORT $LN5@MoveSource

; 1697 :                 selectedSceneItems[i]->MoveDown();

	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveDown@SceneItem@@QAEXXZ

; 1698 :             else

	jmp	SHORT $LN4@MoveSource
$LN5@MoveSource:

; 1699 :                 selectedElements[i]->MoveDown();

	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z ; List<XElement *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveDown@XElement@@QAEXXZ
$LN4@MoveSource:

; 1700 : 
; 1701 :             String strName = GetLVText(hwndSources, selectedIDs[i]);

	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strName$2[ebp]
	push	edx
	call	DWORD PTR __imp_?GetLVText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 1702 :             bool checkState = ListView_GetCheckState(hwndSources, selectedIDs[i]) > 0;

	push	61440					; 0000f000H
	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	4140					; 0000102cH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	shr	eax, 12					; 0000000cH
	sub	eax, 1
	je	SHORT $LN23@MoveSource
	mov	DWORD PTR tv228[ebp], 1
	jmp	SHORT $LN24@MoveSource
$LN23@MoveSource:
	mov	DWORD PTR tv228[ebp], 0
$LN24@MoveSource:
	mov	al, BYTE PTR tv228[ebp]
	mov	BYTE PTR _checkState$6[ebp], al

; 1703 :             
; 1704 :             bChangingSources = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+705], 1

; 1705 :             ListView_DeleteItem(hwndSources, selectedIDs[i]);

	push	0
	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	push	4104					; 00001008H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1706 :             InsertSourceItem(++selectedIDs[i], (LPWSTR)strName.Array(), checkState);

	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	DWORD PTR tv248[ebp], eax
	mov	eax, DWORD PTR tv248[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv248[ebp]
	mov	DWORD PTR [edx], ecx
	movzx	eax, BYTE PTR _checkState$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR tv248[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 1707 : 
; 1708 :             if(focusedItem == selectedIDs[i]-1)

	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	sub	edx, 1
	cmp	DWORD PTR _focusedItem$[ebp], edx
	jne	SHORT $LN3@MoveSource

; 1709 :                 stateFlags = LVIS_SELECTED | LVIS_FOCUSED;

	mov	DWORD PTR _stateFlags$[ebp], 3

; 1710 :             else

	jmp	SHORT $LN2@MoveSource
$LN3@MoveSource:

; 1711 :                 stateFlags = LVIS_SELECTED;

	mov	DWORD PTR _stateFlags$[ebp], 2
$LN2@MoveSource:

; 1712 :             if(selectionMark == selectedIDs[i]-1)

	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	cmp	DWORD PTR _selectionMark$[ebp], ecx
	jne	SHORT $LN1@MoveSource

; 1713 :                 ListView_SetSelectionMark(hwndSources, selectedIDs[i]);

	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	push	0
	push	4163					; 00001043H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN1@MoveSource:

; 1714 : 
; 1715 :             ListView_SetItemState(hwndSources, selectedIDs[i], stateFlags, stateFlags);

	mov	edx, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+16], edx
	mov	eax, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+12], eax
	lea	ecx, DWORD PTR __macro_lvi$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	push	4139					; 0000102bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1716 :             bChangingSources = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+705], 0

; 1717 :         }

	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN8@MoveSource:

; 1718 :     }

	jmp	$LN10@MoveSource
$LN9@MoveSource:

; 1719 :     THAW_WND(hwndSources);

	push	0
	push	1
	push	11					; 0000000bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	1157					; 00000485H
	push	0
	push	0
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__RedrawWindow@16

; 1720 : 
; 1721 :     ReportSourceOrderChanged();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+128]
	call	edx

; 1722 : }

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??1?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::~List<XElement *>
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN21@MoveSource:
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveSourcesDown@OBS@@AAEXXZ ENDP			; OBS::MoveSourcesDown
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MoveSourcesToTop@OBS@@AAEXXZ
_TEXT	SEGMENT
__macro_lvi$1 = -156					; size = 60
_strName$2 = -96					; size = 8
$T3 = -88						; size = 4
_numItems$ = -84					; size = 4
_selectionMark$ = -80					; size = 4
$T4 = -76						; size = 4
_selectedElements$ = -72				; size = 8
_focusedItem$ = -64					; size = 4
_sourcesElement$ = -60					; size = 4
tv217 = -56						; size = 4
_selectedSceneItems$ = -52				; size = 8
_stateFlags$ = -44					; size = 4
_i$5 = -40						; size = 4
_i$6 = -36						; size = 4
_i$7 = -32						; size = 4
_selectedIDs$ = -28					; size = 8
_this$ = -20						; size = 4
_iPos$ = -16						; size = 4
_checkState$8 = -9					; size = 1
_i$9 = -8						; size = 4
_hwndSources$ = -4					; size = 4
?MoveSourcesToTop@OBS@@AAEXXZ PROC			; OBS::MoveSourcesToTop, COMDAT
; _this$ = ecx

; 1725 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 1726 :     HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 1727 :     int numItems = ListView_GetItemCount(hwndSources);

	push	0
	push	0
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$[ebp], eax

; 1728 :     UINT focusedItem = -1, selectionMark;

	mov	DWORD PTR _focusedItem$[ebp], -1

; 1729 : 
; 1730 :     List<SceneItem*> selectedSceneItems;

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1731 :     if(App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+144], 0
	je	SHORT $LN24@MoveSource

; 1732 :         App->scene->GetSelectedItems(selectedSceneItems);

	lea	eax, DWORD PTR _selectedSceneItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z
$LN24@MoveSource:

; 1733 : 
; 1734 :     List<UINT> selectedIDs;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??0?$List@I@@QAE@XZ			; List<unsigned int>::List<unsigned int>

; 1735 : 
; 1736 :     selectionMark = ListView_GetSelectionMark(hwndSources);

	push	0
	push	0
	push	4162					; 00001042H
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _selectionMark$[ebp], eax

; 1737 : 
; 1738 :     //get selected items
; 1739 :     int iPos = ListView_GetNextItem(hwndSources, -1, LVNI_SELECTED);

	push	2
	push	-1
	push	4108					; 0000100cH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax
$LN23@MoveSource:

; 1740 :     while (iPos != -1)

	cmp	DWORD PTR _iPos$[ebp], -1
	je	SHORT $LN22@MoveSource

; 1741 :     {
; 1742 :         selectedIDs.Add((UINT) iPos);

	mov	ecx, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Add@?$List@I@@QAEIABI@Z		; List<unsigned int>::Add

; 1743 :         if(ListView_GetItemState(hwndSources, iPos, LVIS_FOCUSED) &  LVIS_FOCUSED)

	push	1
	mov	eax, DWORD PTR _iPos$[ebp]
	push	eax
	push	4140					; 0000102cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	and	eax, 1
	je	SHORT $LN21@MoveSource

; 1744 :             focusedItem = iPos;

	mov	edx, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR _focusedItem$[ebp], edx
$LN21@MoveSource:

; 1745 :         iPos = ListView_GetNextItem(hwndSources, iPos, LVNI_SELECTED);

	push	2
	mov	eax, DWORD PTR _iPos$[ebp]
	push	eax
	push	4108					; 0000100cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax

; 1746 :     }

	jmp	SHORT $LN23@MoveSource
$LN22@MoveSource:

; 1747 : 
; 1748 :     if (!selectedSceneItems.Num() && !selectedIDs.Num())

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	jne	SHORT $LN20@MoveSource
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	test	eax, eax
	jne	SHORT $LN20@MoveSource

; 1749 :         return;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
	jmp	$LN25@MoveSource
$LN20@MoveSource:

; 1750 : 
; 1751 :     XElement *sourcesElement = NULL;

	mov	DWORD PTR _sourcesElement$[ebp], 0

; 1752 :     List<XElement*> selectedElements;

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??0?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::List<XElement *>

; 1753 :     if(numItems)

	cmp	DWORD PTR _numItems$[ebp], 0
	je	SHORT $LN19@MoveSource

; 1754 :     {
; 1755 :         sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712642
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$[ebp], eax

; 1756 :         for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN18@MoveSource
$LN17@MoveSource:
	mov	eax, DWORD PTR _i$7[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7[ebp], eax
$LN18@MoveSource:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$7[ebp], eax
	jae	SHORT $LN19@MoveSource

; 1757 :             selectedElements << sourcesElement->GetElementByID(selectedIDs[i]);

	mov	ecx, DWORD PTR _i$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z ; List<XElement *>::operator<<
	jmp	SHORT $LN17@MoveSource
$LN19@MoveSource:

; 1758 :     }
; 1759 : 
; 1760 :     if(App->scene)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	SHORT $LN15@MoveSource

; 1761 :     {
; 1762 :         for(int i=(int)selectedSceneItems.Num()-1; i>=0; i--)

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	sub	eax, 1
	mov	DWORD PTR _i$6[ebp], eax
	jmp	SHORT $LN14@MoveSource
$LN13@MoveSource:
	mov	edx, DWORD PTR _i$6[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$6[ebp], edx
$LN14@MoveSource:
	cmp	DWORD PTR _i$6[ebp], 0
	jl	SHORT $LN12@MoveSource

; 1763 :             selectedSceneItems[i]->MoveToTop();

	mov	eax, DWORD PTR _i$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveToTop@SceneItem@@QAEXXZ
	jmp	SHORT $LN13@MoveSource
$LN12@MoveSource:

; 1764 :     }
; 1765 :     else

	jmp	SHORT $LN11@MoveSource
$LN15@MoveSource:

; 1766 :     {
; 1767 :         for(int i=(int)selectedElements.Num()-1; i>=0; i--)

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	?Num@?$List@PAVXElement@@@@QBEIXZ	; List<XElement *>::Num
	sub	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
	jmp	SHORT $LN10@MoveSource
$LN9@MoveSource:
	mov	ecx, DWORD PTR _i$5[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$5[ebp], ecx
$LN10@MoveSource:
	cmp	DWORD PTR _i$5[ebp], 0
	jl	SHORT $LN11@MoveSource

; 1768 :             selectedElements[i]->MoveToTop();

	mov	edx, DWORD PTR _i$5[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z ; List<XElement *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveToTop@XElement@@QAEXXZ
	jmp	SHORT $LN9@MoveSource
$LN11@MoveSource:

; 1769 :     }
; 1770 : 
; 1771 :     UINT stateFlags;
; 1772 : 
; 1773 :     FREEZE_WND(hwndSources);

	push	0
	push	0
	push	11					; 0000000bH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1774 :     for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$9[ebp], 0
	jmp	SHORT $LN7@MoveSource
$LN6@MoveSource:
	mov	ecx, DWORD PTR _i$9[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$9[ebp], ecx
$LN7@MoveSource:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$9[ebp], eax
	jae	$LN5@MoveSource

; 1775 :     {
; 1776 :         if(selectedIDs[i] != i)

	mov	edx, DWORD PTR _i$9[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _i$9[ebp]
	je	$LN4@MoveSource

; 1777 :         {
; 1778 :             String strName = GetLVText(hwndSources, selectedIDs[i]);

	mov	ecx, DWORD PTR _i$9[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strName$2[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetLVText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 1779 :             bool checkState = ListView_GetCheckState(hwndSources, selectedIDs[i]) > 0;

	push	61440					; 0000f000H
	mov	edx, DWORD PTR _i$9[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	push	4140					; 0000102cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	shr	eax, 12					; 0000000cH
	sub	eax, 1
	je	SHORT $LN27@MoveSource
	mov	DWORD PTR tv217[ebp], 1
	jmp	SHORT $LN28@MoveSource
$LN27@MoveSource:
	mov	DWORD PTR tv217[ebp], 0
$LN28@MoveSource:
	mov	dl, BYTE PTR tv217[ebp]
	mov	BYTE PTR _checkState$8[ebp], dl

; 1780 :             
; 1781 :             bChangingSources = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+705], 1

; 1782 :             ListView_DeleteItem(hwndSources, selectedIDs[i]);

	push	0
	mov	ecx, DWORD PTR _i$9[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	push	4104					; 00001008H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 1783 :             InsertSourceItem(i, (LPWSTR)strName.Array(), checkState);

	movzx	ecx, BYTE PTR _checkState$8[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _i$9[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 1784 :             
; 1785 :             if(focusedItem == selectedIDs[i])

	mov	ecx, DWORD PTR _i$9[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR _focusedItem$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@MoveSource

; 1786 :                 stateFlags = LVIS_SELECTED | LVIS_FOCUSED;

	mov	DWORD PTR _stateFlags$[ebp], 3

; 1787 :             else

	jmp	SHORT $LN2@MoveSource
$LN3@MoveSource:

; 1788 :                 stateFlags = LVIS_SELECTED;

	mov	DWORD PTR _stateFlags$[ebp], 2
$LN2@MoveSource:

; 1789 :             if(selectionMark == selectedIDs[i])

	mov	eax, DWORD PTR _i$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR _selectionMark$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@MoveSource

; 1790 :                 ListView_SetSelectionMark(hwndSources, i);

	mov	edx, DWORD PTR _i$9[ebp]
	push	edx
	push	0
	push	4163					; 00001043H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN1@MoveSource:

; 1791 : 
; 1792 :             ListView_SetItemState(hwndSources, i, stateFlags, stateFlags);

	mov	ecx, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+16], ecx
	mov	edx, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+12], edx
	lea	eax, DWORD PTR __macro_lvi$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$9[ebp]
	push	ecx
	push	4139					; 0000102bH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 1793 :             bChangingSources = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+705], 0

; 1794 :         }

	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN4@MoveSource:

; 1795 :     }

	jmp	$LN6@MoveSource
$LN5@MoveSource:

; 1796 :     THAW_WND(hwndSources);

	push	0
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	push	1157					; 00000485H
	push	0
	push	0
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__RedrawWindow@16

; 1797 : 
; 1798 :     ReportSourceOrderChanged();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	call	eax

; 1799 : }

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??1?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::~List<XElement *>
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN25@MoveSource:
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveSourcesToTop@OBS@@AAEXXZ ENDP			; OBS::MoveSourcesToTop
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MoveSourcesToBottom@OBS@@AAEXXZ
_TEXT	SEGMENT
__macro_lvi$1 = -160					; size = 60
_strName$2 = -100					; size = 8
$T3 = -92						; size = 4
_numItems$ = -88					; size = 4
_selectionMark$ = -84					; size = 4
$T4 = -80						; size = 4
_selectedElements$ = -76				; size = 8
_focusedItem$ = -68					; size = 4
tv222 = -64						; size = 4
_sourcesElement$ = -60					; size = 4
_selectedSceneItems$ = -56				; size = 8
_stateFlags$ = -48					; size = 4
_i$5 = -44						; size = 4
_i$6 = -40						; size = 4
_i$7 = -36						; size = 4
_iPos$ = -32						; size = 4
_selectedIDs$ = -28					; size = 8
_curID$ = -20						; size = 4
_this$ = -16						; size = 4
_checkState$8 = -9					; size = 1
_i$9 = -8						; size = 4
_hwndSources$ = -4					; size = 4
?MoveSourcesToBottom@OBS@@AAEXXZ PROC			; OBS::MoveSourcesToBottom, COMDAT
; _this$ = ecx

; 1802 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 160				; 000000a0H
	mov	DWORD PTR _this$[ebp], ecx

; 1803 :     HWND hwndSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$[ebp], eax

; 1804 :     int numItems = ListView_GetItemCount(hwndSources);

	push	0
	push	0
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _numItems$[ebp], eax

; 1805 :     UINT focusedItem = -1, selectionMark;

	mov	DWORD PTR _focusedItem$[ebp], -1

; 1806 : 
; 1807 :     List<SceneItem*> selectedSceneItems;

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1808 :     if(App->scene)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+144], 0
	je	SHORT $LN24@MoveSource

; 1809 :         App->scene->GetSelectedItems(selectedSceneItems);

	lea	eax, DWORD PTR _selectedSceneItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z
$LN24@MoveSource:

; 1810 : 
; 1811 :     List<UINT> selectedIDs;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??0?$List@I@@QAE@XZ			; List<unsigned int>::List<unsigned int>

; 1812 : 
; 1813 :     selectionMark = ListView_GetSelectionMark(hwndSources);

	push	0
	push	0
	push	4162					; 00001042H
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _selectionMark$[ebp], eax

; 1814 : 
; 1815 :     //get selected items
; 1816 :     int iPos = ListView_GetNextItem(hwndSources, -1, LVNI_SELECTED);

	push	2
	push	-1
	push	4108					; 0000100cH
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax
$LN23@MoveSource:

; 1817 :     while (iPos != -1)

	cmp	DWORD PTR _iPos$[ebp], -1
	je	SHORT $LN22@MoveSource

; 1818 :     {
; 1819 :         selectedIDs.Add((UINT) iPos);

	mov	ecx, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Add@?$List@I@@QAEIABI@Z		; List<unsigned int>::Add

; 1820 :         if(ListView_GetItemState(hwndSources, iPos, LVIS_FOCUSED) &  LVIS_FOCUSED)

	push	1
	mov	eax, DWORD PTR _iPos$[ebp]
	push	eax
	push	4140					; 0000102cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	and	eax, 1
	je	SHORT $LN21@MoveSource

; 1821 :             focusedItem = iPos;

	mov	edx, DWORD PTR _iPos$[ebp]
	mov	DWORD PTR _focusedItem$[ebp], edx
$LN21@MoveSource:

; 1822 :         iPos = ListView_GetNextItem(hwndSources, iPos, LVNI_SELECTED);

	push	2
	mov	eax, DWORD PTR _iPos$[ebp]
	push	eax
	push	4108					; 0000100cH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iPos$[ebp], eax

; 1823 :     }

	jmp	SHORT $LN23@MoveSource
$LN22@MoveSource:

; 1824 : 
; 1825 :     if (!selectedSceneItems.Num() && !selectedIDs.Num())

	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	jne	SHORT $LN20@MoveSource
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	test	eax, eax
	jne	SHORT $LN20@MoveSource

; 1826 :         return;

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
	jmp	$LN25@MoveSource
$LN20@MoveSource:

; 1827 : 
; 1828 :     XElement *sourcesElement = NULL;

	mov	DWORD PTR _sourcesElement$[ebp], 0

; 1829 :     List<XElement*> selectedElements;

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??0?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::List<XElement *>

; 1830 :     if(numItems)

	cmp	DWORD PTR _numItems$[ebp], 0
	je	SHORT $LN19@MoveSource

; 1831 :     {
; 1832 :         sourcesElement = App->sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712641
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+212]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sourcesElement$[ebp], eax

; 1833 :         for(UINT i=0; i<selectedIDs.Num(); i++)

	mov	DWORD PTR _i$6[ebp], 0
	jmp	SHORT $LN18@MoveSource
$LN17@MoveSource:
	mov	eax, DWORD PTR _i$6[ebp]
	add	eax, 1
	mov	DWORD PTR _i$6[ebp], eax
$LN18@MoveSource:
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	cmp	DWORD PTR _i$6[ebp], eax
	jae	SHORT $LN19@MoveSource

; 1834 :             selectedElements << sourcesElement->GetElementByID(selectedIDs[i]);

	mov	ecx, DWORD PTR _i$6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _sourcesElement$[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z ; List<XElement *>::operator<<
	jmp	SHORT $LN17@MoveSource
$LN19@MoveSource:

; 1835 :     }
; 1836 : 
; 1837 :     if(App->scene)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+144], 0
	je	SHORT $LN15@MoveSource

; 1838 :     {
; 1839 :         for(UINT i=0; i<selectedSceneItems.Num(); i++)

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN14@MoveSource
$LN13@MoveSource:
	mov	edx, DWORD PTR _i$7[ebp]
	add	edx, 1
	mov	DWORD PTR _i$7[ebp], edx
$LN14@MoveSource:
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$7[ebp], eax
	jae	SHORT $LN12@MoveSource

; 1840 :             selectedSceneItems[i]->MoveToBottom();

	mov	eax, DWORD PTR _i$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveToBottom@SceneItem@@QAEXXZ
	jmp	SHORT $LN13@MoveSource
$LN12@MoveSource:

; 1841 :     }
; 1842 :     else

	jmp	SHORT $LN11@MoveSource
$LN15@MoveSource:

; 1843 :     {
; 1844 :         for(UINT i=0; i<selectedElements.Num(); i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN10@MoveSource
$LN9@MoveSource:
	mov	ecx, DWORD PTR _i$5[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$5[ebp], ecx
$LN10@MoveSource:
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	?Num@?$List@PAVXElement@@@@QBEIXZ	; List<XElement *>::Num
	cmp	DWORD PTR _i$5[ebp], eax
	jae	SHORT $LN11@MoveSource

; 1845 :             selectedElements[i]->MoveToBottom();

	mov	edx, DWORD PTR _i$5[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z ; List<XElement *>::operator[]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?MoveToBottom@XElement@@QAEXXZ
	jmp	SHORT $LN9@MoveSource
$LN11@MoveSource:

; 1846 :     }
; 1847 : 
; 1848 :     UINT curID = ListView_GetItemCount(hwndSources)-1;

	push	0
	push	0
	push	4100					; 00001004H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	sub	eax, 1
	mov	DWORD PTR _curID$[ebp], eax

; 1849 :     UINT stateFlags;
; 1850 : 
; 1851 :     FREEZE_WND(hwndSources);

	push	0
	push	0
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1852 :     for(int i=int(selectedIDs.Num()-1); i>=0; i--)

	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	sub	eax, 1
	mov	DWORD PTR _i$9[ebp], eax
	jmp	SHORT $LN7@MoveSource
$LN6@MoveSource:
	mov	edx, DWORD PTR _i$9[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$9[ebp], edx
$LN7@MoveSource:
	cmp	DWORD PTR _i$9[ebp], 0
	jl	$LN5@MoveSource

; 1853 :     {
; 1854 :         if(selectedIDs[i] != curID)

	mov	eax, DWORD PTR _i$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _curID$[ebp]
	je	$LN4@MoveSource

; 1855 :         {
; 1856 :             String strName = GetLVText(hwndSources, selectedIDs[i]);

	mov	edx, DWORD PTR _i$9[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	lea	edx, DWORD PTR _strName$2[ebp]
	push	edx
	call	DWORD PTR __imp_?GetLVText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH

; 1857 :             bool checkState = ListView_GetCheckState(hwndSources, selectedIDs[i]) > 0;

	push	61440					; 0000f000H
	mov	eax, DWORD PTR _i$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	4140					; 0000102cH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	shr	eax, 12					; 0000000cH
	sub	eax, 1
	je	SHORT $LN27@MoveSource
	mov	DWORD PTR tv222[ebp], 1
	jmp	SHORT $LN28@MoveSource
$LN27@MoveSource:
	mov	DWORD PTR tv222[ebp], 0
$LN28@MoveSource:
	mov	al, BYTE PTR tv222[ebp]
	mov	BYTE PTR _checkState$8[ebp], al

; 1858 :             
; 1859 :             bChangingSources = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+705], 1

; 1860 :             ListView_DeleteItem(hwndSources, selectedIDs[i]);

	push	0
	mov	edx, DWORD PTR _i$9[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	push	4104					; 00001008H
	mov	ecx, DWORD PTR _hwndSources$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 1861 :             InsertSourceItem(curID, (LPWSTR)strName.Array(), checkState);

	movzx	edx, BYTE PTR _checkState$8[ebp]
	push	edx
	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR _curID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 1862 : 
; 1863 :             if(focusedItem == selectedIDs[i])

	mov	ecx, DWORD PTR _i$9[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR _focusedItem$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@MoveSource

; 1864 :                 stateFlags = LVIS_SELECTED | LVIS_FOCUSED;

	mov	DWORD PTR _stateFlags$[ebp], 3

; 1865 :             else

	jmp	SHORT $LN2@MoveSource
$LN3@MoveSource:

; 1866 :                 stateFlags = LVIS_SELECTED;

	mov	DWORD PTR _stateFlags$[ebp], 2
$LN2@MoveSource:

; 1867 :             if(selectionMark == selectedIDs[i])

	mov	eax, DWORD PTR _i$9[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	ecx, DWORD PTR _selectionMark$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@MoveSource

; 1868 :                 ListView_SetSelectionMark(hwndSources, curID);

	mov	edx, DWORD PTR _curID$[ebp]
	push	edx
	push	0
	push	4163					; 00001043H
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN1@MoveSource:

; 1869 : 
; 1870 :             ListView_SetItemState(hwndSources, curID, stateFlags, stateFlags);

	mov	ecx, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+16], ecx
	mov	edx, DWORD PTR _stateFlags$[ebp]
	mov	DWORD PTR __macro_lvi$1[ebp+12], edx
	lea	eax, DWORD PTR __macro_lvi$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _curID$[ebp]
	push	ecx
	push	4139					; 0000102bH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 1871 :             bChangingSources = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+705], 0

; 1872 :         }

	lea	ecx, DWORD PTR _strName$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN4@MoveSource:

; 1873 : 
; 1874 :         curID--;

	mov	ecx, DWORD PTR _curID$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _curID$[ebp], ecx

; 1875 :     }

	jmp	$LN6@MoveSource
$LN5@MoveSource:

; 1876 :     THAW_WND(hwndSources);

	push	0
	push	1
	push	11					; 0000000bH
	mov	edx, DWORD PTR _hwndSources$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	push	1157					; 00000485H
	push	0
	push	0
	mov	eax, DWORD PTR _hwndSources$[ebp]
	push	eax
	call	DWORD PTR __imp__RedrawWindow@16

; 1877 : 
; 1878 :     ReportSourceOrderChanged();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	call	eax

; 1879 : }

	lea	ecx, DWORD PTR _selectedElements$[ebp]
	call	??1?$List@PAVXElement@@@@QAE@XZ		; List<XElement *>::~List<XElement *>
	lea	ecx, DWORD PTR _selectedIDs$[ebp]
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	lea	ecx, DWORD PTR _selectedSceneItems$[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN25@MoveSource:
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveSourcesToBottom@OBS@@AAEXXZ ENDP			; OBS::MoveSourcesToBottom
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?CenterItems@OBS@@AAEX_N0@Z
_TEXT	SEGMENT
$T1 = -112						; size = 16
$T2 = -96						; size = 16
$T3 = -80						; size = 16
$T4 = -64						; size = 16
_baseSize$5 = -48					; size = 8
_selectedItems$6 = -40					; size = 8
_this$ = -32						; size = 4
tv208 = -28						; size = 4
tv210 = -24						; size = 4
tv204 = -20						; size = 4
tv206 = -16						; size = 4
_itemElement$7 = -12					; size = 4
_i$8 = -8						; size = 4
_item$9 = -4						; size = 4
_horizontal$ = 8					; size = 1
_vertical$ = 12						; size = 1
?CenterItems@OBS@@AAEX_N0@Z PROC			; OBS::CenterItems, COMDAT
; _this$ = ecx

; 1882 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	DWORD PTR _this$[ebp], ecx

; 1883 :     if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN8@CenterItem

; 1884 :     {
; 1885 :         List<SceneItem*> selectedItems;

	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1886 :         App->scene->GetSelectedItems(selectedItems);

	lea	edx, DWORD PTR _selectedItems$6[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 1887 : 
; 1888 :         Vect2 baseSize = App->GetBaseSize();

	lea	ecx, DWORD PTR _baseSize$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize

; 1889 : 
; 1890 :         for(UINT i=0; i<selectedItems.Num(); i++)

	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN7@CenterItem
$LN6@CenterItem:
	mov	edx, DWORD PTR _i$8[ebp]
	add	edx, 1
	mov	DWORD PTR _i$8[ebp], edx
$LN7@CenterItem:
	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$8[ebp], eax
	jae	$LN5@CenterItem

; 1891 :         {
; 1892 :             SceneItem *item = selectedItems[i];

	mov	eax, DWORD PTR _i$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _item$9[ebp], ecx

; 1893 : 
; 1894 :             if (horizontal)

	movzx	edx, BYTE PTR _horizontal$[ebx]
	test	edx, edx
	je	SHORT $LN4@CenterItem

; 1895 :                 item->pos.x = (baseSize.x*0.5f)-((item->size.x + item->GetCrop().x - item->GetCrop().w)*0.5f);

	movss	xmm0, DWORD PTR _baseSize$5[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR tv204[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	xmm0, DWORD PTR [ecx+36]
	addss	xmm0, DWORD PTR [eax]
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR tv206[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv206[ebp]
	subss	xmm0, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR tv204[ebp]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _item$9[ebp]
	movss	DWORD PTR [eax+28], xmm1
$LN4@CenterItem:

; 1896 :             if (vertical)

	movzx	ecx, BYTE PTR _vertical$[ebx]
	test	ecx, ecx
	je	SHORT $LN3@CenterItem

; 1897 :                 item->pos.y = (baseSize.y*0.5f)-((item->size.y + item->GetCrop().y - item->GetCrop().z)*0.5f);

	movss	xmm0, DWORD PTR _baseSize$5[ebp+4]
	mulss	xmm0, DWORD PTR __real@3f000000
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR tv208[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	xmm0, DWORD PTR [ecx+40]
	addss	xmm0, DWORD PTR [eax+4]
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR tv210[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv210[ebp]
	subss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR tv208[ebp]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _item$9[ebp]
	movss	DWORD PTR [eax+32], xmm1
$LN3@CenterItem:

; 1898 : 
; 1899 :             XElement *itemElement = item->GetElement();

	mov	ecx, DWORD PTR _item$9[ebp]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _itemElement$7[ebp], eax

; 1900 :             if (horizontal)

	movzx	ecx, BYTE PTR _horizontal$[ebx]
	test	ecx, ecx
	je	SHORT $LN2@CenterItem

; 1901 :                 itemElement->SetInt(TEXT("x"), int(item->pos.x));

	mov	edx, DWORD PTR _item$9[ebp]
	cvttss2si eax, DWORD PTR [edx+28]
	push	eax
	push	OFFSET $SG4294712640
	mov	ecx, DWORD PTR _itemElement$7[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z
$LN2@CenterItem:

; 1902 :             if (vertical)

	movzx	ecx, BYTE PTR _vertical$[ebx]
	test	ecx, ecx
	je	SHORT $LN1@CenterItem

; 1903 :                 itemElement->SetInt(TEXT("y"), int(item->pos.y));

	mov	edx, DWORD PTR _item$9[ebp]
	cvttss2si eax, DWORD PTR [edx+32]
	push	eax
	push	OFFSET $SG4294712639
	mov	ecx, DWORD PTR _itemElement$7[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z
$LN1@CenterItem:

; 1904 :         }

	jmp	$LN6@CenterItem
$LN5@CenterItem:

; 1905 :     }

	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN8@CenterItem:

; 1906 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	8
?CenterItems@OBS@@AAEX_N0@Z ENDP			; OBS::CenterItems
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MoveItemsToEdge@OBS@@AAEXHH@Z
_TEXT	SEGMENT
$T1 = -112						; size = 16
$T2 = -96						; size = 16
$T3 = -80						; size = 16
$T4 = -64						; size = 16
_baseSize$5 = -40					; size = 8
_selectedItems$6 = -32					; size = 8
_this$ = -24						; size = 4
tv200 = -20						; size = 4
tv198 = -16						; size = 4
_itemElement$7 = -12					; size = 4
_i$8 = -8						; size = 4
_item$9 = -4						; size = 4
_horizontal$ = 8					; size = 4
_vertical$ = 12						; size = 4
?MoveItemsToEdge@OBS@@AAEXHH@Z PROC			; OBS::MoveItemsToEdge, COMDAT
; _this$ = ecx

; 1909 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	DWORD PTR _this$[ebp], ecx

; 1910 :     if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN10@MoveItemsT

; 1911 :     {
; 1912 :         List<SceneItem*> selectedItems;

	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1913 :         App->scene->GetSelectedItems(selectedItems);

	lea	edx, DWORD PTR _selectedItems$6[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 1914 : 
; 1915 :         Vect2 baseSize = App->GetBaseSize();

	lea	ecx, DWORD PTR _baseSize$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize

; 1916 : 
; 1917 :         for(UINT i=0; i<selectedItems.Num(); i++)

	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN9@MoveItemsT
$LN8@MoveItemsT:
	mov	edx, DWORD PTR _i$8[ebp]
	add	edx, 1
	mov	DWORD PTR _i$8[ebp], edx
$LN9@MoveItemsT:
	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$8[ebp], eax
	jae	$LN7@MoveItemsT

; 1918 :         {
; 1919 :             SceneItem *item = selectedItems[i];

	mov	eax, DWORD PTR _i$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _item$9[ebp], ecx

; 1920 : 
; 1921 :             if (horizontal == 1)

	cmp	DWORD PTR _horizontal$[ebx], 1
	jne	SHORT $LN6@MoveItemsT

; 1922 :                 item->pos.x = baseSize.x - item->size.x + item->GetCrop().w;

	mov	edx, DWORD PTR _item$9[ebp]
	movss	xmm0, DWORD PTR _baseSize$5[ebp]
	subss	xmm0, DWORD PTR [edx+36]
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR tv198[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv198[ebp]
	addss	xmm0, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR [ecx+28], xmm0
$LN6@MoveItemsT:

; 1923 :             if (horizontal == -1)

	cmp	DWORD PTR _horizontal$[ebx], -1
	jne	SHORT $LN5@MoveItemsT

; 1924 :                 item->pos.x = -item->GetCrop().x;

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$9[ebp]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [eax]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _item$9[ebp]
	movss	DWORD PTR [eax+28], xmm0
$LN5@MoveItemsT:

; 1925 : 
; 1926 :             if (vertical == 1)

	cmp	DWORD PTR _vertical$[ebx], 1
	jne	SHORT $LN4@MoveItemsT

; 1927 :                 item->pos.y =  baseSize.y - item->size.y + item->GetCrop().z;

	mov	ecx, DWORD PTR _item$9[ebp]
	movss	xmm0, DWORD PTR _baseSize$5[ebp+4]
	subss	xmm0, DWORD PTR [ecx+40]
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR tv200[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv200[ebp]
	addss	xmm0, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _item$9[ebp]
	movss	DWORD PTR [eax+32], xmm0
$LN4@MoveItemsT:

; 1928 :             if (vertical == -1)

	cmp	DWORD PTR _vertical$[ebx], -1
	jne	SHORT $LN3@MoveItemsT

; 1929 :                 item->pos.y = -item->GetCrop().y;

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$9[ebp]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [eax+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, DWORD PTR _item$9[ebp]
	movss	DWORD PTR [edx+32], xmm0
$LN3@MoveItemsT:

; 1930 : 
; 1931 :             XElement *itemElement = item->GetElement();

	mov	ecx, DWORD PTR _item$9[ebp]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _itemElement$7[ebp], eax

; 1932 :             if (horizontal)

	cmp	DWORD PTR _horizontal$[ebx], 0
	je	SHORT $LN2@MoveItemsT

; 1933 :                 itemElement->SetInt(TEXT("x"), int(item->pos.x));

	mov	eax, DWORD PTR _item$9[ebp]
	cvttss2si ecx, DWORD PTR [eax+28]
	push	ecx
	push	OFFSET $SG4294712638
	mov	ecx, DWORD PTR _itemElement$7[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z
$LN2@MoveItemsT:

; 1934 :             if (vertical)

	cmp	DWORD PTR _vertical$[ebx], 0
	je	SHORT $LN1@MoveItemsT

; 1935 :                 itemElement->SetInt(TEXT("y"), int(item->pos.y));

	mov	edx, DWORD PTR _item$9[ebp]
	cvttss2si eax, DWORD PTR [edx+32]
	push	eax
	push	OFFSET $SG4294712637
	mov	ecx, DWORD PTR _itemElement$7[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z
$LN1@MoveItemsT:

; 1936 :         }

	jmp	$LN8@MoveItemsT
$LN7@MoveItemsT:

; 1937 :     }

	lea	ecx, DWORD PTR _selectedItems$6[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN10@MoveItemsT:

; 1938 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	8
?MoveItemsToEdge@OBS@@AAEXHH@Z ENDP			; OBS::MoveItemsToEdge
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?MoveItemsByPixels@OBS@@AAEXHH@Z
_TEXT	SEGMENT
_baseSize$1 = -40					; size = 8
_renderSize$2 = -32					; size = 8
_selectedItems$3 = -24					; size = 8
_this$ = -16						; size = 4
_itemElement$4 = -12					; size = 4
_i$5 = -8						; size = 4
_item$6 = -4						; size = 4
_dx$ = 8						; size = 4
_dy$ = 12						; size = 4
?MoveItemsByPixels@OBS@@AAEXHH@Z PROC			; OBS::MoveItemsByPixels, COMDAT
; _this$ = ecx

; 1941 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1942 :     if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN5@MoveItemsB

; 1943 :     {
; 1944 :         List<SceneItem*> selectedItems;

	lea	ecx, DWORD PTR _selectedItems$3[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1945 :         App->scene->GetSelectedItems(selectedItems);

	lea	edx, DWORD PTR _selectedItems$3[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 1946 : 
; 1947 :         Vect2 baseSize = App->GetBaseSize();

	lea	ecx, DWORD PTR _baseSize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize

; 1948 :         Vect2 renderSize = App->GetRenderFrameSize();

	lea	edx, DWORD PTR _renderSize$2[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetRenderFrameSize@OBS@@QBE?AUVect2@@XZ ; OBS::GetRenderFrameSize

; 1949 : 
; 1950 :         for(UINT i=0; i<selectedItems.Num(); i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN4@MoveItemsB
$LN3@MoveItemsB:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN4@MoveItemsB:
	lea	ecx, DWORD PTR _selectedItems$3[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$5[ebp], eax
	jae	$LN2@MoveItemsB

; 1951 :         {
; 1952 :             SceneItem *item = selectedItems[i];

	mov	ecx, DWORD PTR _i$5[ebp]
	push	ecx
	lea	ecx, DWORD PTR _selectedItems$3[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _item$6[ebp], edx

; 1953 :             item->pos.x += dx;

	cvtsi2ss xmm0, DWORD PTR _dx$[ebp]
	mov	eax, DWORD PTR _item$6[ebp]
	addss	xmm0, DWORD PTR [eax+28]
	mov	ecx, DWORD PTR _item$6[ebp]
	movss	DWORD PTR [ecx+28], xmm0

; 1954 :             item->pos.y += dy;

	cvtsi2ss xmm0, DWORD PTR _dy$[ebp]
	mov	edx, DWORD PTR _item$6[ebp]
	addss	xmm0, DWORD PTR [edx+32]
	mov	eax, DWORD PTR _item$6[ebp]
	movss	DWORD PTR [eax+32], xmm0

; 1955 :             if(App->bMouseMoved)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+745]
	test	edx, edx
	je	SHORT $LN1@MoveItemsB

; 1956 :             {
; 1957 :                 App->startMousePos.x -= dx * renderSize.x / baseSize.x;

	cvtsi2ss xmm0, DWORD PTR _dx$[ebp]
	mulss	xmm0, DWORD PTR _renderSize$2[ebp]
	divss	xmm0, DWORD PTR _baseSize$1[ebp]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm1, DWORD PTR [eax+752]
	subss	xmm1, xmm0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	DWORD PTR [ecx+752], xmm1

; 1958 :                 App->startMousePos.y -= dy * renderSize.y / baseSize.y;

	cvtsi2ss xmm0, DWORD PTR _dy$[ebp]
	mulss	xmm0, DWORD PTR _renderSize$2[ebp+4]
	divss	xmm0, DWORD PTR _baseSize$1[ebp+4]
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	xmm1, DWORD PTR [edx+756]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movss	DWORD PTR [eax+756], xmm1
$LN1@MoveItemsB:

; 1959 :             }
; 1960 : 
; 1961 :             XElement *itemElement = item->GetElement();

	mov	ecx, DWORD PTR _item$6[ebp]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _itemElement$4[ebp], eax

; 1962 :             itemElement->SetInt(TEXT("x"), int(item->pos.x));

	mov	ecx, DWORD PTR _item$6[ebp]
	cvttss2si edx, DWORD PTR [ecx+28]
	push	edx
	push	OFFSET $SG4294712636
	mov	ecx, DWORD PTR _itemElement$4[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 1963 :             itemElement->SetInt(TEXT("y"), int(item->pos.y));

	mov	eax, DWORD PTR _item$6[ebp]
	cvttss2si ecx, DWORD PTR [eax+32]
	push	ecx
	push	OFFSET $SG4294712635
	mov	ecx, DWORD PTR _itemElement$4[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 1964 :         }

	jmp	$LN3@MoveItemsB
$LN2@MoveItemsB:

; 1965 :     }

	lea	ecx, DWORD PTR _selectedItems$3[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN5@MoveItemsB:

; 1966 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?MoveItemsByPixels@OBS@@AAEXHH@Z ENDP			; OBS::MoveItemsByPixels
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?FitItemsToScreen@OBS@@AAEXXZ
_TEXT	SEGMENT
$T1 = -192						; size = 16
$T2 = -176						; size = 16
$T3 = -160						; size = 16
$T4 = -144						; size = 16
$T5 = -124						; size = 8
$T6 = -116						; size = 8
$T7 = -108						; size = 8
_this$ = -100						; size = 4
_scale$8 = -96						; size = 8
_baseAspect$9 = -88					; size = 8
tv385 = -80						; size = 4
tv389 = -76						; size = 4
tv387 = -72						; size = 4
tv383 = -68						; size = 4
_selectedItems$10 = -64					; size = 8
_sourceAspect$11 = -56					; size = 8
_baseSize$12 = -44					; size = 8
_itemSize$13 = -36					; size = 8
_i$14 = -28						; size = 4
_pos$15 = -24						; size = 8
_itemElement$16 = -16					; size = 4
_size$17 = -12						; size = 8
_item$18 = -4						; size = 4
?FitItemsToScreen@OBS@@AAEXXZ PROC			; OBS::FitItemsToScreen, COMDAT
; _this$ = ecx

; 1969 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	mov	DWORD PTR _this$[ebp], ecx

; 1970 :     if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN8@FitItemsTo

; 1971 :     {
; 1972 :         List<SceneItem*> selectedItems;

	lea	ecx, DWORD PTR _selectedItems$10[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 1973 :         App->scene->GetSelectedItems(selectedItems);

	lea	edx, DWORD PTR _selectedItems$10[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 1974 : 
; 1975 :         Vect2 baseSize = App->GetBaseSize();

	lea	ecx, DWORD PTR _baseSize$12[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetBaseSize@OBS@@QBE?AUVect2@@XZ	; OBS::GetBaseSize

; 1976 :         double baseAspect = double(baseSize.x)/double(baseSize.y);

	cvtss2sd xmm0, DWORD PTR _baseSize$12[ebp]
	cvtss2sd xmm1, DWORD PTR _baseSize$12[ebp+4]
	divsd	xmm0, xmm1
	movsd	QWORD PTR _baseAspect$9[ebp], xmm0

; 1977 : 
; 1978 :         for(UINT i=0; i<selectedItems.Num(); i++)

	mov	DWORD PTR _i$14[ebp], 0
	jmp	SHORT $LN7@FitItemsTo
$LN6@FitItemsTo:
	mov	edx, DWORD PTR _i$14[ebp]
	add	edx, 1
	mov	DWORD PTR _i$14[ebp], edx
$LN7@FitItemsTo:
	lea	ecx, DWORD PTR _selectedItems$10[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$14[ebp], eax
	jae	$LN5@FitItemsTo

; 1979 :         {
; 1980 :             SceneItem *item = selectedItems[i];

	mov	eax, DWORD PTR _i$14[ebp]
	push	eax
	lea	ecx, DWORD PTR _selectedItems$10[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _item$18[ebp], ecx

; 1981 :             item->pos = (baseSize*0.5f)-(item->size*0.5f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$18[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@M@Z
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _baseSize$12[ebp]
	call	DWORD PTR __imp_??DVect2@@QBE?AU0@M@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z
	push	eax
	mov	ecx, DWORD PTR _item$18[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 1982 : 
; 1983 :             if(item->source)

	mov	edx, DWORD PTR _item$18[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN4@FitItemsTo

; 1984 :             {
; 1985 :                 Vect2 itemSize = item->source->GetSize();

	lea	eax, DWORD PTR _itemSize$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$18[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _item$18[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 1986 :                 itemSize.x -= (item->crop.x + item->crop.w);

	mov	ecx, DWORD PTR _item$18[ebp]
	mov	edx, DWORD PTR _item$18[ebp]
	movss	xmm0, DWORD PTR [ecx+48]
	addss	xmm0, DWORD PTR [edx+60]
	movss	xmm1, DWORD PTR _itemSize$13[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _itemSize$13[ebp], xmm1

; 1987 :                 itemSize.y -= (item->crop.y + item->crop.z);

	mov	eax, DWORD PTR _item$18[ebp]
	mov	ecx, DWORD PTR _item$18[ebp]
	movss	xmm0, DWORD PTR [eax+52]
	addss	xmm0, DWORD PTR [ecx+56]
	movss	xmm1, DWORD PTR _itemSize$13[ebp+4]
	subss	xmm1, xmm0
	movss	DWORD PTR _itemSize$13[ebp+4], xmm1

; 1988 : 
; 1989 :                 Vect2 size = baseSize;

	lea	edx, DWORD PTR _baseSize$12[ebp]
	push	edx
	lea	ecx, DWORD PTR _size$17[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@ABU0@@Z

; 1990 :                 double sourceAspect = double(itemSize.x)/double(itemSize.y);

	cvtss2sd xmm0, DWORD PTR _itemSize$13[ebp]
	cvtss2sd xmm1, DWORD PTR _itemSize$13[ebp+4]
	divsd	xmm0, xmm1
	movsd	QWORD PTR _sourceAspect$11[ebp], xmm0

; 1991 :                 if(!CloseDouble(baseAspect, sourceAspect))

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3f50624dd2f1a9fc
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR _sourceAspect$11[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR _baseAspect$9[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	?CloseDouble@@YAHNNN@Z			; CloseDouble
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN3@FitItemsTo

; 1992 :                 {
; 1993 :                     if(baseAspect < sourceAspect)

	movsd	xmm0, QWORD PTR _sourceAspect$11[ebp]
	comisd	xmm0, QWORD PTR _baseAspect$9[ebp]
	jbe	SHORT $LN2@FitItemsTo

; 1994 :                         size.y = float(double(size.x) / sourceAspect);

	cvtss2sd xmm0, DWORD PTR _size$17[ebp]
	divsd	xmm0, QWORD PTR _sourceAspect$11[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _size$17[ebp+4], xmm0

; 1995 :                     else

	jmp	SHORT $LN1@FitItemsTo
$LN2@FitItemsTo:

; 1996 :                         size.x = float(double(size.y) * sourceAspect);

	cvtss2sd xmm0, DWORD PTR _size$17[ebp+4]
	mulsd	xmm0, QWORD PTR _sourceAspect$11[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _size$17[ebp], xmm0
$LN1@FitItemsTo:

; 1997 :             
; 1998 :                     size.x = (float)round(size.x);

	push	ecx
	movss	xmm0, DWORD PTR _size$17[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?round@@YAMM@Z				; round
	add	esp, 4
	fstp	DWORD PTR _size$17[ebp]

; 1999 :                     size.y = (float)round(size.y);

	push	ecx
	movss	xmm0, DWORD PTR _size$17[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?round@@YAMM@Z				; round
	add	esp, 4
	fstp	DWORD PTR _size$17[ebp+4]
$LN3@FitItemsTo:

; 2000 :                 }
; 2001 : 
; 2002 :                 Vect2 scale = itemSize / size;

	lea	eax, DWORD PTR _size$17[ebp]
	push	eax
	lea	ecx, DWORD PTR _scale$8[ebp]
	push	ecx
	lea	ecx, DWORD PTR _itemSize$13[ebp]
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z

; 2003 :                 size.x += (item->crop.x + item->crop.w) / scale.x;

	mov	edx, DWORD PTR _item$18[ebp]
	mov	eax, DWORD PTR _item$18[ebp]
	movss	xmm0, DWORD PTR [edx+48]
	addss	xmm0, DWORD PTR [eax+60]
	divss	xmm0, DWORD PTR _scale$8[ebp]
	addss	xmm0, DWORD PTR _size$17[ebp]
	movss	DWORD PTR _size$17[ebp], xmm0

; 2004 :                 size.y += (item->crop.y + item->crop.z) / scale.y;

	mov	ecx, DWORD PTR _item$18[ebp]
	mov	edx, DWORD PTR _item$18[ebp]
	movss	xmm0, DWORD PTR [ecx+52]
	addss	xmm0, DWORD PTR [edx+56]
	divss	xmm0, DWORD PTR _scale$8[ebp+4]
	addss	xmm0, DWORD PTR _size$17[ebp+4]
	movss	DWORD PTR _size$17[ebp+4], xmm0

; 2005 :                 item->size = size;

	lea	eax, DWORD PTR _size$17[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$18[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 2006 : 
; 2007 :                 Vect2 pos;

	lea	ecx, DWORD PTR _pos$15[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@XZ

; 2008 :                 pos.x = (baseSize.x*0.5f)-((item->size.x + item->GetCrop().x - item->GetCrop().w)*0.5f);

	movss	xmm0, DWORD PTR _baseSize$12[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$18[ebp]
	movss	DWORD PTR tv383[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	edx, DWORD PTR _item$18[ebp]
	movss	xmm0, DWORD PTR [edx+36]
	addss	xmm0, DWORD PTR [eax]
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$18[ebp]
	movss	DWORD PTR tv385[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv385[ebp]
	subss	xmm0, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR tv383[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _pos$15[ebp], xmm1

; 2009 :                 pos.y = (baseSize.y*0.5f)-((item->size.y + item->GetCrop().y - item->GetCrop().z)*0.5f);

	movss	xmm0, DWORD PTR _baseSize$12[ebp+4]
	mulss	xmm0, DWORD PTR __real@3f000000
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$18[ebp]
	movss	DWORD PTR tv387[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	edx, DWORD PTR _item$18[ebp]
	movss	xmm0, DWORD PTR [edx+40]
	addss	xmm0, DWORD PTR [eax+4]
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$18[ebp]
	movss	DWORD PTR tv389[ebp], xmm0
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR tv389[ebp]
	subss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR tv387[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _pos$15[ebp+4], xmm1

; 2010 :                 pos.x = (float)round(pos.x);

	push	ecx
	movss	xmm0, DWORD PTR _pos$15[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?round@@YAMM@Z				; round
	add	esp, 4
	fstp	DWORD PTR _pos$15[ebp]

; 2011 :                 pos.y = (float)round(pos.y);

	push	ecx
	movss	xmm0, DWORD PTR _pos$15[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?round@@YAMM@Z				; round
	add	esp, 4
	fstp	DWORD PTR _pos$15[ebp+4]

; 2012 :                 item->pos  = pos;

	lea	ecx, DWORD PTR _pos$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$18[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 2013 : 
; 2014 :                 XElement *itemElement = item->GetElement();

	mov	ecx, DWORD PTR _item$18[ebp]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _itemElement$16[ebp], eax

; 2015 :                 itemElement->SetInt(TEXT("x"),  int(pos.x));

	cvttss2si edx, DWORD PTR _pos$15[ebp]
	push	edx
	push	OFFSET $SG4294712634
	mov	ecx, DWORD PTR _itemElement$16[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 2016 :                 itemElement->SetInt(TEXT("y"),  int(pos.y));

	cvttss2si eax, DWORD PTR _pos$15[ebp+4]
	push	eax
	push	OFFSET $SG4294712633
	mov	ecx, DWORD PTR _itemElement$16[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 2017 :                 itemElement->SetInt(TEXT("cx"), int(size.x));

	cvttss2si ecx, DWORD PTR _size$17[ebp]
	push	ecx
	push	OFFSET $SG4294712632
	mov	ecx, DWORD PTR _itemElement$16[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 2018 :                 itemElement->SetInt(TEXT("cy"), int(size.y));

	cvttss2si edx, DWORD PTR _size$17[ebp+4]
	push	edx
	push	OFFSET $SG4294712631
	mov	ecx, DWORD PTR _itemElement$16[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z
$LN4@FitItemsTo:

; 2019 :             }
; 2020 :         }

	jmp	$LN6@FitItemsTo
$LN5@FitItemsTo:

; 2021 :     }

	lea	ecx, DWORD PTR _selectedItems$10[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN8@FitItemsTo:

; 2022 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?FitItemsToScreen@OBS@@AAEXXZ ENDP			; OBS::FitItemsToScreen
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ResetItemSizes@OBS@@AAEXXZ
_TEXT	SEGMENT
$T1 = -32						; size = 8
_selectedItems$2 = -24					; size = 8
_this$ = -16						; size = 4
_itemElement$3 = -12					; size = 4
_i$4 = -8						; size = 4
_item$5 = -4						; size = 4
?ResetItemSizes@OBS@@AAEXXZ PROC			; OBS::ResetItemSizes, COMDAT
; _this$ = ecx

; 2025 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 2026 :     if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN5@ResetItemS

; 2027 :     {
; 2028 :         List<SceneItem*> selectedItems;

	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 2029 :         App->scene->GetSelectedItems(selectedItems);

	lea	edx, DWORD PTR _selectedItems$2[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 2030 : 
; 2031 :         for(UINT i=0; i<selectedItems.Num(); i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@ResetItemS
$LN3@ResetItemS:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN4@ResetItemS:
	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$4[ebp], eax
	jae	SHORT $LN2@ResetItemS

; 2032 :         {
; 2033 :             SceneItem *item = selectedItems[i];

	mov	edx, DWORD PTR _i$4[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _item$5[ebp], eax

; 2034 :             if(item->source)

	mov	ecx, DWORD PTR _item$5[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ResetItemS

; 2035 :             {
; 2036 :                 item->size = item->source->GetSize();

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _item$5[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _item$5[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	push	eax
	mov	ecx, DWORD PTR _item$5[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_??4Vect2@@QAEAAU0@ABU0@@Z

; 2037 : 
; 2038 :                 XElement *itemElement = item->GetElement();

	mov	ecx, DWORD PTR _item$5[ebp]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _itemElement$3[ebp], eax

; 2039 :                 itemElement->SetInt(TEXT("cx"), int(item->size.x));

	mov	eax, DWORD PTR _item$5[ebp]
	cvttss2si ecx, DWORD PTR [eax+36]
	push	ecx
	push	OFFSET $SG4294712630
	mov	ecx, DWORD PTR _itemElement$3[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z

; 2040 :                 itemElement->SetInt(TEXT("cy"), int(item->size.y));

	mov	edx, DWORD PTR _item$5[ebp]
	cvttss2si eax, DWORD PTR [edx+40]
	push	eax
	push	OFFSET $SG4294712629
	mov	ecx, DWORD PTR _itemElement$3[ebp]
	call	DWORD PTR __imp_?SetInt@XElement@@QAEXPB_WH@Z
$LN1@ResetItemS:

; 2041 :             }
; 2042 :         }

	jmp	$LN3@ResetItemS
$LN2@ResetItemS:

; 2043 :     }

	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN5@ResetItemS:

; 2044 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetItemSizes@OBS@@AAEXXZ ENDP			; OBS::ResetItemSizes
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ResetItemCrops@OBS@@AAEXXZ
_TEXT	SEGMENT
$T1 = -48						; size = 16
_selectedItems$2 = -24					; size = 8
_this$ = -16						; size = 4
_itemElement$3 = -12					; size = 4
_i$4 = -8						; size = 4
_item$5 = -4						; size = 4
?ResetItemCrops@OBS@@AAEXXZ PROC			; OBS::ResetItemCrops, COMDAT
; _this$ = ecx

; 2047 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 2048 :     if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN5@ResetItemC

; 2049 :     {
; 2050 :         List<SceneItem*> selectedItems;

	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	??0?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::List<SceneItem *>

; 2051 :         App->scene->GetSelectedItems(selectedItems);

	lea	edx, DWORD PTR _selectedItems$2[ebp]
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	call	DWORD PTR __imp_?GetSelectedItems@Scene@@QBEXAAV?$List@PAVSceneItem@@@@@Z

; 2052 : 
; 2053 :         for(UINT i=0; i<selectedItems.Num(); i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@ResetItemC
$LN3@ResetItemC:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN4@ResetItemC:
	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$4[ebp], eax
	jae	$LN2@ResetItemC

; 2054 :         {
; 2055 :             SceneItem *item = selectedItems[i];

	mov	edx, DWORD PTR _i$4[ebp]
	push	edx
	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _item$5[ebp], eax

; 2056 :             if(item->source)

	mov	ecx, DWORD PTR _item$5[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	$LN1@ResetItemC

; 2057 :             {
; 2058 :                 item->crop = Vect4(0, 0, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??0Vect4@@QAE@MMMM@Z
	push	eax
	mov	ecx, DWORD PTR _item$5[ebp]
	add	ecx, 48					; 00000030H
	call	DWORD PTR __imp_??4Vect4@@QAEAAU0@ABU0@@Z

; 2059 : 
; 2060 :                 XElement *itemElement = item->GetElement();

	mov	ecx, DWORD PTR _item$5[ebp]
	call	DWORD PTR __imp_?GetElement@SceneItem@@QBEPAVXElement@@XZ
	mov	DWORD PTR _itemElement$3[ebp], eax

; 2061 :                 itemElement->SetFloat(TEXT("crop.left"), item->crop.x);

	mov	edx, DWORD PTR _item$5[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+48]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712628
	mov	ecx, DWORD PTR _itemElement$3[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 2062 :                 itemElement->SetFloat(TEXT("crop.top"), item->crop.y);

	mov	eax, DWORD PTR _item$5[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+52]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712627
	mov	ecx, DWORD PTR _itemElement$3[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 2063 :                 itemElement->SetFloat(TEXT("crop.right"), item->crop.w);

	mov	ecx, DWORD PTR _item$5[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+60]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712626
	mov	ecx, DWORD PTR _itemElement$3[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z

; 2064 :                 itemElement->SetFloat(TEXT("crop.bottom"), item->crop.z);

	mov	edx, DWORD PTR _item$5[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+56]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712625
	mov	ecx, DWORD PTR _itemElement$3[ebp]
	call	DWORD PTR __imp_?SetFloat@XElement@@QAEXPB_WM@Z
$LN1@ResetItemC:

; 2065 :             }
; 2066 :         }

	jmp	$LN3@ResetItemC
$LN2@ResetItemC:

; 2067 :     }

	lea	ecx, DWORD PTR _selectedItems$2[ebp]
	call	??1?$List@PAVSceneItem@@@@QAE@XZ	; List<SceneItem *>::~List<SceneItem *>
$LN5@ResetItemC:

; 2068 : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?ResetItemCrops@OBS@@AAEXXZ ENDP			; OBS::ResetItemCrops
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?EnterGlobalSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_strExists$1 = -40					; size = 8
_str$2 = -32						; size = 8
_strOut$3 = -24						; size = 4
_strOut$4 = -20						; size = 4
_foundSource$5 = -16					; size = 4
_globals$6 = -12					; size = 4
tv78 = -8						; size = 4
tv64 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?EnterGlobalSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC ; OBS::EnterGlobalSourceNameDialogProc, COMDAT

; 2073 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 2074 :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN9@EnterGloba
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN8@EnterGloba
	jmp	$LN10@EnterGloba
$LN9@EnterGloba:

; 2075 :     {
; 2076 :         case WM_INITDIALOG:
; 2077 :             {
; 2078 :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 2079 :                 LocalizeWindow(hwnd);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 2080 : 
; 2081 :                 String &strOut = *(String*)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _strOut$3[ebp], ecx

; 2082 :                 SetWindowText(GetDlgItem(hwnd, IDC_NAME), strOut);

	mov	ecx, DWORD PTR _strOut$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1048					; 00000418H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 2083 :             }
; 2084 :             return TRUE;

	mov	eax, 1
	jmp	$LN12@EnterGloba
$LN8@EnterGloba:

; 2085 : 
; 2086 :         case WM_COMMAND:
; 2087 :             switch(LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	cmp	DWORD PTR tv78[ebp], 1
	je	SHORT $LN5@EnterGloba
	cmp	DWORD PTR tv78[ebp], 2
	je	$LN1@EnterGloba
	jmp	$LN10@EnterGloba
$LN5@EnterGloba:

; 2088 :             {
; 2089 :                 case IDOK:
; 2090 :                     {
; 2091 :                         String str;

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2092 :                         str.SetLength((UINT)SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXTLENGTH, 0, 0));

	push	0
	push	0
	push	14					; 0000000eH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 2093 :                         if(!str.Length())

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN4@EnterGloba

; 2094 :                         {
; 2095 :                             OBSMessageBox(hwnd, Str("EnterName"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712624
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 2096 :                             break;

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN10@EnterGloba
$LN4@EnterGloba:

; 2097 :                         }
; 2098 : 
; 2099 :                         SendMessage(GetDlgItem(hwnd, IDC_NAME), WM_GETTEXT, str.Length()+1, (LPARAM)str.Array());

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 2100 : 
; 2101 :                         String &strOut = *(String*)GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _strOut$4[ebp], eax

; 2102 : 
; 2103 :                         XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712623
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$6[ebp], eax

; 2104 :                         if(globals)

	cmp	DWORD PTR _globals$6[ebp], 0
	je	$LN3@EnterGloba

; 2105 :                         {
; 2106 :                             XElement *foundSource = globals->GetElement(str);

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _globals$6[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _foundSource$5[ebp], eax

; 2107 :                             if(foundSource != NULL && strOut != foundSource->GetName())

	cmp	DWORD PTR _foundSource$5[ebp], 0
	je	SHORT $LN3@EnterGloba
	mov	ecx, DWORD PTR _foundSource$5[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _strOut$4[ebp]
	call	DWORD PTR __imp_??9String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN3@EnterGloba

; 2108 :                             {
; 2109 :                                 String strExists = Str("NameExists");

	push	OFFSET $SG4294712622
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 2110 :                                 strExists.FindReplace(TEXT("$1"), str);

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712621
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 2111 :                                 OBSMessageBox(hwnd, strExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 2112 :                                 break;

	lea	ecx, DWORD PTR _strExists$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN10@EnterGloba
$LN3@EnterGloba:

; 2113 :                             }
; 2114 :                         }
; 2115 : 
; 2116 :                         strOut = str;

	lea	edx, DWORD PTR _str$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _strOut$4[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 2117 :                     }

	lea	ecx, DWORD PTR _str$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@EnterGloba:

; 2118 : 
; 2119 :                 case IDCANCEL:
; 2120 :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	eax, WORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
$LN10@EnterGloba:

; 2121 :                     break;
; 2122 :             }
; 2123 :     }
; 2124 :     return 0;

	xor	eax, eax
$LN12@EnterGloba:

; 2125 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnterGlobalSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP ; OBS::EnterGlobalSourceNameDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GlobalSourcesProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_ofn$1 = -1508						; size = 88
_findInfo$2 = -1420					; size = 24
_findInfo$3 = -1396					; size = 24
$T4 = -1372						; size = 8
$T5 = -1364						; size = 8
_p$6 = -1356						; size = 8
_scene$7 = -1348					; size = 4
_hwndSources$8 = -1344					; size = 4
_numGlobals$9 = -1340					; size = 4
_globalSource$10 = -1336				; size = 4
$T11 = -1332						; size = 4
_lpClass$12 = -1328					; size = 4
_lpName$13 = -1324					; size = 4
_lpName$14 = -1320					; size = 4
_numGlobals$15 = -1316					; size = 4
_bOpenFile$16 = -1312					; size = 4
_strAdd$17 = -1308					; size = 8
_numSources$18 = -1300					; size = 4
_numScenes$19 = -1296					; size = 4
_numScenes$20 = -1292					; size = 4
_hwndSources$21 = -1288					; size = 4
_globalSource$22 = -1284				; size = 4
_sceneElement$23 = -1280				; size = 4
_strSelectedSceneCollectionGlobalSourcesConfig$24 = -1276 ; size = 8
_source$25 = -1268					; size = 4
_hMenu$26 = -1264					; size = 4
_numSources$27 = -1260					; size = 4
_strName$28 = -1256					; size = 8
_listID$29 = -1248					; size = 4
_strName$30 = -1244					; size = 8
_hwndSources$31 = -1236					; size = 4
_listID$32 = -1232					; size = 4
_globals$33 = -1228					; size = 4
_data$34 = -1224					; size = 4
_data$35 = -1220					; size = 4
_globals$36 = -1216					; size = 4
_data$37 = -1212					; size = 4
_id$38 = -1208						; size = 4
_classID$39 = -1204					; size = 4
_ci$40 = -1200						; size = 4
_info$41 = -1196					; size = 4
_globals$42 = -1192					; size = 4
_scenes$43 = -1188					; size = 4
_imageSourceClass$44 = -1184				; size = 4
_scenes$45 = -1180					; size = 4
_globals$46 = -1176					; size = 4
_globals$47 = -1172					; size = 4
_element$48 = -1168					; size = 4
_id$49 = -1164						; size = 4
_data$50 = -1160					; size = 4
_newSourceElement$51 = -1156				; size = 4
_sources$52 = -1152					; size = 4
tv64 = -1148						; size = 4
_globals$53 = -1144					; size = 4
_i$54 = -1140						; size = 4
_i$55 = -1136						; size = 4
_source$56 = -1132					; size = 4
_item$57 = -1128					; size = 4
_element$58 = -1124					; size = 4
_info$59 = -1120					; size = 4
_j$60 = -1116						; size = 4
_element$61 = -1112					; size = 4
_hwndSources$62 = -1108					; size = 4
_i$63 = -1104						; size = 4
_sources$64 = -1100					; size = 4
_i$65 = -1096						; size = 4
_hwndSceneSources$66 = -1092				; size = 4
_i$67 = -1088						; size = 4
_i$68 = -1084						; size = 4
_j$69 = -1080						; size = 4
_i$70 = -1076						; size = 4
_id$71 = -1072						; size = 4
_item$72 = -1068					; size = 4
_i$73 = -1064						; size = 4
tv94 = -1060						; size = 4
_i$74 = -1056						; size = 4
_curDirectory$75 = -1052				; size = 522
_lpFile$76 = -528					; size = 522
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?GlobalSourcesProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::GlobalSourcesProc, COMDAT

; 2128 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1508				; 000005e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2129 :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN1@GlobalSour
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN91@GlobalSour
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN86@GlobalSour
	jmp	$LN92@GlobalSour
$LN91@GlobalSour:

; 2130 :     {
; 2131 :         case WM_INITDIALOG:
; 2132 :             {
; 2133 :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 2134 : 
; 2135 :                 HWND hwndSources = GetDlgItem(hwnd, IDC_SOURCES);

	push	1053					; 0000041dH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$21[ebp], eax

; 2136 :                 XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712620
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$42[ebp], eax

; 2137 :                 if(globals)

	cmp	DWORD PTR _globals$42[ebp], 0
	je	SHORT $LN90@GlobalSour

; 2138 :                 {
; 2139 :                     UINT numGlobals = globals->NumElements();

	push	0
	mov	ecx, DWORD PTR _globals$42[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numGlobals$15[ebp], eax

; 2140 : 
; 2141 :                     for(UINT i=0; i<numGlobals; i++)

	mov	DWORD PTR _i$63[ebp], 0
	jmp	SHORT $LN89@GlobalSour
$LN88@GlobalSour:
	mov	eax, DWORD PTR _i$63[ebp]
	add	eax, 1
	mov	DWORD PTR _i$63[ebp], eax
$LN89@GlobalSour:
	mov	ecx, DWORD PTR _i$63[ebp]
	cmp	ecx, DWORD PTR _numGlobals$15[ebp]
	jae	SHORT $LN90@GlobalSour

; 2142 :                     {
; 2143 :                         XElement *globalSource = globals->GetElementByID(i);

	mov	edx, DWORD PTR _i$63[ebp]
	push	edx
	mov	ecx, DWORD PTR _globals$42[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _globalSource$22[ebp], eax

; 2144 :                         SendMessage(hwndSources, LB_ADDSTRING, 0, (LPARAM)globalSource->GetName());

	mov	ecx, DWORD PTR _globalSource$22[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	384					; 00000180H
	mov	eax, DWORD PTR _hwndSources$21[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 2145 :                     }

	jmp	SHORT $LN88@GlobalSour
$LN90@GlobalSour:

; 2146 :                 }
; 2147 : 
; 2148 :                 return TRUE;

	mov	eax, 1
	jmp	$LN95@GlobalSour
$LN86@GlobalSour:

; 2149 :             }
; 2150 : 
; 2151 :         case WM_COMMAND:
; 2152 :             switch(LOWORD(wParam))

	movzx	ecx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv94[ebp], ecx
	cmp	DWORD PTR tv94[ebp], 1060		; 00000424H
	jg	SHORT $LN96@GlobalSour
	cmp	DWORD PTR tv94[ebp], 1060		; 00000424H
	je	$LN42@GlobalSour
	cmp	DWORD PTR tv94[ebp], 1
	je	$LN2@GlobalSour
	cmp	DWORD PTR tv94[ebp], 1054		; 0000041eH
	je	SHORT $LN83@GlobalSour
	cmp	DWORD PTR tv94[ebp], 1055		; 0000041fH
	je	$LN72@GlobalSour
	jmp	$LN84@GlobalSour
$LN96@GlobalSour:
	cmp	DWORD PTR tv94[ebp], 1063		; 00000427H
	je	$LN18@GlobalSour
	cmp	DWORD PTR tv94[ebp], 1210		; 000004baH
	je	$LN27@GlobalSour
	jmp	$LN84@GlobalSour
$LN83@GlobalSour:

; 2153 :             {
; 2154 :                 case IDC_ADD:
; 2155 :                     {
; 2156 :                         HMENU hMenu = CreatePopupMenu();

	call	DWORD PTR __imp__CreatePopupMenu@0
	mov	DWORD PTR _hMenu$26[ebp], eax

; 2157 : 
; 2158 :                         for(UINT i=0; i<App->imageSourceClasses.Num(); i++)

	mov	DWORD PTR _i$74[ebp], 0
	jmp	SHORT $LN82@GlobalSour
$LN81@GlobalSour:
	mov	edx, DWORD PTR _i$74[ebp]
	add	edx, 1
	mov	DWORD PTR _i$74[ebp], edx
$LN82@GlobalSour:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	?Num@?$List@UClassInfo@@@@QBEIXZ	; List<ClassInfo>::Num
	cmp	DWORD PTR _i$74[ebp], eax
	jae	$LN80@GlobalSour

; 2159 :                         {
; 2160 :                             if(App->imageSourceClasses[i].strClass != TEXT("GlobalSource"))

	push	OFFSET $SG4294712619
	mov	eax, DWORD PTR _i$74[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	mov	ecx, eax
	call	DWORD PTR __imp_??9String@@QBEHPB_W@Z
	test	eax, eax
	je	$LN79@GlobalSour

; 2161 :                             {
; 2162 :                                 if (!App->imageSourceClasses[i].bDeprecated)

	mov	ecx, DWORD PTR _i$74[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	movzx	edx, BYTE PTR [eax+24]
	test	edx, edx
	jne	$LN79@GlobalSour

; 2163 :                                 {
; 2164 :                                     String strAdd = Str("Listbox.Add");

	push	OFFSET $SG4294712618
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strAdd$17[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 2165 :                                     strAdd.FindReplace(TEXT("$1"), App->imageSourceClasses[i].strName);

	mov	ecx, DWORD PTR _i$74[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	add	eax, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712617
	lea	ecx, DWORD PTR _strAdd$17[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 2166 :                                     AppendMenu(hMenu, MF_STRING, i+1, strAdd.Array());

	lea	ecx, DWORD PTR _strAdd$17[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _i$74[ebp]
	add	edx, 1
	push	edx
	push	0
	mov	eax, DWORD PTR _hMenu$26[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 2167 :                                 }

	lea	ecx, DWORD PTR _strAdd$17[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN79@GlobalSour:

; 2168 :                             }
; 2169 :                         }

	jmp	$LN81@GlobalSour
$LN80@GlobalSour:

; 2170 : 
; 2171 :                         POINT p;
; 2172 :                         GetCursorPos(&p);

	lea	ecx, DWORD PTR _p$6[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCursorPos@4

; 2173 : 
; 2174 :                         int classID = (int)TrackPopupMenuEx(hMenu, TPM_RETURNCMD | TPM_LEFTALIGN | TPM_RIGHTBUTTON, p.x, p.y, hwndMain, NULL);

	push	0
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	mov	eax, DWORD PTR _p$6[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _p$6[ebp]
	push	ecx
	push	258					; 00000102H
	mov	edx, DWORD PTR _hMenu$26[ebp]
	push	edx
	call	DWORD PTR __imp__TrackPopupMenuEx@24
	mov	DWORD PTR _classID$39[ebp], eax

; 2175 :                         if(!classID)

	cmp	DWORD PTR _classID$39[ebp], 0
	jne	SHORT $LN77@GlobalSour

; 2176 :                             break;

	jmp	$LN84@GlobalSour
$LN77@GlobalSour:

; 2177 : 
; 2178 :                         String strName;

	lea	ecx, DWORD PTR _strName$30[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2179 :                         if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwnd, OBS::EnterGlobalSourceNameDialogProc, (LPARAM)&strName) == IDOK)

	lea	eax, DWORD PTR _strName$30[ebp]
	push	eax
	push	OFFSET ?EnterGlobalSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterGlobalSourceNameDialogProc
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	122					; 0000007aH
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	$LN76@GlobalSour

; 2180 :                         {
; 2181 :                             ClassInfo &ci = App->imageSourceClasses[classID-1];

	mov	eax, DWORD PTR _classID$39[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1368				; 00000558H
	call	??A?$List@UClassInfo@@@@QAEAAUClassInfo@@I@Z ; List<ClassInfo>::operator[]
	mov	DWORD PTR _ci$40[ebp], eax

; 2182 : 
; 2183 :                             XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712616
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$53[ebp], eax

; 2184 :                             if(!globals)

	cmp	DWORD PTR _globals$53[ebp], 0
	jne	SHORT $LN75@GlobalSour

; 2185 :                                 globals = App->scenesConfig.CreateElement(TEXT("global sources"));

	push	OFFSET $SG4294712615
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?CreateElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$53[ebp], eax
$LN75@GlobalSour:

; 2186 : 
; 2187 :                             XElement *newSourceElement = globals->CreateElement(strName);

	lea	ecx, DWORD PTR _strName$30[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _globals$53[ebp]
	call	DWORD PTR __imp_?CreateElement@XElement@@QAEPAV1@PB_W@Z
	mov	DWORD PTR _newSourceElement$51[ebp], eax

; 2188 :                             newSourceElement->SetString(TEXT("class"), ci.strClass);

	mov	ecx, DWORD PTR _ci$40[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712614
	mov	ecx, DWORD PTR _newSourceElement$51[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 2189 : 
; 2190 :                             if(ci.configProc)

	mov	ecx, DWORD PTR _ci$40[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN74@GlobalSour

; 2191 :                             {
; 2192 :                                 if(!ci.configProc(newSourceElement, true))

	push	1
	mov	edx, DWORD PTR _newSourceElement$51[ebp]
	push	edx
	mov	eax, DWORD PTR _ci$40[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN74@GlobalSour

; 2193 :                                 {
; 2194 :                                     globals->RemoveElement(newSourceElement);

	mov	eax, DWORD PTR _newSourceElement$51[ebp]
	push	eax
	mov	ecx, DWORD PTR _globals$53[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z

; 2195 :                                     break;

	lea	ecx, DWORD PTR _strName$30[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN84@GlobalSour
$LN74@GlobalSour:

; 2196 :                                 }
; 2197 :                             }
; 2198 : 
; 2199 :                             SendMessage(GetDlgItem(hwnd, IDC_SOURCES), LB_ADDSTRING, 0, (LPARAM)strName.Array());

	lea	ecx, DWORD PTR _strName$30[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	384					; 00000180H
	push	1053					; 0000041dH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN76@GlobalSour:

; 2200 :                         }
; 2201 : 
; 2202 :                         break;

	lea	ecx, DWORD PTR _strName$30[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN84@GlobalSour
$LN72@GlobalSour:

; 2203 :                     }
; 2204 : 
; 2205 :                 case IDC_REMOVE:
; 2206 :                     {
; 2207 :                         HWND hwndSources = GetDlgItem(hwnd, IDC_SOURCES);

	push	1053					; 0000041dH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$8[ebp], eax

; 2208 :                         HWND hwndSceneSources = GetDlgItem(hwndMain, ID_SOURCES);

	push	5013					; 00001395H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSceneSources$66[ebp], eax

; 2209 : 
; 2210 :                         UINT id = (UINT)SendMessage(GetDlgItem(hwnd, IDC_SOURCES), LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	push	1053					; 0000041dH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$49[ebp], eax

; 2211 :                         if(id == LB_ERR)

	cmp	DWORD PTR _id$49[ebp], -1
	jne	SHORT $LN71@GlobalSour

; 2212 :                             break;

	jmp	$LN84@GlobalSour
$LN71@GlobalSour:

; 2213 : 
; 2214 :                         XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712613
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$47[ebp], eax

; 2215 :                         if(!globals)

	cmp	DWORD PTR _globals$47[ebp], 0
	jne	SHORT $LN70@GlobalSour

; 2216 :                             break;

	jmp	$LN84@GlobalSour
$LN70@GlobalSour:

; 2217 : 
; 2218 :                         if(OBSMessageBox(hwnd, Str("GlobalSources.DeleteConfirm"), Str("DeleteConfirm.Title"), MB_YESNO) == IDNO)

	push	4
	push	OFFSET $SG4294712612
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712611
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 7
	jne	SHORT $LN69@GlobalSour

; 2219 :                             break;

	jmp	$LN84@GlobalSour
$LN69@GlobalSour:

; 2220 : 
; 2221 :                         App->EnterSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 2222 : 
; 2223 :                         XElement *element = globals->GetElementByID(id);

	mov	edx, DWORD PTR _id$49[ebp]
	push	edx
	mov	ecx, DWORD PTR _globals$47[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _element$58[ebp], eax

; 2224 : 
; 2225 :                         if(App->bRunning && App->scene && App->scene->sceneItems.Num())

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN68@GlobalSour
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+144], 0
	je	$LN68@GlobalSour
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	add	ecx, 8
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	test	eax, eax
	je	$LN68@GlobalSour

; 2226 :                         {
; 2227 :                             for(int i=int(App->scene->sceneItems.Num()-1); i>=0; i--)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	add	ecx, 8
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	sub	eax, 1
	mov	DWORD PTR _i$68[ebp], eax
	jmp	SHORT $LN67@GlobalSour
$LN66@GlobalSour:
	mov	edx, DWORD PTR _i$68[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$68[ebp], edx
$LN67@GlobalSour:
	cmp	DWORD PTR _i$68[ebp], 0
	jl	$LN68@GlobalSour

; 2228 :                             {
; 2229 :                                 SceneItem *item = App->scene->sceneItems[i];

	mov	eax, DWORD PTR _i$68[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [ecx+144]
	add	ecx, 8
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _item$72[ebp], edx

; 2230 :                                 if(item->element && scmpi(item->element->GetString(TEXT("class")), TEXT("GlobalSource")) == 0)

	mov	eax, DWORD PTR _item$72[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN64@GlobalSour
	push	OFFSET $SG4294712610
	push	0
	push	OFFSET $SG4294712609
	mov	ecx, DWORD PTR _item$72[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN64@GlobalSour

; 2231 :                                 {
; 2232 :                                     XElement *data = item->element->GetElement(TEXT("data"));

	push	OFFSET $SG4294712608
	mov	edx, DWORD PTR _item$72[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _data$37[ebp], eax

; 2233 :                                     if(data)

	cmp	DWORD PTR _data$37[ebp], 0
	je	$LN64@GlobalSour

; 2234 :                                     {
; 2235 :                                         if(scmpi(data->GetString(TEXT("name")), element->GetName()) == 0)

	mov	ecx, DWORD PTR _element$58[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	OFFSET $SG4294712607
	mov	ecx, DWORD PTR _data$37[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN64@GlobalSour

; 2236 :                                         {
; 2237 :                                             LVFINDINFO findInfo;
; 2238 :                                             findInfo.flags = LVFI_STRING;

	mov	DWORD PTR _findInfo$2[ebp], 2

; 2239 :                                             findInfo.psz = (LPCWSTR) item->GetName();

	mov	ecx, DWORD PTR _item$72[ebp]
	call	DWORD PTR __imp_?GetName@SceneItem@@QBEPB_WXZ
	mov	DWORD PTR _findInfo$2[ebp+4], eax

; 2240 : 
; 2241 :                                             int listID = ListView_FindItem(hwndSceneSources, -1, &findInfo);

	lea	eax, DWORD PTR _findInfo$2[ebp]
	push	eax
	push	-1
	push	4179					; 00001053H
	mov	ecx, DWORD PTR _hwndSceneSources$66[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _listID$32[ebp], eax

; 2242 :                                             if(listID != -1)

	cmp	DWORD PTR _listID$32[ebp], -1
	je	SHORT $LN61@GlobalSour

; 2243 :                                             {
; 2244 :                                                 App->bChangingSources = true;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 1

; 2245 :                                                 ListView_DeleteItem(hwndSceneSources, listID);

	push	0
	mov	eax, DWORD PTR _listID$32[ebp]
	push	eax
	push	4104					; 00001008H
	mov	ecx, DWORD PTR _hwndSceneSources$66[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 2246 :                                                 App->bChangingSources = false;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [edx+705], 0
$LN61@GlobalSour:

; 2247 :                                             }
; 2248 :                                             App->scene->RemoveImageSource(item);

	mov	eax, DWORD PTR _item$72[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+144]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN64@GlobalSour:

; 2249 :                                         }
; 2250 :                                     }
; 2251 :                                 }
; 2252 :                             }

	jmp	$LN66@GlobalSour
$LN68@GlobalSour:

; 2253 :                         }
; 2254 : 
; 2255 :                         XElement *scenes = App->scenesConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712606
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _scenes$45[ebp], eax

; 2256 :                         if(scenes)

	cmp	DWORD PTR _scenes$45[ebp], 0
	je	$LN60@GlobalSour

; 2257 :                         {
; 2258 :                             UINT numScenes = scenes->NumElements();

	push	0
	mov	ecx, DWORD PTR _scenes$45[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numScenes$19[ebp], eax

; 2259 : 
; 2260 :                             for(UINT i=0; i<numScenes; i++)

	mov	DWORD PTR _i$55[ebp], 0
	jmp	SHORT $LN59@GlobalSour
$LN58@GlobalSour:
	mov	ecx, DWORD PTR _i$55[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$55[ebp], ecx
$LN59@GlobalSour:
	mov	edx, DWORD PTR _i$55[ebp]
	cmp	edx, DWORD PTR _numScenes$19[ebp]
	jae	$LN60@GlobalSour

; 2261 :                             {
; 2262 :                                 XElement *scene = scenes->GetElementByID(i);

	mov	eax, DWORD PTR _i$55[ebp]
	push	eax
	mov	ecx, DWORD PTR _scenes$45[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _scene$7[ebp], eax

; 2263 :                                 XElement *sources = scene->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712605
	mov	ecx, DWORD PTR _scene$7[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sources$64[ebp], eax

; 2264 :                                 if(sources)

	cmp	DWORD PTR _sources$64[ebp], 0
	je	$LN56@GlobalSour

; 2265 :                                 {
; 2266 :                                     UINT numSources = sources->NumElements();

	push	0
	mov	ecx, DWORD PTR _sources$64[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$27[ebp], eax

; 2267 : 
; 2268 :                                     if (numSources)

	cmp	DWORD PTR _numSources$27[ebp], 0
	je	$LN56@GlobalSour

; 2269 :                                     {
; 2270 :                                         for(int j=int(numSources-1); j>=0; j--)

	mov	ecx, DWORD PTR _numSources$27[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$60[ebp], ecx
	jmp	SHORT $LN54@GlobalSour
$LN53@GlobalSour:
	mov	edx, DWORD PTR _j$60[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$60[ebp], edx
$LN54@GlobalSour:
	cmp	DWORD PTR _j$60[ebp], 0
	jl	$LN56@GlobalSour

; 2271 :                                         {
; 2272 :                                             XElement *source = sources->GetElementByID(j);

	mov	eax, DWORD PTR _j$60[ebp]
	push	eax
	mov	ecx, DWORD PTR _sources$64[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _source$56[ebp], eax

; 2273 : 
; 2274 :                                             if(scmpi(source->GetString(TEXT("class")), TEXT("GlobalSource")) == 0)

	push	OFFSET $SG4294712604
	push	0
	push	OFFSET $SG4294712603
	mov	ecx, DWORD PTR _source$56[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN51@GlobalSour

; 2275 :                                             {
; 2276 :                                                 XElement *data = source->GetElement(TEXT("data"));

	push	OFFSET $SG4294712602
	mov	ecx, DWORD PTR _source$56[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _data$35[ebp], eax

; 2277 :                                                 if(data)

	cmp	DWORD PTR _data$35[ebp], 0
	je	$LN51@GlobalSour

; 2278 :                                                 {
; 2279 :                                                     CTSTR lpName = data->GetString(TEXT("name"));

	push	0
	push	OFFSET $SG4294712601
	mov	ecx, DWORD PTR _data$35[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _lpName$14[ebp], eax

; 2280 :                                                     if(scmpi(lpName, element->GetName()) == 0)

	mov	ecx, DWORD PTR _element$58[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _lpName$14[ebp]
	push	ecx
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN51@GlobalSour

; 2281 :                                                     {
; 2282 :                                                         LVFINDINFO findInfo;
; 2283 :                                                         findInfo.flags = LVFI_STRING;

	mov	DWORD PTR _findInfo$3[ebp], 2

; 2284 :                                                         findInfo.psz = (LPCWSTR) source->GetName();

	mov	ecx, DWORD PTR _source$56[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	DWORD PTR _findInfo$3[ebp+4], eax

; 2285 : 
; 2286 :                                                         int listID = ListView_FindItem(hwndSceneSources, -1, &findInfo);

	lea	edx, DWORD PTR _findInfo$3[ebp]
	push	edx
	push	-1
	push	4179					; 00001053H
	mov	eax, DWORD PTR _hwndSceneSources$66[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _listID$29[ebp], eax

; 2287 :                                                         if(listID != -1)

	cmp	DWORD PTR _listID$29[ebp], -1
	je	SHORT $LN48@GlobalSour

; 2288 :                                                         {
; 2289 :                                                             App->bChangingSources = true;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 1

; 2290 :                                                             ListView_DeleteItem(hwndSceneSources, listID);

	push	0
	mov	edx, DWORD PTR _listID$29[ebp]
	push	edx
	push	4104					; 00001008H
	mov	eax, DWORD PTR _hwndSceneSources$66[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 2291 :                                                             App->bChangingSources = false;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	BYTE PTR [ecx+705], 0
$LN48@GlobalSour:

; 2292 :                                                         }
; 2293 :                                                         sources->RemoveElement(source);

	mov	edx, DWORD PTR _source$56[ebp]
	push	edx
	mov	ecx, DWORD PTR _sources$64[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z
$LN51@GlobalSour:

; 2294 :                                                     }
; 2295 :                                                 }
; 2296 :                                             }
; 2297 :                                         }

	jmp	$LN53@GlobalSour
$LN56@GlobalSour:

; 2298 :                                     }
; 2299 :                                 }
; 2300 :                             }

	jmp	$LN58@GlobalSour
$LN60@GlobalSour:

; 2301 :                         }
; 2302 : 
; 2303 :                         SendMessage(hwndSources, LB_DELETESTRING, id, 0);

	push	0
	mov	eax, DWORD PTR _id$49[ebp]
	push	eax
	push	386					; 00000182H
	mov	ecx, DWORD PTR _hwndSources$8[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 2304 : 
; 2305 :                         if(App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	je	$LN47@GlobalSour

; 2306 :                         {
; 2307 :                             for(UINT i=0; i<App->globalSources.Num(); i++)

	mov	DWORD PTR _i$73[ebp], 0
	jmp	SHORT $LN46@GlobalSour
$LN45@GlobalSour:
	mov	ecx, DWORD PTR _i$73[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$73[ebp], ecx
$LN46@GlobalSour:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1376				; 00000560H
	call	?Num@?$List@UGlobalSourceInfo@@@@QBEIXZ	; List<GlobalSourceInfo>::Num
	cmp	DWORD PTR _i$73[ebp], eax
	jae	SHORT $LN47@GlobalSour

; 2308 :                             {
; 2309 :                                 GlobalSourceInfo &info = App->globalSources[i];

	mov	edx, DWORD PTR _i$73[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1376				; 00000560H
	call	??A?$List@UGlobalSourceInfo@@@@QAEAAUGlobalSourceInfo@@I@Z ; List<GlobalSourceInfo>::operator[]
	mov	DWORD PTR _info$41[ebp], eax

; 2310 :                                 if(info.strName.CompareI(element->GetName()) && info.source)

	mov	ecx, DWORD PTR _element$58[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _info$41[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN43@GlobalSour
	mov	eax, DWORD PTR _info$41[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN43@GlobalSour

; 2311 :                                 {
; 2312 :                                     info.FreeData();

	mov	ecx, DWORD PTR _info$41[ebp]
	call	?FreeData@GlobalSourceInfo@@QAEXXZ	; GlobalSourceInfo::FreeData

; 2313 :                                     App->globalSources.Remove(i);

	mov	ecx, DWORD PTR _i$73[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1376				; 00000560H
	call	?Remove@?$List@UGlobalSourceInfo@@@@QAEXI@Z ; List<GlobalSourceInfo>::Remove

; 2314 :                                     break;

	jmp	SHORT $LN47@GlobalSour
$LN43@GlobalSour:

; 2315 :                                 }
; 2316 :                             }

	jmp	$LN45@GlobalSour
$LN47@GlobalSour:

; 2317 :                         }
; 2318 : 
; 2319 :                         globals->RemoveElement(element);

	mov	edx, DWORD PTR _element$58[ebp]
	push	edx
	mov	ecx, DWORD PTR _globals$47[ebp]
	call	DWORD PTR __imp_?RemoveElement@XElement@@QAEXPAV1@@Z

; 2320 : 
; 2321 :                         App->LeaveSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex

; 2322 :                         break;

	jmp	$LN84@GlobalSour
$LN42@GlobalSour:

; 2323 :                     }
; 2324 : 
; 2325 :                 case IDC_RENAME:
; 2326 :                     {
; 2327 :                         HWND hwndSources = GetDlgItem(hwnd, IDC_SOURCES);

	push	1053					; 0000041dH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$62[ebp], eax

; 2328 :                         UINT id = (UINT)SendMessage(hwndSources, LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	mov	ecx, DWORD PTR _hwndSources$62[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$71[ebp], eax

; 2329 :                         if(id == LB_ERR)

	cmp	DWORD PTR _id$71[ebp], -1
	jne	SHORT $LN41@GlobalSour

; 2330 :                             break;

	jmp	$LN84@GlobalSour
$LN41@GlobalSour:

; 2331 : 
; 2332 :                         XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712600
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$33[ebp], eax

; 2333 :                         if(!globals)

	cmp	DWORD PTR _globals$33[ebp], 0
	jne	SHORT $LN40@GlobalSour

; 2334 :                             break;

	jmp	$LN84@GlobalSour
$LN40@GlobalSour:

; 2335 : 
; 2336 :                         XElement *element = globals->GetElementByID(id);

	mov	edx, DWORD PTR _id$71[ebp]
	push	edx
	mov	ecx, DWORD PTR _globals$33[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _element$48[ebp], eax

; 2337 : 
; 2338 :                         String strName = element->GetName();

	mov	ecx, DWORD PTR _element$48[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	lea	ecx, DWORD PTR _strName$28[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 2339 :                         if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterGlobalSourceNameDialogProc, (LPARAM)&strName) == IDOK)

	lea	eax, DWORD PTR _strName$28[ebp]
	push	eax
	push	OFFSET ?EnterGlobalSourceNameDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterGlobalSourceNameDialogProc
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	push	122					; 0000007aH
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	$LN39@GlobalSour

; 2340 :                         {
; 2341 :                             SendMessage(hwndSources, LB_DELETESTRING, id, 0);

	push	0
	mov	eax, DWORD PTR _id$71[ebp]
	push	eax
	push	386					; 00000182H
	mov	ecx, DWORD PTR _hwndSources$62[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 2342 :                             SendMessage(hwndSources, LB_INSERTSTRING, id, (LPARAM)strName.Array());

	lea	ecx, DWORD PTR _strName$28[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _id$71[ebp]
	push	edx
	push	385					; 00000181H
	mov	eax, DWORD PTR _hwndSources$62[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 2343 :                             SendMessage(hwndSources, LB_SETCURSEL, id, 0);

	push	0
	mov	ecx, DWORD PTR _id$71[ebp]
	push	ecx
	push	390					; 00000186H
	mov	edx, DWORD PTR _hwndSources$62[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 2344 : 
; 2345 :                             XElement *scenes = App->scenesConfig.GetElement(TEXT("scenes"));

	push	OFFSET $SG4294712599
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _scenes$43[ebp], eax

; 2346 :                             if(scenes)

	cmp	DWORD PTR _scenes$43[ebp], 0
	je	$LN38@GlobalSour

; 2347 :                             {
; 2348 :                                 UINT numScenes = scenes->NumElements();

	push	0
	mov	ecx, DWORD PTR _scenes$43[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numScenes$20[ebp], eax

; 2349 : 
; 2350 :                                 for(UINT i=0; i<numScenes; i++)

	mov	DWORD PTR _i$54[ebp], 0
	jmp	SHORT $LN37@GlobalSour
$LN36@GlobalSour:
	mov	eax, DWORD PTR _i$54[ebp]
	add	eax, 1
	mov	DWORD PTR _i$54[ebp], eax
$LN37@GlobalSour:
	mov	ecx, DWORD PTR _i$54[ebp]
	cmp	ecx, DWORD PTR _numScenes$20[ebp]
	jae	$LN38@GlobalSour

; 2351 :                                 {
; 2352 :                                     XElement *sceneElement = scenes->GetElementByID(i);

	mov	edx, DWORD PTR _i$54[ebp]
	push	edx
	mov	ecx, DWORD PTR _scenes$43[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _sceneElement$23[ebp], eax

; 2353 :                                     XElement *sources = sceneElement->GetElement(TEXT("sources"));

	push	OFFSET $SG4294712598
	mov	ecx, DWORD PTR _sceneElement$23[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _sources$52[ebp], eax

; 2354 :                                     if(sources)

	cmp	DWORD PTR _sources$52[ebp], 0
	je	$LN34@GlobalSour

; 2355 :                                     {
; 2356 :                                         UINT numSources = sources->NumElements();

	push	0
	mov	ecx, DWORD PTR _sources$52[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numSources$18[ebp], eax

; 2357 : 
; 2358 :                                         for(UINT j=0; j<numSources; j++)

	mov	DWORD PTR _j$69[ebp], 0
	jmp	SHORT $LN33@GlobalSour
$LN32@GlobalSour:
	mov	eax, DWORD PTR _j$69[ebp]
	add	eax, 1
	mov	DWORD PTR _j$69[ebp], eax
$LN33@GlobalSour:
	mov	ecx, DWORD PTR _j$69[ebp]
	cmp	ecx, DWORD PTR _numSources$18[ebp]
	jae	$LN34@GlobalSour

; 2359 :                                         {
; 2360 :                                             XElement *source = sources->GetElementByID(j);

	mov	edx, DWORD PTR _j$69[ebp]
	push	edx
	mov	ecx, DWORD PTR _sources$52[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _source$25[ebp], eax

; 2361 : 
; 2362 :                                             if(scmpi(source->GetString(TEXT("class")), TEXT("GlobalSource")) == 0)

	push	OFFSET $SG4294712597
	push	0
	push	OFFSET $SG4294712596
	mov	ecx, DWORD PTR _source$25[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN30@GlobalSour

; 2363 :                                             {
; 2364 :                                                 XElement *data = source->GetElement(TEXT("data"));

	push	OFFSET $SG4294712595
	mov	ecx, DWORD PTR _source$25[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _data$50[ebp], eax

; 2365 :                                                 if(data)

	cmp	DWORD PTR _data$50[ebp], 0
	je	SHORT $LN30@GlobalSour

; 2366 :                                                 {
; 2367 :                                                     CTSTR lpName = data->GetString(TEXT("name"));

	push	0
	push	OFFSET $SG4294712594
	mov	ecx, DWORD PTR _data$50[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _lpName$13[ebp], eax

; 2368 :                                                     if(scmpi(lpName, element->GetName()) == 0)

	mov	ecx, DWORD PTR _element$48[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	eax, DWORD PTR _lpName$13[ebp]
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN30@GlobalSour

; 2369 :                                                         data->SetString(TEXT("name"), strName);

	lea	ecx, DWORD PTR _strName$28[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712593
	mov	ecx, DWORD PTR _data$50[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z
$LN30@GlobalSour:

; 2370 :                                                 }
; 2371 :                                             }
; 2372 :                                         }

	jmp	$LN32@GlobalSour
$LN34@GlobalSour:

; 2373 :                                     }
; 2374 :                                 }

	jmp	$LN36@GlobalSour
$LN38@GlobalSour:

; 2375 :                             }
; 2376 : 
; 2377 :                             element->SetName(strName);

	lea	ecx, DWORD PTR _strName$28[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _element$48[ebp]
	call	DWORD PTR __imp_?SetName@XBaseItem@@QAEXPB_W@Z
$LN39@GlobalSour:

; 2378 :                         }
; 2379 : 
; 2380 :                         break;

	lea	ecx, DWORD PTR _strName$28[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN84@GlobalSour
$LN27@GlobalSour:

; 2381 :                     }
; 2382 : 
; 2383 :                 case IDC_IMPORT:
; 2384 :                     {
; 2385 :                         TCHAR lpFile[MAX_PATH + 1];
; 2386 :                         zero(lpFile, sizeof(lpFile));

	push	522					; 0000020aH
	lea	ecx, DWORD PTR _lpFile$76[ebp]
	push	ecx
	call	?zero@@YGXPAXI@Z			; zero

; 2387 : 
; 2388 :                         OPENFILENAME ofn;
; 2389 :                         zero(&ofn, sizeof(ofn));

	push	88					; 00000058H
	lea	edx, DWORD PTR _ofn$1[ebp]
	push	edx
	call	?zero@@YGXPAXI@Z			; zero

; 2390 :                         ofn.lStructSize = sizeof(ofn);

	mov	DWORD PTR _ofn$1[ebp], 88		; 00000058H

; 2391 :                         ofn.lpstrFile = lpFile;

	lea	eax, DWORD PTR _lpFile$76[ebp]
	mov	DWORD PTR _ofn$1[ebp+28], eax

; 2392 :                         ofn.hwndOwner = hwndMain;

	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	mov	DWORD PTR _ofn$1[ebp+4], ecx

; 2393 :                         ofn.nMaxFile = MAX_PATH;

	mov	DWORD PTR _ofn$1[ebp+32], 260		; 00000104H

; 2394 :                         ofn.lpstrFilter = TEXT("Scene Files (*.xconfig)\0*.xconfig\0");

	mov	DWORD PTR _ofn$1[ebp+12], OFFSET $SG4294712592

; 2395 :                         ofn.nFilterIndex = 1;

	mov	DWORD PTR _ofn$1[ebp+24], 1

; 2396 :                         ofn.lpstrInitialDir = GlobalConfig->GetString(L"General", L"LastImportExportPath");

	push	0
	push	OFFSET $SG4294712591
	push	OFFSET $SG4294712590
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _ofn$1[ebp+44], eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2397 : 
; 2398 :                         TCHAR curDirectory[MAX_PATH + 1];
; 2399 :                         GetCurrentDirectory(MAX_PATH, curDirectory);

	lea	eax, DWORD PTR _curDirectory$75[ebp]
	push	eax
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 2400 : 
; 2401 :                         BOOL bOpenFile = GetOpenFileName(&ofn);

	lea	ecx, DWORD PTR _ofn$1[ebp]
	push	ecx
	call	_IsolationAwareGetOpenFileNameW@4
	mov	DWORD PTR _bOpenFile$16[ebp], eax

; 2402 :                         SetCurrentDirectory(curDirectory);

	lea	edx, DWORD PTR _curDirectory$75[ebp]
	push	edx
	call	DWORD PTR __imp__SetCurrentDirectoryW@4

; 2403 : 
; 2404 :                         if(!bOpenFile)

	cmp	DWORD PTR _bOpenFile$16[ebp], 0
	jne	SHORT $LN26@GlobalSour

; 2405 :                             break;

	jmp	$LN84@GlobalSour
$LN26@GlobalSour:

; 2406 : 
; 2407 :                         if(GetPathExtension(lpFile).IsEmpty())

	lea	eax, DWORD PTR _lpFile$76[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetPathExtension@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	mov	DWORD PTR $T11[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN25@GlobalSour

; 2408 :                             scat(lpFile, L".xconfig");

	push	OFFSET $SG4294712589
	lea	edx, DWORD PTR _lpFile$76[ebp]
	push	edx
	call	DWORD PTR __imp_?scat@@YGXPA_WPB_W@Z
$LN25@GlobalSour:

; 2409 : 
; 2410 :                         String strSelectedSceneCollectionGlobalSourcesConfig;

	lea	ecx, DWORD PTR _strSelectedSceneCollectionGlobalSourcesConfig$24[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2411 :                         strSelectedSceneCollectionGlobalSourcesConfig = lpFile;

	lea	eax, DWORD PTR _lpFile$76[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSelectedSceneCollectionGlobalSourcesConfig$24[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 2412 : 
; 2413 :                         if(!App->globalSourcesImportConfig.Open(strSelectedSceneCollectionGlobalSourcesConfig))

	lea	ecx, DWORD PTR _strSelectedSceneCollectionGlobalSourcesConfig$24[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 180				; 000000b4H
	call	DWORD PTR __imp_?Open@XConfig@@QAE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@GlobalSour

; 2414 :                             CrashError(TEXT("Could not open '%s"), strSelectedSceneCollectionGlobalSourcesConfig.Array());

	lea	ecx, DWORD PTR _strSelectedSceneCollectionGlobalSourcesConfig$24[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712588
	call	DWORD PTR __imp_?CrashError@@YAXPB_WZZ
$LN24@GlobalSour:

; 2415 : 
; 2416 :                         if(OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_GLOBAL_SOURCES_IMPORT), hwnd, OBS::GlobalSourcesImportProc) == IDOK)

	push	0
	push	OFFSET ?GlobalSourcesImportProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::GlobalSourcesImportProc
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	push	151					; 00000097H
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	$LN23@GlobalSour

; 2417 :                         {
; 2418 :                             HWND hwndSources = GetDlgItem(hwnd, IDC_SOURCES);

	push	1053					; 0000041dH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$31[ebp], eax

; 2419 :                             SendMessage(hwndSources, LB_RESETCONTENT, 0, 0);

	push	0
	push	0
	push	388					; 00000184H
	mov	edx, DWORD PTR _hwndSources$31[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 2420 :                             XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712587
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$46[ebp], eax

; 2421 :                             if(globals)

	cmp	DWORD PTR _globals$46[ebp], 0
	je	SHORT $LN22@GlobalSour

; 2422 :                             {
; 2423 :                                 UINT numGlobals = globals->NumElements();

	push	0
	mov	ecx, DWORD PTR _globals$46[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numGlobals$9[ebp], eax

; 2424 : 
; 2425 :                                 for(UINT i = 0; i < numGlobals; i++)

	mov	DWORD PTR _i$67[ebp], 0
	jmp	SHORT $LN21@GlobalSour
$LN20@GlobalSour:
	mov	eax, DWORD PTR _i$67[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67[ebp], eax
$LN21@GlobalSour:
	mov	ecx, DWORD PTR _i$67[ebp]
	cmp	ecx, DWORD PTR _numGlobals$9[ebp]
	jae	SHORT $LN22@GlobalSour

; 2426 :                                 {
; 2427 :                                     XElement *globalSource = globals->GetElementByID(i);

	mov	edx, DWORD PTR _i$67[ebp]
	push	edx
	mov	ecx, DWORD PTR _globals$46[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _globalSource$10[ebp], eax

; 2428 :                                     SendMessage(hwndSources, LB_ADDSTRING, 0, (LPARAM)globalSource->GetName());

	mov	ecx, DWORD PTR _globalSource$10[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	384					; 00000180H
	mov	eax, DWORD PTR _hwndSources$31[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 2429 :                                 }

	jmp	SHORT $LN20@GlobalSour
$LN22@GlobalSour:

; 2430 :                             }
; 2431 :                             App->globalSourcesImportConfig.Close();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 180				; 000000b4H
	call	DWORD PTR __imp_?Close@XConfig@@QAEX_N@Z
$LN23@GlobalSour:

; 2432 :                         }
; 2433 :                         break;

	lea	ecx, DWORD PTR _strSelectedSceneCollectionGlobalSourcesConfig$24[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN84@GlobalSour
$LN18@GlobalSour:

; 2434 :                     }
; 2435 : 
; 2436 :                 case IDC_CONFIG:
; 2437 :                     {
; 2438 :                         UINT id = (UINT)SendMessage(GetDlgItem(hwnd, IDC_SOURCES), LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	push	1053					; 0000041dH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$38[ebp], eax

; 2439 :                         if(id == LB_ERR)

	cmp	DWORD PTR _id$38[ebp], -1
	jne	SHORT $LN17@GlobalSour

; 2440 :                             break;

	jmp	$LN84@GlobalSour
$LN17@GlobalSour:

; 2441 : 
; 2442 :                         XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712586
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$36[ebp], eax

; 2443 :                         if(!globals)

	cmp	DWORD PTR _globals$36[ebp], 0
	jne	SHORT $LN16@GlobalSour

; 2444 :                             break;

	jmp	$LN84@GlobalSour
$LN16@GlobalSour:

; 2445 : 
; 2446 :                         XElement *element = globals->GetElementByID(id);

	mov	edx, DWORD PTR _id$38[ebp]
	push	edx
	mov	ecx, DWORD PTR _globals$36[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _element$61[ebp], eax

; 2447 :                         CTSTR lpClass = element->GetString(TEXT("class"));

	push	0
	push	OFFSET $SG4294712585
	mov	ecx, DWORD PTR _element$61[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _lpClass$12[ebp], eax

; 2448 : 
; 2449 :                         ClassInfo *imageSourceClass = App->GetImageSourceClass(lpClass);

	mov	eax, DWORD PTR _lpClass$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetImageSourceClass@OBS@@ABEPAUClassInfo@@PB_W@Z ; OBS::GetImageSourceClass
	mov	DWORD PTR _imageSourceClass$44[ebp], eax

; 2450 :                         if(imageSourceClass && imageSourceClass->configProc && imageSourceClass->configProc(element, false))

	cmp	DWORD PTR _imageSourceClass$44[ebp], 0
	je	$LN15@GlobalSour
	mov	ecx, DWORD PTR _imageSourceClass$44[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	$LN15@GlobalSour
	push	0
	mov	edx, DWORD PTR _element$61[ebp]
	push	edx
	mov	eax, DWORD PTR _imageSourceClass$44[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	movzx	edx, al
	test	edx, edx
	je	$LN15@GlobalSour

; 2451 :                         {
; 2452 :                             App->EnterSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnterSceneMutex@OBS@@QAEXXZ		; OBS::EnterSceneMutex

; 2453 : 
; 2454 :                             if(App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	$LN14@GlobalSour

; 2455 :                             {
; 2456 :                                 for(UINT i=0; i<App->scene->sceneItems.Num(); i++)

	mov	DWORD PTR _i$65[ebp], 0
	jmp	SHORT $LN13@GlobalSour
$LN12@GlobalSour:
	mov	edx, DWORD PTR _i$65[ebp]
	add	edx, 1
	mov	DWORD PTR _i$65[ebp], edx
$LN13@GlobalSour:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+144]
	add	ecx, 8
	call	?Num@?$List@PAVSceneItem@@@@QBEIXZ	; List<SceneItem *>::Num
	cmp	DWORD PTR _i$65[ebp], eax
	jae	$LN14@GlobalSour

; 2457 :                                 {
; 2458 :                                     SceneItem *item = App->scene->sceneItems[i];

	mov	ecx, DWORD PTR _i$65[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [edx+144]
	add	ecx, 8
	call	??A?$List@PAVSceneItem@@@@QAEAAPAVSceneItem@@I@Z ; List<SceneItem *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _item$57[ebp], eax

; 2459 :                                     if(item->element && scmpi(item->element->GetString(TEXT("class")), TEXT("GlobalSource")) == 0)

	mov	ecx, DWORD PTR _item$57[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	$LN10@GlobalSour
	push	OFFSET $SG4294712584
	push	0
	push	OFFSET $SG4294712583
	mov	edx, DWORD PTR _item$57[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN10@GlobalSour

; 2460 :                                     {
; 2461 :                                         XElement *data = item->element->GetElement(TEXT("data"));

	push	OFFSET $SG4294712582
	mov	eax, DWORD PTR _item$57[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _data$34[ebp], eax

; 2462 :                                         if(data)

	cmp	DWORD PTR _data$34[ebp], 0
	je	$LN10@GlobalSour

; 2463 :                                         {
; 2464 :                                             if(scmpi(data->GetString(TEXT("name")), element->GetName()) == 0)

	mov	ecx, DWORD PTR _element$61[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	OFFSET $SG4294712581
	mov	ecx, DWORD PTR _data$34[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN10@GlobalSour

; 2465 :                                             {
; 2466 :                                                 if(App->bRunning)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+622]
	test	edx, edx
	je	$LN7@GlobalSour

; 2467 :                                                 {
; 2468 :                                                     for(UINT i=0; i<App->globalSources.Num(); i++)

	mov	DWORD PTR _i$70[ebp], 0
	jmp	SHORT $LN6@GlobalSour
$LN5@GlobalSour:
	mov	eax, DWORD PTR _i$70[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70[ebp], eax
$LN6@GlobalSour:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1376				; 00000560H
	call	?Num@?$List@UGlobalSourceInfo@@@@QBEIXZ	; List<GlobalSourceInfo>::Num
	cmp	DWORD PTR _i$70[ebp], eax
	jae	SHORT $LN7@GlobalSour

; 2469 :                                                     {
; 2470 :                                                         GlobalSourceInfo &info = App->globalSources[i];

	mov	ecx, DWORD PTR _i$70[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1376				; 00000560H
	call	??A?$List@UGlobalSourceInfo@@@@QAEAAUGlobalSourceInfo@@I@Z ; List<GlobalSourceInfo>::operator[]
	mov	DWORD PTR _info$59[ebp], eax

; 2471 :                                                         if(info.strName.CompareI(element->GetName()) && info.source)

	mov	ecx, DWORD PTR _element$61[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _info$59[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN3@GlobalSour
	mov	edx, DWORD PTR _info$59[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN3@GlobalSour

; 2472 :                                                             info.source->UpdateSettings();

	mov	eax, DWORD PTR _info$59[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _info$59[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN3@GlobalSour:

; 2473 :                                                     }

	jmp	$LN5@GlobalSour
$LN7@GlobalSour:

; 2474 :                                                 }
; 2475 : 
; 2476 :                                                 item->Update();

	mov	ecx, DWORD PTR _item$57[ebp]
	call	DWORD PTR __imp_?Update@SceneItem@@QAEXXZ
$LN10@GlobalSour:

; 2477 :                                             }
; 2478 :                                         }
; 2479 :                                     }
; 2480 :                                 }

	jmp	$LN12@GlobalSour
$LN14@GlobalSour:

; 2481 :                             }
; 2482 : 
; 2483 :                             App->LeaveSceneMutex();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?LeaveSceneMutex@OBS@@QAEXXZ		; OBS::LeaveSceneMutex
$LN15@GlobalSour:

; 2484 :                         }
; 2485 : 
; 2486 :                         break;

	jmp	SHORT $LN84@GlobalSour
$LN2@GlobalSour:

; 2487 :                     }
; 2488 : 
; 2489 :                 /*case IDC_MOVEUP:
; 2490 :                 case IDC_MOVEDOWN:
; 2491 :                 case IDC_MOVETOTOP:
; 2492 :                 case IDC_MOVETOBOTTOM:
; 2493 :                     {
; 2494 :                         HWND hwndSources = GetDlgItem(hwnd, IDC_SOURCES);
; 2495 : 
; 2496 :                         UINT id = (UINT)SendMessage(hwndSources, LB_GETCURSEL, 0, 0);
; 2497 :                         if(id == LB_ERR)
; 2498 :                             break;
; 2499 : 
; 2500 :                         XElement *globals = App->scenesConfig.GetElement(TEXT("global sources"));
; 2501 :                         if(!globals)
; 2502 :                             break;
; 2503 : 
; 2504 :                         XElement *element = globals->GetElementByID(id);
; 2505 :                         UINT numElements = globals->NumElements();
; 2506 : 
; 2507 :                         if(LOWORD(wParam) == IDC_MOVEUP)
; 2508 :                         {
; 2509 :                             if(id != 0)
; 2510 :                             {
; 2511 :                                 SendMessage(hwndSources, LB_DELETESTRING, id--, 0);
; 2512 :                                 SendMessage(hwndSources, LB_INSERTSTRING, id, (LPARAM)element->GetName());
; 2513 :                                 PostMessage(hwndSources, LB_SETCURSEL, id, 0);
; 2514 : 
; 2515 :                                 element->MoveUp();
; 2516 :                             }
; 2517 :                         }
; 2518 :                         else if(LOWORD(wParam) == IDC_MOVEDOWN)
; 2519 :                         {
; 2520 :                             if(id != (numElements-1))
; 2521 :                             {
; 2522 :                                 SendMessage(hwndSources, LB_DELETESTRING, id++, 0);
; 2523 :                                 SendMessage(hwndSources, LB_INSERTSTRING, id, (LPARAM)element->GetName());
; 2524 :                                 PostMessage(hwndSources, LB_SETCURSEL, id, 0);
; 2525 : 
; 2526 :                                 element->MoveDown();
; 2527 :                             }
; 2528 :                         }
; 2529 :                         else if(LOWORD(wParam) == IDC_MOVETOTOP)
; 2530 :                         {
; 2531 :                             if(id != 0)
; 2532 :                             {
; 2533 :                                 SendMessage(hwndSources, LB_DELETESTRING, id, 0);
; 2534 :                                 SendMessage(hwndSources, LB_INSERTSTRING, 0, (LPARAM)element->GetName());
; 2535 :                                 PostMessage(hwndSources, LB_SETCURSEL, 0, 0);
; 2536 : 
; 2537 :                                 element->MoveToTop();
; 2538 :                             }
; 2539 :                         }
; 2540 :                         else
; 2541 :                         {
; 2542 :                             if(id != (numElements-1))
; 2543 :                             {
; 2544 :                                 SendMessage(hwndSources, LB_DELETESTRING, id, 0);
; 2545 :                                 SendMessage(hwndSources, LB_INSERTSTRING, (numElements-1), (LPARAM)element->GetName());
; 2546 :                                 PostMessage(hwndSources, LB_SETCURSEL, (numElements-1), 0);
; 2547 : 
; 2548 :                                 element->MoveToBottom();
; 2549 :                             }
; 2550 :                         }
; 2551 :                         break;
; 2552 :                     }*/
; 2553 : 
; 2554 :                 case IDOK:
; 2555 :                     {
; 2556 :                         App->scenesConfig.Save();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Save@XConfig@@QAEXXZ

; 2557 :                         EndDialog(hwnd, IDOK);

	push	1
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8
$LN84@GlobalSour:

; 2558 :                     }
; 2559 :             }
; 2560 :             break;

	jmp	SHORT $LN92@GlobalSour
$LN1@GlobalSour:

; 2561 : 
; 2562 :         case WM_CLOSE:
; 2563 :             {
; 2564 :                 App->scenesConfig.Save();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Save@XConfig@@QAEXXZ

; 2565 :                 EndDialog(hwnd, IDOK);

	push	1
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
$LN92@GlobalSour:

; 2566 :             }
; 2567 :     }
; 2568 : 
; 2569 :     return FALSE;

	xor	eax, eax
$LN95@GlobalSour:

; 2570 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GlobalSourcesProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::GlobalSourcesProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GlobalSourcesImportProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_globalSource$1 = -32840				; size = 4
_numGlobals$2 = -32836					; size = 4
_strExists$3 = -32832					; size = 8
_hSources$4 = -32824					; size = 4
_newSourceElement$5 = -32820				; size = 4
_selectedGlobals$6 = -32816				; size = 4
_hwndSources$7 = -32812					; size = 4
_selectedItems$8 = -32808				; size = 4
tv94 = -32804						; size = 4
tv64 = -32800						; size = 4
_foundGlobalSource$9 = -32796				; size = 4
_globals$10 = -32792					; size = 4
_i$11 = -32788						; size = 4
_i$12 = -32784						; size = 4
_currentSceneGlobalSources$13 = -32780			; size = 4
_selectedGlobalSources$14 = -32776			; size = 4
_selectedItemsArray$15 = -32772				; size = 32768
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?GlobalSourcesImportProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::GlobalSourcesImportProc, COMDAT

; 2573 : {

	push	ebp
	mov	ebp, esp
	mov	eax, 32840				; 00008048H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi

; 2574 :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN17@GlobalSour
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN12@GlobalSour
	jmp	$LN18@GlobalSour
$LN17@GlobalSour:

; 2575 :     {
; 2576 :         case WM_INITDIALOG:
; 2577 :             {
; 2578 :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 2579 : 
; 2580 :                 HWND hwndSources = GetDlgItem(hwnd, IDC_SOURCES);

	push	1053					; 0000041dH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndSources$7[ebp], eax

; 2581 :                 XElement *globals = App->globalSourcesImportConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712580
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 180				; 000000b4H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _globals$10[ebp], eax

; 2582 :                 if(globals)

	cmp	DWORD PTR _globals$10[ebp], 0
	je	SHORT $LN16@GlobalSour

; 2583 :                 {
; 2584 :                     UINT numGlobals = globals->NumElements();

	push	0
	mov	ecx, DWORD PTR _globals$10[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numGlobals$2[ebp], eax

; 2585 : 
; 2586 :                     for(UINT i=0; i<numGlobals; i++)

	mov	DWORD PTR _i$12[ebp], 0
	jmp	SHORT $LN15@GlobalSour
$LN14@GlobalSour:
	mov	eax, DWORD PTR _i$12[ebp]
	add	eax, 1
	mov	DWORD PTR _i$12[ebp], eax
$LN15@GlobalSour:
	mov	ecx, DWORD PTR _i$12[ebp]
	cmp	ecx, DWORD PTR _numGlobals$2[ebp]
	jae	SHORT $LN16@GlobalSour

; 2587 :                     {
; 2588 :                         XElement *globalSource = globals->GetElementByID(i);

	mov	edx, DWORD PTR _i$12[ebp]
	push	edx
	mov	ecx, DWORD PTR _globals$10[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _globalSource$1[ebp], eax

; 2589 :                         SendMessage(hwndSources, LB_ADDSTRING, 0, (LPARAM)globalSource->GetName());

	mov	ecx, DWORD PTR _globalSource$1[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	384					; 00000180H
	mov	eax, DWORD PTR _hwndSources$7[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 2590 :                     }

	jmp	SHORT $LN14@GlobalSour
$LN16@GlobalSour:

; 2591 :                 }
; 2592 : 
; 2593 :                 return TRUE;

	mov	eax, 1
	jmp	$LN20@GlobalSour
$LN12@GlobalSour:

; 2594 :         }
; 2595 :         case WM_COMMAND:
; 2596 :             switch(LOWORD(wParam))

	movzx	ecx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv94[ebp], ecx
	cmp	DWORD PTR tv94[ebp], 1
	je	SHORT $LN9@GlobalSour
	cmp	DWORD PTR tv94[ebp], 2
	je	$LN1@GlobalSour
	jmp	$LN18@GlobalSour
$LN9@GlobalSour:

; 2597 :             {
; 2598 :                 case IDOK:
; 2599 :                     {
; 2600 :                         HWND  hSources = GetDlgItem(hwnd, IDC_SOURCES); 

	push	1053					; 0000041dH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hSources$4[ebp], eax

; 2601 :                         int  selectedItemsArray[8192];
; 2602 : 
; 2603 :                         UINT  selectedItems = (UINT)SendMessage(hSources, LB_GETSELITEMS, 512, (LPARAM) selectedItemsArray);

	lea	eax, DWORD PTR _selectedItemsArray$15[ebp]
	push	eax
	push	512					; 00000200H
	push	401					; 00000191H
	mov	ecx, DWORD PTR _hSources$4[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _selectedItems$8[ebp], eax

; 2604 :                         if( selectedItems == LB_ERR)

	cmp	DWORD PTR _selectedItems$8[ebp], -1
	jne	SHORT $LN8@GlobalSour

; 2605 :                             break;

	jmp	$LN18@GlobalSour
$LN8@GlobalSour:

; 2606 : 
; 2607 :                         for(UINT i = 0; i <  selectedItems; i++)

	mov	DWORD PTR _i$11[ebp], 0
	jmp	SHORT $LN7@GlobalSour
$LN6@GlobalSour:
	mov	edx, DWORD PTR _i$11[ebp]
	add	edx, 1
	mov	DWORD PTR _i$11[ebp], edx
$LN7@GlobalSour:
	mov	eax, DWORD PTR _i$11[ebp]
	cmp	eax, DWORD PTR _selectedItems$8[ebp]
	jae	$LN1@GlobalSour

; 2608 :                         {
; 2609 :                             XElement *selectedGlobals = App->globalSourcesImportConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712579
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 180				; 000000b4H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _selectedGlobals$6[ebp], eax

; 2610 : 
; 2611 :                             XElement *selectedGlobalSources = selectedGlobals->GetElementByID(selectedItemsArray[i]);

	mov	ecx, DWORD PTR _i$11[ebp]
	mov	edx, DWORD PTR _selectedItemsArray$15[ebp+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _selectedGlobals$6[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _selectedGlobalSources$14[ebp], eax

; 2612 :                             XElement *currentSceneGlobalSources = App->scenesConfig.GetElement(TEXT("global sources"));

	push	OFFSET $SG4294712578
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?GetElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _currentSceneGlobalSources$13[ebp], eax

; 2613 : 
; 2614 :                             if(!currentSceneGlobalSources)

	cmp	DWORD PTR _currentSceneGlobalSources$13[ebp], 0
	jne	SHORT $LN4@GlobalSour

; 2615 :                                 currentSceneGlobalSources = App->scenesConfig.CreateElement(TEXT("global sources"));

	push	OFFSET $SG4294712577
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?CreateElement@XConfig@@QAEPAVXElement@@PB_W@Z
	mov	DWORD PTR _currentSceneGlobalSources$13[ebp], eax
$LN4@GlobalSour:

; 2616 : 
; 2617 :                             if(currentSceneGlobalSources)

	cmp	DWORD PTR _currentSceneGlobalSources$13[ebp], 0
	je	$LN3@GlobalSour

; 2618 :                             {
; 2619 :                                 XElement *foundGlobalSource = currentSceneGlobalSources->GetElement(selectedGlobalSources->GetName());

	mov	ecx, DWORD PTR _selectedGlobalSources$14[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	ecx, DWORD PTR _currentSceneGlobalSources$13[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _foundGlobalSource$9[ebp], eax

; 2620 :                                 if(foundGlobalSource != NULL && selectedGlobalSources->GetName() != foundGlobalSource->GetName())

	cmp	DWORD PTR _foundGlobalSource$9[ebp], 0
	je	$LN3@GlobalSour
	mov	ecx, DWORD PTR _selectedGlobalSources$14[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _foundGlobalSource$9[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	cmp	esi, eax
	je	SHORT $LN3@GlobalSour

; 2621 :                                 {
; 2622 :                                     String strExists = Str("ImportGlobalSourceNameExists");

	push	OFFSET $SG4294712576
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strExists$3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 2623 :                                     strExists.FindReplace(TEXT("$1"), selectedGlobalSources->GetName());

	mov	ecx, DWORD PTR _selectedGlobalSources$14[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	OFFSET $SG4294712575
	lea	ecx, DWORD PTR _strExists$3[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 2624 :                                     OBSMessageBox(hwnd, strExists, NULL, 0);

	push	0
	push	0
	lea	ecx, DWORD PTR _strExists$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 2625 :                                     break;

	lea	ecx, DWORD PTR _strExists$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN1@GlobalSour
$LN3@GlobalSour:

; 2626 :                                 }
; 2627 :                             }
; 2628 : 
; 2629 :                             XElement *newSourceElement = currentSceneGlobalSources->CopyElement(selectedGlobalSources, selectedGlobalSources->GetName());

	mov	ecx, DWORD PTR _selectedGlobalSources$14[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	mov	edx, DWORD PTR _selectedGlobalSources$14[ebp]
	push	edx
	mov	ecx, DWORD PTR _currentSceneGlobalSources$13[ebp]
	call	DWORD PTR __imp_?CopyElement@XElement@@QAEPAV1@PAV1@PB_W@Z
	mov	DWORD PTR _newSourceElement$5[ebp], eax

; 2630 :                             newSourceElement->SetString(TEXT("class"), selectedGlobalSources->GetString(TEXT("class")));

	push	0
	push	OFFSET $SG4294712574
	mov	ecx, DWORD PTR _selectedGlobalSources$14[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	push	OFFSET $SG4294712573
	mov	ecx, DWORD PTR _newSourceElement$5[ebp]
	call	DWORD PTR __imp_?SetString@XElement@@QAEXPB_W0@Z

; 2631 :                         }

	jmp	$LN6@GlobalSour
$LN1@GlobalSour:

; 2632 :                     }
; 2633 : 
; 2634 :                 case IDCANCEL:
; 2635 :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	eax, WORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
$LN18@GlobalSour:

; 2636 :                     break;
; 2637 :             }
; 2638 :     }
; 2639 :     return 0;

	xor	eax, eax
$LN20@GlobalSour:

; 2640 : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GlobalSourcesImportProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::GlobalSourcesImportProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?AddProfilesToMenu@OBS@@CAXPAUHMENU__@@@Z
_TEXT	SEGMENT
_profileList$ = -20					; size = 8
_strProfile$1 = -12					; size = 4
_flags$2 = -8						; size = 4
_i$3 = -4						; size = 4
_menu$ = 8						; size = 4
?AddProfilesToMenu@OBS@@CAXPAUHMENU__@@@Z PROC		; OBS::AddProfilesToMenu, COMDAT

; 2743 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2744 :     StringList profileList;

	lea	ecx, DWORD PTR _profileList$[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 2745 :     GetProfiles(profileList);

	lea	eax, DWORD PTR _profileList$[ebp]
	push	eax
	call	?GetProfiles@OBS@@SAXAAVStringList@@@Z	; OBS::GetProfiles
	add	esp, 4

; 2746 : 
; 2747 :     for(UINT i=0; i<profileList.Num(); i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@AddProfile
$LN3@AddProfile:
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
$LN4@AddProfile:
	lea	ecx, DWORD PTR _profileList$[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	DWORD PTR _i$3[ebp], eax
	jae	SHORT $LN2@AddProfile

; 2748 :     {
; 2749 :         String &strProfile = profileList[i];

	mov	edx, DWORD PTR _i$3[ebp]
	push	edx
	lea	ecx, DWORD PTR _profileList$[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	DWORD PTR _strProfile$1[ebp], eax

; 2750 : 
; 2751 :         UINT flags = MF_STRING;

	mov	DWORD PTR _flags$2[ebp], 0

; 2752 :         if(strProfile.CompareI(GetCurrentProfile()))

	call	?GetCurrentProfile@OBS@@SAPB_WXZ	; OBS::GetCurrentProfile
	push	eax
	mov	ecx, DWORD PTR _strProfile$1[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN1@AddProfile

; 2753 :             flags |= MF_CHECKED;

	mov	eax, DWORD PTR _flags$2[ebp]
	or	eax, 8
	mov	DWORD PTR _flags$2[ebp], eax
$LN1@AddProfile:

; 2754 : 
; 2755 :         AppendMenu(menu, flags, ID_SWITCHPROFILE+i, strProfile.Array());

	mov	ecx, DWORD PTR _strProfile$1[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 5020				; 0000139cH
	push	ecx
	mov	edx, DWORD PTR _flags$2[ebp]
	push	edx
	mov	eax, DWORD PTR _menu$[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 2756 :     }

	jmp	SHORT $LN3@AddProfile
$LN2@AddProfile:

; 2757 : }

	lea	ecx, DWORD PTR _profileList$[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
?AddProfilesToMenu@OBS@@CAXPAUHMENU__@@@Z ENDP		; OBS::AddProfilesToMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?AddSceneCollectionToMenu@OBS@@CAXPAUHMENU__@@@Z
_TEXT	SEGMENT
_sceneCollectionList$ = -20				; size = 8
_strSceneCollection$1 = -12				; size = 4
_flags$2 = -8						; size = 4
_i$3 = -4						; size = 4
_menu$ = 8						; size = 4
?AddSceneCollectionToMenu@OBS@@CAXPAUHMENU__@@@Z PROC	; OBS::AddSceneCollectionToMenu, COMDAT

; 2760 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2761 :     StringList sceneCollectionList;

	lea	ecx, DWORD PTR _sceneCollectionList$[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 2762 :     GetSceneCollection(sceneCollectionList);

	lea	eax, DWORD PTR _sceneCollectionList$[ebp]
	push	eax
	call	?GetSceneCollection@OBS@@SAXAAVStringList@@@Z ; OBS::GetSceneCollection
	add	esp, 4

; 2763 : 
; 2764 :     for (UINT i = 0; i < sceneCollectionList.Num(); i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@AddSceneCo
$LN3@AddSceneCo:
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
$LN4@AddSceneCo:
	lea	ecx, DWORD PTR _sceneCollectionList$[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	DWORD PTR _i$3[ebp], eax
	jae	SHORT $LN2@AddSceneCo

; 2765 :     {
; 2766 :         String &strSceneCollection = sceneCollectionList[i];

	mov	edx, DWORD PTR _i$3[ebp]
	push	edx
	lea	ecx, DWORD PTR _sceneCollectionList$[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	DWORD PTR _strSceneCollection$1[ebp], eax

; 2767 : 
; 2768 :         UINT flags = MF_STRING;

	mov	DWORD PTR _flags$2[ebp], 0

; 2769 :         if (strSceneCollection.CompareI(GetCurrentSceneCollection()))

	call	?GetCurrentSceneCollection@OBS@@SAPB_WXZ ; OBS::GetCurrentSceneCollection
	push	eax
	mov	ecx, DWORD PTR _strSceneCollection$1[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN1@AddSceneCo

; 2770 :             flags |= MF_CHECKED;

	mov	eax, DWORD PTR _flags$2[ebp]
	or	eax, 8
	mov	DWORD PTR _flags$2[ebp], eax
$LN1@AddSceneCo:

; 2771 : 
; 2772 :         AppendMenu(menu, flags, ID_SWITCHSCENECOLLECTION+i, strSceneCollection.Array());

	mov	ecx, DWORD PTR _strSceneCollection$1[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 9026				; 00002342H
	push	ecx
	mov	edx, DWORD PTR _flags$2[ebp]
	push	edx
	mov	eax, DWORD PTR _menu$[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 2773 :     }

	jmp	SHORT $LN3@AddSceneCo
$LN2@AddSceneCo:

; 2774 : }

	lea	ecx, DWORD PTR _sceneCollectionList$[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
?AddSceneCollectionToMenu@OBS@@CAXPAUHMENU__@@@Z ENDP	; OBS::AddSceneCollectionToMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?AddSceneCollection@OBS@@AAEXW4SceneCollectionAction@@@Z
_TEXT	SEGMENT
$T1 = -64						; size = 8
$T2 = -56						; size = 8
$T3 = -48						; size = 8
_strCurSceneCollection$ = -40				; size = 8
_strSceneCollection$ = -32				; size = 8
_strCurSceneCollectionPath$ = -24			; size = 8
_strSceneCollectionPath$ = -16				; size = 8
_this$ = -8						; size = 4
_success$4 = -1						; size = 1
_action$ = 8						; size = 4
?AddSceneCollection@OBS@@AAEXW4SceneCollectionAction@@@Z PROC ; OBS::AddSceneCollection, COMDAT
; _this$ = ecx

; 2779 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 2780 :     if (App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	SHORT $LN14@AddSceneCo

; 2781 :         return;

	jmp	$LN15@AddSceneCo
$LN14@AddSceneCo:

; 2782 : 
; 2783 :     String strCurSceneCollection = GlobalConfig->GetString(TEXT("General"), TEXT("SceneCollection"));

	push	0
	push	OFFSET $SG4294712556
	push	OFFSET $SG4294712555
	lea	edx, DWORD PTR _strCurSceneCollection$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 2784 : 
; 2785 :     String strSceneCollection;

	lea	ecx, DWORD PTR _strSceneCollection$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2786 :     if (action == SceneCollectionAction::Rename)

	cmp	DWORD PTR _action$[ebp], 1
	jne	SHORT $LN13@AddSceneCo

; 2787 :         strSceneCollection = strCurSceneCollection;

	lea	eax, DWORD PTR _strCurSceneCollection$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSceneCollection$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
$LN13@AddSceneCo:

; 2788 : 
; 2789 :     if (OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterSceneCollectionDialogProc, (LPARAM)&strSceneCollection) != IDOK)

	lea	ecx, DWORD PTR _strSceneCollection$[ebp]
	push	ecx
	push	OFFSET ?EnterSceneCollectionDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterSceneCollectionDialogProc
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	push	122					; 0000007aH
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	je	SHORT $LN12@AddSceneCo

; 2790 :         return;

	lea	ecx, DWORD PTR _strSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN15@AddSceneCo
$LN12@AddSceneCo:

; 2791 : 
; 2792 :     App->scenesConfig.SaveTo(String() << lpAppDataPath << "\\scenes.xconfig");

	push	OFFSET $SG4294712554
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?SaveTo@XConfig@@QAEXPB_W@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2793 :     App->scenesConfig.Save();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Save@XConfig@@QAEXXZ

; 2794 : 
; 2795 :     String strCurSceneCollectionPath;

	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2796 :     strCurSceneCollectionPath = FormattedString(L"%s\\sceneCollection\\%s.xconfig", lpAppDataPath, strCurSceneCollection.Array());

	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	push	OFFSET $SG4294712553
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2797 : 
; 2798 :     String strSceneCollectionPath;

	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2799 :     strSceneCollectionPath << lpAppDataPath << TEXT("\\sceneCollection\\") << strSceneCollection << TEXT(".xconfig");

	push	OFFSET $SG4294712551
	lea	eax, DWORD PTR _strSceneCollection$[ebp]
	push	eax
	push	OFFSET $SG4294712552
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 2800 : 
; 2801 :     if ((action != SceneCollectionAction::Rename || !strSceneCollectionPath.CompareI(strCurSceneCollectionPath)) && OSFileExists(strSceneCollectionPath))

	cmp	DWORD PTR _action$[ebp], 1
	jne	SHORT $LN10@AddSceneCo
	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	SHORT $LN11@AddSceneCo
$LN10@AddSceneCo:
	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN11@AddSceneCo

; 2802 :         OBSMessageBox(hwndMain, Str("Settings.General.ScenesExists"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712550
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 2803 :     else

	jmp	$LN9@AddSceneCo
$LN11@AddSceneCo:

; 2804 :     {
; 2805 :         bool success = true;

	mov	BYTE PTR _success$4[ebp], 1

; 2806 :         App->scenesConfig.Close(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Close@XConfig@@QAEX_N@Z

; 2807 : 
; 2808 :         if (action == SceneCollectionAction::Rename)

	cmp	DWORD PTR _action$[ebp], 1
	jne	SHORT $LN8@AddSceneCo

; 2809 :         {
; 2810 :             if (!MoveFile(strCurSceneCollectionPath, strSceneCollectionPath))

	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp__MoveFileW@8
	test	eax, eax
	jne	SHORT $LN7@AddSceneCo

; 2811 :                 success = false;

	mov	BYTE PTR _success$4[ebp], 0
$LN7@AddSceneCo:

; 2812 :         }

	jmp	SHORT $LN6@AddSceneCo
$LN8@AddSceneCo:

; 2813 :         else if (action == SceneCollectionAction::Clone)

	cmp	DWORD PTR _action$[ebp], 2
	jne	SHORT $LN5@AddSceneCo

; 2814 :         {
; 2815 :             if (!CopyFileW(strCurSceneCollectionPath, strSceneCollectionPath, TRUE))

	push	1
	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp__CopyFileW@12
	test	eax, eax
	jne	SHORT $LN4@AddSceneCo

; 2816 :                 success = false;

	mov	BYTE PTR _success$4[ebp], 0
$LN4@AddSceneCo:

; 2817 :         }
; 2818 :         else

	jmp	SHORT $LN6@AddSceneCo
$LN5@AddSceneCo:

; 2819 :         {
; 2820 :             if (!App->scenesConfig.Open(strSceneCollectionPath))

	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Open@XConfig@@QAE_NPB_W@Z
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@AddSceneCo

; 2821 :             {
; 2822 :                 OBSMessageBox(hwndMain, TEXT("Error - unable to create new Scene Collection, could not create file"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712549
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 2823 :                 success = false;

	mov	BYTE PTR _success$4[ebp], 0
$LN6@AddSceneCo:

; 2824 :             }
; 2825 :         }
; 2826 : 
; 2827 :         if (!success)

	movzx	edx, BYTE PTR _success$4[ebp]
	test	edx, edx
	jne	SHORT $LN1@AddSceneCo

; 2828 :         {
; 2829 :             App->scenesConfig.Open(strCurSceneCollectionPath);

	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Open@XConfig@@QAE_NPB_W@Z

; 2830 :             return;

	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN15@AddSceneCo
$LN1@AddSceneCo:

; 2831 :         }
; 2832 : 
; 2833 :         GlobalConfig->SetString(TEXT("General"), TEXT("SceneCollection"), strSceneCollection);

	lea	ecx, DWORD PTR _strSceneCollection$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712548
	push	OFFSET $SG4294712547
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 2834 : 
; 2835 :         App->ReloadSceneCollection();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ReloadSceneCollection@OBS@@AAEXXZ	; OBS::ReloadSceneCollection

; 2836 :         App->ResetSceneCollectionMenu();

	call	?ResetSceneCollectionMenu@OBS@@CAXXZ	; OBS::ResetSceneCollectionMenu

; 2837 :         App->ResetApplicationName();

	call	?ResetApplicationName@OBS@@CAXXZ	; OBS::ResetApplicationName

; 2838 :         App->ReportSceneCollectionsChanged();

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+124]
	call	eax
$LN9@AddSceneCo:

; 2839 :     }
; 2840 : }

	lea	ecx, DWORD PTR _strSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollectionPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN15@AddSceneCo:
	mov	esp, ebp
	pop	ebp
	ret	4
?AddSceneCollection@OBS@@AAEXW4SceneCollectionAction@@@Z ENDP ; OBS::AddSceneCollection
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?RemoveSceneCollection@OBS@@AAEXXZ
_TEXT	SEGMENT
_this$ = -604						; size = 4
$T1 = -600						; size = 8
$T2 = -592						; size = 8
_strConfirm$ = -584					; size = 8
_strCurSceneCollectionPath$3 = -576			; size = 8
_strCurSceneCollectionFile$ = -568			; size = 8
_nextFile$ = -560					; size = 8
_strCurSceneCollectionDir$ = -552			; size = 8
_strCurSceneCollection$ = -544				; size = 8
_hFind$ = -536						; size = 4
_ofd$ = -532						; size = 528
__$ArrayPad$ = -4					; size = 4
?RemoveSceneCollection@OBS@@AAEXXZ PROC			; OBS::RemoveSceneCollection, COMDAT
; _this$ = ecx

; 2843 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 604				; 0000025cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 2844 :     if (App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	SHORT $LN8@RemoveScen

; 2845 :         return;

	jmp	$LN9@RemoveScen
$LN8@RemoveScen:

; 2846 : 
; 2847 :     String strCurSceneCollection = GlobalConfig->GetString(TEXT("General"), TEXT("SceneCollection"));

	push	0
	push	OFFSET $SG4294712546
	push	OFFSET $SG4294712545
	lea	edx, DWORD PTR _strCurSceneCollection$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 2848 :     String strCurSceneCollectionFile = strCurSceneCollection + L".xconfig";

	push	OFFSET $SG4294712544
	lea	eax, DWORD PTR _strCurSceneCollectionFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??HString@@QBE?AV0@PB_W@Z

; 2849 :     String strCurSceneCollectionDir;

	lea	ecx, DWORD PTR _strCurSceneCollectionDir$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2850 :     strCurSceneCollectionDir << lpAppDataPath << TEXT("\\sceneCollection\\");

	push	OFFSET $SG4294712543
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strCurSceneCollectionDir$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 2851 : 
; 2852 :     OSFindData ofd;
; 2853 :     HANDLE hFind = OSFindFirstFile(strCurSceneCollectionDir + L"*.xconfig", ofd);

	lea	ecx, DWORD PTR _ofd$[ebp]
	push	ecx
	push	OFFSET $SG4294712542
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	ecx, DWORD PTR _strCurSceneCollectionDir$[ebp]
	call	DWORD PTR __imp_??HString@@QBE?AV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFindFirstFile@@YGPAXPB_WAAUOSFindData@@@Z
	mov	DWORD PTR _hFind$[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2854 : 
; 2855 :     if (!hFind)

	cmp	DWORD PTR _hFind$[ebp], 0
	jne	SHORT $LN7@RemoveScen

; 2856 :     {
; 2857 :         Log(L"Find failed for scene collections");

	push	OFFSET $SG4294712541
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 4

; 2858 :         return;

	lea	ecx, DWORD PTR _strCurSceneCollectionDir$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN9@RemoveScen
$LN7@RemoveScen:

; 2859 :     }
; 2860 : 
; 2861 :     String nextFile;

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
$LN6@RemoveScen:

; 2862 : 
; 2863 :     do
; 2864 :     {
; 2865 :         if (scmpi(ofd.fileName, strCurSceneCollectionFile) != 0)

	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	eax, DWORD PTR _ofd$[ebp]
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	je	SHORT $LN5@RemoveScen

; 2866 :         {
; 2867 :             nextFile = ofd.fileName;

	lea	ecx, DWORD PTR _ofd$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 2868 :             break;

	jmp	SHORT $LN4@RemoveScen
$LN5@RemoveScen:

; 2869 :         }
; 2870 :     } while (OSFindNextFile(hFind, ofd));

	lea	edx, DWORD PTR _ofd$[ebp]
	push	edx
	mov	eax, DWORD PTR _hFind$[ebp]
	push	eax
	call	DWORD PTR __imp_?OSFindNextFile@@YGHPAXAAUOSFindData@@@Z
	test	eax, eax
	jne	SHORT $LN6@RemoveScen
$LN4@RemoveScen:

; 2871 :     OSFindClose(hFind);

	mov	ecx, DWORD PTR _hFind$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OSFindClose@@YGXPAX@Z

; 2872 : 
; 2873 :     if (nextFile.IsEmpty())

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN2@RemoveScen

; 2874 :         return;

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollectionDir$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN9@RemoveScen
$LN2@RemoveScen:

; 2875 : 
; 2876 :     String strConfirm = Str("Settings.General.ConfirmDelete");

	push	OFFSET $SG4294712540
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 2877 :     strConfirm.FindReplace(TEXT("$1"), strCurSceneCollection);

	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712539
	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 2878 :     if (OBSMessageBox(hwndMain, strConfirm, Str("DeleteConfirm.Title"), MB_YESNO) == IDYES)

	push	4
	push	OFFSET $SG4294712538
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	$LN1@RemoveScen

; 2879 :     {
; 2880 :         String strCurSceneCollectionPath;

	lea	ecx, DWORD PTR _strCurSceneCollectionPath$3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2881 :         strCurSceneCollectionPath << strCurSceneCollectionDir << strCurSceneCollection << TEXT(".xconfig");

	push	OFFSET $SG4294712537
	lea	edx, DWORD PTR _strCurSceneCollection$[ebp]
	push	edx
	lea	eax, DWORD PTR _strCurSceneCollectionDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCurSceneCollectionPath$3[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 2882 :         OSDeleteFile(strCurSceneCollectionPath);

	lea	ecx, DWORD PTR _strCurSceneCollectionPath$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSDeleteFile@@YGHPB_W@Z

; 2883 :         App->scenesConfig.Close();

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Close@XConfig@@QAEX_N@Z

; 2884 : 
; 2885 :         GlobalConfig->SetString(L"General", L"SceneCollection", GetPathWithoutExtension(nextFile));

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetPathWithoutExtension@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712536
	push	OFFSET $SG4294712535
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2886 : 
; 2887 :         App->ReloadSceneCollection();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ReloadSceneCollection@OBS@@AAEXXZ	; OBS::ReloadSceneCollection

; 2888 :         App->ResetSceneCollectionMenu();

	call	?ResetSceneCollectionMenu@OBS@@CAXXZ	; OBS::ResetSceneCollectionMenu

; 2889 :         App->ReportSceneCollectionsChanged();

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax+124]
	call	edx

; 2890 :     }

	lea	ecx, DWORD PTR _strCurSceneCollectionPath$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@RemoveScen:

; 2891 : }

	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollectionDir$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@RemoveScen:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveSceneCollection@OBS@@AAEXXZ ENDP			; OBS::RemoveSceneCollection
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ImportSceneCollection@OBS@@AAEXXZ
_TEXT	SEGMENT
_ofn$ = -1192						; size = 88
$T1 = -1104						; size = 8
$T2 = -1096						; size = 8
$T3 = -1088						; size = 8
_strCurSceneCollection$ = -1080				; size = 8
_bOpenFile$ = -1072					; size = 4
_this$ = -1068						; size = 4
$T4 = -1064						; size = 4
_strCurSceneCollectionFile$ = -1060			; size = 8
_curDirectory$ = -1052					; size = 522
_lpFile$ = -528						; size = 522
__$ArrayPad$ = -4					; size = 4
?ImportSceneCollection@OBS@@AAEXXZ PROC			; OBS::ImportSceneCollection, COMDAT
; _this$ = ecx

; 2894 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1192				; 000004a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 2895 :     if (OBSMessageBox(hwndMain, Str("ImportCollectionReplaceWarning.Text"), Str("ImportCollectionReplaceWarning.Title"), MB_YESNO) == IDNO)

	push	4
	push	OFFSET $SG4294712534
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712533
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 7
	jne	SHORT $LN3@ImportScen

; 2896 :         return;

	jmp	$LN4@ImportScen
$LN3@ImportScen:

; 2897 : 
; 2898 :     TCHAR lpFile[MAX_PATH+1];
; 2899 :     zero(lpFile, sizeof(lpFile));

	push	522					; 0000020aH
	lea	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 2900 : 
; 2901 :     OPENFILENAME ofn;
; 2902 :     zero(&ofn, sizeof(ofn));

	push	88					; 00000058H
	lea	ecx, DWORD PTR _ofn$[ebp]
	push	ecx
	call	?zero@@YGXPAXI@Z			; zero

; 2903 :     ofn.lStructSize = sizeof(ofn);

	mov	DWORD PTR _ofn$[ebp], 88		; 00000058H

; 2904 :     ofn.lpstrFile = lpFile;

	lea	edx, DWORD PTR _lpFile$[ebp]
	mov	DWORD PTR _ofn$[ebp+28], edx

; 2905 :     ofn.hwndOwner = hwndMain;

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	mov	DWORD PTR _ofn$[ebp+4], eax

; 2906 :     ofn.nMaxFile = MAX_PATH;

	mov	DWORD PTR _ofn$[ebp+32], 260		; 00000104H

; 2907 :     ofn.lpstrFilter = TEXT("Scene Files (*.xconfig)\0*.xconfig\0");

	mov	DWORD PTR _ofn$[ebp+12], OFFSET $SG4294712532

; 2908 :     ofn.nFilterIndex = 1;

	mov	DWORD PTR _ofn$[ebp+24], 1

; 2909 :     ofn.lpstrInitialDir = GlobalConfig->GetString(L"General", L"LastImportExportPath");

	push	0
	push	OFFSET $SG4294712531
	push	OFFSET $SG4294712530
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _ofn$[ebp+44], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2910 : 
; 2911 :     TCHAR curDirectory[MAX_PATH+1];
; 2912 :     GetCurrentDirectory(MAX_PATH, curDirectory);

	lea	edx, DWORD PTR _curDirectory$[ebp]
	push	edx
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 2913 : 
; 2914 :     BOOL bOpenFile = GetOpenFileName(&ofn);

	lea	eax, DWORD PTR _ofn$[ebp]
	push	eax
	call	_IsolationAwareGetOpenFileNameW@4
	mov	DWORD PTR _bOpenFile$[ebp], eax

; 2915 :     SetCurrentDirectory(curDirectory);

	lea	ecx, DWORD PTR _curDirectory$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetCurrentDirectoryW@4

; 2916 : 
; 2917 :     if (!bOpenFile)

	cmp	DWORD PTR _bOpenFile$[ebp], 0
	jne	SHORT $LN2@ImportScen

; 2918 :         return;

	jmp	$LN4@ImportScen
$LN2@ImportScen:

; 2919 : 
; 2920 :     if (GetPathExtension(lpFile).IsEmpty())

	lea	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathExtension@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN1@ImportScen

; 2921 :         scat(lpFile, L".xconfig");

	push	OFFSET $SG4294712529
	lea	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?scat@@YGXPA_WPB_W@Z
$LN1@ImportScen:

; 2922 : 
; 2923 :     GlobalConfig->SetString(L"General", L"LastImportExportPath", GetPathDirectory(lpFile));

	lea	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathDirectory@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712528
	push	OFFSET $SG4294712527
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2924 : 
; 2925 :     String strCurSceneCollection = GlobalConfig->GetString(TEXT("General"), TEXT("SceneCollection"));

	push	0
	push	OFFSET $SG4294712526
	push	OFFSET $SG4294712525
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 2926 :     String strCurSceneCollectionFile;

	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2927 :     strCurSceneCollectionFile << lpAppDataPath << TEXT("\\sceneCollection\\") << strCurSceneCollection << L".xconfig";

	push	OFFSET $SG4294712523
	lea	edx, DWORD PTR _strCurSceneCollection$[ebp]
	push	edx
	push	OFFSET $SG4294712524
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 2928 : 
; 2929 :     scenesConfig.Close();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?Close@XConfig@@QAEX_N@Z

; 2930 :     CopyFile(lpFile, strCurSceneCollectionFile, false);

	push	0
	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CopyFileW@12

; 2931 :     App->ReloadSceneCollection();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ReloadSceneCollection@OBS@@AAEXXZ	; OBS::ReloadSceneCollection

; 2932 :     App->ReportSceneCollectionsChanged();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 2933 : }

	lea	ecx, DWORD PTR _strCurSceneCollectionFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurSceneCollection$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN4@ImportScen:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ImportSceneCollection@OBS@@AAEXXZ ENDP			; OBS::ImportSceneCollection
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ExportSceneCollection@OBS@@AAEXXZ
_TEXT	SEGMENT
_ofn$ = -1176						; size = 88
$T1 = -1088						; size = 8
$T2 = -1080						; size = 8
$T3 = -1072						; size = 8
$T4 = -1064						; size = 4
_bSaveFile$ = -1060					; size = 4
_this$ = -1056						; size = 4
_curDirectory$ = -1052					; size = 522
_lpFile$ = -528						; size = 522
__$ArrayPad$ = -4					; size = 4
?ExportSceneCollection@OBS@@AAEXXZ PROC			; OBS::ExportSceneCollection, COMDAT
; _this$ = ecx

; 2936 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1176				; 00000498H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 2937 :     TCHAR lpFile[MAX_PATH+1];
; 2938 :     zero(lpFile, sizeof(lpFile));

	push	522					; 0000020aH
	lea	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 2939 : 
; 2940 :     OPENFILENAME ofn;
; 2941 :     zero(&ofn, sizeof(ofn));

	push	88					; 00000058H
	lea	ecx, DWORD PTR _ofn$[ebp]
	push	ecx
	call	?zero@@YGXPAXI@Z			; zero

; 2942 :     ofn.lStructSize = sizeof(ofn);

	mov	DWORD PTR _ofn$[ebp], 88		; 00000058H

; 2943 :     ofn.lpstrFile = lpFile;

	lea	edx, DWORD PTR _lpFile$[ebp]
	mov	DWORD PTR _ofn$[ebp+28], edx

; 2944 :     ofn.hwndOwner = hwndMain;

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	mov	DWORD PTR _ofn$[ebp+4], eax

; 2945 :     ofn.nMaxFile = MAX_PATH;

	mov	DWORD PTR _ofn$[ebp+32], 260		; 00000104H

; 2946 :     ofn.lpstrFilter = TEXT("Scene Files (*.xconfig)\0*.xconfig\0");

	mov	DWORD PTR _ofn$[ebp+12], OFFSET $SG4294712522

; 2947 :     ofn.nFilterIndex = 1;

	mov	DWORD PTR _ofn$[ebp+24], 1

; 2948 :     ofn.Flags = OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST;

	mov	DWORD PTR _ofn$[ebp+52], 6144		; 00001800H

; 2949 :     ofn.lpstrInitialDir = GlobalConfig->GetString(L"General", L"LastImportExportPath");

	push	0
	push	OFFSET $SG4294712521
	push	OFFSET $SG4294712520
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _ofn$[ebp+44], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2950 : 
; 2951 :     TCHAR curDirectory[MAX_PATH+1];
; 2952 :     GetCurrentDirectory(MAX_PATH, curDirectory);

	lea	edx, DWORD PTR _curDirectory$[ebp]
	push	edx
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 2953 : 
; 2954 :     BOOL bSaveFile = GetSaveFileName(&ofn);

	lea	eax, DWORD PTR _ofn$[ebp]
	push	eax
	call	_IsolationAwareGetSaveFileNameW@4
	mov	DWORD PTR _bSaveFile$[ebp], eax

; 2955 :     SetCurrentDirectory(curDirectory);

	lea	ecx, DWORD PTR _curDirectory$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetCurrentDirectoryW@4

; 2956 : 
; 2957 :     if (!bSaveFile)

	cmp	DWORD PTR _bSaveFile$[ebp], 0
	jne	SHORT $LN2@ExportScen

; 2958 :         return;

	jmp	$LN3@ExportScen
$LN2@ExportScen:

; 2959 : 
; 2960 :     if (GetPathExtension(lpFile).IsEmpty())

	lea	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathExtension@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN1@ExportScen

; 2961 :         scat(lpFile, L".xconfig");

	push	OFFSET $SG4294712519
	lea	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?scat@@YGXPA_WPB_W@Z
$LN1@ExportScen:

; 2962 : 
; 2963 :     GlobalConfig->SetString(L"General", L"LastImportExportPath", GetPathDirectory(lpFile));

	lea	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathDirectory@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712518
	push	OFFSET $SG4294712517
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2964 : 
; 2965 :     scenesConfig.SaveTo(lpFile);

	lea	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_?SaveTo@XConfig@@QAEXPB_W@Z
$LN3@ExportScen:

; 2966 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ExportSceneCollection@OBS@@AAEXXZ ENDP			; OBS::ExportSceneCollection
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?AddProfile@OBS@@AAEXW4ProfileAction@@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 8
_strCurProfile$ = -40					; size = 8
_strProfile$ = -32					; size = 8
_strCurProfilePath$ = -24				; size = 8
_strProfilePath$ = -16					; size = 8
_this$ = -8						; size = 4
_success$2 = -1						; size = 1
_action$ = 8						; size = 4
?AddProfile@OBS@@AAEXW4ProfileAction@@@Z PROC		; OBS::AddProfile, COMDAT
; _this$ = ecx

; 2971 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 2972 :     if (App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	SHORT $LN14@AddProfile

; 2973 :         return;

	jmp	$LN15@AddProfile
$LN14@AddProfile:

; 2974 : 
; 2975 :     String strCurProfile = GlobalConfig->GetString(TEXT("General"), TEXT("Profile"));

	push	0
	push	OFFSET $SG4294712516
	push	OFFSET $SG4294712515
	lea	edx, DWORD PTR _strCurProfile$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 2976 : 
; 2977 :     String strProfile;

	lea	ecx, DWORD PTR _strProfile$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2978 :     if (action == ProfileAction::Rename)

	cmp	DWORD PTR _action$[ebp], 1
	jne	SHORT $LN13@AddProfile

; 2979 :         strProfile = strCurProfile;

	lea	eax, DWORD PTR _strCurProfile$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strProfile$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
$LN13@AddProfile:

; 2980 : 
; 2981 :     if (OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_ENTERNAME), hwndMain, OBS::EnterProfileDialogProc, (LPARAM)&strProfile) != IDOK)

	lea	ecx, DWORD PTR _strProfile$[ebp]
	push	ecx
	push	OFFSET ?EnterProfileDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ; OBS::EnterProfileDialogProc
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	push	122					; 0000007aH
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	cmp	eax, 1
	je	SHORT $LN12@AddProfile

; 2982 :         return;

	lea	ecx, DWORD PTR _strProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN15@AddProfile
$LN12@AddProfile:

; 2983 : 
; 2984 :     String strCurProfilePath;

	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2985 :     strCurProfilePath = FormattedString(L"%s\\profiles\\%s.ini", lpAppDataPath, strCurProfile.Array());

	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	push	OFFSET $SG4294712514
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 2986 : 
; 2987 :     String strProfilePath;

	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 2988 :     strProfilePath << lpAppDataPath << TEXT("\\profiles\\") << strProfile << TEXT(".ini");

	push	OFFSET $SG4294712512
	lea	edx, DWORD PTR _strProfile$[ebp]
	push	edx
	push	OFFSET $SG4294712513
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 2989 : 
; 2990 :     if ((action != ProfileAction::Rename || !strProfilePath.CompareI(strCurProfilePath)) && OSFileExists(strProfilePath))

	cmp	DWORD PTR _action$[ebp], 1
	jne	SHORT $LN10@AddProfile
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	SHORT $LN11@AddProfile
$LN10@AddProfile:
	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN11@AddProfile

; 2991 :         OBSMessageBox(hwndMain, Str("MainMenu.Profiles.ProfileExists"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712511
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 2992 :     else

	jmp	$LN9@AddProfile
$LN11@AddProfile:

; 2993 :     {
; 2994 :         bool success = true;

	mov	BYTE PTR _success$2[ebp], 1

; 2995 : 
; 2996 :         if (action == ProfileAction::Rename)

	cmp	DWORD PTR _action$[ebp], 1
	jne	SHORT $LN8@AddProfile

; 2997 :         {
; 2998 :             if (!MoveFile(strCurProfilePath, strProfilePath))

	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp__MoveFileW@8
	test	eax, eax
	jne	SHORT $LN7@AddProfile

; 2999 :                 success = false;

	mov	BYTE PTR _success$2[ebp], 0
$LN7@AddProfile:

; 3000 :             AppConfig->SetFilePath(strProfilePath);

	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetFilePath@ConfigFile@@QAEXPB_W@Z
	jmp	$LN6@AddProfile
$LN8@AddProfile:

; 3001 :         }
; 3002 :         else if (action == ProfileAction::Clone)

	cmp	DWORD PTR _action$[ebp], 2
	jne	SHORT $LN5@AddProfile

; 3003 :         {
; 3004 :             if (!CopyFileW(strCurProfilePath, strProfilePath, TRUE))

	push	1
	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp__CopyFileW@12
	test	eax, eax
	jne	SHORT $LN4@AddProfile

; 3005 :                 success = false;

	mov	BYTE PTR _success$2[ebp], 0
$LN4@AddProfile:

; 3006 :         }
; 3007 :         else

	jmp	SHORT $LN6@AddProfile
$LN5@AddProfile:

; 3008 :         {
; 3009 :             if(!AppConfig->Create(strProfilePath))

	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?Create@ConfigFile@@QAEHPB_W@Z
	test	eax, eax
	jne	SHORT $LN6@AddProfile

; 3010 :             {
; 3011 :                 OBSMessageBox(hwndMain, TEXT("Error - unable to create new profile, could not create file"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712510
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 3012 :                 return;

	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN15@AddProfile
$LN6@AddProfile:

; 3013 :             }
; 3014 :         }
; 3015 : 
; 3016 :         if (!success)

	movzx	eax, BYTE PTR _success$2[ebp]
	test	eax, eax
	jne	SHORT $LN1@AddProfile

; 3017 :         {
; 3018 :             AppConfig->Open(strCurProfilePath);

	push	0
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?Open@ConfigFile@@QAEHPB_WH@Z

; 3019 :             return;

	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN15@AddProfile
$LN1@AddProfile:

; 3020 :         }
; 3021 : 
; 3022 :         GlobalConfig->SetString(TEXT("General"), TEXT("Profile"), strProfile);

	lea	ecx, DWORD PTR _strProfile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712509
	push	OFFSET $SG4294712508
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 3023 : 
; 3024 :         App->ReloadIniSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ReloadIniSettings@OBS@@AAEXXZ		; OBS::ReloadIniSettings

; 3025 :         App->ResetProfileMenu();

	call	?ResetProfileMenu@OBS@@CAXXZ		; OBS::ResetProfileMenu

; 3026 :         App->ResetApplicationName();

	call	?ResetApplicationName@OBS@@CAXXZ	; OBS::ResetApplicationName
$LN9@AddProfile:

; 3027 :     }
; 3028 : }

	lea	ecx, DWORD PTR _strProfilePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfilePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN15@AddProfile:
	mov	esp, ebp
	pop	ebp
	ret	4
?AddProfile@OBS@@AAEXW4ProfileAction@@@Z ENDP		; OBS::AddProfile
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?RemoveProfile@OBS@@AAEXXZ
_TEXT	SEGMENT
_this$ = -604						; size = 4
$T1 = -600						; size = 8
$T2 = -592						; size = 8
_strConfirm$ = -584					; size = 8
_strCurProfileFile$ = -576				; size = 8
_hFind$ = -568						; size = 4
_strCurProfilePath$3 = -564				; size = 8
_nextFile$ = -556					; size = 8
_strCurProfile$ = -548					; size = 8
_strCurProfileDir$ = -540				; size = 8
_ofd$ = -532						; size = 528
__$ArrayPad$ = -4					; size = 4
?RemoveProfile@OBS@@AAEXXZ PROC				; OBS::RemoveProfile, COMDAT
; _this$ = ecx

; 3031 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 604				; 0000025cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 3032 :     if (App->bRunning)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+622]
	test	ecx, ecx
	je	SHORT $LN9@RemoveProf

; 3033 :         return;

	jmp	$LN10@RemoveProf
$LN9@RemoveProf:

; 3034 : 
; 3035 :     String strCurProfile = GlobalConfig->GetString(TEXT("General"), TEXT("Profile"));

	push	0
	push	OFFSET $SG4294712507
	push	OFFSET $SG4294712506
	lea	edx, DWORD PTR _strCurProfile$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 3036 : 
; 3037 :     String strCurProfileFile = strCurProfile + L".ini";

	push	OFFSET $SG4294712505
	lea	eax, DWORD PTR _strCurProfileFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??HString@@QBE?AV0@PB_W@Z

; 3038 :     String strCurProfileDir;

	lea	ecx, DWORD PTR _strCurProfileDir$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3039 :     strCurProfileDir << lpAppDataPath << TEXT("\\profiles\\");

	push	OFFSET $SG4294712504
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strCurProfileDir$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 3040 : 
; 3041 :     OSFindData ofd;
; 3042 :     HANDLE hFind = OSFindFirstFile(strCurProfileDir + L"*.ini", ofd);

	lea	ecx, DWORD PTR _ofd$[ebp]
	push	ecx
	push	OFFSET $SG4294712503
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	ecx, DWORD PTR _strCurProfileDir$[ebp]
	call	DWORD PTR __imp_??HString@@QBE?AV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFindFirstFile@@YGPAXPB_WAAUOSFindData@@@Z
	mov	DWORD PTR _hFind$[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3043 : 
; 3044 :     if (!hFind)

	cmp	DWORD PTR _hFind$[ebp], 0
	jne	SHORT $LN8@RemoveProf

; 3045 :     {
; 3046 :         Log(L"Find failed for profile");

	push	OFFSET $SG4294712502
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 4

; 3047 :         return;

	lea	ecx, DWORD PTR _strCurProfileDir$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN10@RemoveProf
$LN8@RemoveProf:

; 3048 :     }
; 3049 : 
; 3050 :     String nextFile;

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
$LN7@RemoveProf:

; 3051 : 
; 3052 :     do
; 3053 :     {
; 3054 :         if (scmpi(ofd.fileName, strCurProfileFile) != 0)

	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	eax, DWORD PTR _ofd$[ebp]
	push	eax
	call	DWORD PTR __imp_?scmpi@@YGHPB_W0@Z
	test	eax, eax
	je	SHORT $LN6@RemoveProf

; 3055 :         {
; 3056 :             nextFile = ofd.fileName;

	lea	ecx, DWORD PTR _ofd$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 3057 :             break;

	jmp	SHORT $LN5@RemoveProf
$LN6@RemoveProf:

; 3058 :         }
; 3059 :     } while (OSFindNextFile(hFind, ofd));

	lea	edx, DWORD PTR _ofd$[ebp]
	push	edx
	mov	eax, DWORD PTR _hFind$[ebp]
	push	eax
	call	DWORD PTR __imp_?OSFindNextFile@@YGHPAXAAUOSFindData@@@Z
	test	eax, eax
	jne	SHORT $LN7@RemoveProf
$LN5@RemoveProf:

; 3060 :     OSFindClose(hFind);

	mov	ecx, DWORD PTR _hFind$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OSFindClose@@YGXPAX@Z

; 3061 : 
; 3062 :     if (nextFile.IsEmpty())

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN3@RemoveProf

; 3063 :         return;

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfileDir$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN10@RemoveProf
$LN3@RemoveProf:

; 3064 : 
; 3065 :     String strConfirm = Str("Settings.General.ConfirmDelete");

	push	OFFSET $SG4294712501
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 3066 :     strConfirm.FindReplace(TEXT("$1"), strCurProfile);

	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712500
	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 3067 :     if (OBSMessageBox(hwndMain, strConfirm, Str("DeleteConfirm.Title"), MB_YESNO) == IDYES)

	push	4
	push	OFFSET $SG4294712499
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	$LN2@RemoveProf

; 3068 :     {
; 3069 :         String strCurProfilePath;

	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3070 :         strCurProfilePath << strCurProfileDir << strCurProfile << TEXT(".ini");

	push	OFFSET $SG4294712498
	lea	edx, DWORD PTR _strCurProfile$[ebp]
	push	edx
	lea	eax, DWORD PTR _strCurProfileDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 3071 :         OSDeleteFile(strCurProfilePath);

	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSDeleteFile@@YGHPB_W@Z

; 3072 : 
; 3073 :         GlobalConfig->SetString(L"General", L"Profile", GetPathWithoutExtension(nextFile));

	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetPathWithoutExtension@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712497
	push	OFFSET $SG4294712496
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3074 : 
; 3075 :         strCurProfilePath.Clear();

	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_?Clear@String@@QAEAAV1@XZ

; 3076 :         strCurProfilePath << strCurProfileDir << nextFile;

	lea	edx, DWORD PTR _nextFile$[ebp]
	push	edx
	lea	eax, DWORD PTR _strCurProfileDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z

; 3077 :         if (!AppConfig->Open(strCurProfilePath))

	push	0
	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?Open@ConfigFile@@QAEHPB_WH@Z
	test	eax, eax
	jne	SHORT $LN1@RemoveProf

; 3078 :         {
; 3079 :             OBSMessageBox(hwndMain, TEXT("Error - unable to open ini file"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712495
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 3080 :             return;

	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfileDir$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN10@RemoveProf
$LN1@RemoveProf:

; 3081 :         }
; 3082 : 
; 3083 :         App->ReloadIniSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ReloadIniSettings@OBS@@AAEXXZ		; OBS::ReloadIniSettings

; 3084 :         App->ResetApplicationName();

	call	?ResetApplicationName@OBS@@CAXXZ	; OBS::ResetApplicationName

; 3085 :         App->ResetProfileMenu();

	call	?ResetProfileMenu@OBS@@CAXXZ		; OBS::ResetProfileMenu

; 3086 :     }

	lea	ecx, DWORD PTR _strCurProfilePath$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN2@RemoveProf:

; 3087 : }

	lea	ecx, DWORD PTR _strConfirm$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _nextFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfileDir$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN10@RemoveProf:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveProfile@OBS@@AAEXXZ ENDP				; OBS::RemoveProfile
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ImportProfile@OBS@@AAEXXZ
_TEXT	SEGMENT
_ofn$ = -1192						; size = 88
_this$ = -1104						; size = 4
$T1 = -1100						; size = 8
$T2 = -1092						; size = 8
$T3 = -1084						; size = 8
$T4 = -1076						; size = 4
_strCurProfile$ = -1072					; size = 8
_bOpenFile$ = -1064					; size = 4
_strCurProfileFile$ = -1060				; size = 8
_curDirectory$ = -1052					; size = 522
_lpFile$ = -528						; size = 522
__$ArrayPad$ = -4					; size = 4
?ImportProfile@OBS@@AAEXXZ PROC				; OBS::ImportProfile, COMDAT
; _this$ = ecx

; 3090 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1192				; 000004a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 3091 :     if (OBSMessageBox(hwndMain, Str("ImportProfileReplaceWarning.Text"), Str("ImportProfileReplaceWarning.Title"), MB_YESNO) == IDNO)

	push	4
	push	OFFSET $SG4294712494
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712493
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 7
	jne	SHORT $LN4@ImportProf

; 3092 :         return;

	jmp	$LN5@ImportProf
$LN4@ImportProf:

; 3093 : 
; 3094 :     TCHAR lpFile[MAX_PATH+1];
; 3095 :     zero(lpFile, sizeof(lpFile));

	push	522					; 0000020aH
	lea	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 3096 : 
; 3097 :     OPENFILENAME ofn;
; 3098 :     zero(&ofn, sizeof(ofn));

	push	88					; 00000058H
	lea	ecx, DWORD PTR _ofn$[ebp]
	push	ecx
	call	?zero@@YGXPAXI@Z			; zero

; 3099 :     ofn.lStructSize = sizeof(ofn);

	mov	DWORD PTR _ofn$[ebp], 88		; 00000058H

; 3100 :     ofn.lpstrFile = lpFile;

	lea	edx, DWORD PTR _lpFile$[ebp]
	mov	DWORD PTR _ofn$[ebp+28], edx

; 3101 :     ofn.hwndOwner = hwndMain;

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	mov	DWORD PTR _ofn$[ebp+4], eax

; 3102 :     ofn.nMaxFile = MAX_PATH;

	mov	DWORD PTR _ofn$[ebp+32], 260		; 00000104H

; 3103 :     ofn.lpstrFilter = TEXT("Profile Files (*.ini)\0*.ini\0");

	mov	DWORD PTR _ofn$[ebp+12], OFFSET $SG4294712492

; 3104 :     ofn.nFilterIndex = 1;

	mov	DWORD PTR _ofn$[ebp+24], 1

; 3105 :     ofn.lpstrInitialDir = GlobalConfig->GetString(L"General", L"LastImportExportPath");

	push	0
	push	OFFSET $SG4294712491
	push	OFFSET $SG4294712490
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _ofn$[ebp+44], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3106 : 
; 3107 :     TCHAR curDirectory[MAX_PATH+1];
; 3108 :     GetCurrentDirectory(MAX_PATH, curDirectory);

	lea	edx, DWORD PTR _curDirectory$[ebp]
	push	edx
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 3109 : 
; 3110 :     BOOL bOpenFile = GetOpenFileName(&ofn);

	lea	eax, DWORD PTR _ofn$[ebp]
	push	eax
	call	_IsolationAwareGetOpenFileNameW@4
	mov	DWORD PTR _bOpenFile$[ebp], eax

; 3111 :     SetCurrentDirectory(curDirectory);

	lea	ecx, DWORD PTR _curDirectory$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetCurrentDirectoryW@4

; 3112 : 
; 3113 :     if (!bOpenFile)

	cmp	DWORD PTR _bOpenFile$[ebp], 0
	jne	SHORT $LN3@ImportProf

; 3114 :         return;

	jmp	$LN5@ImportProf
$LN3@ImportProf:

; 3115 : 
; 3116 :     if (GetPathExtension(lpFile).IsEmpty())

	lea	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathExtension@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN2@ImportProf

; 3117 :         scat(lpFile, L".ini");

	push	OFFSET $SG4294712489
	lea	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?scat@@YGXPA_WPB_W@Z
$LN2@ImportProf:

; 3118 : 
; 3119 :     GlobalConfig->SetString(L"General", L"LastImportExportPath", GetPathDirectory(lpFile));

	lea	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathDirectory@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712488
	push	OFFSET $SG4294712487
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3120 : 
; 3121 :     String strCurProfile = GlobalConfig->GetString(TEXT("General"), TEXT("Profile"));

	push	0
	push	OFFSET $SG4294712486
	push	OFFSET $SG4294712485
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 3122 :     String strCurProfileFile;

	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3123 :     strCurProfileFile << lpAppDataPath << TEXT("\\profiles\\") << strCurProfile << L".ini";

	push	OFFSET $SG4294712483
	lea	edx, DWORD PTR _strCurProfile$[ebp]
	push	edx
	push	OFFSET $SG4294712484
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 3124 : 
; 3125 :     CopyFile(lpFile, strCurProfileFile, false);

	push	0
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CopyFileW@12

; 3126 : 
; 3127 :     if(!AppConfig->Open(strCurProfileFile))

	push	0
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?Open@ConfigFile@@QAEHPB_WH@Z
	test	eax, eax
	jne	SHORT $LN1@ImportProf

; 3128 :     {
; 3129 :         OBSMessageBox(hwndMain, TEXT("Error - unable to open ini file"), NULL, 0);

	push	0
	push	0
	push	OFFSET $SG4294712482
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 3130 :         return;

	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN5@ImportProf
$LN1@ImportProf:

; 3131 :     }
; 3132 : 
; 3133 :     App->ReloadIniSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ReloadIniSettings@OBS@@AAEXXZ		; OBS::ReloadIniSettings

; 3134 : }

	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN5@ImportProf:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ImportProfile@OBS@@AAEXXZ ENDP				; OBS::ImportProfile
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ExportProfile@OBS@@AAEXXZ
_TEXT	SEGMENT
_ofn$ = -1192						; size = 88
_this$ = -1104						; size = 4
$T1 = -1100						; size = 8
$T2 = -1092						; size = 8
$T3 = -1084						; size = 8
_strCurProfile$ = -1076					; size = 8
$T4 = -1068						; size = 4
_bSaveFile$ = -1064					; size = 4
_strCurProfileFile$ = -1060				; size = 8
_curDirectory$ = -1052					; size = 522
_lpFile$ = -528						; size = 522
__$ArrayPad$ = -4					; size = 4
?ExportProfile@OBS@@AAEXXZ PROC				; OBS::ExportProfile, COMDAT
; _this$ = ecx

; 3137 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1192				; 000004a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 3138 :     TCHAR lpFile[MAX_PATH+1];
; 3139 :     zero(lpFile, sizeof(lpFile));

	push	522					; 0000020aH
	lea	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 3140 : 
; 3141 :     OPENFILENAME ofn;
; 3142 :     zero(&ofn, sizeof(ofn));

	push	88					; 00000058H
	lea	ecx, DWORD PTR _ofn$[ebp]
	push	ecx
	call	?zero@@YGXPAXI@Z			; zero

; 3143 :     ofn.lStructSize = sizeof(ofn);

	mov	DWORD PTR _ofn$[ebp], 88		; 00000058H

; 3144 :     ofn.lpstrFile = lpFile;

	lea	edx, DWORD PTR _lpFile$[ebp]
	mov	DWORD PTR _ofn$[ebp+28], edx

; 3145 :     ofn.hwndOwner = hwndMain;

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	mov	DWORD PTR _ofn$[ebp+4], eax

; 3146 :     ofn.nMaxFile = MAX_PATH;

	mov	DWORD PTR _ofn$[ebp+32], 260		; 00000104H

; 3147 :     ofn.lpstrFilter = TEXT("Profile Files (*.ini)\0*.ini\0");

	mov	DWORD PTR _ofn$[ebp+12], OFFSET $SG4294712481

; 3148 :     ofn.nFilterIndex = 1;

	mov	DWORD PTR _ofn$[ebp+24], 1

; 3149 :     ofn.Flags = OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST;

	mov	DWORD PTR _ofn$[ebp+52], 6144		; 00001800H

; 3150 :     ofn.lpstrInitialDir = GlobalConfig->GetString(L"General", L"LastImportExportPath");

	push	0
	push	OFFSET $SG4294712480
	push	OFFSET $SG4294712479
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _ofn$[ebp+44], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3151 : 
; 3152 :     TCHAR curDirectory[MAX_PATH+1];
; 3153 :     GetCurrentDirectory(MAX_PATH, curDirectory);

	lea	edx, DWORD PTR _curDirectory$[ebp]
	push	edx
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 3154 : 
; 3155 :     BOOL bSaveFile = GetSaveFileName(&ofn);

	lea	eax, DWORD PTR _ofn$[ebp]
	push	eax
	call	_IsolationAwareGetSaveFileNameW@4
	mov	DWORD PTR _bSaveFile$[ebp], eax

; 3156 :     SetCurrentDirectory(curDirectory);

	lea	ecx, DWORD PTR _curDirectory$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetCurrentDirectoryW@4

; 3157 : 
; 3158 :     if (!bSaveFile)

	cmp	DWORD PTR _bSaveFile$[ebp], 0
	jne	SHORT $LN2@ExportProf

; 3159 :         return;

	jmp	$LN3@ExportProf
$LN2@ExportProf:

; 3160 : 
; 3161 :     if (GetPathExtension(lpFile).IsEmpty())

	lea	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathExtension@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	mov	DWORD PTR $T4[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN1@ExportProf

; 3162 :         scat(lpFile, L".ini");

	push	OFFSET $SG4294712478
	lea	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?scat@@YGXPA_WPB_W@Z
$LN1@ExportProf:

; 3163 : 
; 3164 :     String strCurProfile = GlobalConfig->GetString(TEXT("General"), TEXT("Profile"));

	push	0
	push	OFFSET $SG4294712477
	push	OFFSET $SG4294712476
	lea	edx, DWORD PTR _strCurProfile$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 3165 :     String strCurProfileFile;

	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3166 :     strCurProfileFile << lpAppDataPath << TEXT("\\profiles\\") << strCurProfile << L".ini";

	push	OFFSET $SG4294712474
	lea	eax, DWORD PTR _strCurProfile$[ebp]
	push	eax
	push	OFFSET $SG4294712475
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 3167 : 
; 3168 :     GlobalConfig->SetString(L"General", L"LastImportExportPath", GetPathDirectory(lpFile));

	lea	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	DWORD PTR __imp_?GetPathDirectory@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294712473
	push	OFFSET $SG4294712472
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3169 : 
; 3170 :     CopyFile(strCurProfileFile, lpFile,  false);

	push	0
	lea	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp__CopyFileW@12

; 3171 : }

	lea	ecx, DWORD PTR _strCurProfileFile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strCurProfile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN3@ExportProf:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ExportProfile@OBS@@AAEXXZ ENDP				; OBS::ExportProfile
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?LogUploadMonitorCallback@@YAXXZ
_TEXT	SEGMENT
?LogUploadMonitorCallback@@YAXXZ PROC			; LogUploadMonitorCallback, COMDAT

; 3210 : {

	push	ebp
	mov	ebp, esp

; 3211 :     PostMessage(hwndMain, WM_COMMAND, MAKEWPARAM(ID_REFRESH_LOGS, 0), 0);

	push	0
	push	8023					; 00001f57H
	push	273					; 00000111H
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__PostMessageW@16

; 3212 : }

	pop	ebp
	ret	0
?LogUploadMonitorCallback@@YAXXZ ENDP			; LogUploadMonitorCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?FindParent@@YAPAUHMENU__@@PAU1@IPAVString@@@Z
_TEXT	SEGMENT
_verifier$ = -124					; size = 48
_info$ = -76						; size = 48
tv92 = -28						; size = 4
tv135 = -24						; size = 4
_count$ = -20						; size = 4
_submenu$1 = -16					; size = 4
tv67 = -12						; size = 4
_i$2 = -8						; size = 4
_found$ = -1						; size = 1
_root$ = 8						; size = 4
_id$ = 12						; size = 4
_name$ = 16						; size = 4
?FindParent@@YAPAUHMENU__@@PAU1@IPAVString@@@Z PROC	; FindParent, COMDAT

; 3217 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 3218 :     MENUITEMINFO info;
; 3219 :     zero(&info, sizeof(info));

	push	48					; 00000030H
	lea	eax, DWORD PTR _info$[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 3220 :     info.cbSize = sizeof(info);

	mov	DWORD PTR _info$[ebp], 48		; 00000030H

; 3221 :     info.fMask = MIIM_SUBMENU | (name ? MIIM_STRING : 0);

	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN10@FindParent
	mov	DWORD PTR tv67[ebp], 64			; 00000040H
	jmp	SHORT $LN11@FindParent
$LN10@FindParent:
	mov	DWORD PTR tv67[ebp], 0
$LN11@FindParent:
	mov	ecx, DWORD PTR tv67[ebp]
	or	ecx, 4
	mov	DWORD PTR _info$[ebp+4], ecx

; 3222 : 
; 3223 :     MENUITEMINFO verifier;
; 3224 :     zero(&verifier, sizeof(verifier));

	push	48					; 00000030H
	lea	edx, DWORD PTR _verifier$[ebp]
	push	edx
	call	?zero@@YGXPAXI@Z			; zero

; 3225 :     verifier.cbSize = sizeof(verifier);

	mov	DWORD PTR _verifier$[ebp], 48		; 00000030H

; 3226 : 
; 3227 :     bool found = false;

	mov	BYTE PTR _found$[ebp], 0

; 3228 : 
; 3229 :     int count = GetMenuItemCount(root);

	mov	eax, DWORD PTR _root$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenuItemCount@4
	mov	DWORD PTR _count$[ebp], eax

; 3230 :     for (int i = 0; i < count; i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN7@FindParent
$LN6@FindParent:
	mov	ecx, DWORD PTR _i$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$2[ebp], ecx
$LN7@FindParent:
	mov	edx, DWORD PTR _i$2[ebp]
	cmp	edx, DWORD PTR _count$[ebp]
	jge	$LN5@FindParent

; 3231 :     {
; 3232 :         info.cch = 0;

	mov	DWORD PTR _info$[ebp+40], 0

; 3233 :         if (!GetMenuItemInfo(root, i, true, &info))

	lea	eax, DWORD PTR _info$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _i$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _root$[ebp]
	push	edx
	call	DWORD PTR __imp__GetMenuItemInfoW@16
	test	eax, eax
	jne	SHORT $LN4@FindParent

; 3234 :             continue;

	jmp	SHORT $LN6@FindParent
$LN4@FindParent:

; 3235 : 
; 3236 :         if (!info.hSubMenu)

	cmp	DWORD PTR _info$[ebp+20], 0
	jne	SHORT $LN3@FindParent

; 3237 :             continue;

	jmp	SHORT $LN6@FindParent
$LN3@FindParent:

; 3238 : 
; 3239 :         HMENU submenu = info.hSubMenu;

	mov	eax, DWORD PTR _info$[ebp+20]
	mov	DWORD PTR _submenu$1[ebp], eax

; 3240 :         if (!GetMenuItemInfo(submenu, id, false, &verifier))

	lea	ecx, DWORD PTR _verifier$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _submenu$1[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenuItemInfoW@16
	test	eax, eax
	jne	SHORT $LN2@FindParent

; 3241 :             continue;

	jmp	SHORT $LN6@FindParent
$LN2@FindParent:

; 3242 : 
; 3243 :         if (name)

	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN1@FindParent

; 3244 :         {
; 3245 :             name->SetLength(info.cch++);

	mov	ecx, DWORD PTR _info$[ebp+40]
	mov	DWORD PTR tv92[ebp], ecx
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z
	mov	eax, DWORD PTR _info$[ebp+40]
	add	eax, 1
	mov	DWORD PTR _info$[ebp+40], eax

; 3246 :             info.dwTypeData = name->Array();

	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR _info$[ebp+36], eax

; 3247 :             GetMenuItemInfo(root, i, true, &info);

	lea	ecx, DWORD PTR _info$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _i$2[ebp]
	push	edx
	mov	eax, DWORD PTR _root$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenuItemInfoW@16

; 3248 :             info.dwTypeData = nullptr;

	mov	DWORD PTR _info$[ebp+36], 0
$LN1@FindParent:

; 3249 :         }
; 3250 : 
; 3251 :         found = true;

	mov	BYTE PTR _found$[ebp], 1

; 3252 : 
; 3253 :         root = submenu;

	mov	ecx, DWORD PTR _submenu$1[ebp]
	mov	DWORD PTR _root$[ebp], ecx

; 3254 :         i = 0;

	mov	DWORD PTR _i$2[ebp], 0

; 3255 :         count = GetMenuItemCount(root);

	mov	edx, DWORD PTR _root$[ebp]
	push	edx
	call	DWORD PTR __imp__GetMenuItemCount@4
	mov	DWORD PTR _count$[ebp], eax

; 3256 :     }

	jmp	$LN6@FindParent
$LN5@FindParent:

; 3257 : 
; 3258 :     return found ? root : nullptr;

	movzx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	je	SHORT $LN12@FindParent
	mov	ecx, DWORD PTR _root$[ebp]
	mov	DWORD PTR tv135[ebp], ecx
	jmp	SHORT $LN13@FindParent
$LN12@FindParent:
	mov	DWORD PTR tv135[ebp], 0
$LN13@FindParent:
	mov	eax, DWORD PTR tv135[ebp]

; 3259 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindParent@@YAPAUHMENU__@@PAU1@IPAVString@@@Z ENDP	; FindParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ResetLogUploadMenu@OBS@@CAXXZ
_TEXT	SEGMENT
$T1 = -720						; size = 8
_f$2 = -712						; size = 24
$T3 = -688						; size = 8
$T4 = -680						; size = 4
$T5 = -676						; size = 4
$T6 = -672						; size = 4
$T7 = -668						; size = 8
$T8 = -660						; size = 4
$T9 = -656						; size = 8
$T10 = -648						; size = 4
_nRead$11 = -644					; size = 4
$T12 = -640						; size = 4
_hmenuMain$ = -636					; size = 4
_previous$13 = -632					; size = 8
tv197 = -624						; size = 4
tv282 = -620						; size = 4
_filename$14 = -616					; size = 8
_iter$15 = -608						; size = 4
_validLogs$ = -604					; size = 12
_logfilePattern$ = -592					; size = 8
_iter$16 = -584						; size = 4
_items$17 = -580					; size = 4
_contents$18 = -576					; size = 4
_i$ = -572						; size = 4
_finder$ = -568						; size = 4
_validLog$19 = -562					; size = 1
$T20 = -561						; size = 1
_hmenuUpload$ = -560					; size = 4
_ofd$ = -556						; size = 528
_log$21 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
?ResetLogUploadMenu@OBS@@CAXXZ PROC			; OBS::ResetLogUploadMenu, COMDAT

; 3262 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 720				; 000002d0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 3263 :     String logfilePattern = FormattedString(L"%s/logs/*.log", OBSGetAppDataPath());

	call	DWORD PTR __imp_?OBSGetAppDataPath@@YAPB_WXZ
	push	eax
	push	OFFSET $SG4294712471
	lea	eax, DWORD PTR _logfilePattern$[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH

; 3264 : 
; 3265 :     std::vector<decltype(App->logFiles.cbegin())> validLogs;

	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	??0?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >

; 3266 : 
; 3267 :     OSFindData ofd;
; 3268 :     HANDLE finder;
; 3269 :     if (!App->logDirectoryMonitor)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+840], 0
	jne	$LN24@ResetLogUp

; 3270 :     {
; 3271 :         App->logDirectoryMonitor = OSMonitorDirectoryCallback(String(OBSGetAppDataPath()) << L"/logs/", LogUploadMonitorCallback);

	push	OFFSET ?LogUploadMonitorCallback@@YAXXZ	; LogUploadMonitorCallback
	push	OFFSET $SG4294712470
	call	DWORD PTR __imp_?OBSGetAppDataPath@@YAPB_WXZ
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	sub	esp, 8
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	DWORD PTR __imp_?OSMonitorDirectoryCallback@@YAPAUOSDirectoryMonitorData@@VString@@P6AXXZ@Z
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+840], eax
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3272 : 
; 3273 :         if (!(finder = OSFindFirstFile(logfilePattern, ofd)))

	lea	eax, DWORD PTR _ofd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _logfilePattern$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFindFirstFile@@YGPAXPB_WAAUOSFindData@@@Z
	mov	DWORD PTR _finder$[ebp], eax
	cmp	DWORD PTR _finder$[ebp], 0
	jne	SHORT $LN23@ResetLogUp

; 3274 :             return;

	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::~vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
	lea	ecx, DWORD PTR _logfilePattern$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN25@ResetLogUp
$LN23@ResetLogUp:

; 3275 : 
; 3276 :         char *contents = (char*)Allocate(1024 * 8);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR _contents$18[ebp], eax
$LN22@ResetLogUp:

; 3277 : 
; 3278 :         do
; 3279 :         {
; 3280 :             if (ofd.bDirectory) continue;

	cmp	DWORD PTR _ofd$[ebp+520], 0
	je	SHORT $LN19@ResetLogUp
	jmp	$LN21@ResetLogUp
$LN19@ResetLogUp:

; 3281 : 
; 3282 :             String filename = GetPathFileName(ofd.fileName, true);

	push	1
	lea	ecx, DWORD PTR _ofd$[ebp]
	push	ecx
	lea	edx, DWORD PTR _filename$14[ebp]
	push	edx
	call	DWORD PTR __imp_?GetPathFileName@@YA?AVString@@PB_WH@Z
	add	esp, 12					; 0000000cH

; 3283 :             auto iter = App->logFiles.emplace(filename.Array(), false).first;

	mov	BYTE PTR $T20[ebp], 0
	lea	ecx, DWORD PTR _filename$14[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR $T12[ebp], eax
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	lea	ecx, DWORD PTR $T12[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 844				; 0000034cH
	call	??$emplace@PA_W_N@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace<wchar_t *,bool>
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _iter$15[ebp], eax

; 3284 : 
; 3285 :             XFile f(String(OBSGetAppDataPath()) << L"/logs/" << filename, XFILE_READ | XFILE_SHARED, XFILE_OPENEXISTING);

	push	3
	push	5
	lea	ecx, DWORD PTR _filename$14[ebp]
	push	ecx
	push	OFFSET $SG4294712469
	call	DWORD PTR __imp_?OBSGetAppDataPath@@YAPB_WXZ
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _f$2[ebp]
	call	DWORD PTR __imp_??0XFile@@QAE@PB_WKK@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3286 :             if (!f.IsOpen())

	lea	ecx, DWORD PTR _f$2[ebp]
	call	DWORD PTR __imp_?IsOpen@XFile@@QAEHXZ
	test	eax, eax
	jne	SHORT $LN18@ResetLogUp

; 3287 :                 continue;

	lea	ecx, DWORD PTR _f$2[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _filename$14[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN21@ResetLogUp
$LN18@ResetLogUp:

; 3288 : 
; 3289 :             DWORD nRead = f.Read(contents, 1024*8 - 1);

	push	8191					; 00001fffH
	mov	edx, DWORD PTR _contents$18[ebp]
	push	edx
	lea	ecx, DWORD PTR _f$2[ebp]
	call	DWORD PTR __imp_?Read@XFile@@QAEKPAXK@Z
	mov	DWORD PTR _nRead$11[ebp], eax

; 3290 :             contents[nRead] = 0;

	mov	eax, DWORD PTR _contents$18[ebp]
	add	eax, DWORD PTR _nRead$11[ebp]
	mov	BYTE PTR [eax], 0

; 3291 : 
; 3292 :             bool validLog = (strstr(contents, "Open Broadcaster Software") != nullptr);

	push	OFFSET $SG4294712468
	mov	ecx, DWORD PTR _contents$18[ebp]
	push	ecx
	call	?strstr@@YAPADPADPBD@Z			; strstr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@ResetLogUp
	mov	DWORD PTR tv197[ebp], 1
	jmp	SHORT $LN28@ResetLogUp
$LN27@ResetLogUp:
	mov	DWORD PTR tv197[ebp], 0
$LN28@ResetLogUp:
	mov	dl, BYTE PTR tv197[ebp]
	mov	BYTE PTR _validLog$19[ebp], dl

; 3293 : 
; 3294 :             if (!validLog)

	movzx	eax, BYTE PTR _validLog$19[ebp]
	test	eax, eax
	jne	SHORT $LN17@ResetLogUp

; 3295 :                 continue;

	lea	ecx, DWORD PTR _f$2[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _filename$14[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN21@ResetLogUp
$LN17@ResetLogUp:

; 3296 : 
; 3297 :             iter->second = true;

	lea	ecx, DWORD PTR _iter$15[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->
	mov	BYTE PTR [eax+24], 1

; 3298 :             validLogs.push_back(iter);

	lea	ecx, DWORD PTR _iter$15[ebp]
	push	ecx
	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back

; 3299 :         } while (OSFindNextFile(finder, ofd));

	lea	ecx, DWORD PTR _f$2[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _filename$14[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN21@ResetLogUp:
	lea	edx, DWORD PTR _ofd$[ebp]
	push	edx
	mov	eax, DWORD PTR _finder$[ebp]
	push	eax
	call	DWORD PTR __imp_?OSFindNextFile@@YGHPAXAAUOSFindData@@@Z
	test	eax, eax
	jne	$LN22@ResetLogUp

; 3300 : 
; 3301 :         Free(contents);

	mov	ecx, DWORD PTR _contents$18[ebp]
	push	ecx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 3302 :     }
; 3303 :     else

	jmp	$LN16@ResetLogUp
$LN24@ResetLogUp:

; 3304 :     {
; 3305 :         if (finder = OSFindFirstFile(logfilePattern, ofd))

	lea	edx, DWORD PTR _ofd$[ebp]
	push	edx
	lea	ecx, DWORD PTR _logfilePattern$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFindFirstFile@@YGPAXPB_WAAUOSFindData@@@Z
	mov	DWORD PTR _finder$[ebp], eax
	cmp	DWORD PTR _finder$[ebp], 0
	je	$LN15@ResetLogUp

; 3306 :         {
; 3307 :             auto previous = std::move(App->logFiles);

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 844				; 0000034cH
	push	eax
	call	??$move@AAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@YA$$QAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@0@AAV10@@Z ; std::move<std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _previous$13[ebp]
	call	??0?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAE@$$QAV01@@Z ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >

; 3308 : 
; 3309 :             App->logFiles.clear();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 844				; 0000034cH
	call	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::clear
$LN14@ResetLogUp:

; 3310 : 
; 3311 :             do
; 3312 :             {
; 3313 :                 if (ofd.bDirectory) continue;

	cmp	DWORD PTR _ofd$[ebp+520], 0
	je	SHORT $LN11@ResetLogUp
	jmp	$LN13@ResetLogUp
$LN11@ResetLogUp:

; 3314 : 
; 3315 :                 std::wstring log = GetPathFileName(ofd.fileName, true);

	push	1
	lea	ecx, DWORD PTR _ofd$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	call	DWORD PTR __imp_?GetPathFileName@@YA?AVString@@PB_WH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _log$21[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	ecx, DWORD PTR $T9[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 3316 :                 if (previous.find(log) == previous.end())

	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	lea	ecx, DWORD PTR _previous$13[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _log$21[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	ecx, DWORD PTR _previous$13[ebp]
	call	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::find
	mov	ecx, eax
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@ResetLogUp

; 3317 :                     continue;

	lea	ecx, DWORD PTR _log$21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	jmp	SHORT $LN13@ResetLogUp
$LN10@ResetLogUp:

; 3318 : 
; 3319 :                 if (!(App->logFiles[log] = previous[log]))

	lea	ecx, DWORD PTR _log$21[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 844				; 0000034cH
	call	??A?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEAA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::operator[]
	mov	DWORD PTR tv282[ebp], eax
	lea	edx, DWORD PTR _log$21[ebp]
	push	edx
	lea	ecx, DWORD PTR _previous$13[ebp]
	call	??A?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEAA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::operator[]
	mov	ecx, DWORD PTR tv282[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR tv282[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN9@ResetLogUp

; 3320 :                     continue;

	lea	ecx, DWORD PTR _log$21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	jmp	SHORT $LN13@ResetLogUp
$LN9@ResetLogUp:

; 3321 : 
; 3322 :                 validLogs.push_back(App->logFiles.find(log));

	lea	edx, DWORD PTR _log$21[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 844				; 0000034cH
	call	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::find
	push	eax
	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back

; 3323 :             } while (OSFindNextFile(finder, ofd));

	lea	ecx, DWORD PTR _log$21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN13@ResetLogUp:
	lea	ecx, DWORD PTR _ofd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _finder$[ebp]
	push	edx
	call	DWORD PTR __imp_?OSFindNextFile@@YGHPAXAAUOSFindData@@@Z
	test	eax, eax
	jne	$LN14@ResetLogUp

; 3324 :         }

	lea	ecx, DWORD PTR _previous$13[ebp]
	call	??1?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAE@XZ

; 3325 :         else

	jmp	SHORT $LN16@ResetLogUp
$LN15@ResetLogUp:

; 3326 :             App->logFiles.clear();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 844				; 0000034cH
	call	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::clear
$LN16@ResetLogUp:

; 3327 :     }
; 3328 : 
; 3329 :     HMENU hmenuMain = GetMenu(hwndMain);

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	mov	DWORD PTR _hmenuMain$[ebp], eax

; 3330 :     HMENU hmenuUpload = FindParent(hmenuMain, ID_HELP_UPLOAD_CURRENT_LOG);

	push	0
	push	40060					; 00009c7cH
	mov	ecx, DWORD PTR _hmenuMain$[ebp]
	push	ecx
	call	?FindParent@@YAPAUHMENU__@@PAU1@IPAVString@@@Z ; FindParent
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hmenuUpload$[ebp], eax

; 3331 :     if (!hmenuUpload)

	cmp	DWORD PTR _hmenuUpload$[ebp], 0
	jne	SHORT $LN6@ResetLogUp

; 3332 :         return;

	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::~vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
	lea	ecx, DWORD PTR _logfilePattern$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN25@ResetLogUp
$LN6@ResetLogUp:

; 3333 : 
; 3334 :     while (DeleteMenu(hmenuUpload, 2, MF_BYPOSITION));

	push	1024					; 00000400H
	push	2
	mov	edx, DWORD PTR _hmenuUpload$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteMenu@12
	test	eax, eax
	je	SHORT $LN5@ResetLogUp
	jmp	SHORT $LN6@ResetLogUp
$LN5@ResetLogUp:

; 3335 : 
; 3336 :     if (validLogs.empty())

	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	?empty@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@ResetLogUp

; 3337 :         return;

	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::~vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
	lea	ecx, DWORD PTR _logfilePattern$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN25@ResetLogUp
$LN4@ResetLogUp:

; 3338 : 
; 3339 :     AppendMenu(hmenuUpload, MF_SEPARATOR, 0, nullptr);

	push	0
	push	0
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _hmenuUpload$[ebp]
	push	ecx
	call	DWORD PTR __imp__AppendMenuW@16

; 3340 : 
; 3341 :     AppendMenu(hmenuUpload, MF_STRING, ID_UPLOAD_ANALYZE_LOG, Str("MainMenu.Help.AnalyzeLastLog"));

	push	OFFSET $SG4294712467
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	8024					; 00001f58H
	push	0
	mov	eax, DWORD PTR _hmenuUpload$[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 3342 :     AppendMenu(hmenuUpload, MF_STRING, ID_UPLOAD_LOG, Str("MainMenu.Help.UploadLastLog"));

	push	OFFSET $SG4294712466
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	6021					; 00001785H
	push	0
	mov	edx, DWORD PTR _hmenuUpload$[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 3343 : 
; 3344 :     AppendMenu(hmenuUpload, MF_SEPARATOR, 0, nullptr);

	push	0
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _hmenuUpload$[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 3345 : 
; 3346 :     unsigned i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 3347 :     for (auto iter = validLogs.rbegin(); iter != validLogs.rend(); i++, iter++)

	lea	ecx, DWORD PTR _iter$16[ebp]
	push	ecx
	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	?rbegin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rbegin
	jmp	SHORT $LN3@ResetLogUp
$LN2@ResetLogUp:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	push	0
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$16[ebp]
	call	??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++
$LN3@ResetLogUp:
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	?rend@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rend
	push	eax
	lea	edx, DWORD PTR _iter$16[ebp]
	push	edx
	call	??$?9V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN1@ResetLogUp

; 3348 :     {
; 3349 :         HMENU items = CreateMenu();

	call	DWORD PTR __imp__CreateMenu@0
	mov	DWORD PTR _items$17[ebp], eax

; 3350 :         AppendMenu(items, MF_STRING, ID_UPLOAD_ANALYZE_LOG + i, Str("LogUpload.Analyze"));

	push	OFFSET $SG4294712465
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 8024				; 00001f58H
	push	edx
	push	0
	mov	eax, DWORD PTR _items$17[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 3351 :         AppendMenu(items, MF_STRING, ID_UPLOAD_LOG + i, Str("LogUpload.Upload"));

	push	OFFSET $SG4294712464
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 6021				; 00001785H
	push	edx
	push	0
	mov	eax, DWORD PTR _items$17[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 3352 :         AppendMenu(items, MF_STRING, ID_VIEW_LOG + i, Str("LogUpload.View"));

	push	OFFSET $SG4294712463
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 7022				; 00001b6eH
	push	edx
	push	0
	mov	eax, DWORD PTR _items$17[ebp]
	push	eax
	call	DWORD PTR __imp__AppendMenuW@16

; 3353 : 
; 3354 :         AppendMenu(hmenuUpload, MF_STRING | MF_POPUP, (UINT_PTR)items, (*iter)->first.c_str());

	lea	ecx, DWORD PTR _iter$16[ebp]
	call	??D?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator*
	mov	ecx, eax
	call	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	mov	ecx, DWORD PTR _items$17[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _hmenuUpload$[ebp]
	push	edx
	call	DWORD PTR __imp__AppendMenuW@16

; 3355 :     }

	jmp	$LN2@ResetLogUp
$LN1@ResetLogUp:

; 3356 : }

	lea	ecx, DWORD PTR _validLogs$[ebp]
	call	??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::~vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
	lea	ecx, DWORD PTR _logfilePattern$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN25@ResetLogUp:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetLogUploadMenu@OBS@@CAXXZ ENDP			; OBS::ResetLogUploadMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GetLogUploadMenuItem@@YA?AVString@@I@Z
_TEXT	SEGMENT
_log$ = -12						; size = 8
_hmenuMain$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_item$ = 12						; size = 4
?GetLogUploadMenuItem@@YA?AVString@@I@Z PROC		; GetLogUploadMenuItem, COMDAT

; 3361 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3362 :     HMENU hmenuMain = GetMenu(hwndMain);

	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	mov	DWORD PTR _hmenuMain$[ebp], eax

; 3363 : 
; 3364 :     String log;

	lea	ecx, DWORD PTR _log$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3365 :     FindParent(hmenuMain, item, &log);

	lea	ecx, DWORD PTR _log$[ebp]
	push	ecx
	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	eax, DWORD PTR _hmenuMain$[ebp]
	push	eax
	call	?FindParent@@YAPAUHMENU__@@PAU1@IPAVString@@@Z ; FindParent
	add	esp, 12					; 0000000cH

; 3366 : 
; 3367 :     return log;

	lea	ecx, DWORD PTR _log$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _log$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 3368 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetLogUploadMenuItem@@YA?AVString@@I@Z ENDP		; GetLogUploadMenuItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ??RHLOCALDeleter@?A0x0ea80c23@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??RHLOCALDeleter@?A0x0ea80c23@@QAEXPAX@Z PROC		; `anonymous namespace'::HLOCALDeleter::operator(), COMDAT
; _this$ = ecx

; 3376 :         void operator()(void *h) { GlobalFree(h); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp__GlobalFree@4
	mov	esp, ebp
	pop	ebp
	ret	4
??RHLOCALDeleter@?A0x0ea80c23@@QAEXPAX@Z ENDP		; `anonymous namespace'::HLOCALDeleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ??RMemUnlocker@?A0x0ea80c23@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??RMemUnlocker@?A0x0ea80c23@@QAEXPAX@Z PROC		; `anonymous namespace'::MemUnlocker::operator(), COMDAT
; _this$ = ecx

; 3381 :         void operator()(void *m) { GlobalUnlock(m); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	call	DWORD PTR __imp__GlobalUnlock@4
	mov	esp, ebp
	pop	ebp
	ret	4
??RMemUnlocker@?A0x0ea80c23@@QAEXPAX@Z ENDP		; `anonymous namespace'::MemUnlocker::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ??0ClipboardHelper@?A0x0ea80c23@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
??0ClipboardHelper@?A0x0ea80c23@@QAE@PAUHWND__@@@Z PROC	; `anonymous namespace'::ClipboardHelper::ClipboardHelper, COMDAT
; _this$ = ecx

; 3386 :         ClipboardHelper(HWND owner) { OpenClipboard(owner); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	call	DWORD PTR __imp__OpenClipboard@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0ClipboardHelper@?A0x0ea80c23@@QAE@PAUHWND__@@@Z ENDP	; `anonymous namespace'::ClipboardHelper::ClipboardHelper
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ??1ClipboardHelper@?A0x0ea80c23@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ClipboardHelper@?A0x0ea80c23@@QAE@XZ PROC		; `anonymous namespace'::ClipboardHelper::~ClipboardHelper, COMDAT
; _this$ = ecx

; 3387 :         ~ClipboardHelper() { CloseClipboard(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	DWORD PTR __imp__CloseClipboard@0
	mov	esp, ebp
	pop	ebp
	ret	0
??1ClipboardHelper@?A0x0ea80c23@@QAE@XZ ENDP		; `anonymous namespace'::ClipboardHelper::~ClipboardHelper
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?Insert@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_mem$ = -12						; size = 4
_h$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
_str$ = 8						; size = 4
?Insert@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z PROC ; `anonymous namespace'::ClipboardHelper::Insert, COMDAT
; _this$ = ecx

; 3389 :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 3390 :             using namespace std;
; 3391 : 
; 3392 :             if (!EmptyClipboard()) return false;

	call	DWORD PTR __imp__EmptyClipboard@0
	test	eax, eax
	jne	SHORT $LN4@Insert
	xor	al, al
	jmp	$LN5@Insert
$LN4@Insert:

; 3393 : 
; 3394 :             unique_ptr<void, HLOCALDeleter> h(GlobalAlloc(LMEM_MOVEABLE, (str.Length() + 1) * sizeof TCHAR));

	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	lea	eax, DWORD PTR [eax+eax+2]
	push	eax
	push	2
	call	DWORD PTR __imp__GlobalAlloc@8
	push	eax
	lea	ecx, DWORD PTR _h$[ebp]
	call	??0?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@PAX@Z ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>

; 3395 :             if (!h) return false;

	lea	ecx, DWORD PTR _h$[ebp]
	call	??B?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBE_NXZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Insert
	mov	BYTE PTR $T4[ebp], 0
	lea	ecx, DWORD PTR _h$[ebp]
	call	??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::~unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN5@Insert
$LN3@Insert:

; 3396 : 
; 3397 :             unique_ptr<void, MemUnlocker> mem(GlobalLock(h.get()));

	lea	ecx, DWORD PTR _h$[ebp]
	call	?get@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::get
	push	eax
	call	DWORD PTR __imp__GlobalLock@4
	push	eax
	lea	ecx, DWORD PTR _mem$[ebp]
	call	??0?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@PAX@Z ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::unique_ptr<void,`anonymous namespace'::MemUnlocker>

; 3398 :             if (!mem) return false;

	lea	ecx, DWORD PTR _mem$[ebp]
	call	??B?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBE_NXZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::operator bool
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@Insert
	mov	BYTE PTR $T3[ebp], 0
	lea	ecx, DWORD PTR _mem$[ebp]
	call	??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>
	lea	ecx, DWORD PTR _h$[ebp]
	call	??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::~unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN5@Insert
$LN2@Insert:

; 3399 : 
; 3400 :             tstr_to_wide(str.Array(), (wchar_t*)mem.get(), str.Length() + 1);

	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _mem$[ebp]
	call	?get@?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::get
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?tstr_to_wide@@YAHPB_WPA_WI@Z
	add	esp, 12					; 0000000cH

; 3401 : 
; 3402 :             if (!SetClipboardData(CF_UNICODETEXT, mem.get())) return false;

	lea	ecx, DWORD PTR _mem$[ebp]
	call	?get@?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::get
	push	eax
	push	13					; 0000000dH
	call	DWORD PTR __imp__SetClipboardData@8
	test	eax, eax
	jne	SHORT $LN1@Insert
	mov	BYTE PTR $T2[ebp], 0
	lea	ecx, DWORD PTR _mem$[ebp]
	call	??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>
	lea	ecx, DWORD PTR _h$[ebp]
	call	??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::~unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
	mov	al, BYTE PTR $T2[ebp]
	jmp	SHORT $LN5@Insert
$LN1@Insert:

; 3403 : 
; 3404 :             h.release();

	lea	ecx, DWORD PTR _h$[ebp]
	call	?release@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::release

; 3405 :             return true;

	mov	BYTE PTR $T1[ebp], 1
	lea	ecx, DWORD PTR _mem$[ebp]
	call	??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>
	lea	ecx, DWORD PTR _h$[ebp]
	call	??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::~unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
	mov	al, BYTE PTR $T1[ebp]
$LN5@Insert:

; 3406 :         }

	mov	esp, ebp
	pop	ebp
	ret	4
?Insert@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z ENDP ; `anonymous namespace'::ClipboardHelper::Insert
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?Contains@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
tv83 = -16						; size = 4
_h$ = -12						; size = 4
_mem$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_str$ = 8						; size = 4
?Contains@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z PROC ; `anonymous namespace'::ClipboardHelper::Contains, COMDAT
; _this$ = ecx

; 3409 :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 3410 :             using namespace std;
; 3411 : 
; 3412 :             HANDLE h = GetClipboardData(CF_UNICODETEXT);

	push	13					; 0000000dH
	call	DWORD PTR __imp__GetClipboardData@4
	mov	DWORD PTR _h$[ebp], eax

; 3413 :             if (!h) return false;

	cmp	DWORD PTR _h$[ebp], 0
	jne	SHORT $LN2@Contains
	xor	al, al
	jmp	SHORT $LN3@Contains
$LN2@Contains:

; 3414 : 
; 3415 :             unique_ptr<void, MemUnlocker> mem(GlobalLock(h));

	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp__GlobalLock@4
	push	eax
	lea	ecx, DWORD PTR _mem$[ebp]
	call	??0?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@PAX@Z ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::unique_ptr<void,`anonymous namespace'::MemUnlocker>

; 3416 :             if (!mem) return false;

	lea	ecx, DWORD PTR _mem$[ebp]
	call	??B?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBE_NXZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Contains
	mov	BYTE PTR $T2[ebp], 0
	lea	ecx, DWORD PTR _mem$[ebp]
	call	??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>
	mov	al, BYTE PTR $T2[ebp]
	jmp	SHORT $LN3@Contains
$LN1@Contains:

; 3417 : 
; 3418 :             return !!str.Compare((CTSTR)mem.get());

	lea	ecx, DWORD PTR _mem$[ebp]
	call	?get@?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::get
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?Compare@String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN5@Contains
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN6@Contains
$LN5@Contains:
	mov	DWORD PTR tv83[ebp], 0
$LN6@Contains:
	mov	dl, BYTE PTR tv83[ebp]
	mov	BYTE PTR $T1[ebp], dl
	lea	ecx, DWORD PTR _mem$[ebp]
	call	??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>
	mov	al, BYTE PTR $T1[ebp]
$LN3@Contains:

; 3419 :         }

	mov	esp, ebp
	pop	ebp
	ret	4
?Contains@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z ENDP ; `anonymous namespace'::ClipboardHelper::Contains
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?LogUploadResultProc@@YGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
$T1 = -100						; size = 4
_url$2 = -96						; size = 8
_ptr$3 = -88						; size = 4
_ptr$4 = -84						; size = 4
_result$5 = -80						; size = 4
_ptr$6 = -76						; size = 4
_ptr$7 = -72						; size = 4
tv187 = -68						; size = 4
_hwndOwner$8 = -64					; size = 4
tv64 = -60						; size = 4
_clip$9 = -55						; size = 1
_clip$10 = -54						; size = 1
_clip$11 = -53						; size = 1
_rcOwner$12 = -52					; size = 16
_rcDlg$13 = -36						; size = 16
_rc$14 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?LogUploadResultProc@@YGHPAUHWND__@@IIJ@Z PROC		; LogUploadResultProc, COMDAT

; 3424 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 3425 :     switch (message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	ja	SHORT $LN31@LogUploadR
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN19@LogUploadR
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN1@LogUploadR
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN2@LogUploadR
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN26@LogUploadR
	jmp	$LN27@LogUploadR
$LN31@LogUploadR:
	cmp	DWORD PTR tv64[ebp], 312		; 00000138H
	je	$LN7@LogUploadR
	cmp	DWORD PTR tv64[ebp], 797		; 0000031dH
	je	$LN23@LogUploadR
	jmp	$LN27@LogUploadR
$LN26@LogUploadR:

; 3426 :     {
; 3427 :         case WM_INITDIALOG:
; 3428 :             {
; 3429 :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 3430 : 
; 3431 :                 HWND hwndOwner = GetParent(hwnd);

	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _hwndOwner$8[ebp], eax

; 3432 :                 if (!hwndOwner) hwndOwner = GetDesktopWindow();

	cmp	DWORD PTR _hwndOwner$8[ebp], 0
	jne	SHORT $LN25@LogUploadR
	call	DWORD PTR __imp__GetDesktopWindow@0
	mov	DWORD PTR _hwndOwner$8[ebp], eax
$LN25@LogUploadR:

; 3433 :                 
; 3434 :                 RECT rc, rcDlg, rcOwner;
; 3435 : 
; 3436 :                 GetWindowRect(hwndOwner, &rcOwner);

	lea	eax, DWORD PTR _rcOwner$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndOwner$8[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowRect@8

; 3437 :                 GetWindowRect(hwnd, &rcDlg);

	lea	edx, DWORD PTR _rcDlg$13[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 3438 :                 CopyRect(&rc, &rcOwner);

	lea	ecx, DWORD PTR _rcOwner$12[ebp]
	push	ecx
	lea	edx, DWORD PTR _rc$14[ebp]
	push	edx
	call	DWORD PTR __imp__CopyRect@8

; 3439 : 
; 3440 :                 // Offset the owner and dialog box rectangles so that right and bottom 
; 3441 :                 // values represent the width and height, and then offset the owner again 
; 3442 :                 // to discard space taken up by the dialog box. 
; 3443 : 
; 3444 :                 OffsetRect(&rcDlg, -rcDlg.left, -rcDlg.top);

	mov	eax, DWORD PTR _rcDlg$13[ebp+4]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _rcDlg$13[ebp]
	neg	ecx
	push	ecx
	lea	edx, DWORD PTR _rcDlg$13[ebp]
	push	edx
	call	DWORD PTR __imp__OffsetRect@12

; 3445 :                 OffsetRect(&rc, -rc.left, -rc.top);

	mov	eax, DWORD PTR _rc$14[ebp+4]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _rc$14[ebp]
	neg	ecx
	push	ecx
	lea	edx, DWORD PTR _rc$14[ebp]
	push	edx
	call	DWORD PTR __imp__OffsetRect@12

; 3446 :                 OffsetRect(&rc, -rcDlg.right, -rcDlg.bottom);

	mov	eax, DWORD PTR _rcDlg$13[ebp+12]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _rcDlg$13[ebp+8]
	neg	ecx
	push	ecx
	lea	edx, DWORD PTR _rc$14[ebp]
	push	edx
	call	DWORD PTR __imp__OffsetRect@12

; 3447 : 
; 3448 :                 // The new position is the sum of half the remaining space and the owner's 
; 3449 :                 // original position. 
; 3450 : 
; 3451 :                 SetWindowPos(hwnd,
; 3452 :                     HWND_TOP,
; 3453 :                     rcOwner.left + (rc.right / 2),
; 3454 :                     rcOwner.top + (rc.bottom / 2),
; 3455 :                     0, 0,          // Ignores size arguments. 
; 3456 :                     SWP_NOSIZE);

	push	1
	push	0
	push	0
	mov	eax, DWORD PTR _rc$14[ebp+12]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _rcOwner$12[ebp+4]
	push	eax
	mov	eax, DWORD PTR _rc$14[ebp+8]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _rcOwner$12[ebp]
	push	eax
	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28

; 3457 : 
; 3458 :                 LogUploadResult &result = *(LogUploadResult*)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _result$5[ebp], ecx

; 3459 :                 
; 3460 :                 SetWindowText(GetDlgItem(hwnd, IDC_URL), result.url.Array());

	mov	ecx, DWORD PTR _result$5[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1012					; 000003f4H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 3461 : 
; 3462 :                 AddClipboardFormatListener(hwnd);

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__AddClipboardFormatListener@4

; 3463 :                 
; 3464 :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 3465 : 
; 3466 :                 if (result.openAnalyzerOnSuccess)

	mov	eax, DWORD PTR _result$5[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN24@LogUploadR

; 3467 :                     PostMessage(hwnd, WM_COMMAND, MAKEWPARAM(IDC_ANALYZE, 0), 0);

	push	0
	push	1171					; 00000493H
	push	273					; 00000111H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__PostMessageW@16
$LN24@LogUploadR:

; 3468 : 
; 3469 :                 return TRUE;

	mov	eax, 1
	jmp	$LN29@LogUploadR
$LN23@LogUploadR:

; 3470 :             }
; 3471 : 
; 3472 :         case WM_CLIPBOARDUPDATE:
; 3473 :             {
; 3474 :                 LONG_PTR ptr = GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _ptr$7[ebp], eax

; 3475 :                 if (!ptr) break;

	cmp	DWORD PTR _ptr$7[ebp], 0
	jne	SHORT $LN22@LogUploadR
	jmp	$LN27@LogUploadR
$LN22@LogUploadR:

; 3476 : 
; 3477 :                 ClipboardHelper clip(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _clip$9[ebp]
	call	??0ClipboardHelper@?A0x0ea80c23@@QAE@PAUHWND__@@@Z ; `anonymous namespace'::ClipboardHelper::ClipboardHelper

; 3478 :                 if (!clip.Contains(((LogUploadResult*)ptr)->url))

	mov	edx, DWORD PTR _ptr$7[ebp]
	push	edx
	lea	ecx, DWORD PTR _clip$9[ebp]
	call	?Contains@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z ; `anonymous namespace'::ClipboardHelper::Contains
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN21@LogUploadR

; 3479 :                     ShowWindow(GetDlgItem(hwnd, IDC_COPIED), SW_HIDE);

	push	0
	push	1170					; 00000492H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 3480 :                 else

	jmp	SHORT $LN20@LogUploadR
$LN21@LogUploadR:

; 3481 :                 {
; 3482 :                     SetWindowText(GetDlgItem(hwnd, IDC_COPIED), Str("LogUpload.SuccessDialog.CopySuccess"));

	push	OFFSET $SG4294712462
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	1170					; 00000492H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 3483 :                     ShowWindow(GetDlgItem(hwnd, IDC_COPIED), SW_SHOW);

	push	5
	push	1170					; 00000492H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN20@LogUploadR:

; 3484 :                 }
; 3485 :             }

	lea	ecx, DWORD PTR _clip$9[ebp]
	call	??1ClipboardHelper@?A0x0ea80c23@@QAE@XZ	; `anonymous namespace'::ClipboardHelper::~ClipboardHelper
$LN19@LogUploadR:

; 3486 : 
; 3487 :         case WM_COMMAND:
; 3488 :             switch (LOWORD(wParam))

	movzx	edx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv187[ebp], edx
	cmp	DWORD PTR tv187[ebp], 1
	je	$LN12@LogUploadR
	cmp	DWORD PTR tv187[ebp], 1169		; 00000491H
	je	SHORT $LN16@LogUploadR
	cmp	DWORD PTR tv187[ebp], 1171		; 00000493H
	je	$LN11@LogUploadR
	jmp	$LN17@LogUploadR
$LN16@LogUploadR:

; 3489 :             {
; 3490 :             case IDC_COPY:
; 3491 :                 {
; 3492 :                     LONG_PTR ptr = GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _ptr$3[ebp], eax

; 3493 :                     if (!ptr) break;

	cmp	DWORD PTR _ptr$3[ebp], 0
	jne	SHORT $LN15@LogUploadR
	jmp	$LN17@LogUploadR
$LN15@LogUploadR:

; 3494 : 
; 3495 :                     ClipboardHelper clip(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _clip$10[ebp]
	call	??0ClipboardHelper@?A0x0ea80c23@@QAE@PAUHWND__@@@Z ; `anonymous namespace'::ClipboardHelper::ClipboardHelper

; 3496 :                     if (clip.Insert(((LogUploadResult*)ptr)->url))

	mov	edx, DWORD PTR _ptr$3[ebp]
	push	edx
	lea	ecx, DWORD PTR _clip$10[ebp]
	call	?Insert@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z ; `anonymous namespace'::ClipboardHelper::Insert
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@LogUploadR

; 3497 :                         SetWindowText(GetDlgItem(hwnd, IDC_COPIED), Str("LogUpload.SuccessDialog.CopySuccess"));

	push	OFFSET $SG4294712461
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	1170					; 00000492H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 3498 :                     else

	jmp	SHORT $LN13@LogUploadR
$LN14@LogUploadR:

; 3499 :                         SetWindowText(GetDlgItem(hwnd, IDC_COPIED), Str("LogUpload.SuccessDialog.CopyFailure"));

	push	OFFSET $SG4294712460
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	1170					; 00000492H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
$LN13@LogUploadR:

; 3500 : 
; 3501 :                     ShowWindow(GetDlgItem(hwnd, IDC_COPIED), SW_SHOW);

	push	5
	push	1170					; 00000492H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 3502 :                 }

	lea	ecx, DWORD PTR _clip$10[ebp]
	call	??1ClipboardHelper@?A0x0ea80c23@@QAE@XZ	; `anonymous namespace'::ClipboardHelper::~ClipboardHelper

; 3503 :                 break;

	jmp	$LN17@LogUploadR
$LN12@LogUploadR:

; 3504 :             case IDOK:
; 3505 :                 SendMessage(hwnd, WM_CLOSE, 0, 0);

	push	0
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 3506 :                 break;

	jmp	$LN17@LogUploadR
$LN11@LogUploadR:

; 3507 :             case IDC_ANALYZE:
; 3508 :                 {
; 3509 :                     LONG_PTR ptr = GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _ptr$4[ebp], eax

; 3510 :                     if (!ptr) break;

	cmp	DWORD PTR _ptr$4[ebp], 0
	jne	SHORT $LN10@LogUploadR
	jmp	$LN17@LogUploadR
$LN10@LogUploadR:

; 3511 : 
; 3512 :                     String url = CreateHTTPURL(L"obsproject.com", L"/analyzer", FormattedString(L"?url=%s", ((LogUploadResult*)ptr)->analyzerURL.Array()));

	push	0
	mov	ecx, DWORD PTR _ptr$4[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	sub	esp, 8
	mov	edx, esp
	push	eax
	push	OFFSET $SG4294712459
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 4
	mov	ecx, esp
	push	OFFSET $SG4294712458
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	sub	esp, 8
	mov	ecx, esp
	push	OFFSET $SG4294712457
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	lea	eax, DWORD PTR _url$2[ebp]
	push	eax
	call	?CreateHTTPURL@@YA?AVString@@V1@00_N@Z	; CreateHTTPURL
	add	esp, 32					; 00000020H

; 3513 :                     if (url.IsEmpty())

	lea	ecx, DWORD PTR _url$2[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN9@LogUploadR

; 3514 :                         break;

	lea	ecx, DWORD PTR _url$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN17@LogUploadR
$LN9@LogUploadR:

; 3515 : 
; 3516 :                     if (!ShellExecute(nullptr, nullptr, url.Array(), nullptr, nullptr, SW_SHOWDEFAULT))

	push	10					; 0000000aH
	push	0
	push	0
	lea	ecx, DWORD PTR _url$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24
	test	eax, eax
	jne	SHORT $LN8@LogUploadR

; 3517 :                         OBSMessageBox(hwnd, Str("LogUploader.FailedToAnalyze"), nullptr, MB_ICONERROR);

	push	16					; 00000010H
	push	0
	push	OFFSET $SG4294712456
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
$LN8@LogUploadR:

; 3518 :                     break;

	lea	ecx, DWORD PTR _url$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN17@LogUploadR:

; 3519 :                 }
; 3520 :             }
; 3521 :             break;

	jmp	$LN27@LogUploadR
$LN7@LogUploadR:

; 3522 : 
; 3523 :         case WM_CTLCOLORSTATIC:
; 3524 :             if (GetDlgCtrlID((HWND)lParam) == IDC_COPIED)

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgCtrlID@4
	cmp	eax, 1170				; 00000492H
	jne	$LN6@LogUploadR

; 3525 :             {
; 3526 :                 LONG_PTR ptr = GetWindowLongPtr(hwnd, DWLP_USER);

	push	8
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _ptr$6[ebp], eax

; 3527 :                 if (!ptr) break;

	cmp	DWORD PTR _ptr$6[ebp], 0
	jne	SHORT $LN5@LogUploadR
	jmp	$LN27@LogUploadR
$LN5@LogUploadR:

; 3528 : 
; 3529 :                 ClipboardHelper clip(hwnd);

	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	lea	ecx, DWORD PTR _clip$11[ebp]
	call	??0ClipboardHelper@?A0x0ea80c23@@QAE@PAUHWND__@@@Z ; `anonymous namespace'::ClipboardHelper::ClipboardHelper

; 3530 :                 if (clip.Contains(((LogUploadResult*)ptr)->url))

	mov	eax, DWORD PTR _ptr$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _clip$11[ebp]
	call	?Contains@ClipboardHelper@?A0x0ea80c23@@QAE_NAAVString@@@Z ; `anonymous namespace'::ClipboardHelper::Contains
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@LogUploadR

; 3531 :                     SetTextColor((HDC)wParam, RGB(0, 200, 0));

	push	51200					; 0000c800H
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	call	DWORD PTR __imp__SetTextColor@8

; 3532 :                 else

	jmp	SHORT $LN3@LogUploadR
$LN4@LogUploadR:

; 3533 :                     SetTextColor((HDC)wParam, RGB(200, 0, 0));

	push	200					; 000000c8H
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SetTextColor@8
$LN3@LogUploadR:

; 3534 :                 SetBkColor((HDC)wParam, COLORREF(GetSysColor(COLOR_3DFACE)));

	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColor@4
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetBkColor@8

; 3535 :                 return (INT_PTR)GetSysColorBrush(COLOR_3DFACE);

	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColorBrush@4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _clip$11[ebp]
	call	??1ClipboardHelper@?A0x0ea80c23@@QAE@XZ	; `anonymous namespace'::ClipboardHelper::~ClipboardHelper
	mov	eax, DWORD PTR $T1[ebp]
	jmp	SHORT $LN29@LogUploadR
$LN6@LogUploadR:

; 3536 :             }
; 3537 :             break;

	jmp	SHORT $LN27@LogUploadR
$LN2@LogUploadR:

; 3538 : 
; 3539 :         case WM_CLOSE:
; 3540 :             EndDialog(hwnd, 0);

	push	0
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8

; 3541 :             break;

	jmp	SHORT $LN27@LogUploadR
$LN1@LogUploadR:

; 3542 : 
; 3543 :         case WM_DESTROY:
; 3544 :             RemoveClipboardFormatListener(hwnd);

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__RemoveClipboardFormatListener@4
$LN27@LogUploadR:

; 3545 :     }
; 3546 : 
; 3547 :     return FALSE;

	xor	eax, eax
$LN29@LogUploadR:

; 3548 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?LogUploadResultProc@@YGHPAUHWND__@@IIJ@Z ENDP		; LogUploadResultProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?ShowLogUploadResult@@YAXAAULogUploadResult@@_N@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_success$ = 12						; size = 1
?ShowLogUploadResult@@YAXAAULogUploadResult@@_N@Z PROC	; ShowLogUploadResult, COMDAT

; 3551 : {

	push	ebp
	mov	ebp, esp

; 3552 :     if (!success) {

	movzx	eax, BYTE PTR _success$[ebp]
	test	eax, eax
	jne	SHORT $LN1@ShowLogUpl

; 3553 :         OBSMessageBox(hwndMain, result.errors.Array(), nullptr, MB_ICONEXCLAMATION);

	push	48					; 00000030H
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 3554 :         return;

	jmp	SHORT $LN2@ShowLogUpl
$LN1@ShowLogUpl:

; 3555 :     }
; 3556 : 
; 3557 :     OBSDialogBox(hinstMain, MAKEINTRESOURCE(IDD_LOGUPLOADED), hwndMain, LogUploadResultProc, (LPARAM)&result);

	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ?LogUploadResultProc@@YGHPAUHWND__@@IIJ@Z ; LogUploadResultProc
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	push	147					; 00000093H
	mov	ecx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	ecx
	call	DWORD PTR __imp_?OBSDialogBox@@YAHPAUHINSTANCE__@@PB_WPAUHWND__@@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
$LN2@ShowLogUpl:

; 3558 : }

	pop	ebp
	ret	0
?ShowLogUploadResult@@YAXAAULogUploadResult@@_N@Z ENDP	; ShowLogUploadResult
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?OBSUpdateLog@@YAXXZ
_TEXT	SEGMENT
_content$ = -16						; size = 8
_start$ = -8						; size = 4
_end$ = -4						; size = 4
?OBSUpdateLog@@YAXXZ PROC				; OBSUpdateLog, COMDAT

; 3563 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3564 :     static unsigned position = 0;
; 3565 : 
; 3566 :     String content;

	lea	ecx, DWORD PTR _content$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 3567 :     ReadLogPartial(content, position);

	push	-1
	push	OFFSET ?position@?1??OBSUpdateLog@@YAXXZ@4IA
	lea	eax, DWORD PTR _content$[ebp]
	push	eax
	call	DWORD PTR __imp_?ReadLogPartial@@YAXAAVString@@AAII@Z
	add	esp, 12					; 0000000cH

; 3568 : 
; 3569 :     if (content.IsEmpty()) return;

	lea	ecx, DWORD PTR _content$[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN1@OBSUpdateL
	lea	ecx, DWORD PTR _content$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN2@OBSUpdateL
$LN1@OBSUpdateL:

; 3570 : 
; 3571 :     int start, end;
; 3572 :     SendMessage(hwndLog, EM_GETSEL, (WPARAM)&start, (LPARAM)&end);

	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	push	176					; 000000b0H
	mov	eax, DWORD PTR ?hwndLog@@3PAUHWND__@@A	; hwndLog
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 3573 : 
; 3574 :     SendMessage(hwndLog, EM_SETSEL, INT_MAX, INT_MAX);

	push	2147483647				; 7fffffffH
	push	2147483647				; 7fffffffH
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?hwndLog@@3PAUHWND__@@A	; hwndLog
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 3575 : 
; 3576 :     SendMessage(hwndLog, EM_REPLACESEL, 0, (LPARAM)content.Array());

	lea	ecx, DWORD PTR _content$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?hwndLog@@3PAUHWND__@@A	; hwndLog
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 3577 : 
; 3578 :     SendMessage(hwndLog, EM_SETSEL, start, end);

	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?hwndLog@@3PAUHWND__@@A	; hwndLog
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 3579 : 
; 3580 :     App->ReportLogUpdate(content.Array(), content.Length());

	lea	ecx, DWORD PTR _content$[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	push	eax
	lea	ecx, DWORD PTR _content$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+148]
	call	eax

; 3581 : }

	lea	ecx, DWORD PTR _content$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN2@OBSUpdateL:
	mov	esp, ebp
	pop	ebp
	ret	0
?OBSUpdateLog@@YAXXZ ENDP				; OBSUpdateLog
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1LogUploadResult@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LogUploadResult@@QAE@XZ PROC				; LogUploadResult::~LogUploadResult, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1LogUploadResult@@QAE@XZ ENDP				; LogUploadResult::~LogUploadResult
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GStringList@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GStringList@@QAEPAXI@Z PROC				; StringList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringList@@QAEPAXI@Z ENDP				; StringList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?GetItemModifyType@@YA?AW4ItemModifyType@@ABUVect2@@00ABUVect4@@0@Z
_TEXT	SEGMENT
$T1 = -60						; size = 8
$T2 = -52						; size = 8
$T3 = -44						; size = 8
$T4 = -36						; size = 8
_lowerRight$ = -28					; size = 8
_croppedLowerRight$ = -20				; size = 8
_croppedItemPos$ = -12					; size = 8
_epsilon$ = -4						; size = 4
_mousePos$ = 8						; size = 4
_itemPos$ = 12						; size = 4
_itemSize$ = 16						; size = 4
_crop$ = 20						; size = 4
_scaleVal$ = 24						; size = 4
?GetItemModifyType@@YA?AW4ItemModifyType@@ABUVect2@@00ABUVect4@@0@Z PROC ; GetItemModifyType, COMDAT

; 4701 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 4702 :     Vect2 lowerRight = itemPos+itemSize;

	mov	eax, DWORD PTR _itemSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lowerRight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _itemPos$[ebp]
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 4703 :     float epsilon = 10.0f;

	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _epsilon$[ebp], xmm0

; 4704 : 
; 4705 :     Vect2 croppedItemPos = itemPos + Vect2(crop.x / scaleVal.x, crop.y / scaleVal.y);

	mov	edx, DWORD PTR _crop$[ebp]
	mov	eax, DWORD PTR _scaleVal$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	divss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _crop$[ebp]
	mov	edx, DWORD PTR _scaleVal$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	divss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	lea	eax, DWORD PTR _croppedItemPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _itemPos$[ebp]
	call	DWORD PTR __imp_??HVect2@@QBE?AU0@ABU0@@Z

; 4706 :     Vect2 croppedLowerRight = lowerRight - Vect2(crop.w / scaleVal.x, crop.z / scaleVal.y);

	mov	ecx, DWORD PTR _crop$[ebp]
	mov	edx, DWORD PTR _scaleVal$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	divss	xmm0, DWORD PTR [edx+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _crop$[ebp]
	mov	ecx, DWORD PTR _scaleVal$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	divss	xmm0, DWORD PTR [ecx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	lea	edx, DWORD PTR _croppedLowerRight$[ebp]
	push	edx
	lea	ecx, DWORD PTR _lowerRight$[ebp]
	call	DWORD PTR __imp_??GVect2@@QBE?AU0@ABU0@@Z

; 4707 : 
; 4708 :     if( mousePos.x < croppedItemPos.x    ||
; 4709 :         mousePos.y < croppedItemPos.y    ||
; 4710 :         mousePos.x > croppedLowerRight.x ||
; 4711 :         mousePos.y > croppedLowerRight.y )

	mov	eax, DWORD PTR _mousePos$[ebp]
	movss	xmm0, DWORD PTR _croppedItemPos$[ebp]
	comiss	xmm0, DWORD PTR [eax]
	ja	SHORT $LN15@GetItemMod
	mov	ecx, DWORD PTR _mousePos$[ebp]
	movss	xmm0, DWORD PTR _croppedItemPos$[ebp+4]
	comiss	xmm0, DWORD PTR [ecx+4]
	ja	SHORT $LN15@GetItemMod
	mov	edx, DWORD PTR _mousePos$[ebp]
	movss	xmm0, DWORD PTR [edx]
	comiss	xmm0, DWORD PTR _croppedLowerRight$[ebp]
	ja	SHORT $LN15@GetItemMod
	mov	eax, DWORD PTR _mousePos$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR _croppedLowerRight$[ebp+4]
	jbe	SHORT $LN16@GetItemMod
$LN15@GetItemMod:

; 4712 :     {
; 4713 :         return ItemModifyType_None;

	xor	eax, eax
	jmp	$LN17@GetItemMod
$LN16@GetItemMod:

; 4714 :     }    
; 4715 : 
; 4716 :     // Corner sizing
; 4717 :     if(mousePos.CloseTo(croppedItemPos, epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _croppedItemPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _mousePos$[ebp]
	call	DWORD PTR __imp_?CloseTo@Vect2@@QBEHABU1@M@Z
	test	eax, eax
	je	SHORT $LN14@GetItemMod

; 4718 :         return ItemModifyType_ScaleTopLeft;

	mov	eax, 6
	jmp	$LN17@GetItemMod
	jmp	$LN8@GetItemMod
$LN14@GetItemMod:

; 4719 :     else if(mousePos.CloseTo(croppedLowerRight, epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _croppedLowerRight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _mousePos$[ebp]
	call	DWORD PTR __imp_?CloseTo@Vect2@@QBEHABU1@M@Z
	test	eax, eax
	je	SHORT $LN12@GetItemMod

; 4720 :         return ItemModifyType_ScaleBottomRight;

	mov	eax, 14					; 0000000eH
	jmp	$LN17@GetItemMod
	jmp	$LN8@GetItemMod
$LN12@GetItemMod:

; 4721 :     else if(mousePos.CloseTo(Vect2(croppedLowerRight.x, croppedItemPos.y), epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedItemPos$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedLowerRight$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	mov	ecx, DWORD PTR _mousePos$[ebp]
	call	DWORD PTR __imp_?CloseTo@Vect2@@QBEHABU1@M@Z
	test	eax, eax
	je	SHORT $LN10@GetItemMod

; 4722 :         return ItemModifyType_ScaleTopRight;

	mov	eax, 10					; 0000000aH
	jmp	$LN17@GetItemMod
	jmp	SHORT $LN8@GetItemMod
$LN10@GetItemMod:

; 4723 :     else if(mousePos.CloseTo(Vect2(croppedItemPos.x, croppedLowerRight.y), epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedLowerRight$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedItemPos$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??0Vect2@@QAE@MM@Z
	push	eax
	mov	ecx, DWORD PTR _mousePos$[ebp]
	call	DWORD PTR __imp_?CloseTo@Vect2@@QBEHABU1@M@Z
	test	eax, eax
	je	SHORT $LN8@GetItemMod

; 4724 :         return ItemModifyType_ScaleBottomLeft;

	mov	eax, 2
	jmp	$LN17@GetItemMod
$LN8@GetItemMod:

; 4725 : 
; 4726 :     epsilon = 4.0f;

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR _epsilon$[ebp], xmm0

; 4727 : 
; 4728 :     // Edge sizing
; 4729 :     if(CloseFloat(mousePos.x, croppedItemPos.x, epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedItemPos$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _mousePos$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@GetItemMod

; 4730 :         return ItemModifyType_ScaleLeft;

	mov	eax, 4
	jmp	$LN17@GetItemMod
	jmp	$LN1@GetItemMod
$LN7@GetItemMod:

; 4731 :     else if(CloseFloat(mousePos.x, croppedLowerRight.x, epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedLowerRight$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _mousePos$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@GetItemMod

; 4732 :         return ItemModifyType_ScaleRight;

	mov	eax, 12					; 0000000cH
	jmp	SHORT $LN17@GetItemMod
	jmp	SHORT $LN1@GetItemMod
$LN5@GetItemMod:

; 4733 :     else if(CloseFloat(mousePos.y, croppedItemPos.y, epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedItemPos$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _mousePos$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+4]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@GetItemMod

; 4734 :         return ItemModifyType_ScaleTop;

	mov	eax, 8
	jmp	SHORT $LN17@GetItemMod
	jmp	SHORT $LN1@GetItemMod
$LN3@GetItemMod:

; 4735 :     else if(CloseFloat(mousePos.y, croppedLowerRight.y, epsilon))

	push	ecx
	movss	xmm0, DWORD PTR _epsilon$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _croppedLowerRight$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _mousePos$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@GetItemMod

; 4736 :         return ItemModifyType_ScaleBottom;

	mov	eax, 16					; 00000010H
	jmp	SHORT $LN17@GetItemMod
$LN1@GetItemMod:

; 4737 : 
; 4738 : 
; 4739 :     return ItemModifyType_Move;

	mov	eax, 1
$LN17@GetItemMod:

; 4740 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetItemModifyType@@YA?AW4ItemModifyType@@ABUVect2@@00ABUVect4@@0@Z ENDP ; GetItemModifyType
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z
_TEXT	SEGMENT
$T1 = -368						; size = 16
$T2 = -352						; size = 16
$T3 = -336						; size = 16
$T4 = -320						; size = 16
$T5 = -304						; size = 16
$T6 = -288						; size = 16
$T7 = -272						; size = 16
$T8 = -256						; size = 16
$T9 = -240						; size = 16
$T10 = -224						; size = 16
$T11 = -208						; size = 16
$T12 = -192						; size = 16
$T13 = -176						; size = 16
$T14 = -160						; size = 16
$T15 = -144						; size = 16
$T16 = -128						; size = 16
$T17 = -112						; size = 16
$T18 = -96						; size = 16
$T19 = -76						; size = 8
$T20 = -68						; size = 8
$T21 = -60						; size = 8
$T22 = -52						; size = 4
tv263 = -48						; size = 4
tv69 = -44						; size = 4
tv222 = -40						; size = 4
tv78 = -36						; size = 4
tv170 = -32						; size = 4
tv214 = -28						; size = 4
tv386 = -24						; size = 4
tv162 = -20						; size = 4
tv345 = -16						; size = 4
tv304 = -12						; size = 4
_scale$ = -8						; size = 8
_scaleItem$ = 8						; size = 4
_minSize$ = 12						; size = 4
_snapSize$ = 16						; size = 4
_bSnap$ = 20						; size = 1
_cropEdges$ = 24					; size = 4
_cropSymmetric$ = 28					; size = 1
?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z PROC ; OBS::EnsureCropValid, COMDAT

; 4801 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	esi
	push	edi

; 4802 :     Vect2 scale = (scaleItem->GetSource() ? scaleItem->GetSource()->GetSize() : scaleItem->GetSize()) / scaleItem->GetSize();

	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	test	eax, eax
	je	SHORT $LN18@EnsureCrop
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetSource@SceneItem@@QBEPAVImageSource@@XZ
	mov	DWORD PTR tv69[ebp], eax
	lea	edx, DWORD PTR $T20[ebp]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv69[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN19@EnsureCrop
$LN18@EnsureCrop:
	lea	ecx, DWORD PTR $T21[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetSize@SceneItem@@QBE?AUVect2@@XZ
	mov	DWORD PTR tv78[ebp], eax
$LN19@EnsureCrop:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T22[ebp], eax
	lea	ecx, DWORD PTR $T19[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetSize@SceneItem@@QBE?AUVect2@@XZ
	push	eax
	lea	eax, DWORD PTR _scale$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T22[ebp]
	call	DWORD PTR __imp_??KVect2@@QBE?AU0@ABU0@@Z

; 4803 : 
; 4804 :     // When keep aspect is on, cropping can only be half size - 2 * minsize
; 4805 :     if (cropSymmetric)

	movzx	ecx, BYTE PTR _cropSymmetric$[ebx]
	test	ecx, ecx
	je	$LN15@EnsureCrop

; 4806 :     {
; 4807 :         if (cropEdges & (edgeLeft | edgeRight))

	mov	edx, DWORD PTR _cropEdges$[ebx]
	and	edx, 3
	je	$LN14@EnsureCrop

; 4808 :         {
; 4809 :             if (scaleItem->GetCrop().x > (scaleItem->size.x / 2 ) - 2 * minSize.x)

	lea	eax, DWORD PTR $T16[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ecx+36]
	divss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _minSize$[ebx]
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR [edx]
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR [eax]
	comiss	xmm1, xmm0
	jbe	SHORT $LN13@EnsureCrop

; 4810 :             {
; 4811 :                 scaleItem->crop.x = ((scaleItem->size.x / 2 ) - 2 * minSize.x) * scale.x;

	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+36]
	divss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _minSize$[ebx]
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR [edx]
	subss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+48], xmm0

; 4812 :                 scaleItem->crop.w = ((scaleItem->size.x / 2 ) - 2 * minSize.x) * scale.x;

	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+36]
	divss	xmm0, DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _minSize$[ebx]
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR [ecx]
	subss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+60], xmm0
$LN13@EnsureCrop:

; 4813 :             }
; 4814 :             scaleItem->crop.x = (scaleItem->crop.x < 0.0f) ? 0.0f : scaleItem->crop.x;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+48]
	jbe	SHORT $LN20@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv162[ebp], xmm0
	jmp	SHORT $LN21@EnsureCrop
$LN20@EnsureCrop:
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+48]
	movss	DWORD PTR tv162[ebp], xmm0
$LN21@EnsureCrop:
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR tv162[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 4815 :             scaleItem->crop.w = (scaleItem->crop.w < 0.0f) ? 0.0f : scaleItem->crop.w;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+60]
	jbe	SHORT $LN22@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv170[ebp], xmm0
	jmp	SHORT $LN23@EnsureCrop
$LN22@EnsureCrop:
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+60]
	movss	DWORD PTR tv170[ebp], xmm0
$LN23@EnsureCrop:
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR tv170[ebp]
	movss	DWORD PTR [eax+60], xmm0
$LN14@EnsureCrop:

; 4816 :         }
; 4817 :         if (cropEdges & (edgeTop | edgeBottom))

	mov	ecx, DWORD PTR _cropEdges$[ebx]
	and	ecx, 12					; 0000000cH
	je	$LN12@EnsureCrop

; 4818 :         {
; 4819 :             if (scaleItem->GetCrop().y > (scaleItem->size.y / 2 ) - 2 * minSize.y)

	lea	edx, DWORD PTR $T18[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+40]
	divss	xmm0, DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _minSize$[ebx]
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR [eax+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN11@EnsureCrop

; 4820 :             {
; 4821 :                 scaleItem->crop.y = ((scaleItem->size.y / 2 ) - 2 * minSize.y) * scale.y;

	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+40]
	divss	xmm0, DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _minSize$[ebx]
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _scale$[ebp+4]
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+52], xmm0

; 4822 :                 scaleItem->crop.z = ((scaleItem->size.y / 2 ) - 2 * minSize.y) * scale.y;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+40]
	divss	xmm0, DWORD PTR __real@40000000
	mov	eax, DWORD PTR _minSize$[ebx]
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR [eax+4]
	subss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _scale$[ebp+4]
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+56], xmm0
$LN11@EnsureCrop:

; 4823 :             }
; 4824 :             scaleItem->crop.y = (scaleItem->crop.y < 0.0f) ? 0.0f : scaleItem->crop.y;

	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [ecx+52]
	jbe	SHORT $LN24@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv214[ebp], xmm0
	jmp	SHORT $LN25@EnsureCrop
$LN24@EnsureCrop:
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+52]
	movss	DWORD PTR tv214[ebp], xmm0
$LN25@EnsureCrop:
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR tv214[ebp]
	movss	DWORD PTR [edx+52], xmm0

; 4825 :             scaleItem->crop.z = (scaleItem->crop.z < 0.0f) ? 0.0f : scaleItem->crop.z;

	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [ecx+56]
	jbe	SHORT $LN26@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv222[ebp], xmm0
	jmp	SHORT $LN27@EnsureCrop
$LN26@EnsureCrop:
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR tv222[ebp], xmm0
$LN27@EnsureCrop:
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR tv222[ebp]
	movss	DWORD PTR [edx+56], xmm0
$LN12@EnsureCrop:

; 4826 :         }
; 4827 :     }
; 4828 :     else 

	jmp	$LN10@EnsureCrop
$LN15@EnsureCrop:

; 4829 :     {
; 4830 :         // left
; 4831 :         if (scaleItem->GetCrop().x > (scaleItem->size.x - scaleItem->GetCrop().w - 32) - minSize.x && cropEdges & edgeLeft)

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	esi, eax
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	edi, DWORD PTR [edx]
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [edi+36]
	subss	xmm0, DWORD PTR [eax+12]
	subss	xmm0, DWORD PTR __real@42000000
	mov	edx, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [edx]
	movss	xmm1, DWORD PTR [esi]
	comiss	xmm1, xmm0
	jbe	SHORT $LN9@EnsureCrop
	mov	eax, DWORD PTR _cropEdges$[ebx]
	and	eax, 1
	je	SHORT $LN9@EnsureCrop

; 4832 :         {
; 4833 :             scaleItem->crop.x = ((scaleItem->size.x - scaleItem->GetCrop().w - 32) - minSize.x) * scale.x;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	esi, DWORD PTR [ecx]
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [esi+36]
	subss	xmm0, DWORD PTR [eax+12]
	subss	xmm0, DWORD PTR __real@42000000
	mov	ecx, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+48], xmm0
$LN9@EnsureCrop:

; 4834 :         }
; 4835 :         scaleItem->crop.x = (scaleItem->crop.x < 0.0f) ? 0.0f : scaleItem->crop.x;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+48]
	jbe	SHORT $LN28@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv263[ebp], xmm0
	jmp	SHORT $LN29@EnsureCrop
$LN28@EnsureCrop:
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+48]
	movss	DWORD PTR tv263[ebp], xmm0
$LN29@EnsureCrop:
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR tv263[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 4836 : 
; 4837 :         // top
; 4838 :         if (scaleItem->GetCrop().y > (scaleItem->size.y - scaleItem->GetCrop().z - 32) - minSize.y && cropEdges & edgeTop)

	lea	ecx, DWORD PTR $T12[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	esi, eax
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	edi, DWORD PTR [eax]
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [edi+40]
	subss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR __real@42000000
	mov	eax, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [eax+4]
	movss	xmm1, DWORD PTR [esi+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN8@EnsureCrop
	mov	ecx, DWORD PTR _cropEdges$[ebx]
	and	ecx, 4
	je	SHORT $LN8@EnsureCrop

; 4839 :         {
; 4840 :             scaleItem->crop.y = ((scaleItem->size.y - scaleItem->GetCrop().z - 32) - minSize.y) * scale.y;

	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	esi, DWORD PTR [edx]
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [esi+40]
	subss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR __real@42000000
	mov	edx, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR _scale$[ebp+4]
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [ecx+52], xmm0
$LN8@EnsureCrop:

; 4841 :         }
; 4842 :         scaleItem->crop.y = (scaleItem->crop.y < 0.0f) ? 0.0f : scaleItem->crop.y;

	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+52]
	jbe	SHORT $LN30@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv304[ebp], xmm0
	jmp	SHORT $LN31@EnsureCrop
$LN30@EnsureCrop:
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [edx+52]
	movss	DWORD PTR tv304[ebp], xmm0
$LN31@EnsureCrop:
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR tv304[ebp]
	movss	DWORD PTR [ecx+52], xmm0

; 4843 : 
; 4844 :         // right
; 4845 :         if (scaleItem->GetCrop().w > (scaleItem->size.x - scaleItem->GetCrop().x - 32) - minSize.x && cropEdges & edgeRight)

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	esi, eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edi, DWORD PTR [ecx]
	lea	edx, DWORD PTR $T17[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [edi+36]
	subss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR __real@42000000
	mov	ecx, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR [esi+12]
	comiss	xmm1, xmm0
	jbe	SHORT $LN7@EnsureCrop
	mov	edx, DWORD PTR _cropEdges$[ebx]
	and	edx, 2
	je	SHORT $LN7@EnsureCrop

; 4846 :         {
; 4847 :             scaleItem->crop.w = ((scaleItem->size.x - scaleItem->GetCrop().x - 32) - minSize.x) * scale.x;

	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	esi, DWORD PTR [eax]
	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [esi+36]
	subss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR __real@42000000
	mov	eax, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	DWORD PTR [edx+60], xmm0
$LN7@EnsureCrop:

; 4848 :         }
; 4849 :         scaleItem->crop.w = (scaleItem->crop.w < 0.0f) ? 0.0f : scaleItem->crop.w;

	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [ecx+60]
	jbe	SHORT $LN32@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv345[ebp], xmm0
	jmp	SHORT $LN33@EnsureCrop
$LN32@EnsureCrop:
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR tv345[ebp], xmm0
$LN33@EnsureCrop:
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR tv345[ebp]
	movss	DWORD PTR [edx+60], xmm0

; 4850 : 
; 4851 :         // bottom
; 4852 :         if (scaleItem->GetCrop().z > (scaleItem->size.y - scaleItem->GetCrop().y - 32) - minSize.y && cropEdges & edgeBottom)

	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	mov	esi, eax
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	edi, DWORD PTR [edx]
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [edi+40]
	subss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR __real@42000000
	mov	edx, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR [esi+8]
	comiss	xmm1, xmm0
	jbe	SHORT $LN6@EnsureCrop
	mov	eax, DWORD PTR _cropEdges$[ebx]
	and	eax, 8
	je	SHORT $LN6@EnsureCrop

; 4853 :         {
; 4854 :             scaleItem->crop.z = ((scaleItem->size.y - scaleItem->GetCrop().y - 32) - minSize.y) * scale.y;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	esi, DWORD PTR [ecx]
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	movss	xmm0, DWORD PTR [esi+40]
	subss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR __real@42000000
	mov	ecx, DWORD PTR _minSize$[ebx]
	subss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _scale$[ebp+4]
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	DWORD PTR [eax+56], xmm0
$LN6@EnsureCrop:

; 4855 :         }
; 4856 :         scaleItem->crop.z = (scaleItem->crop.z < 0.0f) ? 0.0f : scaleItem->crop.z;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+56]
	jbe	SHORT $LN34@EnsureCrop
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv386[ebp], xmm0
	jmp	SHORT $LN35@EnsureCrop
$LN34@EnsureCrop:
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+56]
	movss	DWORD PTR tv386[ebp], xmm0
$LN35@EnsureCrop:
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR tv386[ebp]
	movss	DWORD PTR [eax+56], xmm0
$LN10@EnsureCrop:

; 4857 :     }
; 4858 :     if (bSnap)

	movzx	ecx, BYTE PTR _bSnap$[ebx]
	test	ecx, ecx
	je	$LN1@EnsureCrop

; 4859 :     {
; 4860 :         // left
; 4861 :         if(CloseFloat(scaleItem->GetCrop().x, 0.0f, snapSize.x))

	mov	edx, DWORD PTR _snapSize$[ebx]
	push	ecx
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@EnsureCrop

; 4862 :         {
; 4863 :             scaleItem->crop.x = 0.0f;

	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+48], xmm0
$LN4@EnsureCrop:

; 4864 :         }
; 4865 :         // top
; 4866 :         if(CloseFloat(scaleItem->GetCrop().y, 0.0f, snapSize.y))

	mov	ecx, DWORD PTR _snapSize$[ebx]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@EnsureCrop

; 4867 :         {
; 4868 :             scaleItem->crop.y = 0.0f;

	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	edx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+52], xmm0
$LN3@EnsureCrop:

; 4869 :         }
; 4870 :         // right
; 4871 :         if(CloseFloat(scaleItem->GetCrop().w, 0.0f, snapSize.x))

	mov	eax, DWORD PTR _snapSize$[ebx]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@EnsureCrop

; 4872 :         {
; 4873 :             scaleItem->crop.w = 0.0f;

	mov	eax, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+60], xmm0
$LN2@EnsureCrop:

; 4874 :         }
; 4875 :         // bottom
; 4876 :         if(CloseFloat(scaleItem->GetCrop().z, 0.0f, snapSize.y))

	mov	edx, DWORD PTR _snapSize$[ebx]
	push	ecx
	movss	xmm0, DWORD PTR [edx+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _scaleItem$[ebx]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?GetCrop@SceneItem@@QAE?AUVect4@@XZ
	push	ecx
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@EnsureCrop

; 4877 :         {
; 4878 :             scaleItem->crop.z = 0.0f;

	mov	edx, DWORD PTR _scaleItem$[ebx]
	mov	eax, DWORD PTR [edx]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+56], xmm0
$LN1@EnsureCrop:

; 4879 :         }
; 4880 :     }
; 4881 : 
; 4882 :     return true;

	mov	al, 1

; 4883 : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?EnsureCropValid@OBS@@CA_NAAPAVSceneItem@@AAUVect2@@1_NH2@Z ENDP ; OBS::EnsureCropValid
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?PluginsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_strText$1 = -88					; size = 8
_configPlugin$2 = -80					; size = 4
_pluginInfo$3 = -76					; size = 4
_pluginID$4 = -72					; size = 4
_configPlugin$5 = -68					; size = 4
_pluginID$6 = -64					; size = 4
_id$7 = -60						; size = 4
_hwndPlugins$8 = -56					; size = 4
_id$9 = -52						; size = 4
tv199 = -48						; size = 4
_getDescription$10 = -44				; size = 4
_id$11 = -40						; size = 4
_hwndPlugins$12 = -36					; size = 4
_lpName$13 = -32					; size = 4
_pluginInfo$14 = -28					; size = 4
_getName$15 = -24					; size = 4
_pluginInfo$16 = -20					; size = 4
_lpDescription$17 = -16					; size = 4
tv130 = -12						; size = 4
tv64 = -8						; size = 4
_i$18 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?PluginsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::PluginsDialogProc, COMDAT

; 5891 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H

; 5892 :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	$LN1@PluginsDia
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN19@PluginsDia
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN13@PluginsDia
	jmp	$LN20@PluginsDia
$LN19@PluginsDia:

; 5893 :     {
; 5894 :         case WM_INITDIALOG:
; 5895 :             {
; 5896 :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 5897 : 
; 5898 :                 HWND hwndPlugins = GetDlgItem(hwnd, IDC_PLUGINS);

	push	1055					; 0000041fH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndPlugins$12[ebp], eax

; 5899 : 
; 5900 :                 for(UINT i=0; i<App->plugins.Num(); i++)

	mov	DWORD PTR _i$18[ebp], 0
	jmp	SHORT $LN18@PluginsDia
$LN17@PluginsDia:
	mov	eax, DWORD PTR _i$18[ebp]
	add	eax, 1
	mov	DWORD PTR _i$18[ebp], eax
$LN18@PluginsDia:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1404				; 0000057cH
	call	?Num@?$List@UPluginInfo@@@@QBEIXZ	; List<PluginInfo>::Num
	cmp	DWORD PTR _i$18[ebp], eax
	jae	SHORT $LN16@PluginsDia

; 5901 :                 {
; 5902 :                     PluginInfo &pluginInfo = App->plugins[i];

	mov	ecx, DWORD PTR _i$18[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1404				; 0000057cH
	call	??A?$List@UPluginInfo@@@@QAEAAUPluginInfo@@I@Z ; List<PluginInfo>::operator[]
	mov	DWORD PTR _pluginInfo$14[ebp], eax

; 5903 :                     GETPLUGINNAMEPROC getName = (GETPLUGINNAMEPROC)GetProcAddress(pluginInfo.hModule, "GetPluginName");

	push	OFFSET $SG4294712356
	mov	edx, DWORD PTR _pluginInfo$14[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _getName$15[ebp], eax

; 5904 : 
; 5905 :                     CTSTR lpName;
; 5906 :                     if(getName)

	cmp	DWORD PTR _getName$15[ebp], 0
	je	SHORT $LN15@PluginsDia

; 5907 :                         lpName = getName();

	call	DWORD PTR _getName$15[ebp]
	mov	DWORD PTR _lpName$13[ebp], eax

; 5908 :                     else

	jmp	SHORT $LN14@PluginsDia
$LN15@PluginsDia:

; 5909 :                         lpName = pluginInfo.strFile;

	mov	ecx, DWORD PTR _pluginInfo$14[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _lpName$13[ebp], eax
$LN14@PluginsDia:

; 5910 : 
; 5911 :                     UINT id = (UINT)SendMessage(hwndPlugins, LB_ADDSTRING, 0, (LPARAM)lpName);

	mov	ecx, DWORD PTR _lpName$13[ebp]
	push	ecx
	push	0
	push	384					; 00000180H
	mov	edx, DWORD PTR _hwndPlugins$12[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$7[ebp], eax

; 5912 :                     SendMessage(hwndPlugins, LB_SETITEMDATA, id, (LPARAM)i);

	mov	eax, DWORD PTR _i$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$7[ebp]
	push	ecx
	push	410					; 0000019aH
	mov	edx, DWORD PTR _hwndPlugins$12[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 5913 :                 }

	jmp	$LN17@PluginsDia
$LN16@PluginsDia:

; 5914 : 
; 5915 :                 return TRUE;

	mov	eax, 1
	jmp	$LN22@PluginsDia
$LN13@PluginsDia:

; 5916 :             }
; 5917 : 
; 5918 :         case WM_COMMAND:
; 5919 :             switch(LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv130[ebp], eax
	cmp	DWORD PTR tv130[ebp], 1
	je	$LN2@PluginsDia
	cmp	DWORD PTR tv130[ebp], 1055		; 0000041fH
	je	SHORT $LN10@PluginsDia
	cmp	DWORD PTR tv130[ebp], 1063		; 00000427H
	je	$LN5@PluginsDia
	jmp	$LN11@PluginsDia
$LN10@PluginsDia:

; 5920 :             {
; 5921 :                 case IDC_PLUGINS:
; 5922 :                     if(HIWORD(wParam) == LBN_SELCHANGE)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 1
	jne	$LN9@PluginsDia

; 5923 :                     {
; 5924 :                         UINT id = (UINT)SendMessage((HWND)lParam, LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$11[ebp], eax

; 5925 :                         if(id == LB_ERR)

	cmp	DWORD PTR _id$11[ebp], -1
	jne	SHORT $LN8@PluginsDia

; 5926 :                             break;

	jmp	$LN11@PluginsDia
$LN8@PluginsDia:

; 5927 : 
; 5928 :                         UINT pluginID = (UINT)SendMessage((HWND)lParam, LB_GETITEMDATA, id, 0);

	push	0
	mov	ecx, DWORD PTR _id$11[ebp]
	push	ecx
	push	409					; 00000199H
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _pluginID$6[ebp], eax

; 5929 :                         PluginInfo &pluginInfo = App->plugins[pluginID];

	mov	eax, DWORD PTR _pluginID$6[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1404				; 0000057cH
	call	??A?$List@UPluginInfo@@@@QAEAAUPluginInfo@@I@Z ; List<PluginInfo>::operator[]
	mov	DWORD PTR _pluginInfo$16[ebp], eax

; 5930 : 
; 5931 :                         //-------------------------------------
; 5932 : 
; 5933 :                         GETPLUGINDESCRIPTIONPROC getDescription = (GETPLUGINDESCRIPTIONPROC)GetProcAddress(pluginInfo.hModule, "GetPluginDescription");

	push	OFFSET $SG4294712355
	mov	ecx, DWORD PTR _pluginInfo$16[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _getDescription$10[ebp], eax

; 5934 : 
; 5935 :                         CTSTR lpDescription = NULL;

	mov	DWORD PTR _lpDescription$17[ebp], 0

; 5936 :                         if(getDescription)

	cmp	DWORD PTR _getDescription$10[ebp], 0
	je	SHORT $LN7@PluginsDia

; 5937 :                             lpDescription = getDescription();

	call	DWORD PTR _getDescription$10[ebp]
	mov	DWORD PTR _lpDescription$17[ebp], eax
$LN7@PluginsDia:

; 5938 : 
; 5939 :                         String strText;

	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 5940 :                         strText << Str("Plugins.Filename")    << TEXT(" ") << pluginInfo.strFile;

	mov	eax, DWORD PTR _pluginInfo$16[ebp]
	push	eax
	push	OFFSET $SG4294712353
	push	OFFSET $SG4294712354
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z

; 5941 :                         
; 5942 :                         if(lpDescription)

	cmp	DWORD PTR _lpDescription$17[ebp], 0
	je	SHORT $LN6@PluginsDia

; 5943 :                             strText << TEXT("\r\n\r\n") << Str("Plugins.Description") << TEXT("\r\n") << lpDescription;

	mov	edx, DWORD PTR _lpDescription$17[ebp]
	push	edx
	push	OFFSET $SG4294712350
	push	OFFSET $SG4294712351
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294712352
	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
$LN6@PluginsDia:

; 5944 : 
; 5945 :                         SetWindowText(GetDlgItem(hwnd, IDC_DESCRIPTION), strText.Array());

	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1057					; 00000421H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 5946 : 
; 5947 :                         //-------------------------------------
; 5948 : 
; 5949 :                         CONFIGUREPLUGINPROC configPlugin = (CONFIGUREPLUGINPROC)GetProcAddress(pluginInfo.hModule, "ConfigPlugin");

	push	OFFSET $SG4294712349
	mov	edx, DWORD PTR _pluginInfo$16[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _configPlugin$5[ebp], eax

; 5950 :                         EnableWindow(GetDlgItem(hwnd, IDC_CONFIG), configPlugin != NULL ? TRUE : FALSE);

	cmp	DWORD PTR _configPlugin$5[ebp], 0
	je	SHORT $LN24@PluginsDia
	mov	DWORD PTR tv199[ebp], 1
	jmp	SHORT $LN25@PluginsDia
$LN24@PluginsDia:
	mov	DWORD PTR tv199[ebp], 0
$LN25@PluginsDia:
	mov	ecx, DWORD PTR tv199[ebp]
	push	ecx
	push	1063					; 00000427H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 5951 :                     }

	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@PluginsDia:

; 5952 :                     break;

	jmp	$LN11@PluginsDia
$LN5@PluginsDia:

; 5953 : 
; 5954 :                 case IDC_CONFIG:
; 5955 :                     if(HIWORD(wParam) == BN_CLICKED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN4@PluginsDia

; 5956 :                     {
; 5957 :                         HWND hwndPlugins = GetDlgItem(hwnd, IDC_PLUGINS);

	push	1055					; 0000041fH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndPlugins$8[ebp], eax

; 5958 : 
; 5959 :                         UINT id = (UINT)SendMessage(hwndPlugins, LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	mov	eax, DWORD PTR _hwndPlugins$8[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$9[ebp], eax

; 5960 :                         if(id == LB_ERR)

	cmp	DWORD PTR _id$9[ebp], -1
	jne	SHORT $LN3@PluginsDia

; 5961 :                             break;

	jmp	SHORT $LN11@PluginsDia
$LN3@PluginsDia:

; 5962 : 
; 5963 :                         UINT pluginID = (UINT)SendMessage(hwndPlugins, LB_GETITEMDATA, id, 0);

	push	0
	mov	ecx, DWORD PTR _id$9[ebp]
	push	ecx
	push	409					; 00000199H
	mov	edx, DWORD PTR _hwndPlugins$8[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _pluginID$4[ebp], eax

; 5964 :                         PluginInfo &pluginInfo = App->plugins[pluginID];

	mov	eax, DWORD PTR _pluginID$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1404				; 0000057cH
	call	??A?$List@UPluginInfo@@@@QAEAAUPluginInfo@@I@Z ; List<PluginInfo>::operator[]
	mov	DWORD PTR _pluginInfo$3[ebp], eax

; 5965 : 
; 5966 :                         //-------------------------------------
; 5967 : 
; 5968 :                         CONFIGUREPLUGINPROC configPlugin = (CONFIGUREPLUGINPROC)GetProcAddress(pluginInfo.hModule, "ConfigPlugin");

	push	OFFSET $SG4294712348
	mov	ecx, DWORD PTR _pluginInfo$3[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _configPlugin$2[ebp], eax

; 5969 :                         configPlugin(hwnd);

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR _configPlugin$2[ebp]
	add	esp, 4
$LN4@PluginsDia:

; 5970 :                     }
; 5971 :                     break;

	jmp	SHORT $LN11@PluginsDia
$LN2@PluginsDia:

; 5972 : 
; 5973 :                 case IDOK:
; 5974 :                     EndDialog(hwnd, IDOK);

	push	1
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
$LN11@PluginsDia:

; 5975 :             }
; 5976 :             break;

	jmp	SHORT $LN20@PluginsDia
$LN1@PluginsDia:

; 5977 : 
; 5978 :         case WM_CLOSE:
; 5979 :             EndDialog(hwnd, IDOK);

	push	1
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
$LN20@PluginsDia:

; 5980 :     }
; 5981 : 
; 5982 :     return FALSE;

	xor	eax, eax
$LN22@PluginsDia:

; 5983 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?PluginsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::PluginsDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\windowstuff.cpp
;	COMDAT ?SetBackground@@YAXPAUHWND__@@PB_WPAUHDC__@@H1@Z
_TEXT	SEGMENT
$T1 = -188						; size = 8
$T2 = -180						; size = 4
$T3 = -176						; size = 4
_brush$4 = -172						; size = 12
_p1$5 = -160						; size = 8
_p2$6 = -152						; size = 8
_ptWinPos$ = -144					; size = 8
$T7 = -136						; size = 8
$T8 = -128						; size = 4
_pen$9 = -124						; size = 8
_pen1$10 = -116						; size = 8
tv323 = -108						; size = 4
$T11 = -104						; size = 4
$T12 = -100						; size = 4
tv266 = -96						; size = 4
tv249 = -92						; size = 4
tv78 = -88						; size = 4
_hbmpOld$ = -84						; size = 4
_hbmpMem$ = -80						; size = 4
$T13 = -76						; size = 4
_graph$ = -72						; size = 8
tv326 = -62						; size = 2
$T14 = -60						; size = 4
tv320 = -56						; size = 4
_hdcMemory$ = -52					; size = 4
_sizeWindow$ = -48					; size = 8
_pImage$ = -40						; size = 4
_rcWindow$ = -36					; size = 16
_windowRect$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_m_hWnd$ = 8						; size = 4
_pBackImgFullPath$ = 12					; size = 4
_hDC$ = 16						; size = 4
_bDrawEdage$ = 20					; size = 4
_content$ = 24						; size = 4
?SetBackground@@YAXPAUHWND__@@PB_WPAUHDC__@@H1@Z PROC	; SetBackground, COMDAT

; 5998 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 188				; 000000bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5999 : 
; 6000 : 	//加载图片
; 6001 : 	Gdiplus::Image* pImage = Gdiplus::Image::FromFile(pBackImgFullPath);

	push	0
	mov	eax, DWORD PTR _pBackImgFullPath$[ebp]
	push	eax
	call	?FromFile@Image@Gdiplus@@SAPAV12@PB_WH@Z ; Gdiplus::Image::FromFile
	add	esp, 8
	mov	DWORD PTR _pImage$[ebp], eax

; 6002 : 	if ((pImage == NULL) || (pImage->GetLastStatus() != Gdiplus::Ok))

	cmp	DWORD PTR _pImage$[ebp], 0
	je	SHORT $LN6@SetBackgro
	mov	ecx, DWORD PTR _pImage$[ebp]
	call	?GetLastStatus@Image@Gdiplus@@QBE?AW4Status@2@XZ ; Gdiplus::Image::GetLastStatus
	test	eax, eax
	je	SHORT $LN7@SetBackgro
$LN6@SetBackgro:

; 6003 : 	{
; 6004 : 		if (pImage)

	cmp	DWORD PTR _pImage$[ebp], 0
	je	SHORT $LN5@SetBackgro

; 6005 : 		{
; 6006 : 			delete pImage;

	mov	ecx, DWORD PTR _pImage$[ebp]
	mov	DWORD PTR $T12[ebp], ecx
	mov	edx, DWORD PTR $T12[ebp]
	mov	DWORD PTR $T13[ebp], edx
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN10@SetBackgro
	push	1
	mov	eax, DWORD PTR $T13[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T13[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN11@SetBackgro
$LN10@SetBackgro:
	mov	DWORD PTR tv78[ebp], 0
$LN11@SetBackgro:

; 6007 : 			pImage = NULL;

	mov	DWORD PTR _pImage$[ebp], 0
$LN5@SetBackgro:

; 6008 : 		}
; 6009 : 		return;

	jmp	$LN8@SetBackgro
$LN7@SetBackgro:

; 6010 : 	}
; 6011 : 	RECT windowRect;
; 6012 : 	GetWindowRect(m_hWnd, &windowRect);

	lea	ecx, DWORD PTR _windowRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _m_hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8

; 6013 : 	SIZE sizeWindow;
; 6014 : 	if (windowRect.left == windowRect.right)

	mov	eax, DWORD PTR _windowRect$[ebp]
	cmp	eax, DWORD PTR _windowRect$[ebp+8]
	jne	SHORT $LN4@SetBackgro

; 6015 : 	{
; 6016 : 		sizeWindow.cx = pImage->GetWidth();

	mov	ecx, DWORD PTR _pImage$[ebp]
	call	?GetWidth@Image@Gdiplus@@QAEIXZ		; Gdiplus::Image::GetWidth
	mov	DWORD PTR _sizeWindow$[ebp], eax

; 6017 : 		sizeWindow.cy = pImage->GetHeight();

	mov	ecx, DWORD PTR _pImage$[ebp]
	call	?GetHeight@Image@Gdiplus@@QAEIXZ	; Gdiplus::Image::GetHeight
	mov	DWORD PTR _sizeWindow$[ebp+4], eax

; 6018 : 	}
; 6019 : 	else

	jmp	SHORT $LN3@SetBackgro
$LN4@SetBackgro:

; 6020 : 	{
; 6021 : 		sizeWindow.cx = windowRect.right - windowRect.left;

	mov	ecx, DWORD PTR _windowRect$[ebp+8]
	sub	ecx, DWORD PTR _windowRect$[ebp]
	mov	DWORD PTR _sizeWindow$[ebp], ecx

; 6022 : 		sizeWindow.cy = windowRect.bottom - windowRect.top;

	mov	edx, DWORD PTR _windowRect$[ebp+12]
	sub	edx, DWORD PTR _windowRect$[ebp+4]
	mov	DWORD PTR _sizeWindow$[ebp+4], edx
$LN3@SetBackgro:

; 6023 : 	}
; 6024 : 	HDC hdcMemory = CreateCompatibleDC(hDC);

	mov	eax, DWORD PTR _hDC$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateCompatibleDC@4
	mov	DWORD PTR _hdcMemory$[ebp], eax

; 6025 : 	RECT rcWindow;
; 6026 : 	GetWindowRect(m_hWnd, &rcWindow);

	lea	ecx, DWORD PTR _rcWindow$[ebp]
	push	ecx
	mov	edx, DWORD PTR _m_hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8

; 6027 : 	HBITMAP hbmpMem = CreateCompatibleBitmap(hDC, sizeWindow.cx, sizeWindow.cy);

	mov	eax, DWORD PTR _sizeWindow$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _sizeWindow$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hDC$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateCompatibleBitmap@12
	mov	DWORD PTR _hbmpMem$[ebp], eax

; 6028 : 
; 6029 : 	HGDIOBJ hbmpOld = ::SelectObject(hdcMemory, hbmpMem);

	mov	eax, DWORD PTR _hbmpMem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdcMemory$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _hbmpOld$[ebp], eax

; 6030 : 	POINT ptWinPos = { rcWindow.left, rcWindow.top };

	mov	edx, DWORD PTR _rcWindow$[ebp]
	mov	DWORD PTR _ptWinPos$[ebp], edx
	mov	eax, DWORD PTR _rcWindow$[ebp+4]
	mov	DWORD PTR _ptWinPos$[ebp+4], eax

; 6031 : 
; 6032 : 	Gdiplus::Graphics graph(hdcMemory);

	mov	ecx, DWORD PTR _hdcMemory$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graph$[ebp]
	call	??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z	; Gdiplus::Graphics::Graphics

; 6033 : 	graph.SetSmoothingMode(Gdiplus::SmoothingModeNone);

	push	3
	lea	ecx, DWORD PTR _graph$[ebp]
	call	?SetSmoothingMode@Graphics@Gdiplus@@QAE?AW4Status@2@W4SmoothingMode@2@@Z ; Gdiplus::Graphics::SetSmoothingMode

; 6034 : 	graph.DrawImage(pImage, 0, 0, sizeWindow.cx, sizeWindow.cy);

	mov	edx, DWORD PTR _sizeWindow$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _sizeWindow$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pImage$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graph$[ebp]
	call	?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HHHH@Z ; Gdiplus::Graphics::DrawImage

; 6035 : 	
; 6036 : 	if (bDrawEdage)

	cmp	DWORD PTR _bDrawEdage$[ebp], 0
	je	$LN2@SetBackgro

; 6037 : 	{
; 6038 : 	
; 6039 : 		Gdiplus::Pen pen(Gdiplus::Color(216, 92, 18), 5);

	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	18					; 00000012H
	push	92					; 0000005cH
	push	216					; 000000d8H
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0Color@Gdiplus@@QAE@EEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _pen$9[ebp]
	call	??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z	; Gdiplus::Pen::Pen

; 6040 : 		graph.DrawRectangle(&pen, 0, 0, sizeWindow.cx, sizeWindow.cy);

	mov	edx, DWORD PTR _sizeWindow$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _sizeWindow$[ebp]
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _pen$9[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graph$[ebp]
	call	?DrawRectangle@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawRectangle

; 6041 : 		Gdiplus::Pen pen1(Gdiplus::Color(55, 55, 55), 2);

	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	55					; 00000037H
	push	55					; 00000037H
	push	55					; 00000037H
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Color@Gdiplus@@QAE@EEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _pen1$10[ebp]
	call	??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z	; Gdiplus::Pen::Pen

; 6042 : 		Gdiplus::Point p1(sizeWindow.cx - 195, 5);

	push	5
	mov	edx, DWORD PTR _sizeWindow$[ebp]
	sub	edx, 195				; 000000c3H
	push	edx
	lea	ecx, DWORD PTR _p1$5[ebp]
	call	??0Point@Gdiplus@@QAE@HH@Z		; Gdiplus::Point::Point

; 6043 : 		Gdiplus::Point p2(sizeWindow.cx - 195, sizeWindow.cy - 5);

	mov	eax, DWORD PTR _sizeWindow$[ebp+4]
	sub	eax, 5
	push	eax
	mov	ecx, DWORD PTR _sizeWindow$[ebp]
	sub	ecx, 195				; 000000c3H
	push	ecx
	lea	ecx, DWORD PTR _p2$6[ebp]
	call	??0Point@Gdiplus@@QAE@HH@Z		; Gdiplus::Point::Point

; 6044 : 		graph.DrawLine(&pen1, p1, p2);

	lea	edx, DWORD PTR _p2$6[ebp]
	push	edx
	lea	eax, DWORD PTR _p1$5[ebp]
	push	eax
	lea	ecx, DWORD PTR _pen1$10[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graph$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@ABVPoint@2@1@Z ; Gdiplus::Graphics::DrawLine

; 6045 : 	}

	lea	ecx, DWORD PTR _pen1$10[ebp]
	call	??1Pen@Gdiplus@@QAE@XZ			; Gdiplus::Pen::~Pen
	lea	ecx, DWORD PTR _pen$9[ebp]
	call	??1Pen@Gdiplus@@QAE@XZ			; Gdiplus::Pen::~Pen
$LN2@SetBackgro:

; 6046 : 	if (content)

	cmp	DWORD PTR _content$[ebp], 0
	je	$LN1@SetBackgro

; 6047 : 	{
; 6048 : 
; 6049 : 		Gdiplus::SolidBrush brush(Gdiplus::Color(200,200,200));

	push	200					; 000000c8H
	push	200					; 000000c8H
	push	200					; 000000c8H
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0Color@Gdiplus@@QAE@EEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _brush$4[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush

; 6050 : 		graph.DrawString(content, _tcsclen(content), &Gdiplus::Font(TEXT("宋体"), 12, Gdiplus::FontStyleBold), Gdiplus::PointF(0, 2), &brush);

	mov	edx, DWORD PTR _content$[ebp]
	mov	DWORD PTR tv320[ebp], edx
	mov	eax, DWORD PTR tv320[ebp]
	add	eax, 2
	mov	DWORD PTR tv323[ebp], eax
$LL14@SetBackgro:
	mov	ecx, DWORD PTR tv320[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv326[ebp], dx
	add	DWORD PTR tv320[ebp], 2
	cmp	WORD PTR tv326[ebp], 0
	jne	SHORT $LL14@SetBackgro
	mov	eax, DWORD PTR tv320[ebp]
	sub	eax, DWORD PTR tv323[ebp]
	sar	eax, 1
	mov	DWORD PTR tv249[ebp], eax
	lea	ecx, DWORD PTR _brush$4[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	push	0
	push	3
	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@41400000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294712346
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0Font@Gdiplus@@QAE@PB_WMHW4Unit@1@PBVFontCollection@1@@Z ; Gdiplus::Font::Font
	push	eax
	mov	edx, DWORD PTR tv249[ebp]
	push	edx
	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graph$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1Font@Gdiplus@@QAE@XZ			; Gdiplus::Font::~Font

; 6051 : 	}

	lea	ecx, DWORD PTR _brush$4[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
$LN1@SetBackgro:

; 6052 : 
; 6053 : 	BitBlt(hDC, 0, 0, sizeWindow.cx, sizeWindow.cy, hdcMemory, 0, 0, SRCCOPY);

	push	13369376				; 00cc0020H
	push	0
	push	0
	mov	ecx, DWORD PTR _hdcMemory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sizeWindow$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _sizeWindow$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _hDC$[ebp]
	push	ecx
	call	DWORD PTR __imp__BitBlt@36

; 6054 : 
; 6055 : 	delete pImage;

	mov	edx, DWORD PTR _pImage$[ebp]
	mov	DWORD PTR $T11[ebp], edx
	mov	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR $T14[ebp], eax
	cmp	DWORD PTR $T14[ebp], 0
	je	SHORT $LN12@SetBackgro
	push	1
	mov	ecx, DWORD PTR $T14[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T14[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv266[ebp], eax
	jmp	SHORT $LN13@SetBackgro
$LN12@SetBackgro:
	mov	DWORD PTR tv266[ebp], 0
$LN13@SetBackgro:

; 6056 : 	graph.ReleaseHDC(hdcMemory);

	mov	ecx, DWORD PTR _hdcMemory$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graph$[ebp]
	call	?ReleaseHDC@Graphics@Gdiplus@@QAEXPAUHDC__@@@Z ; Gdiplus::Graphics::ReleaseHDC

; 6057 : 	::SelectObject(hdcMemory, hbmpOld);

	mov	edx, DWORD PTR _hbmpOld$[ebp]
	push	edx
	mov	eax, DWORD PTR _hdcMemory$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8

; 6058 : 	::DeleteObject(hbmpOld);

	mov	ecx, DWORD PTR _hbmpOld$[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4

; 6059 : 	::DeleteObject(hbmpMem);

	mov	edx, DWORD PTR _hbmpMem$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteObject@4

; 6060 : 	::DeleteDC(hdcMemory);

	mov	eax, DWORD PTR _hdcMemory$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteDC@4

; 6061 : 	::DeleteDC(hDC);

	mov	ecx, DWORD PTR _hDC$[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteDC@4

; 6062 : 
; 6063 : }

	lea	ecx, DWORD PTR _graph$[ebp]
	call	??1Graphics@Gdiplus@@QAE@XZ		; Gdiplus::Graphics::~Graphics
$LN8@SetBackgro:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetBackground@@YAXPAUHWND__@@PB_WPAUHDC__@@H1@Z ENDP	; SetBackground
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@PAVSceneItem@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$List@PAVSceneItem@@@@QAE@XZ PROC			; List<SceneItem *>::List<SceneItem *>, COMDAT
; _this$ = ecx

; 35   :     inline List() : array(NULL), num(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@PAVSceneItem@@@@QAE@XZ ENDP			; List<SceneItem *>::List<SceneItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??1?$List@PAVSceneItem@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$List@PAVSceneItem@@@@QAE@XZ PROC			; List<SceneItem *>::~List<SceneItem *>, COMDAT
; _this$ = ecx

; 37   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   :         Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@PAVSceneItem@@@@QAEXXZ	; List<SceneItem *>::Clear

; 39   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@PAVSceneItem@@@@QAE@XZ ENDP			; List<SceneItem *>::~List<SceneItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@PAVSceneItem@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@PAVSceneItem@@@@QAEXXZ PROC		; List<SceneItem *>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@PAVSceneItem@@@@QAEXXZ ENDP		; List<SceneItem *>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ PROC	; List<SceneItem *>::Last, COMDAT
; _this$ = ecx

; 446  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 447  :         assert(num > 0);
; 448  : 
; 449  :         return array[num-1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [eax+ecx*4-4]

; 450  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Last@?$List@PAVSceneItem@@@@QBEAAPAVSceneItem@@XZ ENDP	; List<SceneItem *>::Last
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@USceneHotkeyInfo@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@USceneHotkeyInfo@@@@QBEIXZ PROC		; List<SceneHotkeyInfo>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@USceneHotkeyInfo@@@@QBEIXZ ENDP		; List<SceneHotkeyInfo>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Remove@?$List@USceneHotkeyInfo@@@@QAEXI@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Remove@?$List@USceneHotkeyInfo@@@@QAEXI@Z PROC		; List<SceneHotkeyInfo>::Remove, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         assert(index < num);
; 90   :         if(index >= num) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN2@Remove
	jmp	$LN3@Remove
$LN2@Remove:

; 91   : 
; 92   :         if(!--num) {Free(array); array=NULL; return;}

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR [ecx+4], edx
	cmp	DWORD PTR tv68[ebp], 0
	jne	SHORT $LN1@Remove
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
	jmp	SHORT $LN3@Remove
$LN1@Remove:

; 93   : 
; 94   :         mcpy(&array[index], &array[index+1], sizeof(T)*(num-index));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _index$[ebp]
	imul	edx, ecx, 12
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	imul	ecx, eax, 12
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	imul	eax, DWORD PTR _index$[ebp], 12
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 95   : 
; 96   :         array = (T*)ReAllocate(array, sizeof(T)*num);

	mov	edx, DWORD PTR _this$[ebp]
	imul	eax, DWORD PTR [edx+4], 12
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@Remove:

; 97   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@?$List@USceneHotkeyInfo@@@@QAEXI@Z ENDP		; List<SceneHotkeyInfo>::Remove
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??A?$List@USceneHotkeyInfo@@@@QAEAAUSceneHotkeyInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$List@USceneHotkeyInfo@@@@QAEAAUSceneHotkeyInfo@@I@Z PROC ; List<SceneHotkeyInfo>::operator[], COMDAT
; _this$ = ecx

; 379  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  :         assert(index < num);
; 381  :         if(index >= num) {DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AUSceneHotkeyInfo@@@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	mov	eax, 12					; 0000000cH
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator
$LN1@operator:

; 382  :         return array[index];

	imul	eax, DWORD PTR _index$[ebp], 12
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx]
$LN3@operator:

; 383  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@USceneHotkeyInfo@@@@QAEAAUSceneHotkeyInfo@@I@Z ENDP ; List<SceneHotkeyInfo>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\map
;	COMDAT ??0?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >, COMDAT
; _this$ = ecx

; 158  : 		{	// construct map by moving _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@YA$$QAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@0@AAV10@@Z ; std::move<std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >

; 159  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\map
;	COMDAT ??A?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEAA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
$T1 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -16						; size = 4
__Where$ = -12						; size = 4
_this$ = -8						; size = 4
$T5 = -2						; size = 1
$T6 = -1						; size = 1
__Keyval$ = 8						; size = 4
??A?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEAA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::operator[], COMDAT
; _this$ = ecx

; 225  : 		{	// find element matching _Keyval or insert with default mapped

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		iterator _Where = this->lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::lower_bound

; 227  : 		if (_Where == this->end()
; 228  : 			|| this->_Getcomp()(_Keyval, this->_Key(_Where._Mynode())))

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@operator
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator
$LN1@operator:

; 229  : 
; 230  : 			_Where = this->emplace_hint(_Where,
; 231  : 				piecewise_construct,
; 232  : 				_STD forward_as_tuple(_Keyval),
; 233  : 				tuple<>());

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0?$tuple@$$$V@std@@QAE@XZ		; std::tuple<>::tuple<>
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$forward_as_tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	add	esp, 8
	push	eax
	push	OFFSET _piecewise_construct
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Where$[ebp], eax
$LN2@operator:

; 234  : 
; 235  : 
; 236  : 		return (_Where->second);

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->
	add	eax, 24					; 00000018H

; 237  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEAA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
tv140 = -16						; size = 4
__Where$ = -12						; size = 4
_this$ = -8						; size = 4
$T5 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::find, COMDAT
; _this$ = ecx

; 1548 : 		{	// find an element in mutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1549 : 		iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::lower_bound

; 1550 : 		return (_Where == end()
; 1551 : 			|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1552 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1553 : 					? end() : _Where);

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	lea	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR tv140[ebp], edx
	jmp	SHORT $LN4@find
$LN3@find:
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	mov	DWORD PTR tv140[ebp], eax
$LN4@find:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1554 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::find
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??H?$List@UClassInfo@@@@QAEPAUClassInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??H?$List@UClassInfo@@@@QAEPAUClassInfo@@I@Z PROC	; List<ClassInfo>::operator+, COMDAT
; _this$ = ecx

; 393  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 394  :         assert(index < num);
; 395  :         if (index >= num) { DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return NULL; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AUClassInfo@@@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	xor	eax, eax
	jmp	SHORT $LN3@operator
$LN1@operator:

; 396  :         return array+index;

	imul	eax, DWORD PTR _index$[ebp], 28
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
$LN3@operator:

; 397  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??H?$List@UClassInfo@@@@QAEPAUClassInfo@@I@Z ENDP	; List<ClassInfo>::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Remove@?$List@UGlobalSourceInfo@@@@QAEXI@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Remove@?$List@UGlobalSourceInfo@@@@QAEXI@Z PROC	; List<GlobalSourceInfo>::Remove, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         assert(index < num);
; 90   :         if(index >= num) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN2@Remove
	jmp	$LN3@Remove
$LN2@Remove:

; 91   : 
; 92   :         if(!--num) {Free(array); array=NULL; return;}

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR [ecx+4], edx
	cmp	DWORD PTR tv68[ebp], 0
	jne	SHORT $LN1@Remove
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
	jmp	SHORT $LN3@Remove
$LN1@Remove:

; 93   : 
; 94   :         mcpy(&array[index], &array[index+1], sizeof(T)*(num-index));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _index$[ebp]
	shl	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _index$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 95   : 
; 96   :         array = (T*)ReAllocate(array, sizeof(T)*num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@Remove:

; 97   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@?$List@UGlobalSourceInfo@@@@QAEXI@Z ENDP	; List<GlobalSourceInfo>::Remove
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@PB_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$List@PB_W@@QAE@XZ PROC				; List<wchar_t const *>::List<wchar_t const *>, COMDAT
; _this$ = ecx

; 35   :     inline List() : array(NULL), num(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@PB_W@@QAE@XZ ENDP				; List<wchar_t const *>::List<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??1?$List@PB_W@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$List@PB_W@@QAE@XZ PROC				; List<wchar_t const *>::~List<wchar_t const *>, COMDAT
; _this$ = ecx

; 37   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   :         Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@PB_W@@QAEXXZ		; List<wchar_t const *>::Clear

; 39   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@PB_W@@QAE@XZ ENDP				; List<wchar_t const *>::~List<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@PB_W@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@PB_W@@QBEIXZ PROC				; List<wchar_t const *>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@PB_W@@QBEIXZ ENDP				; List<wchar_t const *>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??A?$List@PB_W@@QAEAAPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$List@PB_W@@QAEAAPB_WI@Z PROC			; List<wchar_t const *>::operator[], COMDAT
; _this$ = ecx

; 379  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  :         assert(index < num);
; 381  :         if(index >= num) {DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0PB_W@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	mov	eax, 4
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator
$LN1@operator:

; 382  :         return array[index];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
$LN3@operator:

; 383  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@PB_W@@QAEAAPB_WI@Z ENDP			; List<wchar_t const *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@PAVXElement@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$List@PAVXElement@@@@QAE@XZ PROC			; List<XElement *>::List<XElement *>, COMDAT
; _this$ = ecx

; 35   :     inline List() : array(NULL), num(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@PAVXElement@@@@QAE@XZ ENDP			; List<XElement *>::List<XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??1?$List@PAVXElement@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$List@PAVXElement@@@@QAE@XZ PROC			; List<XElement *>::~List<XElement *>, COMDAT
; _this$ = ecx

; 37   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   :         Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@PAVXElement@@@@QAEXXZ	; List<XElement *>::Clear

; 39   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@PAVXElement@@@@QAE@XZ ENDP			; List<XElement *>::~List<XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@PAVXElement@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@PAVXElement@@@@QBEIXZ PROC			; List<XElement *>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@PAVXElement@@@@QBEIXZ ENDP			; List<XElement *>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z PROC	; List<XElement *>::operator<<, COMDAT
; _this$ = ecx

; 366  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  :         Add(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$List@PAVXElement@@@@QAEIABQAVXElement@@@Z ; List<XElement *>::Add

; 368  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 369  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??6?$List@PAVXElement@@@@QAEAAV0@ABQAVXElement@@@Z ENDP	; List<XElement *>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z PROC	; List<XElement *>::operator[], COMDAT
; _this$ = ecx

; 379  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  :         assert(index < num);
; 381  :         if(index >= num) {DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0PAVXElement@@@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	mov	eax, 4
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator
$LN1@operator:

; 382  :         return array[index];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
$LN3@operator:

; 383  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@PAVXElement@@@@QAEAAPAVXElement@@I@Z ENDP	; List<XElement *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >, COMDAT
; _this$ = ecx

; 680  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >

; 681  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back, COMDAT
; _this$ = ecx

; 865  : 		{	// insert by moving into element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 866  : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBE_NPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back

; 867  : 			{	// push back an element
; 868  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax

; 869  : 			if (this->_Mylast == this->_Myend)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back

; 870  : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reserve
$LN3@push_back:

; 871  : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Orphan_range

; 872  : 			this->_Getal().construct(this->_Mylast,
; 873  : 				_STD forward<value_type>(this->_Myfirst[_Idx]));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >

; 874  : 			++this->_Mylast;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx

; 875  : 			}
; 876  : 		else

	jmp	SHORT $LN5@push_back
$LN4@push_back:

; 877  : 			{	// push back a non-element
; 878  : 			if (this->_Mylast == this->_Myend)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN1@push_back

; 879  : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reserve
$LN1@push_back:

; 880  : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Orphan_range

; 881  : 			this->_Getal().construct(this->_Mylast,
; 882  : 				_STD forward<value_type>(_Val));

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >

; 883  : 			++this->_Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@push_back:

; 884  : 			}
; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::~vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >, COMDAT
; _this$ = ecx

; 944  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Tidy

; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::~vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?rbegin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?rbegin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rbegin, COMDAT
; _this$ = ecx

; 1049 : 		{	// return iterator for beginning of reversed mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1050 : 		return (reverse_iterator(end()));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::end
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1051 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?rbegin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rbegin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?rend@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?rend@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rend, COMDAT
; _this$ = ecx

; 1059 : 		{	// return iterator for end of reversed mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1060 : 		return (reverse_iterator(begin()));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::begin
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1061 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?rend@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::rend
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?empty@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::empty, COMDAT
; _this$ = ecx

; 1157 : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1158 : 		return (this->_Myfirst == this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv75[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv75[ebp]

; 1159 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::empty
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back, COMDAT
; _this$ = ecx

; 1243 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1244 : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBE_NPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back

; 1245 : 			{	// push back an element
; 1246 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax

; 1247 : 			if (this->_Mylast == this->_Myend)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back

; 1248 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reserve
$LN3@push_back:

; 1249 : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Orphan_range

; 1250 : 			this->_Getal().construct(this->_Mylast,
; 1251 : 				this->_Myfirst[_Idx]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>

; 1252 : 			++this->_Mylast;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1253 : 			}
; 1254 : 		else

	jmp	SHORT $LN5@push_back
$LN4@push_back:

; 1255 : 			{	// push back a non-element
; 1256 : 			if (this->_Mylast == this->_Myend)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN1@push_back

; 1257 : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reserve
$LN1@push_back:

; 1258 : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Orphan_range

; 1259 : 			this->_Getal().construct(this->_Mylast,
; 1260 : 				_Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>

; 1261 : 			++this->_Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@push_back:

; 1262 : 			}
; 1263 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->, COMDAT
; _this$ = ecx

; 406  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 407  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@AAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> *>::pointer_to
	add	esp, 4

; 408  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->, COMDAT
; _this$ = ecx

; 251  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@ABU32@@Z ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const *>::pointer_to
	add	esp, 4

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++, COMDAT
; _this$ = ecx

; 1069 : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1070 : 		_Myt _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 1071 : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++

; 1072 : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1073 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??D?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ PROC ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator*, COMDAT
; _this$ = ecx

; 834  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 835  : 		_RanIt _Tmp = current;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 836  : 		return (*--_Tmp);

	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??F?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--
	mov	ecx, eax
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*

; 837  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ENDP ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@PAX@Z PROC ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@PAX@Z ENDP ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ PROC ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::~unique_ptr<void,`anonymous namespace'::HLOCALDeleter>, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAEAAUHLOCALDeleter@?A0x0ea80c23@@XZ ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::get_deleter
	mov	ecx, eax
	call	??RHLOCALDeleter@?A0x0ea80c23@@QAEXPAX@Z ; `anonymous namespace'::HLOCALDeleter::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAE@XZ ENDP ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::~unique_ptr<void,`anonymous namespace'::HLOCALDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBEPAXXZ PROC ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::get, COMDAT
; _this$ = ecx

; 1462 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1463 : 		return (this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBEPAXXZ ENDP ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??B?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
??B?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBE_NXZ PROC ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::operator bool, COMDAT
; _this$ = ecx

; 1467 : 		{	// test for non-null pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1468 : 		return (this->_Myptr != pointer());

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]

; 1469 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QBE_NXZ ENDP ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?release@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAEPAXXZ
_TEXT	SEGMENT
__Ans$ = -8						; size = 4
_this$ = -4						; size = 4
?release@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAEPAXXZ PROC ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::release, COMDAT
; _this$ = ecx

; 1472 : 		{	// yield ownership of pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1473 : 		pointer _Ans = this->_Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ans$[ebp], ecx

; 1474 : 		this->_Myptr = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1475 : 		return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]

; 1476 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$unique_ptr@XUHLOCALDeleter@?A0x0ea80c23@@@std@@QAEPAXXZ ENDP ; std::unique_ptr<void,`anonymous namespace'::HLOCALDeleter>::release
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@PAX@Z PROC ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::unique_ptr<void,`anonymous namespace'::MemUnlocker>, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@PAX@Z ENDP ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::unique_ptr<void,`anonymous namespace'::MemUnlocker>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ PROC ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAEAAUMemUnlocker@?A0x0ea80c23@@XZ ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::get_deleter
	mov	ecx, eax
	call	??RMemUnlocker@?A0x0ea80c23@@QAEXPAX@Z	; `anonymous namespace'::MemUnlocker::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QAE@XZ ENDP ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::~unique_ptr<void,`anonymous namespace'::MemUnlocker>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBEPAXXZ PROC ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::get, COMDAT
; _this$ = ecx

; 1462 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1463 : 		return (this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBEPAXXZ ENDP ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??B?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
??B?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBE_NXZ PROC ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::operator bool, COMDAT
; _this$ = ecx

; 1467 : 		{	// test for non-null pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1468 : 		return (this->_Myptr != pointer());

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]

; 1469 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$unique_ptr@XUMemUnlocker@?A0x0ea80c23@@@std@@QBE_NXZ ENDP ; std::unique_ptr<void,`anonymous namespace'::MemUnlocker>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z PROC ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator(), COMDAT
; _this$ = ecx

; 192  : 		{	// apply operator< to operands

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 193  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?M_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8

; 194  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ENDP ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Right$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >, COMDAT
; _this$ = ecx

; 1094 : 		{	// construct tree by moving _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@@Z ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> ><std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::key_comp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@1@@Z ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >

; 1095 : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());

	xor	eax, eax
	mov	BYTE PTR $T3[ebp], al
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$forward@V?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@@std@@YA$$QAV?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@0@AAV10@@Z ; std::forward<std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Assign_rv

; 1096 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1574 : 		{	// find leftmost node not less than _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1575 : 		return (iterator(_Lbound(_Keyval), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1576 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key, COMDAT
; _this$ = ecx

; 2239 : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2240 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn

; 2241 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 1006 : 		{	// get ordering predicate

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1007 : 		return (key_compare());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1008 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Add@?$List@PAVXElement@@@@QAEIABQAVXElement@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Add@?$List@PAVXElement@@@@QAEIABQAVXElement@@@Z PROC	; List<XElement *>::Add, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR tv73[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 47   :         mcpy(&array[(num-1)], (void*)&val, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax*4-4], ecx

; 48   :         return num-1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1

; 49   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$List@PAVXElement@@@@QAEIABQAVXElement@@@Z ENDP	; List<XElement *>::Add
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@PAVXElement@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@PAVXElement@@@@QAEXXZ PROC		; List<XElement *>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@PAVXElement@@@@QAEXXZ ENDP		; List<XElement *>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?begin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::begin, COMDAT
; _this$ = ecx

; 1024 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1025 : 		return (iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1026 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?end@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::end, COMDAT
; _this$ = ecx

; 1034 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1035 : 		return (iterator(this->_Mylast, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1036 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBE_NPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBE_NPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Inside, COMDAT
; _this$ = ecx

; 1582 : 		{	// test if _Ptr points inside vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1583 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]

; 1584 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBE_NPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reserve, COMDAT
; _this$ = ecx

; 1612 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1613 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1614 : 			{	// need more room, try to get it
; 1615 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve

; 1616 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Xlen
$LN1@Reserve:

; 1617 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reallocate
$LN4@Reserve:

; 1618 : 			}
; 1619 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Tidy, COMDAT
; _this$ = ecx

; 1622 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1623 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1624 : 			{	// something to free, destroy and deallocate it
; 1625 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1626 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Destroy

; 1627 : 			this->_Getal().deallocate(this->_Myfirst,
; 1628 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::deallocate

; 1629 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1630 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1631 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1632 : 			}
; 1633 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1780 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1781 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >, COMDAT
; _this$ = ecx

; 588  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >

; 589  : 		{	// construct allocator from _Al
; 590  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal, COMDAT
; _this$ = ecx

; 641  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 643  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*, COMDAT
; _this$ = ecx

; 401  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*

; 403  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*, COMDAT
; _this$ = ecx

; 231  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		if (this->_Getcont() == 0
; 234  : 			|| this->_Ptr == 0
; 235  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 236  : 			{	// report error
; 237  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 238  : 			_SCL_SECURE_OUT_OF_RANGE;
; 239  : 			}
; 240  : 
; 241  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 242  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 243  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 244  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 245  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 246  : 
; 247  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Myval
	add	esp, 4

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >, COMDAT
; _this$ = ecx

; 1041 : 		{	// construct wrapped iterator from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >

; 1042 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++, COMDAT
; _this$ = ecx

; 1063 : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1064 : 		++*((_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator++

; 1065 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1066 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::reverse_iterator<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*, COMDAT
; _this$ = ecx

; 323  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*

; 325  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??F?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--, COMDAT
; _this$ = ecx

; 346  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 347  : 		--*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--

; 348  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 349  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAEAAUHLOCALDeleter@?A0x0ea80c23@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAEAAUHLOCALDeleter@?A0x0ea80c23@@XZ PROC ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XUHLOCALDeleter@?A0x0ea80c23@@$00@std@@QAEAAUHLOCALDeleter@?A0x0ea80c23@@XZ ENDP ; std::_Unique_ptr_base<void,`anonymous namespace'::HLOCALDeleter,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAEAAUMemUnlocker@?A0x0ea80c23@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAEAAUMemUnlocker@?A0x0ea80c23@@XZ PROC ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XUMemUnlocker@?A0x0ea80c23@@$00@std@@QAEAAUMemUnlocker@?A0x0ea80c23@@XZ ENDP ; std::_Unique_ptr_base<void,`anonymous namespace'::MemUnlocker,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> *>::pointer_to, COMDAT

; 233  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 234  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >
	add	esp, 4

; 235  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@ABU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@ABU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const *>::pointer_to, COMDAT

; 233  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 234  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@ABU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const >
	add	esp, 4

; 235  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@ABU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Assign_rv@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Assign_rv, COMDAT
; _this$ = ecx

; 1119 : 		{	// move from _Right, stealing its contents

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1120 : 		this->_Swap_all(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z ; std::_Container_base0::_Swap_all

; 1121 : 		this->_Swapcomp(_Right._Getcomp());

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swapcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEXABU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Swapcomp

; 1122 : 		_Swap_adl(this->_Myhead, _Right._Myhead);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$_Swap_adl@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z ; std::_Swap_adl<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 8

; 1123 : 		_STD swap(this->_Mysize, _Right._Mysize);

	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8

; 1124 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_rv@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::key_comp, COMDAT
; _this$ = ecx

; 1291 : 		{	// return object for comparing keys

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1292 : 		return (this->_Getcomp());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1293 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::key_comp
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = -16					; size = 4
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
$T1 = -1						; size = 1
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 2105 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2106 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 2107 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound:

; 2108 : 
; 2109 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 2110 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Lbound

; 2111 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 2112 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 2113 : 				{	// _Pnode not less than _Keyval, remember it
; 2114 : 				_Wherenode = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 2115 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN1@Lbound:

; 2116 : 				}

	jmp	SHORT $LN4@Lbound
$LN3@Lbound:

; 2117 : 
; 2118 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 2119 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lbound
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2234 : 		{	// get key from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2235 : 		return (_Traits::_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z ; std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>
	add	esp, 4

; 2236 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1014 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1015 : 		return (this->_Myend - this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 1016 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::size, COMDAT
; _this$ = ecx

; 1147 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size, COMDAT
; _this$ = ecx

; 1152 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1153 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size

; 1154 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Destroy, COMDAT
; _this$ = ecx

; 1565 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1566 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal

; 1567 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
	add	esp, 12					; 0000000cH

; 1568 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Grow_to, COMDAT
; _this$ = ecx

; 1571 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1573 : 
; 1574 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1575 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1576 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1577 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1578 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1579 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reallocate, COMDAT
; _this$ = ecx

; 1587 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1588 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1589 : 
; 1590 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1591 : 		_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Umove<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z$0:

; 1592 : 		_CATCH_ALL
; 1593 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::deallocate

; 1594 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1595 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z$1:

; 1596 : 
; 1597 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1598 : 		if (this->_Myfirst != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Reallocate

; 1599 : 			{	// destroy and deallocate old array
; 1600 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@0@Z ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Destroy

; 1601 : 			this->_Getal().deallocate(this->_Myfirst,
; 1602 : 				this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::deallocate
$LN1@Reallocate:

; 1603 : 			}
; 1604 : 
; 1605 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1606 : 		this->_Myend = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 1607 : 		this->_Mylast = _Ptr + _Size;

	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1608 : 		this->_Myfirst = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx], eax
$LN4@Reallocate:

; 1609 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Reallocate
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Xlen, COMDAT
; _this$ = ecx

; 1753 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1755 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >, COMDAT
; _this$ = ecx

; 480  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 481  : 		{	// initialize values
; 482  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 483  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 484  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 485  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >, COMDAT
; _this$ = ecx

; 306  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >

; 307  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| this->_Ptr == 0
; 69   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			this->_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 81   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(this->_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--, COMDAT
; _this$ = ecx

; 124  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 125  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 126  : 		if (this->_Getcont() == 0
; 127  : 			|| this->_Ptr == 0
; 128  : 			|| this->_Ptr <= ((_Myvec *)this->_Getcont())->_Myfirst)
; 129  : 			{	// report error
; 130  : 			_DEBUG_ERROR("vector iterator not decrementable");
; 131  : 			_SCL_SECURE_OUT_OF_RANGE;
; 132  : 			}
; 133  : 
; 134  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 135  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 136  : 		_SCL_SECURE_VALIDATE_RANGE(
; 137  : 			this->_Ptr != _Tptr()
; 138  : 			&& ((_Myvec *)this->_Getcont())->_Myfirst < this->_Ptr);
; 139  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 140  : 
; 141  : 		--this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 142  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 143  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >, COMDAT
; _this$ = ecx

; 818  : 		{	// construct wrapped iterator from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], ecx

; 819  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??E?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ PROC ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator++, COMDAT
; _this$ = ecx

; 845  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 846  : 		--current;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator--

; 847  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ ENDP ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Swapcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEXABU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Swapcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEXABU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z PROC ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Swapcomp, COMDAT
; _this$ = ecx

; 1015 : 		{	// swap ordering predicate

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1016 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swapcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAEXABU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ENDP ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Swapcomp
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::capacity, COMDAT
; _this$ = ecx

; 1009 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1010 : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1011 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$emplace@PA_W_N@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@$$QAPA_W$$QA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
_<_Val_1>$ = 16						; size = 4
??$emplace@PA_W_N@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@$$QAPA_W$$QA_N@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace<wchar_t *,bool>, COMDAT
; _this$ = ecx

; 1174 : 		_Pairib emplace(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1175 : 		{	// try to insert value_type(_Val...), favoring right side
; 1176 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_1>$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	push	ecx
	call	??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z	; std::forward<wchar_t *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<wchar_t *,bool>
	mov	DWORD PTR __Newnode$[ebp], eax

; 1177 : 		return (_Insert_nohint(false,
; 1178 : 			this->_Myval(_Newnode), _Newnode));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Myval
	add	esp, 4
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_nohint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1179 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$emplace@PA_W_N@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@$$QAPA_W$$QA_N@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace<wchar_t *,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@YA$$QAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@YA$$QAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@0@AAV10@@Z PROC ; std::move<std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@YA$$QAV?$map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@0@AAV10@@Z ENDP ; std::move<std::map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$?9V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator!=<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >, COMDAT

; 1149 : 	{	// test for reverse_iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx

; 1150 : 	return (!(_Left == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 1151 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator!=<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$forward_as_tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$forward_as_tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 628  : 	{	// forward arguments in a tuple

	push	ebp
	mov	ebp, esp

; 629  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 630  : 	}

	pop	ebp
	ret	0
??$forward_as_tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
_<_Val_1>$ = 20						; size = 4
_<_Val_2>$ = 24						; size = 4
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1182 : 		iterator emplace_hint(const_iterator _Where, _Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1183 : 		{	// insert value_type(_Val...) at _Where
; 1184 : 		_Nodeptr _Newnode = this->_Buynode(_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
	mov	DWORD PTR __Newnode$[ebp], eax

; 1185 : 		return (_Insert_hint(_Where,
; 1186 : 			this->_Myval(_Newnode), _Newnode));

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Myval
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_hint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1187 : 		}

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::emplace_hint<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstring
;	COMDAT ??$?M_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?M_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::operator<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2528 : 	{	// test if string < string

	push	ebp
	mov	ebp, esp
	push	ecx

; 2529 : 	return (_Left.compare(_Right) < 0);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
	test	eax, eax
	jge	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]

; 2530 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?M_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::operator<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> ><std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> ><std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@@std@@YA$$QAV?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@@std@@YA$$QAV?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@@std@@YA$$QAV?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@$$CBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@ABU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@ABU10@@Z PROC ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@$$CBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@ABU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$_Swap_adl@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z PROC ; std::_Swap_adl<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>, COMDAT

; 60   : 	{	// exchange values stored at _Left and _Right, using ADL

	push	ebp
	mov	ebp, esp

; 61   : 	swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z ; std::swap<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 8

; 62   : 	}

	pop	ebp
	ret	0
??$_Swap_adl@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z ENDP ; std::_Swap_adl<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z PROC ; std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>, COMDAT

; 57   : 		static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val)

	push	ebp
	mov	ebp, esp

; 58   : 		{	// extract key from element value
; 59   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 60   : 		}

	pop	ebp
	ret	0
??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Umove@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PAV21@00@Z PROC ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Umove<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>, COMDAT
; _this$ = ecx

; 1644 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1645 : 		{	// move initializing [_First, _Last), using allocator
; 1646 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Getal

; 1647 : 		return (_Uninitialized_move(_First, _Last,
; 1648 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
	add	esp, 16					; 00000010H

; 1649 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$vector@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@PAV21@00@Z ENDP ; std::vector<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::_Umove<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??0?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
??0?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT
; _this$ = ecx

; 215  : 		{	// construct from one or more copied elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$$V@std@@QAE@XZ		; std::tuple<>::tuple<>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>

; 216  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z PROC		; std::forward<wchar_t *>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -17						; size = 1
__$EHRec$ = -16						; size = 16
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z PROC ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<wchar_t *,bool>, COMDAT
; _this$ = ecx

; 923  : 		_Nodeptr _Buynode(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 924  : 		{	// allocate a node with defaults and set links and value
; 925  : 		_Nodeptr _Pnode = _Buynode0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax

; 926  : 
; 927  : 		this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 928  : 		this->_Isnil(_Pnode) = false;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 929  : 
; 930  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 931  : 		this->_Getal().construct(
; 932  : 			_STD addressof(this->_Myval(_Pnode)),
; 933  : 				_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_1>$[ebp]
	push	edx
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z	; std::forward<wchar_t *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z$0:

; 934  : 		_CATCH_ALL
; 935  : 		_Freenode0(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Freenode0

; 936  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 937  : 		_CATCH_END

	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z$1:

; 938  : 
; 939  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 940  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@PA_W_N@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@$$QAPA_W$$QA_N@Z ENDP ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<wchar_t *,bool>
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
_TEXT	SEGMENT
$T2 = -64						; size = 4
$T3 = -60						; size = 4
$T4 = -56						; size = 4
$T5 = -52						; size = 4
tv153 = -48						; size = 4
tv128 = -44						; size = 4
__Where$6 = -40						; size = 4
__Wherenode$7 = -36					; size = 4
__Trynode$8 = -32					; size = 4
_this$ = -28						; size = 4
$T9 = -24						; size = 1
$T10 = -23						; size = 1
$T11 = -22						; size = 1
$T12 = -21						; size = 1
$T13 = -20						; size = 1
$T14 = -19						; size = 1
$T15 = -18						; size = 1
__Addleft$16 = -17					; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Leftish$ = 12						; size = 1
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_nohint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>, COMDAT
; _this$ = ecx

; 1777 : 		_Pairib _Insert_nohint(bool _Leftish,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1778 : 			_Valty&& _Val, _Nodety _Newnode)
; 1779 : 		{	// try to insert node, on left if _Leftish
; 1780 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1781 : 		_Nodeptr _Trynode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$8[ebp], eax

; 1782 : 		_Nodeptr _Wherenode = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Wherenode$7[ebp], edx

; 1783 : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$16[ebp], 1
$LN12@Insert_noh:

; 1784 : 
; 1785 : 		while (!this->_Isnil(_Trynode))

	mov	eax, DWORD PTR __Trynode$8[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	$LN11@Insert_noh

; 1786 : 			{	// look for leaf to insert before (_Addleft) or after
; 1787 : 			_Wherenode = _Trynode;

	mov	edx, DWORD PTR __Trynode$8[ebp]
	mov	DWORD PTR __Wherenode$7[ebp], edx

; 1788 : 			if (_Leftish)

	movzx	eax, BYTE PTR __Leftish$[ebp]
	test	eax, eax
	je	SHORT $LN10@Insert_noh

; 1789 : 				_Addleft = !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	mov	edx, DWORD PTR __Trynode$8[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN16@Insert_noh
	mov	DWORD PTR tv128[ebp], 1
	jmp	SHORT $LN17@Insert_noh
$LN16@Insert_noh:
	mov	DWORD PTR tv128[ebp], 0
$LN17@Insert_noh:
	mov	dl, BYTE PTR tv128[ebp]
	mov	BYTE PTR __Addleft$16[ebp], dl

; 1790 : 					this->_Key(_Trynode),
; 1791 : 					this->_Kfn(_Val));	// favor left end
; 1792 : 			else

	jmp	SHORT $LN9@Insert_noh
$LN10@Insert_noh:

; 1793 : 				_Addleft = _DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Trynode$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	mov	BYTE PTR __Addleft$16[ebp], al
$LN9@Insert_noh:

; 1794 : 					this->_Kfn(_Val),
; 1795 : 					this->_Key(_Trynode));	// favor right end
; 1796 : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 1797 : 				: this->_Right(_Trynode);

	movzx	eax, BYTE PTR __Addleft$16[ebp]
	test	eax, eax
	je	SHORT $LN18@Insert_noh
	mov	ecx, DWORD PTR __Trynode$8[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv153[ebp], edx
	jmp	SHORT $LN19@Insert_noh
$LN18@Insert_noh:
	mov	eax, DWORD PTR __Trynode$8[ebp]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv153[ebp], ecx
$LN19@Insert_noh:
	mov	edx, DWORD PTR tv153[ebp]
	mov	DWORD PTR __Trynode$8[ebp], edx

; 1798 : 			}

	jmp	$LN12@Insert_noh
$LN11@Insert_noh:

; 1799 : 
; 1800 : 		if (this->_Multi)

	xor	eax, eax
	je	SHORT $LN8@Insert_noh

; 1801 : 			return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T15[ebp], 1
	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Wherenode$7[ebp]
	push	ecx
	movzx	edx, BYTE PTR __Addleft$16[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool,void>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1802 : 				_STD forward<_Valty>(_Val), _Newnode), true));
; 1803 : 		else

	jmp	$LN7@Insert_noh
$LN8@Insert_noh:

; 1804 : 			{	// insert only if unique
; 1805 : 			iterator _Where = iterator(_Wherenode, this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$7[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$6[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >

; 1806 : 			if (!_Addleft)

	movzx	eax, BYTE PTR __Addleft$16[ebp]
	test	eax, eax
	jne	SHORT $LN6@Insert_noh

; 1807 : 				;	// need to test if insert after is okay
; 1808 : 			else if (_Where == begin())

	jmp	SHORT $LN5@Insert_noh
$LN6@Insert_noh:
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$6[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Insert_noh

; 1809 : 				return (_Pairib(_Insert_at(true, _Wherenode,

	mov	BYTE PTR $T14[ebp], 1
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Wherenode$7[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool,void>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN15@Insert_noh

; 1810 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1811 : 			else

	jmp	SHORT $LN5@Insert_noh
$LN4@Insert_noh:

; 1812 : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$6[ebp]
	call	??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--
$LN5@Insert_noh:

; 1813 : 
; 1814 : 			if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	ecx, DWORD PTR __Where$6[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Insert_noh

; 1815 : 				this->_Key(_Where._Mynode()),
; 1816 : 				this->_Kfn(_Val)))
; 1817 : 				return (_Pairib(_Insert_at(_Addleft, _Wherenode,

	mov	BYTE PTR $T13[ebp], 1
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Wherenode$7[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$16[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool,void>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN15@Insert_noh

; 1818 : 					_STD forward<_Valty>(_Val), _Newnode), true));
; 1819 : 			else

	jmp	SHORT $LN7@Insert_noh
$LN2@Insert_noh:

; 1820 : 				{	// duplicate, don't insert
; 1821 : 				_Destroy_if_not_nil(_Newnode);

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Destroy_if_not_nil

; 1822 : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T12[ebp], 0
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &,bool,void>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN15@Insert_noh
$LN7@Insert_noh:
	jmp	SHORT $LN20@Insert_noh
__catch$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$0:

; 1823 : 				}
; 1824 : 			}
; 1825 : 		_CATCH_ALL
; 1826 : 		_Destroy_if_not_nil(_Newnode);

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Destroy_if_not_nil

; 1827 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1828 : 		_CATCH_END

	mov	eax, $LN23@Insert_noh
	ret	0
$LN20@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN15@Insert_noh
$LN23@Insert_noh:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN15@Insert_noh:

; 1829 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_nohint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$?8V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >, COMDAT

; 1141 : 	{	// test for reverse_iterator equality

	push	ebp
	mov	ebp, esp

; 1142 : 	return (_Left._Equal(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	??$_Equal@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Equal<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >

; 1143 : 	}

	pop	ebp
	ret	0
??$?8V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z PROC ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ENDP ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -17						; size = 1
__$EHRec$ = -16						; size = 16
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
_<_Val_2>$ = 16						; size = 4
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 923  : 		_Nodeptr _Buynode(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 924  : 		{	// allocate a node with defaults and set links and value
; 925  : 		_Nodeptr _Pnode = _Buynode0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax

; 926  : 
; 927  : 		this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 928  : 		this->_Isnil(_Pnode) = false;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 929  : 
; 930  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 931  : 		this->_Getal().construct(
; 932  : 			_STD addressof(this->_Myval(_Pnode)),
; 933  : 				_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_2>$[ebp]
	push	edx
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_1>$[ebp]
	push	eax
	call	??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	push	ecx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$0:

; 934  : 		_CATCH_ALL
; 935  : 		_Freenode0(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Freenode0

; 936  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 937  : 		_CATCH_END

	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$1:

; 938  : 
; 939  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 940  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
_TEXT	SEGMENT
$T2 = -72						; size = 8
$T3 = -64						; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 4
$T6 = -52						; size = 4
$T7 = -48						; size = 4
$T8 = -44						; size = 4
__Next$ = -40						; size = 4
_this$ = -36						; size = 4
$T9 = -29						; size = 1
$T10 = -28						; size = 1
$T11 = -27						; size = 1
$T12 = -26						; size = 1
$T13 = -25						; size = 1
$T14 = -24						; size = 1
$T15 = -23						; size = 1
$T16 = -22						; size = 1
$T17 = -21						; size = 1
$T18 = -20						; size = 1
$T19 = -19						; size = 1
$T20 = -18						; size = 1
__Leftish$ = -17					; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
__Newnode$ = 20						; size = 4
??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_hint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>, COMDAT
; _this$ = ecx

; 1661 : 		iterator _Insert_hint(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1662 : 			_Valty&& _Val, _Nodety _Newnode)
; 1663 : 		{	// try to insert node using _Where as a hint
; 1664 : 		const_iterator _Next;

	lea	ecx, DWORD PTR __Next$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >

; 1665 : 		bool _Leftish = false;	// assume nearest point is end of sequence

	mov	BYTE PTR __Leftish$[ebp], 0

; 1666 : 
; 1667 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1668 : 
; 1669 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 : 		if (_Where._Getcont() != this)
; 1671 : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 1672 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1673 : 
; 1674 : 		if (size() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::size
	test	eax, eax
	jne	SHORT $LN33@Insert_hin

; 1675 : 			return (_Insert_at(true, this->_Myhead,
; 1676 : 				_STD forward<_Valty>(_Val), _Newnode));	// empty tree

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
	jmp	$LN32@Insert_hin
$LN33@Insert_hin:

; 1677 : 		else if (this->_Multi)

	xor	edx, edx
	je	$LN31@Insert_hin

; 1678 : 			{	// insert even if duplicate
; 1679 : 			if (_Where == begin())

	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN30@Insert_hin

; 1680 : 				{	// insert at beginning if before first element
; 1681 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN29@Insert_hin

; 1682 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1683 : 					return (_Insert_at(true, _Where._Mynode(),
; 1684 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
$LN29@Insert_hin:

; 1685 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1

; 1686 : 				}
; 1687 : 			else if (_Where == end())

	jmp	$LN28@Insert_hin
$LN30@Insert_hin:
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@Insert_hin

; 1688 : 				{	// insert at end if after last element
; 1689 : 				if (!_DEBUG_LT_PRED(this->_Getcomp(),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN26@Insert_hin

; 1690 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1691 : 					return (_Insert_at(false, _Rmost(),
; 1692 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
$LN26@Insert_hin:

; 1693 : 				}
; 1694 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN28@Insert_hin
$LN27@Insert_hin:

; 1695 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1696 : 				&& !_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	ecx, DWORD PTR $T18[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	edx, al
	test	edx, edx
	jne	$LN24@Insert_hin
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--
	mov	ecx, eax
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	edx, DWORD PTR $T17[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	eax, al
	test	eax, eax
	jne	$LN24@Insert_hin

; 1697 : 					this->_Kfn(_Val),
; 1698 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1699 : 				{	// insert before _Where
; 1700 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN23@Insert_hin

; 1701 : 					return (_Insert_at(false, _Next._Mynode(),
; 1702 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin

; 1703 : 				else

	jmp	SHORT $LN22@Insert_hin
$LN23@Insert_hin:

; 1704 : 					return (_Insert_at(true, _Where._Mynode(),
; 1705 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	1
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
$LN22@Insert_hin:

; 1706 : 				}
; 1707 : 			else if (!_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN28@Insert_hin
$LN24@Insert_hin:

; 1708 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1709 : 				&& (++(_Next = _Where) == end()
; 1710 : 					|| !_DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	ecx, DWORD PTR $T16[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	edx, al
	test	edx, edx
	jne	$LN20@Insert_hin
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator++
	mov	ecx, eax
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN19@Insert_hin
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	edx, al
	test	edx, edx
	jne	$LN20@Insert_hin
$LN19@Insert_hin:

; 1711 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1712 : 				{	// insert after _Where
; 1713 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN18@Insert_hin

; 1714 : 					return (_Insert_at(false, _Where._Mynode(),
; 1715 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin

; 1716 : 				else

	jmp	SHORT $LN17@Insert_hin
$LN18@Insert_hin:

; 1717 : 					return (_Insert_at(true, _Next._Mynode(),
; 1718 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
$LN17@Insert_hin:

; 1719 : 				}
; 1720 : 			else

	jmp	SHORT $LN28@Insert_hin
$LN20@Insert_hin:

; 1721 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
$LN28@Insert_hin:

; 1722 : 			}
; 1723 : 		else

	jmp	$LN32@Insert_hin
$LN31@Insert_hin:

; 1724 : 			{	// insert only if unique
; 1725 : 			if (_Where == begin())

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@Insert_hin

; 1726 : 				{	// insert at beginning if before first element
; 1727 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	edx, DWORD PTR $T14[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@Insert_hin

; 1728 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1729 : 					return (_Insert_at(true, _Where._Mynode(),
; 1730 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
$LN13@Insert_hin:

; 1731 : 				}
; 1732 : 			else if (_Where == end())

	jmp	$LN32@Insert_hin
$LN14@Insert_hin:
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@Insert_hin

; 1733 : 				{	// insert at end if after last element
; 1734 : 				if (_DEBUG_LT_PRED(this->_Getcomp(),

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@Insert_hin

; 1735 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1736 : 					return (_Insert_at(false, _Rmost(),
; 1737 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
$LN10@Insert_hin:

; 1738 : 				}
; 1739 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN32@Insert_hin
$LN11@Insert_hin:

; 1740 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1741 : 				&& _DEBUG_LT_PRED(this->_Getcomp(),

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	$LN8@Insert_hin
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--
	mov	ecx, eax
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	edx, al
	test	edx, edx
	je	$LN8@Insert_hin

; 1742 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1743 : 					this->_Kfn(_Val)))
; 1744 : 				{	// insert before _Where
; 1745 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN7@Insert_hin

; 1746 : 					return (_Insert_at(false, _Next._Mynode(),
; 1747 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin

; 1748 : 				else

	jmp	SHORT $LN6@Insert_hin
$LN7@Insert_hin:

; 1749 : 					return (_Insert_at(true, _Where._Mynode(),
; 1750 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin
$LN6@Insert_hin:

; 1751 : 				}
; 1752 : 			else if (_DEBUG_LT_PRED(this->_Getcomp(),

	jmp	$LN32@Insert_hin
$LN8@Insert_hin:

; 1753 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1754 : 				&& (++(_Next = _Where) == end()
; 1755 : 					|| _DEBUG_LT_PRED(this->_Getcomp(),

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	$LN32@Insert_hin
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator++
	mov	ecx, eax
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Insert_hin
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Key
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Kfn
	push	eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Tree_comp<0,std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Getcomp
	mov	ecx, eax
	call	??R?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	$LN32@Insert_hin
$LN3@Insert_hin:

; 1756 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1757 : 				{	// insert after _Where
; 1758 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN2@Insert_hin

; 1759 : 					return (_Insert_at(false, _Where._Mynode(),
; 1760 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN36@Insert_hin

; 1761 : 				else

	jmp	SHORT $LN32@Insert_hin
$LN2@Insert_hin:

; 1762 : 					return (_Insert_at(true, _Next._Mynode(),
; 1763 : 						_STD forward<_Valty>(_Val), _Newnode));

	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Mynode
	push	eax
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN36@Insert_hin
$LN32@Insert_hin:
	jmp	SHORT $LN37@Insert_hin
__catch$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$0:

; 1764 : 				}
; 1765 : 			}
; 1766 : 		_CATCH_ALL
; 1767 : 		_Destroy_if_not_nil(_Newnode);

	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Destroy_if_not_nil

; 1768 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1769 : 		_CATCH_END

	mov	eax, $LN40@Insert_hin
	ret	0
$LN37@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$1
$LN40@Insert_hin:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z$1:

; 1770 : 
; 1771 : 		return (_Insert_nohint(_Leftish,
; 1772 : 			_STD forward<_Valty>(_Val), _Newnode).first);

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	movzx	ecx, BYTE PTR __Leftish$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_nohint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN36@Insert_hin:

; 1773 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_hint<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z PROC ; std::swap<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::_Move<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@0@Z ENDP ; std::swap<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >, COMDAT

; 80   : 	{	// destroy [_First, _Last), arbitrary type

	push	ebp
	mov	ebp, esp

; 81   : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra

; 82   : 		_Al.destroy(_First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:

; 83   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >, COMDAT

; 492  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 493  : 	return (_Rechecked(_Dest,
; 494  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 495  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 496  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::size, COMDAT
; _this$ = ecx

; 1271 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1272 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1273 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Newnode$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 1648 : 		{	// node exists, destroy it

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1649 : 		this->_Getal().destroy(
; 1650 : 			_STD addressof(this->_Myval(_Newnode)));

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >

; 1651 : 
; 1652 : 		this->_Getal().deallocate(_Newnode, 1);

	push	1
	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::deallocate

; 1653 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ
_TEXT	SEGMENT
__Pnode$ = -32						; size = 4
_this$ = -28						; size = 4
$T2 = -21						; size = 1
$T3 = -20						; size = 1
$T4 = -19						; size = 1
$T5 = -18						; size = 1
$T6 = -17						; size = 1
__$EHRec$ = -16						; size = 16
?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ PROC ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode0, COMDAT
; _this$ = ecx

; 893  : 		{	// allocate a non-value node

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 894  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 895  : 
; 896  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 897  : 		this->_Getal().construct(
; 898  : 			_STD addressof(this->_Left(_Pnode)), this->_Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>

; 899  : 		this->_Getal().construct(
; 900  : 			_STD addressof(this->_Parent(_Pnode)), this->_Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>

; 901  : 		this->_Getal().construct(
; 902  : 			_STD addressof(this->_Right(_Pnode)), this->_Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>
	jmp	SHORT $LN4@Buynode0
__catch$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ$0:

; 903  : 		_CATCH_ALL
; 904  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::deallocate

; 905  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 906  : 		_CATCH_END

	mov	eax, $LN7@Buynode0
	ret	0
$LN4@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ$1
$LN7@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ$1:

; 907  : 
; 908  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode0:

; 909  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ENDP ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Buynode0
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z PROC ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Freenode0, COMDAT
; _this$ = ecx

; 912  : 		{	// free non-value node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 913  : 		this->_Getal().destroy(
; 914  : 			_STD addressof(this->_Left(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>

; 915  : 		this->_Getal().destroy(
; 916  : 			_STD addressof(this->_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>

; 917  : 		this->_Getal().destroy(
; 918  : 			_STD addressof(this->_Right(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>

; 919  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::deallocate

; 920  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ENDP ; std::_Tree_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Freenode0
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?construct@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv69 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV32@@Z PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct, COMDAT
; _this$ = ecx

; 592  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 593  : 		::new ((void *)_Ptr) _Ty(_Val);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv69[ebp], 0
$LN1@construct:

; 594  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@ABV32@@Z ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--, COMDAT
; _this$ = ecx

; 424  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 425  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--

; 426  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 427  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >, COMDAT
; _this$ = ecx

; 209  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>

; 210  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--, COMDAT
; _this$ = ecx

; 283  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 284  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 285  : 		if (this->_Getcont() == 0
; 286  : 			|| this->_Ptr == 0)
; 287  : 			{	// report error
; 288  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 289  : 			_SCL_SECURE_OUT_OF_RANGE;
; 290  : 			}
; 291  : 
; 292  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 293  : 		--(*(_Mybase *)this);
; 294  : 		if (_Ptrsav == this->_Ptr)
; 295  : 			{	// report error
; 296  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 297  : 			_SCL_SECURE_OUT_OF_RANGE;
; 298  : 			}
; 299  : 
; 300  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 301  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 302  : 
; 303  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 304  : 		--(*(_Mybase *)this);
; 305  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 306  : 
; 307  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 308  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::operator--

; 309  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 310  : 
; 311  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 312  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 84   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 85   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator

; 86   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	jmp	$LN7@operator
$LN8@operator:

; 87   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@operator

; 88   : 			_Ptr = _Mytree::_Max(
; 89   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Max
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 90   : 		else

	jmp	SHORT $LN7@operator
$LN4@operator:

; 91   : 			{	// climb looking for left subtree
; 92   : 			_Nodeptr _Pnode;
; 93   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 94   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], edx
	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator

; 95   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN4@operator
$LN3@operator:

; 96   : 			if (_Mytree::_Isnil(_Ptr))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@operator

; 97   : 				;	// begin() shouldn't be decremented, don't move
; 98   : 			else

	jmp	SHORT $LN7@operator
$LN2@operator:

; 99   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$1[ebp]
	mov	DWORD PTR [edx], eax
$LN7@operator:

; 100  : 			}
; 101  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 102  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z	; std::forward<wchar_t *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
	add	esp, 16					; 00000010H

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z PROC ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z
_TEXT	SEGMENT
__Newnode$ = -12					; size = 4
_this$ = -8						; size = 4
__Pnode$1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
__Node$ = 24						; size = 4
??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>, COMDAT
; _this$ = ecx

; 1833 : 		iterator _Insert_at(bool _Addleft, _Nodeptr _Wherenode,

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1834 : 		_Valty&& _Val, _Nodety _Node)
; 1835 : 		{	// add node with value next to _Wherenode, to left if _Addleft
; 1836 : 		if (max_size() - 1 <= this->_Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::max_size
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	ja	SHORT $LN17@Insert_at

; 1837 : 			{	// tree would get too big, fail
; 1838 : 			_Destroy_if_not_nil(_Node);

	mov	edx, DWORD PTR __Node$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Destroy_if_not_nil

; 1839 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN17@Insert_at:

; 1840 : 			}
; 1841 : 		_Nodeptr _Newnode = _Buynode_if_nil(_Node,
; 1842 : 			_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
	mov	DWORD PTR __Newnode$[ebp], eax

; 1843 : 
; 1844 : 		++this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1845 : 		_Newnode->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1846 : 
; 1847 : 		if (_Wherenode == this->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN16@Insert_at

; 1848 : 			{	// first node in tree, just set head values
; 1849 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1850 : 			_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lmost
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1851 : 			_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@Insert_at
$LN16@Insert_at:

; 1852 : 			}
; 1853 : 		else if (_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN14@Insert_at

; 1854 : 			{	// add to left of _Wherenode
; 1855 : 			this->_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1856 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN13@Insert_at

; 1857 : 				_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@Insert_at:

; 1858 : 			}
; 1859 : 		else

	jmp	SHORT $LN15@Insert_at
$LN14@Insert_at:

; 1860 : 			{	// add to right of _Wherenode
; 1861 : 			this->_Right(_Wherenode) = _Newnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1862 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN15@Insert_at

; 1863 : 				_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@Insert_at:

; 1864 : 			}
; 1865 : 
; 1866 : 		for (_Nodeptr _Pnode = _Newnode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$1[ebp], edx
$LN10@Insert_at:

; 1867 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN9@Insert_at

; 1868 : 			if (this->_Parent(_Pnode)
; 1869 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	eax, DWORD PTR __Pnode$1[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN8@Insert_at

; 1870 : 				{	// fixup red-red in left subtree
; 1871 : 				_Wherenode =
; 1872 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 1873 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@Insert_at

; 1874 : 					{	// parent has two red children, blacken both
; 1875 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1876 : 					this->_Color(_Wherenode) = this->_Black;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1877 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1878 : 						= this->_Red;

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1879 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], ecx

; 1880 : 					}
; 1881 : 				else

	jmp	$LN6@Insert_at
$LN7@Insert_at:

; 1882 : 					{	// parent has red and black children
; 1883 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Insert_at

; 1884 : 						{	// rotate right child to left
; 1885 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], eax

; 1886 : 						_Lrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lrotate
$LN5@Insert_at:

; 1887 : 						}
; 1888 : 					this->_Color(this->_Parent(_Pnode)) =
; 1889 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1890 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1891 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1892 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rrotate
$LN6@Insert_at:

; 1893 : 					}
; 1894 : 				}
; 1895 : 			else

	jmp	$LN4@Insert_at
$LN8@Insert_at:

; 1896 : 				{	// fixup red-red in right subtree
; 1897 : 				_Wherenode =
; 1898 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 1899 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Insert_at

; 1900 : 					{	// parent has two red children, blacken both
; 1901 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1902 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1903 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1904 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1905 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], eax

; 1906 : 					}
; 1907 : 				else

	jmp	$LN4@Insert_at
$LN3@Insert_at:

; 1908 : 					{	// parent has red and black children
; 1909 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$1[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Insert_at

; 1910 : 						{	// rotate left child to right
; 1911 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$1[ebp], eax

; 1912 : 						_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Rrotate
$LN1@Insert_at:

; 1913 : 						}
; 1914 : 					this->_Color(this->_Parent(_Pnode)) =
; 1915 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$1[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1916 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1917 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1918 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$1[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Lrotate
$LN4@Insert_at:

; 1919 : 					}
; 1920 : 				}

	jmp	$LN10@Insert_at
$LN9@Insert_at:

; 1921 : 
; 1922 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1923 : 		return (iterator(_Newnode, this));

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert_at:

; 1924 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Insert_at@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@1@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Insert_at<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &,std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &,bool,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &,bool,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Equal@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$_Equal@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z PROC ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Equal<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >, COMDAT
; _this$ = ecx

; 872  : 		bool _Equal(const _Revranit<_RanIt2, _Base2>& _Right) const

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 873  : 		{	// test for iterator equality
; 874  : 		return (current == _Right.base());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?base@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::base
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator==

; 875  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Equal@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::_Equal<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
	add	esp, 20					; 00000014H

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv71[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv71[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@AAV21@@Z ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z PROC ; std::_Move<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@0@AAPAU10@@Z ENDP ; std::_Move<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Unchecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Unchecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >, COMDAT

; 482  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 483  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 484  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	add	esp, 24					; 00000018H

; 485  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::max_size, COMDAT
; _this$ = ecx

; 1276 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1277 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_alloc<0,std::_Tree_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size

; 1278 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Compat

; 205  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 206  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ?base@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?base@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::base, COMDAT
; _this$ = ecx

; 829  : 		{	// return wrapped iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 830  : 		return (current);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 831  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?base@?$_Revranit@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Revranit<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >,std::iterator<std::random_access_iterator_tag,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,int,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &> >::base
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Compat, COMDAT
; _this$ = ecx

; 254  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 97612893				; 05d1745dH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z	; std::forward<wchar_t *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xtree
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Node$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>, COMDAT
; _this$ = ecx

; 1636 : 		_Nodeptr _Buynode_if_nil(_Nodeptr _Node, _Valty&&)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		{	// node exists, just return it
; 1638 : 		return (_Node);

	mov	eax, DWORD PTR __Node$[ebp]

; 1639 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_NU?$less@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,bool,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@1@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Val_type@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Val_type<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>, COMDAT

; 645  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 646  : 	return (0);

	xor	eax, eax

; 647  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Val_type<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT

; 437  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 438  : 	_DEBUG_RANGE(_First, _Last);
; 439  : 	_DEBUG_POINTER(_Dest);
; 440  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 441  : 
; 442  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 443  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov

; 444  : 		_Al.construct(_Dest, (_Valty&&)*_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::construct<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 445  : 	_CATCH_ALL
; 446  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov

; 447  : 		_Al.destroy(_Next);

	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:

; 448  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 449  : 	_CATCH_END

	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:

; 450  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:

; 451  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@PAV12@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > *,std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv76 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z	; std::forward<wchar_t *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0PA_W_NX@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@$$QAPA_W$$QA_N@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><wchar_t *,bool,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PA_W_N@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@$$QAPA_W$$QA_N@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,wchar_t *,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv129 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	mov	ecx, esp
	push	eax
	call	??0?$tuple@$$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	edx, DWORD PTR _<_Args_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> >
	mov	ecx, esp
	push	eax
	call	??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,void * *>
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv129[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@?$allocator@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >::destroy<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0PA_W_NX@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@$$QAPA_W$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PA_W_NX@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@$$QAPA_W$$QA_N@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><wchar_t *,bool,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@PA_W@std@@YA$$QAPA_WAAPA_W@Z	; std::forward<wchar_t *>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	edx, DWORD PTR __Val2$[ebp]
	push	edx
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+24], dl

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PA_W_NX@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@$$QAPA_W$$QA_N@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><wchar_t *,bool,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,void * *>, COMDAT
; _this$ = ecx

; 258  : 		{	// construct by moving same size tuple

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Get_rest@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Get_rest
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>

; 259  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT
; _this$ = ecx

; 762  : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	xor	ecx, ecx
	mov	BYTE PTR $T1[ebp], cl
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Val1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<>,0>

; 763  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ?_Get_rest@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_rest@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ PROC ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Get_rest, COMDAT
; _this$ = ecx

; 438  : 		{	// get reference to rest of elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 439  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 440  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_rest@?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ ENDP ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::_Get_rest
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 746  : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> &>
	add	esp, 4
	push	eax
	call	??$get@$0A@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+24], 0

; 747  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$?0V?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_N@std@@QAE@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,bool><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z PROC ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ENDP ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$0A@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z PROC ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 596  : 	{	// get rvalue reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 597  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 598  : 		_Ttype;
; 599  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_RRtype
; 600  : 		_RRtype;
; 601  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Tuple$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$forward@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@ABV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
	add	esp, 4

; 602  : 	}

	pop	ebp
	ret	0
??$get@$0A@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ENDP ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
END

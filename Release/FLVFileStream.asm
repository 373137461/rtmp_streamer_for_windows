; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\FLVFileStream.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R0?AVSerializer@@@8				; Serializer `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@FLVFileStream@@8			; FLVFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7FLVFileStream@@6B@				; FLVFileStream::`vftable'
PUBLIC	??_7VideoFileStream@@6B@			; VideoFileStream::`vftable'
PUBLIC	??_7?$_Func_base@XAAUDataPacket@@@std@@6B@	; std::_Func_base<void,DataPacket &>::`vftable'
PUBLIC	??_R3Serializer@@8				; Serializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@VideoFileStream@@8		; VideoFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Serializer@@8			; Serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Func_base@XAAUDataPacket@@@std@@6B@	; std::_Func_base<void,DataPacket &>::`RTTI Complete Object Locator'
PUBLIC	??_7XFileOutputSerializer@@6B@			; XFileOutputSerializer::`vftable'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8 ; std::_Func_base<void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVXFileOutputSerializer@@@8		; XFileOutputSerializer `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
PUBLIC	??_R0?AVFLVFileStream@@@8			; FLVFileStream `RTTI Type Descriptor'
PUBLIC	??_R2XFileOutputSerializer@@8			; XFileOutputSerializer::`RTTI Base Class Array'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
PUBLIC	??_R2VideoFileStream@@8				; VideoFileStream::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$_Func_base@XAAUDataPacket@@@std@@@8	; std::_Func_base<void,DataPacket &> `RTTI Type Descriptor'
PUBLIC	??_R0?AV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@8 ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2> `RTTI Type Descriptor'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
PUBLIC	??_R0?AVVideoFileStream@@@8			; VideoFileStream `RTTI Type Descriptor'
PUBLIC	??_R0?AV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@8 ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> `RTTI Type Descriptor'
PUBLIC	??_R2Serializer@@8				; Serializer::`RTTI Base Class Array'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
PUBLIC	??_R2?$_Func_base@XAAUDataPacket@@@std@@8	; std::_Func_base<void,DataPacket &>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
PUBLIC	??_R4XFileOutputSerializer@@6B@			; XFileOutputSerializer::`RTTI Complete Object Locator'
PUBLIC	??_R3XFileOutputSerializer@@8			; XFileOutputSerializer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4FLVFileStream@@6B@				; FLVFileStream::`RTTI Complete Object Locator'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
PUBLIC	??_R3?$_Func_base@XAAUDataPacket@@@std@@8	; std::_Func_base<void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@XFileOutputSerializer@@8		; XFileOutputSerializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
PUBLIC	??_R2FLVFileStream@@8				; FLVFileStream::`RTTI Base Class Array'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
PUBLIC	??_R3VideoFileStream@@8				; VideoFileStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4VideoFileStream@@6B@			; VideoFileStream::`RTTI Complete Object Locator'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3FLVFileStream@@8				; FLVFileStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@8 ; <lambda_d4dbafb656cab653d44011aca1f5ff94> `RTTI Type Descriptor'
EXTRN	__imp_??0Serializer@@QAE@XZ:PROC
EXTRN	__imp_??1Serializer@@UAE@XZ:PROC
EXTRN	?DataPending@Serializer@@UAEHXZ:PROC		; Serializer::DataPending
EXTRN	__imp_?DataPending@Serializer@@UAEHXZ:PROC
EXTRN	__imp_?GetPos@XFile@@QBE_KXZ:PROC
EXTRN	__imp_?Write@XFile@@QAEKPBXK@Z:PROC
EXTRN	__imp_?SetPos@XFile@@QAE_K_JK@Z:PROC
EXTRN	?_Xbad_function_call@std@@YAXXZ:PROC		; std::_Xbad_function_call
;	COMDAT ??_R0?AV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@8
data$r	SEGMENT
??_R0?AV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_d4dbafb656cab653d44011aca1f5ff94> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@', 00H
data$r	ENDS
;	COMDAT ??_R3FLVFileStream@@8
rdata$r	SEGMENT
??_R3FLVFileStream@@8 DD 00H				; FLVFileStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FLVFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4VideoFileStream@@6B@
rdata$r	SEGMENT
??_R4VideoFileStream@@6B@ DD 00H			; VideoFileStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVideoFileStream@@@8
	DD	FLAT:??_R3VideoFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R3VideoFileStream@@8
rdata$r	SEGMENT
??_R3VideoFileStream@@8 DD 00H				; VideoFileStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VideoFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2FLVFileStream@@8
rdata$r	SEGMENT
??_R2FLVFileStream@@8 DD FLAT:??_R1A@?0A@EA@FLVFileStream@@8 ; FLVFileStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VideoFileStream@@8
	DD	FLAT:??_R1A@?0A@EA@ClosableStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb47447'
	DB	'2a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'AAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XFileOutputSerializer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XFileOutputSerializer@@8 DD FLAT:??_R0?AVXFileOutputSerializer@@@8 ; XFileOutputSerializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XFileOutputSerializer@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@XAAUDataPacket@@@std@@8 DD 00H	; std::_Func_base<void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R4FLVFileStream@@6B@
rdata$r	SEGMENT
??_R4FLVFileStream@@6B@ DD 00H				; FLVFileStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFLVFileStream@@@8
	DD	FLAT:??_R3FLVFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R3XFileOutputSerializer@@8
rdata$r	SEGMENT
??_R3XFileOutputSerializer@@8 DD 00H			; XFileOutputSerializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XFileOutputSerializer@@8
rdata$r	ENDS
;	COMDAT ??_R4XFileOutputSerializer@@6B@
rdata$r	SEGMENT
??_R4XFileOutputSerializer@@6B@ DD 00H			; XFileOutputSerializer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXFileOutputSerializer@@@8
	DD	FLAT:??_R3XFileOutputSerializer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044'
	DB	'cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'AAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@XAAUDataPacket@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8 ; std::_Func_base<void,DataPacket &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2Serializer@@8
rdata$r	SEGMENT
??_R2Serializer@@8 DD FLAT:??_R1A@?0A@EA@Serializer@@8	; Serializer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@8
data$r	SEGMENT
??_R0?AV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVVideoFileStream@@@8
data$r	SEGMENT
??_R0?AVVideoFileStream@@@8 DD FLAT:??_7type_info@@6B@	; VideoFileStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVideoFileStream@@', 00H
data$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@8
data$r	SEGMENT
??_R0?AV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@XAAUDataPacket@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_base@XAAUDataPacket@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_base<void,DataPacket &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_base@XAAUDataPacket@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2VideoFileStream@@8
rdata$r	SEGMENT
??_R2VideoFileStream@@8 DD FLAT:??_R1A@?0A@EA@VideoFileStream@@8 ; VideoFileStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ClosableStream@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2XFileOutputSerializer@@8
rdata$r	SEGMENT
??_R2XFileOutputSerializer@@8 DD FLAT:??_R1A@?0A@EA@XFileOutputSerializer@@8 ; XFileOutputSerializer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Serializer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFLVFileStream@@@8
data$r	SEGMENT
??_R0?AVFLVFileStream@@@8 DD FLAT:??_7type_info@@6B@	; FLVFileStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFLVFileStream@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab'
	DB	'653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'AAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVXFileOutputSerializer@@@8
data$r	SEGMENT
??_R0?AVXFileOutputSerializer@@@8 DD FLAT:??_7type_info@@6B@ ; XFileOutputSerializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXFileOutputSerializer@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8 DD FLAT:??_R0?AV?$_Func_base@XAAUDataPacket@@@std@@@8 ; std::_Func_base<void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7XFileOutputSerializer@@6B@
CONST	SEGMENT
??_7XFileOutputSerializer@@6B@ DD FLAT:??_R4XFileOutputSerializer@@6B@ ; XFileOutputSerializer::`vftable'
	DD	FLAT:??_EXFileOutputSerializer@@UAEPAXI@Z
	DD	FLAT:?IsLoading@XFileOutputSerializer@@UAEHXZ
	DD	FLAT:?Serialize@XFileOutputSerializer@@UAEXPBXK@Z
	DD	FLAT:?Seek@XFileOutputSerializer@@UAE_K_JK@Z
	DD	FLAT:?GetPos@XFileOutputSerializer@@UBE_KXZ
	DD	FLAT:?DataPending@Serializer@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R4?$_Func_base@XAAUDataPacket@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_base@XAAUDataPacket@@@std@@6B@ DD 00H	; std::_Func_base<void,DataPacket &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_base@XAAUDataPacket@@@std@@@8
	DD	FLAT:??_R3?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Serializer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Serializer@@8 DD FLAT:??_R0?AVSerializer@@@8 ; Serializer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Serializer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VideoFileStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VideoFileStream@@8 DD FLAT:??_R0?AVVideoFileStream@@@8 ; VideoFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VideoFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R3Serializer@@8
rdata$r	SEGMENT
??_R3Serializer@@8 DD 00H				; Serializer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Serializer@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_base@XAAUDataPacket@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_base@XAAUDataPacket@@@std@@6B@ DD FLAT:??_R4?$_Func_base@XAAUDataPacket@@@std@@6B@ ; std::_Func_base<void,DataPacket &>::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_E?$_Func_base@XAAUDataPacket@@@std@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7VideoFileStream@@6B@
CONST	SEGMENT
??_7VideoFileStream@@6B@ DD FLAT:??_R4VideoFileStream@@6B@ ; VideoFileStream::`vftable'
	DD	FLAT:??_EVideoFileStream@@UAEPAXI@Z
	DD	FLAT:?AddPacket@VideoFileStream@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7FLVFileStream@@6B@
CONST	SEGMENT
??_7FLVFileStream@@6B@ DD FLAT:??_R4FLVFileStream@@6B@	; FLVFileStream::`vftable'
	DD	FLAT:??_EFLVFileStream@@UAEPAXI@Z
	DD	FLAT:?AddPacket@VideoFileStream@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
	DD	FLAT:?AddPacket@FLVFileStream@@UAEXPBEIKKW4PacketType@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@FLVFileStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FLVFileStream@@8 DD FLAT:??_R0?AVFLVFileStream@@@8 ; FLVFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FLVFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSerializer@@@8
data$r	SEGMENT
??_R0?AVSerializer@@@8 DD FLAT:??_7type_info@@6B@	; Serializer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSerializer@@', 00H
$SG4294859636 DB 'connect', 00H
$SG4294859637 DB 'app', 00H
$SG4294859634 DB 'swfUrl', 00H
	ORG $+1
$SG4294859635 DB 'flashVer', 00H
	ORG $+3
$SG4294859632 DB 'tcUrl', 00H
	ORG $+2
$SG4294859633 DB 'pageUrl', 00H
$SG4294859630 DB 'capabilities', 00H
	ORG $+3
$SG4294859631 DB 'fpad', 00H
	ORG $+3
$SG4294859628 DB 'videoCodecs', 00H
$SG4294859629 DB 'audioCodecs', 00H
$SG4294859626 DB 'objectEncoding', 00H
	ORG $+1
$SG4294859627 DB 'videoFunction', 00H
	ORG $+2
$SG4294859624 DB 'FCSubscribe', 00H
$SG4294859625 DB '_result', 00H
$SG4294859622 DB 'createStream', 00H
	ORG $+3
$SG4294859623 DB 'onFCSubscribe', 00H
	ORG $+2
$SG4294859620 DB 'getStreamLength', 00H
$SG4294859621 DB 'deleteStream', 00H
	ORG $+3
$SG4294859618 DB 'fmsVer', 00H
	ORG $+1
$SG4294859619 DB 'play', 00H
	ORG $+3
$SG4294859616 DB 'level', 00H
	ORG $+2
$SG4294859617 DB 'mode', 00H
	ORG $+3
$SG4294859614 DB 'description', 00H
$SG4294859615 DB 'code', 00H
	ORG $+3
$SG4294859612 DB 'send', 00H
	ORG $+3
$SG4294859613 DB 'secureToken', 00H
$SG4294859610 DB 'duration', 00H
	ORG $+3
$SG4294859611 DB 'onMetaData', 00H
	ORG $+1
$SG4294859608 DB 'height', 00H
	ORG $+1
$SG4294859609 DB 'width', 00H
	ORG $+2
$SG4294859606 DB 'videodatarate', 00H
	ORG $+2
$SG4294859607 DB 'videocodecid', 00H
	ORG $+3
$SG4294859604 DB 'audiocodecid', 00H
	ORG $+3
$SG4294859605 DB 'framerate', 00H
	ORG $+2
$SG4294859602 DB 'audiosamplerate', 00H
$SG4294859603 DB 'audiodatarate', 00H
	ORG $+2
$SG4294859600 DB 'audiochannels', 00H
	ORG $+2
$SG4294859601 DB 'audiosamplesize', 00H
$SG4294859598 DB 'encoder', 00H
$SG4294859599 DB 'stereo', 00H
	ORG $+1
$SG4294859596 DB 'onStatus', 00H
	ORG $+3
$SG4294859597 DB 'fileSize', 00H
	ORG $+3
$SG4294859594 DB 'NetStream.Play.Start', 00H
	ORG $+3
$SG4294859595 DB 'status', 00H
	ORG $+1
$SG4294859592 DB 'NetStream.Play.Stop', 00H
$SG4294859593 DB 'Started playing', 00H
$SG4294859590 DB 'details', 00H
$SG4294859591 DB 'Stopped playing', 00H
$SG4294859588 DB 'NetStream.Authenticate.UsherToken', 00H
	ORG $+2
$SG4294859589 DB 'clientid', 00H
	ORG $+3
$SG4294859586 DB '"', 00H
	ORG $+2
$SG4294859587 DB '@setDataFrame', 00H
	ORG $+2
$SG4294859584 DB 'Open Broadcaster Software v0.657b', 00H
	ORG $+2
$SG4294859585 DB '\"', 00H
	ORG $+1
$SG4294859582 DB 'mp4a', 00H
	ORG $+3
$SG4294859583 DB 'avc1', 00H
	ORG $+3
$SG4294859581 DB 'mp3 ', 00H
	ORG $+3
_av_onMetaData DD FLAT:$SG4294859611
	DD	0aH
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>
PUBLIC	??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
PUBLIC	??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
PUBLIC	??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@ABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@ABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@ABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_ApplyX<void,DataPacket &>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
PUBLIC	??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><<lambda_d4dbafb656cab653d44011aca1f5ff94> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_ApplyX<void,DataPacket &>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
PUBLIC	??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_ApplyX<void,DataPacket &>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
PUBLIC	??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
PUBLIC	??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >
PUBLIC	??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
PUBLIC	??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >
PUBLIC	??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
PUBLIC	??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >
PUBLIC	??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
PUBLIC	??$_Uninit_copy@EE@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<unsigned char,unsigned char>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QBEABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QBEABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QBEABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
PUBLIC	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ	; std::_Func_base<void,DataPacket &>::_Func_base<void,DataPacket &>
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ; std::_Func_class<void,DataPacket &>::_Set
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >
PUBLIC	??$_Uninit_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninit_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
PUBLIC	??$_Reset_alloc@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >
PUBLIC	??$_Reset_alloc@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >
PUBLIC	??$_Reset_alloc@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >
PUBLIC	??$_Uninitialized_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
PUBLIC	??$_Allocate@E@std@@YAPAEIPAE@Z			; std::_Allocate<unsigned char>
PUBLIC	??$_Reset@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
PUBLIC	??$_Reset@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
PUBLIC	??$_Reset@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
PUBLIC	??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>
PUBLIC	??$distance@PAE@std@@YAHPAE0@Z			; std::distance<unsigned char *>
PUBLIC	?max_size@?$allocator@E@std@@QBEIXZ		; std::allocator<unsigned char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z ; std::allocator_traits<std::allocator<unsigned char> >::max_size
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size
PUBLIC	?allocate@?$allocator@E@std@@QAEPAEI@Z		; std::allocator<unsigned char>::allocate
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate
PUBLIC	?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen
PUBLIC	?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
PUBLIC	??0?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ	; std::_Func_class<void,DataPacket &>::_Func_class<void,DataPacket &>
PUBLIC	?_Grow_to@?$vector@EV?$allocator@E@std@@@std@@IBEII@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Grow_to
PUBLIC	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
PUBLIC	?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAE0@Z ; std::_Ptr_cat<unsigned char,unsigned char>
PUBLIC	??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_d4dbafb656cab653d44011aca1f5ff94> >
PUBLIC	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
PUBLIC	??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
PUBLIC	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
PUBLIC	??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
PUBLIC	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
PUBLIC	??$_Assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0Uforward_iterator_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign<unsigned char *>
PUBLIC	??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@ABV?$allocator@E@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
PUBLIC	?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::clear
PUBLIC	??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
PUBLIC	??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@BufferedDataPacket@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; BufferedDataPacket::BufferedDataPacket<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
PUBLIC	??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@BufferedDataPacket@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; BufferedDataPacket::BufferedDataPacket<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
PUBLIC	??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@BufferedDataPacket@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; BufferedDataPacket::BufferedDataPacket<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
PUBLIC	??$assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *>
PUBLIC	??0?$allocator@E@std@@QAE@XZ			; std::allocator<unsigned char>::allocator<unsigned char>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
PUBLIC	?deallocate@?$allocator@E@std@@QAEXPAEI@Z	; std::allocator<unsigned char>::deallocate
PUBLIC	?_Local@?$_Func_class@XAAUDataPacket@@@std@@ABE_NXZ ; std::_Func_class<void,DataPacket &>::_Local
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
PUBLIC	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
PUBLIC	??_G?$_Func_base@XAAUDataPacket@@@std@@UAEPAXI@Z ; std::_Func_base<void,DataPacket &>::`scalar deleting destructor'
PUBLIC	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ	; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
PUBLIC	?_Tidy@?$_Func_class@XAAUDataPacket@@@std@@IAEXXZ ; std::_Func_class<void,DataPacket &>::_Tidy
PUBLIC	??1?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ	; std::_Func_class<void,DataPacket &>::~_Func_class<void,DataPacket &>
PUBLIC	?_Empty@?$_Func_class@XAAUDataPacket@@@std@@QBE_NXZ ; std::_Func_class<void,DataPacket &>::_Empty
PUBLIC	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
PUBLIC	?_Decref@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Decref
PUBLIC	?_Get@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Get
PUBLIC	??R?$_Func_class@XAAUDataPacket@@@std@@QBEXAAUDataPacket@@@Z ; std::_Func_class<void,DataPacket &>::operator()
PUBLIC	??B?$function@$$A6AXAAUDataPacket@@@Z@std@@QBE_NXZ ; std::function<void __cdecl(DataPacket &)>::operator bool
PUBLIC	??1?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@XZ ; std::function<void __cdecl(DataPacket &)>::~function<void __cdecl(DataPacket &)>
PUBLIC	?data@?$vector@EV?$allocator@E@std@@@std@@QBEPBEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::data
PUBLIC	?data@?$vector@EV?$allocator@E@std@@@std@@QAEPAEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::data
PUBLIC	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
PUBLIC	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??C?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@1@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator->
PUBLIC	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??0VideoFileStream@@QAE@XZ			; VideoFileStream::VideoFileStream
PUBLIC	??0FLVFileStream@@QAE@XZ			; FLVFileStream::FLVFileStream
PUBLIC	?CreateFLVFileStream@@YAPAVVideoFileStream@@PB_W@Z ; CreateFLVFileStream
PUBLIC	??_GFLVFileStream@@UAEPAXI@Z			; FLVFileStream::`scalar deleting destructor'
PUBLIC	?AddPacket@FLVFileStream@@UAEXPBEIKKW4PacketType@@@Z ; FLVFileStream::AddPacket
PUBLIC	?InitBufferedPackets@FLVFileStream@@QAEXXZ	; FLVFileStream::InitBufferedPackets
PUBLIC	??1FLVFileStream@@UAE@XZ			; FLVFileStream::~FLVFileStream
PUBLIC	?Init@FLVFileStream@@QAE_NPB_W@Z		; FLVFileStream::Init
PUBLIC	?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z	; FLVFileStream::AppendFLVPacket
PUBLIC	?GetBufferedVideoHeadersPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedVideoHeadersPacket
PUBLIC	?GetBufferedAudioHeadersPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedAudioHeadersPacket
PUBLIC	??1BufferedDataPacket@@QAE@XZ			; BufferedDataPacket::~BufferedDataPacket
PUBLIC	?GetBufferedSEIPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedSEIPacket
PUBLIC	?InitBuffer@BufferedDataPacket@@QAEXXZ		; BufferedDataPacket::InitBuffer
PUBLIC	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z	; OBS::GetAudioHeaders
PUBLIC	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z	; OBS::GetVideoHeaders
PUBLIC	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ	; OBS::GetVideoEncoder
PUBLIC	??_GVideoFileStream@@UAEPAXI@Z			; VideoFileStream::`scalar deleting destructor'
PUBLIC	?AddPacket@VideoFileStream@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z ; VideoFileStream::AddPacket
PUBLIC	??1VideoFileStream@@UAE@XZ			; VideoFileStream::~VideoFileStream
PUBLIC	?fastHtonl@@YAKK@Z				; fastHtonl
PUBLIC	?fastHtonll@@YA_K_K@Z				; fastHtonll
PUBLIC	?_Decwref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	?_Decref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Decref
PUBLIC	??1XFileOutputSerializer@@UAE@XZ		; XFileOutputSerializer::~XFileOutputSerializer
PUBLIC	??_GXFileOutputSerializer@@UAEPAXI@Z		; XFileOutputSerializer::`scalar deleting destructor'
PUBLIC	?Flush@XFileOutputSerializer@@AAEXXZ		; XFileOutputSerializer::Flush
PUBLIC	?GetPos@XFileOutputSerializer@@UBE_KXZ		; XFileOutputSerializer::GetPos
PUBLIC	?Seek@XFileOutputSerializer@@UAE_K_JK@Z		; XFileOutputSerializer::Seek
PUBLIC	?Serialize@XFileOutputSerializer@@UAEXPBXK@Z	; XFileOutputSerializer::Serialize
PUBLIC	?Close@XFileOutputSerializer@@QAEXXZ		; XFileOutputSerializer::Close
PUBLIC	?Open@XFileOutputSerializer@@QAEHPB_WKK@Z	; XFileOutputSerializer::Open
PUBLIC	?IsLoading@XFileOutputSerializer@@UAEHXZ	; XFileOutputSerializer::IsLoading
PUBLIC	??0XFileOutputSerializer@@QAE@XZ		; XFileOutputSerializer::XFileOutputSerializer
EXTRN	??_E?$_Func_base@XAAUDataPacket@@@std@@UAEPAXI@Z:PROC ; std::_Func_base<void,DataPacket &>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vector deleting destructor'
EXTRN	??_EXFileOutputSerializer@@UAEPAXI@Z:PROC	; XFileOutputSerializer::`vector deleting destructor'
EXTRN	??_EFLVFileStream@@UAEPAXI@Z:PROC		; FLVFileStream::`vector deleting destructor'
EXTRN	??_EVideoFileStream@@UAEPAXI@Z:PROC		; VideoFileStream::`vector deleting destructor'
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ??0XFileOutputSerializer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XFileOutputSerializer@@QAE@XZ PROC			; XFileOutputSerializer::XFileOutputSerializer, COMDAT
; _this$ = ecx

; 199  :     XFileOutputSerializer() {bufferPos = 0;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0Serializer@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7XFileOutputSerializer@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0XFile@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0XFileOutputSerializer@@QAE@XZ ENDP			; XFileOutputSerializer::XFileOutputSerializer
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ?IsLoading@XFileOutputSerializer@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsLoading@XFileOutputSerializer@@UAEHXZ PROC		; XFileOutputSerializer::IsLoading, COMDAT
; _this$ = ecx

; 201  :     BOOL IsLoading() {return FALSE;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLoading@XFileOutputSerializer@@UAEHXZ ENDP		; XFileOutputSerializer::IsLoading
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ?Open@XFileOutputSerializer@@QAEHPB_WKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpFile$ = 8						; size = 4
_dwCreationDisposition$ = 12				; size = 4
_bufferSize$ = 16					; size = 4
?Open@XFileOutputSerializer@@QAEHPB_WKK@Z PROC		; XFileOutputSerializer::Open, COMDAT
; _this$ = ecx

; 204  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 205  :         if(!bufferSize) bufferSize = 1024*64;

	cmp	DWORD PTR _bufferSize$[ebp], 0
	jne	SHORT $LN1@Open
	mov	DWORD PTR _bufferSize$[ebp], 65536	; 00010000H
$LN1@Open:

; 206  : 
; 207  :         this->bufferSize = bufferSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bufferSize$[ebp]
	mov	DWORD PTR [eax+36], ecx

; 208  :         Buffer = (LPBYTE)Allocate(bufferSize);

	mov	edx, DWORD PTR _bufferSize$[ebp]
	push	edx
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 209  :         totalWritten = bufferPos = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	DWORD PTR [eax+44], 0

; 210  :         return file.Open(lpFile, XFILE_WRITE, dwCreationDisposition);

	mov	ecx, DWORD PTR _dwCreationDisposition$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?Open@XFile@@QAEHPB_WKK@Z

; 211  :     }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Open@XFileOutputSerializer@@QAEHPB_WKK@Z ENDP		; XFileOutputSerializer::Open
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ?Close@XFileOutputSerializer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@XFileOutputSerializer@@QAEXXZ PROC		; XFileOutputSerializer::Close, COMDAT
; _this$ = ecx

; 214  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 215  :         Flush();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@XFileOutputSerializer@@AAEXXZ	; XFileOutputSerializer::Flush

; 216  :         file.Close();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?Close@XFile@@QAEXXZ

; 217  :         Free(Buffer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 218  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Close@XFileOutputSerializer@@QAEXXZ ENDP		; XFileOutputSerializer::Close
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ?Serialize@XFileOutputSerializer@@UAEXPBXK@Z
_TEXT	SEGMENT
tv80 = -16						; size = 4
_lpTemp$ = -12						; size = 4
_dwWriteSize$1 = -8					; size = 4
_this$ = -4						; size = 4
_lpData$ = 8						; size = 4
_length$ = 12						; size = 4
?Serialize@XFileOutputSerializer@@UAEXPBXK@Z PROC	; XFileOutputSerializer::Serialize, COMDAT
; _this$ = ecx

; 221  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 222  :         assert(lpData);
; 223  : 
; 224  :         LPBYTE lpTemp = (LPBYTE)lpData;

	mov	eax, DWORD PTR _lpData$[ebp]
	mov	DWORD PTR _lpTemp$[ebp], eax

; 225  : 
; 226  :         totalWritten += length;

	mov	ecx, DWORD PTR _length$[ebp]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+40]
	adc	edx, DWORD PTR [eax+44]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], edx
$LN4@Serialize:

; 227  : 
; 228  :         while(length)

	cmp	DWORD PTR _length$[ebp], 0
	je	$LN5@Serialize

; 229  :         {
; 230  :             if(bufferPos == bufferSize)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	cmp	eax, DWORD PTR [edx+36]
	jne	SHORT $LN2@Serialize

; 231  :                 Flush();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@XFileOutputSerializer@@AAEXXZ	; XFileOutputSerializer::Flush
$LN2@Serialize:

; 232  :                 
; 233  :             DWORD dwWriteSize = MIN(length, (bufferSize-bufferPos));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	sub	eax, DWORD PTR [edx+32]
	cmp	DWORD PTR _length$[ebp], eax
	jae	SHORT $LN7@Serialize
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv80[ebp], ecx
	jmp	SHORT $LN8@Serialize
$LN7@Serialize:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+36]
	sub	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR tv80[ebp], ecx
$LN8@Serialize:
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _dwWriteSize$1[ebp], edx

; 234  : 
; 235  :             assert(dwWriteSize);
; 236  : 
; 237  :             if(!dwWriteSize)

	cmp	DWORD PTR _dwWriteSize$1[ebp], 0
	jne	SHORT $LN1@Serialize

; 238  :                 return;

	jmp	SHORT $LN5@Serialize
$LN1@Serialize:

; 239  : 
; 240  :             mcpy(Buffer+bufferPos, lpTemp, dwWriteSize);

	mov	eax, DWORD PTR _dwWriteSize$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpTemp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+32]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 241  : 
; 242  :             lpTemp += dwWriteSize;

	mov	edx, DWORD PTR _lpTemp$[ebp]
	add	edx, DWORD PTR _dwWriteSize$1[ebp]
	mov	DWORD PTR _lpTemp$[ebp], edx

; 243  :             bufferPos += dwWriteSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, DWORD PTR _dwWriteSize$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 244  : 
; 245  :             length -= dwWriteSize;

	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, DWORD PTR _dwWriteSize$1[ebp]
	mov	DWORD PTR _length$[ebp], eax

; 246  :         }

	jmp	$LN4@Serialize
$LN5@Serialize:

; 247  :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?Serialize@XFileOutputSerializer@@UAEXPBXK@Z ENDP	; XFileOutputSerializer::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ?Seek@XFileOutputSerializer@@UAE_K_JK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_offset$ = 8						; size = 8
_seekType$ = 16						; size = 4
?Seek@XFileOutputSerializer@@UAE_K_JK@Z PROC		; XFileOutputSerializer::Seek, COMDAT
; _this$ = ecx

; 250  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 251  :         Flush();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@XFileOutputSerializer@@AAEXXZ	; XFileOutputSerializer::Flush

; 252  :         if(seekType == SERIALIZE_SEEK_START)

	cmp	DWORD PTR _seekType$[ebp], 0
	jne	SHORT $LN5@Seek

; 253  :             seekType = XFILE_BEGIN;

	mov	DWORD PTR _seekType$[ebp], 1
	jmp	SHORT $LN4@Seek
$LN5@Seek:

; 254  :         else if(seekType == SERIALIZE_SEEK_CURRENT)

	cmp	DWORD PTR _seekType$[ebp], 1
	jne	SHORT $LN3@Seek

; 255  :             seekType = XFILE_CURPOS;

	mov	DWORD PTR _seekType$[ebp], 2
	jmp	SHORT $LN4@Seek
$LN3@Seek:

; 256  :         else if(seekType == SERIALIZE_SEEK_END)

	cmp	DWORD PTR _seekType$[ebp], 2
	jne	SHORT $LN4@Seek

; 257  :             seekType = XFILE_END;

	mov	DWORD PTR _seekType$[ebp], 3
$LN4@Seek:

; 258  : 
; 259  :         return file.SetPos(offset, seekType);

	mov	eax, DWORD PTR _seekType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _offset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?SetPos@XFile@@QAE_K_JK@Z

; 260  :     }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Seek@XFileOutputSerializer@@UAE_K_JK@Z ENDP		; XFileOutputSerializer::Seek
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ?GetPos@XFileOutputSerializer@@UBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPos@XFileOutputSerializer@@UBE_KXZ PROC		; XFileOutputSerializer::GetPos, COMDAT
; _this$ = ecx

; 263  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 264  :         return file.GetPos()+bufferPos;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?GetPos@XFile@@QBE_KXZ
	mov	ecx, DWORD PTR _this$[ebp]
	xor	esi, esi
	add	eax, DWORD PTR [ecx+32]
	adc	edx, esi

; 265  :     }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPos@XFileOutputSerializer@@UBE_KXZ ENDP		; XFileOutputSerializer::GetPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\xfile.h
;	COMDAT ?Flush@XFileOutputSerializer@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@XFileOutputSerializer@@AAEXXZ PROC		; XFileOutputSerializer::Flush, COMDAT
; _this$ = ecx

; 271  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 272  :         if(bufferPos)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN2@Flush

; 273  :         {
; 274  :             file.Write(Buffer, bufferPos);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?Write@XFile@@QAEKPBXK@Z

; 275  :             bufferPos = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
$LN2@Flush:

; 276  :         }
; 277  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@XFileOutputSerializer@@AAEXXZ ENDP		; XFileOutputSerializer::Flush
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GXFileOutputSerializer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GXFileOutputSerializer@@UAEPAXI@Z PROC		; XFileOutputSerializer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1XFileOutputSerializer@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GXFileOutputSerializer@@UAEPAXI@Z ENDP		; XFileOutputSerializer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1XFileOutputSerializer@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1XFileOutputSerializer@@UAE@XZ PROC			; XFileOutputSerializer::~XFileOutputSerializer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Serializer@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1XFileOutputSerializer@@UAE@XZ ENDP			; XFileOutputSerializer::~XFileOutputSerializer
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Decref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT
; _this$ = ecx

; 115  : 		{	// decrement use count

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 		if (_MT_DECR(_Mtx, _Uses) == 0)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	jne	SHORT $LN2@Decref

; 117  : 			{	// destroy managed resource, decrement weak reference count
; 118  : 			_Destroy();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx

; 119  : 			_Decwref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decwref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 120  : 			}
; 121  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Decwref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT
; _this$ = ecx

; 124  : 		{	// decrement weak reference count

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		if (_MT_DECR(_Mtx, _Weaks) == 0)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	jne	SHORT $LN2@Decwref

; 126  : 			_Delete_this();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN2@Decwref:

; 127  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Decwref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\obsapi.h
;	COMDAT ?fastHtonll@@YA_K_K@Z
_TEXT	SEGMENT
_qw$ = 8						; size = 8
?fastHtonll@@YA_K_K@Z PROC				; fastHtonll, COMDAT

; 65   : __forceinline QWORD fastHtonll(QWORD qw) {return QWORD_BE(qw);}

	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	eax, DWORD PTR _qw$[ebp]
	mov	edx, DWORD PTR _qw$[ebp+4]
	mov	cl, 56					; 00000038H
	call	__aullshr
	mov	esi, eax
	mov	edi, edx
	and	esi, 255				; 000000ffH
	and	edi, 0
	mov	eax, DWORD PTR _qw$[ebp]
	mov	edx, DWORD PTR _qw$[ebp+4]
	mov	cl, 48					; 00000030H
	call	__aullshr
	and	eax, 255				; 000000ffH
	and	edx, 0
	mov	cl, 8
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, DWORD PTR _qw$[ebp]
	mov	edx, DWORD PTR _qw$[ebp+4]
	mov	cl, 40					; 00000028H
	call	__aullshr
	and	eax, 255				; 000000ffH
	and	edx, 0
	mov	cl, 16					; 00000010H
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, DWORD PTR _qw$[ebp]
	mov	edx, DWORD PTR _qw$[ebp+4]
	mov	cl, 32					; 00000020H
	call	__aullshr
	and	eax, 255				; 000000ffH
	and	edx, 0
	mov	cl, 24					; 00000018H
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, DWORD PTR _qw$[ebp]
	mov	edx, DWORD PTR _qw$[ebp+4]
	mov	cl, 24					; 00000018H
	call	__aullshr
	and	eax, 255				; 000000ffH
	and	edx, 0
	mov	cl, 32					; 00000020H
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, DWORD PTR _qw$[ebp]
	mov	edx, DWORD PTR _qw$[ebp+4]
	mov	cl, 16					; 00000010H
	call	__aullshr
	and	eax, 255				; 000000ffH
	and	edx, 0
	mov	cl, 40					; 00000028H
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, DWORD PTR _qw$[ebp]
	mov	edx, DWORD PTR _qw$[ebp+4]
	mov	cl, 8
	call	__aullshr
	and	eax, 255				; 000000ffH
	and	edx, 0
	mov	cl, 48					; 00000030H
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, DWORD PTR _qw$[ebp]
	and	eax, 255				; 000000ffH
	mov	edx, DWORD PTR _qw$[ebp+4]
	and	edx, 0
	mov	cl, 56					; 00000038H
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, esi
	mov	edx, edi
	pop	edi
	pop	esi
	pop	ebp
	ret	0
?fastHtonll@@YA_K_K@Z ENDP				; fastHtonll
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\obsapi.h
;	COMDAT ?fastHtonl@@YAKK@Z
_TEXT	SEGMENT
_dw$ = 8						; size = 4
?fastHtonl@@YAKK@Z PROC					; fastHtonl, COMDAT

; 66   : __forceinline DWORD fastHtonl (DWORD dw) {return DWORD_BE(dw);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _dw$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _dw$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	or	eax, ecx
	mov	edx, DWORD PTR _dw$[ebp]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _dw$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 24					; 00000018H
	or	eax, ecx
	pop	ebp
	ret	0
?fastHtonl@@YAKK@Z ENDP					; fastHtonl
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ??1VideoFileStream@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VideoFileStream@@UAE@XZ PROC				; VideoFileStream::~VideoFileStream, COMDAT
; _this$ = ecx

; 141  :     virtual ~VideoFileStream() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VideoFileStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ClosableStream@@UAE@XZ		; ClosableStream::~ClosableStream
	mov	esp, ebp
	pop	ebp
	ret	0
??1VideoFileStream@@UAE@XZ ENDP				; VideoFileStream::~VideoFileStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?AddPacket@VideoFileStream@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 8
_timestamp$ = 16					; size = 4
_pts$ = 20						; size = 4
_type$ = 24						; size = 4
?AddPacket@VideoFileStream@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z PROC ; VideoFileStream::AddPacket, COMDAT
; _this$ = ecx

; 144  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 145  :         AddPacket(data->data(), static_cast<UINT>(data->size()), timestamp, pts, type);

	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pts$[ebp]
	push	ecx
	mov	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	lea	ecx, DWORD PTR _data$[ebp]
	call	??C?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@1@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator->
	mov	ecx, eax
	call	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	??C?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@1@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator->
	mov	ecx, eax
	call	?data@?$vector@EV?$allocator@E@std@@@std@@QBEPBEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::data
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 146  :     }

	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddPacket@VideoFileStream@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z ENDP ; VideoFileStream::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVideoFileStream@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVideoFileStream@@UAEPAXI@Z PROC			; VideoFileStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VideoFileStream@@UAE@XZ		; VideoFileStream::~VideoFileStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVideoFileStream@@UAEPAXI@Z ENDP			; VideoFileStream::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ PROC	; OBS::GetVideoEncoder, COMDAT
; _this$ = ecx

; 1229 :     inline VideoEncoder* GetVideoEncoder() const {return videoEncoder;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+148]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ENDP	; OBS::GetVideoEncoder
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_packet$ = 8						; size = 4
?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z PROC	; OBS::GetVideoHeaders, COMDAT
; _this$ = ecx

; 1248 :     inline void GetVideoHeaders(DataPacket &packet) {videoEncoder->GetHeaders(packet);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+148]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ENDP	; OBS::GetVideoHeaders
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_packet$ = 8						; size = 4
?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z PROC	; OBS::GetAudioHeaders, COMDAT
; _this$ = ecx

; 1249 :     inline void GetAudioHeaders(DataPacket &packet) {audioEncoder->GetHeaders(packet);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+140]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ENDP	; OBS::GetAudioHeaders
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?InitBuffer@BufferedDataPacket@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitBuffer@BufferedDataPacket@@QAEXXZ PROC		; BufferedDataPacket::InitBuffer, COMDAT
; _this$ = ecx

; 32   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 33   :         if (size || !func)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@InitBuffer
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$function@$$A6AXAAUDataPacket@@@Z@std@@QBE_NXZ ; std::function<void __cdecl(DataPacket &)>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@InitBuffer
$LN2@InitBuffer:

; 34   :             return;

	jmp	SHORT $LN4@InitBuffer
$LN3@InitBuffer:

; 35   : 
; 36   :         func(*this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$_Func_class@XAAUDataPacket@@@std@@QBEXAAUDataPacket@@@Z ; std::_Func_class<void,DataPacket &>::operator()

; 37   :         if (!size)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@InitBuffer

; 38   :             return;

	jmp	SHORT $LN4@InitBuffer
$LN1@InitBuffer:

; 39   : 
; 40   :         buffer.assign(lpPacket, lpPacket + size);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *>

; 41   :         lpPacket = buffer.data();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?data@?$vector@EV?$allocator@E@std@@@std@@QAEPAEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::data
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@InitBuffer:

; 42   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?InitBuffer@BufferedDataPacket@@QAEXXZ ENDP		; BufferedDataPacket::InitBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?GetBufferedSEIPacket@@YA?AUBufferedDataPacket@@XZ
_TEXT	SEGMENT
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?GetBufferedSEIPacket@@YA?AUBufferedDataPacket@@XZ PROC	; GetBufferedSEIPacket, COMDAT

; 49   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 50   :     return [](DataPacket &p)
; 51   :     {
; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();
; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);
; 55   :     };

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@BufferedDataPacket@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; BufferedDataPacket::BufferedDataPacket<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 56   : };

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBufferedSEIPacket@@YA?AUBufferedDataPacket@@XZ ENDP	; GetBufferedSEIPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??R<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@QBEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_encoder$ = -4						; size = 4
_p$ = 8							; size = 4
??R<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@QBEXAAUDataPacket@@@Z PROC ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::operator(), COMDAT
; _this$ = ecx

; 51   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@QBEXAAUDataPacket@@@Z ENDP ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_cdecl>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CAXAAUDataPacket@@@Z
_TEXT	SEGMENT
_encoder$ = -4						; size = 4
_p$ = 8							; size = 4
?<helper_func_cdecl>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CAXAAUDataPacket@@@Z PROC ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_cdecl>, COMDAT

; 51   :     {

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CAXAAUDataPacket@@@Z ENDP ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_stdcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CGXAAUDataPacket@@@Z
_TEXT	SEGMENT
_encoder$ = -4						; size = 4
_p$ = 8							; size = 4
?<helper_func_stdcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CGXAAUDataPacket@@@Z PROC ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_stdcall>, COMDAT

; 51   :     {

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CGXAAUDataPacket@@@Z ENDP ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_fastcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CIXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_encoder$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CIXAAUDataPacket@@@Z PROC ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_fastcall>, COMDAT
; _p$ = ecx

; 51   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _p$[ebp], ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CIXAAUDataPacket@@@Z ENDP ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_vectorcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CQXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_encoder$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CQXAAUDataPacket@@@Z PROC ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_vectorcall>, COMDAT
; _p$ = ecx

; 51   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _p$[ebp], ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@CQXAAUDataPacket@@@Z ENDP ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BufferedDataPacket@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1BufferedDataPacket@@QAE@XZ PROC			; BufferedDataPacket::~BufferedDataPacket, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@XZ ; std::function<void __cdecl(DataPacket &)>::~function<void __cdecl(DataPacket &)>
	mov	esp, ebp
	pop	ebp
	ret	0
??1BufferedDataPacket@@QAE@XZ ENDP			; BufferedDataPacket::~BufferedDataPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?GetBufferedAudioHeadersPacket@@YA?AUBufferedDataPacket@@XZ
_TEXT	SEGMENT
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?GetBufferedAudioHeadersPacket@@YA?AUBufferedDataPacket@@XZ PROC ; GetBufferedAudioHeadersPacket, COMDAT

; 59   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 60   :     return [](DataPacket &p)
; 61   :     {
; 62   :         App->GetAudioHeaders(p);
; 63   :     };

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@BufferedDataPacket@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; BufferedDataPacket::BufferedDataPacket<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 64   : };

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBufferedAudioHeadersPacket@@YA?AUBufferedDataPacket@@XZ ENDP ; GetBufferedAudioHeadersPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??R<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@QBEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??R<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@QBEXAAUDataPacket@@@Z PROC ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::operator(), COMDAT
; _this$ = ecx

; 61   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@QBEXAAUDataPacket@@@Z ENDP ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_cdecl>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CAXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_cdecl>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CAXAAUDataPacket@@@Z PROC ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_cdecl>, COMDAT

; 61   :     {

	push	ebp
	mov	ebp, esp

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CAXAAUDataPacket@@@Z ENDP ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_stdcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CGXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_stdcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CGXAAUDataPacket@@@Z PROC ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_stdcall>, COMDAT

; 61   :     {

	push	ebp
	mov	ebp, esp

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CGXAAUDataPacket@@@Z ENDP ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_fastcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CIXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CIXAAUDataPacket@@@Z PROC ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_fastcall>, COMDAT
; _p$ = ecx

; 61   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CIXAAUDataPacket@@@Z ENDP ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_vectorcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CQXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CQXAAUDataPacket@@@Z PROC ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_vectorcall>, COMDAT
; _p$ = ecx

; 61   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@CQXAAUDataPacket@@@Z ENDP ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?GetBufferedVideoHeadersPacket@@YA?AUBufferedDataPacket@@XZ
_TEXT	SEGMENT
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?GetBufferedVideoHeadersPacket@@YA?AUBufferedDataPacket@@XZ PROC ; GetBufferedVideoHeadersPacket, COMDAT

; 67   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 68   :     return [](DataPacket &p)
; 69   :     {
; 70   :         App->GetVideoHeaders(p);
; 71   :     };

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@BufferedDataPacket@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; BufferedDataPacket::BufferedDataPacket<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 72   : };

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBufferedVideoHeadersPacket@@YA?AUBufferedDataPacket@@XZ ENDP ; GetBufferedVideoHeadersPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??R<lambda_d4dbafb656cab653d44011aca1f5ff94>@@QBEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??R<lambda_d4dbafb656cab653d44011aca1f5ff94>@@QBEXAAUDataPacket@@@Z PROC ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::operator(), COMDAT
; _this$ = ecx

; 69   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_d4dbafb656cab653d44011aca1f5ff94>@@QBEXAAUDataPacket@@@Z ENDP ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_cdecl>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CAXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_cdecl>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CAXAAUDataPacket@@@Z PROC ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_cdecl>, COMDAT

; 69   :     {

	push	ebp
	mov	ebp, esp

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CAXAAUDataPacket@@@Z ENDP ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_stdcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CGXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_stdcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CGXAAUDataPacket@@@Z PROC ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_stdcall>, COMDAT

; 69   :     {

	push	ebp
	mov	ebp, esp

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CGXAAUDataPacket@@@Z ENDP ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_fastcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CIXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CIXAAUDataPacket@@@Z PROC ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_fastcall>, COMDAT
; _p$ = ecx

; 69   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CIXAAUDataPacket@@@Z ENDP ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_vectorcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CQXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CQXAAUDataPacket@@@Z PROC ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_vectorcall>, COMDAT
; _p$ = ecx

; 69   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_d4dbafb656cab653d44011aca1f5ff94>@@CQXAAUDataPacket@@@Z ENDP ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\flvfilestream.cpp
;	COMDAT ?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z
_TEXT	SEGMENT
_streamID$1 = -28					; size = 4
_networkDataSize$2 = -24				; size = 4
_streamID$3 = -20					; size = 4
_networkDataSize$4 = -16				; size = 4
_networkTimestamp$5 = -12				; size = 4
_networkTimestamp$6 = -8				; size = 4
_this$ = -4						; size = 4
_lpData$ = 8						; size = 4
_size$ = 12						; size = 4
_type$ = 16						; size = 1
_timestamp$ = 20					; size = 4
?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z PROC	; FLVFileStream::AppendFLVPacket, COMDAT
; _this$ = ecx

; 42   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 43   :         if (!bSentSEI && type == 9 && lpData[0] == 0x17 && lpData[1] == 0x1) { //send SEI with first keyframe packet

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+233]
	test	ecx, ecx
	jne	$LN2@AppendFLVP
	movzx	edx, BYTE PTR _type$[ebp]
	cmp	edx, 9
	jne	$LN2@AppendFLVP
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _lpData$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 23					; 00000017H
	jne	$LN2@AppendFLVP
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _lpData$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 1
	jne	$LN2@AppendFLVP

; 44   :             UINT networkDataSize  = fastHtonl(size+sei.size);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	add	edx, DWORD PTR [ecx+92]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _networkDataSize$4[ebp], eax

; 45   :             UINT networkTimestamp = fastHtonl(timestamp);

	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _networkTimestamp$6[ebp], eax

; 46   :             UINT streamID = 0;

	mov	DWORD PTR _streamID$3[ebp], 0

; 47   :             fileOut.OutputByte(type);

	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 48   :             fileOut.Serialize(((LPBYTE)(&networkDataSize))+1,  3);

	push	3
	lea	edx, DWORD PTR _networkDataSize$4[ebp+1]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 49   :             fileOut.Serialize(((LPBYTE)(&networkTimestamp))+1, 3);

	push	3
	lea	ecx, DWORD PTR _networkTimestamp$6[ebp+1]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 50   :             fileOut.Serialize(&networkTimestamp, 1);

	push	1
	lea	eax, DWORD PTR _networkTimestamp$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 51   :             fileOut.Serialize(&streamID, 3);

	push	3
	lea	eax, DWORD PTR _streamID$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 52   :             fileOut.Serialize(lpData, 5);

	push	5
	mov	eax, DWORD PTR _lpData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 53   :             fileOut.Serialize(sei.lpPacket, sei.size);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 54   :             fileOut.Serialize(lpData+5, size-5);

	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 5
	push	eax
	mov	ecx, DWORD PTR _lpData$[ebp]
	add	ecx, 5
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 55   :             fileOut.OutputDword(fastHtonl(size+sei.size+11));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR _size$[ebp]
	lea	eax, DWORD PTR [edx+ecx+11]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 56   : 
; 57   :             bSentSEI = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+233], 1

; 58   :         } else {

	jmp	$LN1@AppendFLVP
$LN2@AppendFLVP:

; 59   :             UINT networkDataSize  = fastHtonl(size);

	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _networkDataSize$2[ebp], eax

; 60   :             UINT networkTimestamp = fastHtonl(timestamp);

	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _networkTimestamp$5[ebp], eax

; 61   :             UINT streamID = 0;

	mov	DWORD PTR _streamID$1[ebp], 0

; 62   :             fileOut.OutputByte(type);

	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 63   :             fileOut.Serialize(((LPBYTE)(&networkDataSize))+1,  3);

	push	3
	lea	edx, DWORD PTR _networkDataSize$2[ebp+1]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 64   :             fileOut.Serialize(((LPBYTE)(&networkTimestamp))+1, 3);

	push	3
	lea	ecx, DWORD PTR _networkTimestamp$5[ebp+1]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 65   :             fileOut.Serialize(&networkTimestamp, 1);

	push	1
	lea	eax, DWORD PTR _networkTimestamp$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 66   :             fileOut.Serialize(&streamID, 3);

	push	3
	lea	eax, DWORD PTR _streamID$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 67   :             fileOut.Serialize(lpData, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpData$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 68   :             fileOut.OutputDword(fastHtonl(size+11));

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 11					; 0000000bH
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
$LN1@AppendFLVP:

; 69   :         }
; 70   : 
; 71   :         lastTimeStamp = timestamp;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _timestamp$[ebp]
	mov	DWORD PTR [ecx+80], edx

; 72   :     }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z ENDP	; FLVFileStream::AppendFLVPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\flvfilestream.cpp
;	COMDAT ?Init@FLVFileStream@@QAE_NPB_W@Z
_TEXT	SEGMENT
_endMetaData$ = -2076					; size = 4
_metaDataSize$ = -2072					; size = 4
_pend$ = -2068						; size = 4
_enc$ = -2064						; size = 4
_this$ = -2060						; size = 4
_metaDataBuffer$ = -2056				; size = 2048
__$ArrayPad$ = -4					; size = 4
_lpFile$ = 8						; size = 4
?Init@FLVFileStream@@QAE_NPB_W@Z PROC			; FLVFileStream::Init, COMDAT
; _this$ = ecx

; 76   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 2076				; 0000081cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 77   :         strFile = lpFile;

	mov	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 78   :         initialTimestamp = -1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], -1

; 79   : 
; 80   :         if(!fileOut.Open(lpFile, XFILE_CREATEALWAYS, 1024*1024))

	push	1048576					; 00100000H
	push	2
	mov	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Open@XFileOutputSerializer@@QAEHPB_WKK@Z ; XFileOutputSerializer::Open
	test	eax, eax
	jne	SHORT $LN1@Init

; 81   :             return false;

	xor	al, al
	jmp	$LN2@Init
$LN1@Init:

; 82   : 
; 83   :         fileOut.OutputByte('F');

	push	70					; 00000046H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 84   :         fileOut.OutputByte('L');

	push	76					; 0000004cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 85   :         fileOut.OutputByte('V');

	push	86					; 00000056H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 86   :         fileOut.OutputByte(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 87   :         fileOut.OutputByte(5); //bit 0 = (hasAudio), bit 2 = (hasAudio)

	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 88   :         fileOut.OutputDword(DWORD_BE(9));

	push	150994944				; 09000000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 89   :         fileOut.OutputDword(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 90   : 
; 91   :         metaDataPos = fileOut.GetPos();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], eax
	mov	DWORD PTR [ecx+76], edx

; 92   : 
; 93   :         char  metaDataBuffer[2048];
; 94   :         char *enc = metaDataBuffer;

	lea	edx, DWORD PTR _metaDataBuffer$[ebp]
	mov	DWORD PTR _enc$[ebp], edx

; 95   :         char *pend = metaDataBuffer+sizeof(metaDataBuffer);

	lea	eax, DWORD PTR _metaDataBuffer$[ebp+2048]
	mov	DWORD PTR _pend$[ebp], eax

; 96   : 
; 97   :         enc = AMF_EncodeString(enc, pend, &av_onMetaData);

	push	OFFSET _av_onMetaData
	mov	edx, DWORD PTR _pend$[ebp]
	mov	ecx, DWORD PTR _enc$[ebp]
	call	_AMF_EncodeString
	add	esp, 4
	mov	DWORD PTR _enc$[ebp], eax

; 98   :         char *endMetaData  = App->EncMetaData(enc, pend, true);

	push	1
	mov	ecx, DWORD PTR _pend$[ebp]
	push	ecx
	mov	edx, DWORD PTR _enc$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EncMetaData@OBS@@QAEPADPAD0_N@Z	; OBS::EncMetaData
	mov	DWORD PTR _endMetaData$[ebp], eax

; 99   :         UINT  metaDataSize = endMetaData-metaDataBuffer;

	mov	eax, DWORD PTR _endMetaData$[ebp]
	lea	ecx, DWORD PTR _metaDataBuffer$[ebp]
	sub	eax, ecx
	mov	DWORD PTR _metaDataSize$[ebp], eax

; 100  : 
; 101  :         AppendFLVPacket((LPBYTE)metaDataBuffer, metaDataSize, 18, 0);

	push	0
	push	18					; 00000012H
	mov	edx, DWORD PTR _metaDataSize$[ebp]
	push	edx
	lea	eax, DWORD PTR _metaDataBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z ; FLVFileStream::AppendFLVPacket

; 102  :         return true;

	mov	al, 1
$LN2@Init:

; 103  :     }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@FLVFileStream@@QAE_NPB_W@Z ENDP			; FLVFileStream::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\flvfilestream.cpp
;	COMDAT ??1FLVFileStream@@UAE@XZ
_TEXT	SEGMENT
_file$ = -64						; size = 24
_doubleFileSize$1 = -40					; size = 8
_doubleDuration$2 = -32					; size = 8
_fileSize$ = -24					; size = 8
_outputVal$3 = -16					; size = 8
tv186 = -8						; size = 4
_this$ = -4						; size = 4
??1FLVFileStream@@UAE@XZ PROC				; FLVFileStream::~FLVFileStream, COMDAT
; _this$ = ecx

; 106  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FLVFileStream@@6B@

; 107  :         UINT64 fileSize = fileOut.GetPos();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	mov	DWORD PTR _fileSize$[ebp], eax
	mov	DWORD PTR _fileSize$[ebp+4], edx

; 108  :         fileOut.Close();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Close@XFileOutputSerializer@@QAEXXZ	; XFileOutputSerializer::Close

; 109  : 
; 110  :         XFile file;

	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_??0XFile@@QAE@XZ

; 111  :         if(file.Open(strFile, XFILE_WRITE, XFILE_OPENEXISTING))

	push	3
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?Open@XFile@@QAEHPB_WKK@Z
	test	eax, eax
	je	$LN1@FLVFileStr

; 112  :         {
; 113  :             double doubleFileSize = double(fileSize);

	mov	edx, DWORD PTR _fileSize$[ebp+4]
	mov	ecx, DWORD PTR _fileSize$[ebp]
	call	__ultod3
	movsd	QWORD PTR _doubleFileSize$1[ebp], xmm0

; 114  :             double doubleDuration = double(lastTimeStamp/1000);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	DWORD PTR tv186[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv186[ebp]
	mov	edx, DWORD PTR tv186[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR _doubleDuration$2[ebp], xmm0

; 115  : 
; 116  :             file.SetPos(metaDataPos+0x28, XFILE_BEGIN);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	add	ecx, 40					; 00000028H
	mov	edx, DWORD PTR [eax+76]
	adc	edx, 0
	push	edx
	push	ecx
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?SetPos@XFile@@QAE_K_JK@Z

; 117  :             QWORD outputVal = *reinterpret_cast<QWORD*>(&doubleDuration);

	mov	eax, DWORD PTR _doubleDuration$2[ebp]
	mov	DWORD PTR _outputVal$3[ebp], eax
	mov	ecx, DWORD PTR _doubleDuration$2[ebp+4]
	mov	DWORD PTR _outputVal$3[ebp+4], ecx

; 118  :             outputVal = fastHtonll(outputVal);

	mov	edx, DWORD PTR _outputVal$3[ebp+4]
	push	edx
	mov	eax, DWORD PTR _outputVal$3[ebp]
	push	eax
	call	?fastHtonll@@YA_K_K@Z			; fastHtonll
	add	esp, 8
	mov	DWORD PTR _outputVal$3[ebp], eax
	mov	DWORD PTR _outputVal$3[ebp+4], edx

; 119  :             file.Write(&outputVal, 8);

	push	8
	lea	ecx, DWORD PTR _outputVal$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?Write@XFile@@QAEKPBXK@Z

; 120  : 
; 121  :             file.SetPos(metaDataPos+0x3B, XFILE_BEGIN);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	add	eax, 59					; 0000003bH
	mov	ecx, DWORD PTR [edx+76]
	adc	ecx, 0
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?SetPos@XFile@@QAE_K_JK@Z

; 122  :             outputVal = *reinterpret_cast<QWORD*>(&doubleFileSize);

	mov	edx, DWORD PTR _doubleFileSize$1[ebp]
	mov	DWORD PTR _outputVal$3[ebp], edx
	mov	eax, DWORD PTR _doubleFileSize$1[ebp+4]
	mov	DWORD PTR _outputVal$3[ebp+4], eax

; 123  :             outputVal = fastHtonll(outputVal);

	mov	ecx, DWORD PTR _outputVal$3[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _outputVal$3[ebp]
	push	edx
	call	?fastHtonll@@YA_K_K@Z			; fastHtonll
	add	esp, 8
	mov	DWORD PTR _outputVal$3[ebp], eax
	mov	DWORD PTR _outputVal$3[ebp+4], edx

; 124  :             file.Write(&outputVal, 8);

	push	8
	lea	eax, DWORD PTR _outputVal$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?Write@XFile@@QAEKPBXK@Z

; 125  : 
; 126  :             file.Close();

	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?Close@XFile@@QAEXXZ
$LN1@FLVFileStr:

; 127  :         }
; 128  :     }

	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	??1BufferedDataPacket@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??1BufferedDataPacket@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1BufferedDataPacket@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1XFileOutputSerializer@@UAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VideoFileStream@@UAE@XZ		; VideoFileStream::~VideoFileStream
	mov	esp, ebp
	pop	ebp
	ret	0
??1FLVFileStream@@UAE@XZ ENDP				; FLVFileStream::~FLVFileStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\flvfilestream.cpp
;	COMDAT ?InitBufferedPackets@FLVFileStream@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitBufferedPackets@FLVFileStream@@QAEXXZ PROC		; FLVFileStream::InitBufferedPackets, COMDAT
; _this$ = ecx

; 131  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 132  :         sei.InitBuffer();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?InitBuffer@BufferedDataPacket@@QAEXXZ	; BufferedDataPacket::InitBuffer

; 133  :         audioHeaders.InitBuffer();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	?InitBuffer@BufferedDataPacket@@QAEXXZ	; BufferedDataPacket::InitBuffer

; 134  :         videoHeaders.InitBuffer();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	?InitBuffer@BufferedDataPacket@@QAEXXZ	; BufferedDataPacket::InitBuffer

; 135  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?InitBufferedPackets@FLVFileStream@@QAEXXZ ENDP		; FLVFileStream::InitBufferedPackets
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\flvfilestream.cpp
;	COMDAT ?AddPacket@FLVFileStream@@UAEXPBEIKKW4PacketType@@@Z
_TEXT	SEGMENT
tv153 = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_timestamp$ = 16					; size = 4
___formal$ = 20						; size = 4
_type$ = 24						; size = 4
?AddPacket@FLVFileStream@@UAEXPBEIKKW4PacketType@@@Z PROC ; FLVFileStream::AddPacket, COMDAT
; _this$ = ecx

; 138  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 139  :         InitBufferedPackets();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitBufferedPackets@FLVFileStream@@QAEXXZ ; FLVFileStream::InitBufferedPackets

; 140  : 
; 141  :         if(!bSentFirstPacket)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+232]
	test	ecx, ecx
	jne	SHORT $LN4@AddPacket

; 142  :         {
; 143  :             bSentFirstPacket = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+232], 1

; 144  : 
; 145  :             AppendFLVPacket(audioHeaders.lpPacket, audioHeaders.size, 8, 0);

	push	0
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z ; FLVFileStream::AppendFLVPacket

; 146  :             AppendFLVPacket(videoHeaders.lpPacket, videoHeaders.size, 9, 0);

	push	0
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z ; FLVFileStream::AppendFLVPacket
$LN4@AddPacket:

; 147  :         }
; 148  : 
; 149  :         if(initialTimestamp == -1 && data[0] != 0x17)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+84], -1
	jne	SHORT $LN3@AddPacket
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 23					; 00000017H
	je	SHORT $LN3@AddPacket

; 150  :             return;

	jmp	SHORT $LN5@AddPacket
	jmp	SHORT $LN2@AddPacket
$LN3@AddPacket:

; 151  :         else if(initialTimestamp == -1 && data[0] == 0x17) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+84], -1
	jne	SHORT $LN2@AddPacket
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 23					; 00000017H
	jne	SHORT $LN2@AddPacket

; 152  :             initialTimestamp = timestamp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timestamp$[ebp]
	mov	DWORD PTR [eax+84], ecx
$LN2@AddPacket:

; 153  :         }
; 154  : 
; 155  :         AppendFLVPacket(data, size, (type == PacketType_Audio) ? 8 : 9, timestamp-initialTimestamp);

	cmp	DWORD PTR _type$[ebp], 4
	jne	SHORT $LN7@AddPacket
	mov	DWORD PTR tv153[ebp], 8
	jmp	SHORT $LN8@AddPacket
$LN7@AddPacket:
	mov	DWORD PTR tv153[ebp], 9
$LN8@AddPacket:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _timestamp$[ebp]
	sub	eax, DWORD PTR [edx+84]
	push	eax
	movzx	ecx, BYTE PTR tv153[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AppendFLVPacket@FLVFileStream@@AAEXPBEIEK@Z ; FLVFileStream::AppendFLVPacket
$LN5@AddPacket:

; 156  :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddPacket@FLVFileStream@@UAEXPBEIKKW4PacketType@@@Z ENDP ; FLVFileStream::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GFLVFileStream@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFLVFileStream@@UAEPAXI@Z PROC			; FLVFileStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FLVFileStream@@UAE@XZ		; FLVFileStream::~FLVFileStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFLVFileStream@@UAEPAXI@Z ENDP			; FLVFileStream::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\flvfilestream.cpp
;	COMDAT ?CreateFLVFileStream@@YAPAVVideoFileStream@@PB_W@Z
_TEXT	SEGMENT
tv89 = -24						; size = 4
$T1 = -20						; size = 4
tv69 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_fileStream$ = -4					; size = 4
_lpFile$ = 8						; size = 4
?CreateFLVFileStream@@YAPAVVideoFileStream@@PB_W@Z PROC	; CreateFLVFileStream, COMDAT

; 161  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 162  :     FLVFileStream *fileStream = new FLVFileStream;

	push	240					; 000000f0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@CreateFLVF
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0FLVFileStream@@QAE@XZ
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN5@CreateFLVF
$LN4@CreateFLVF:
	mov	DWORD PTR tv69[ebp], 0
$LN5@CreateFLVF:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _fileStream$[ebp], eax

; 163  :     if(fileStream->Init(lpFile))

	mov	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fileStream$[ebp]
	call	?Init@FLVFileStream@@QAE_NPB_W@Z	; FLVFileStream::Init
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@CreateFLVF

; 164  :         return fileStream;

	mov	eax, DWORD PTR _fileStream$[ebp]
	jmp	SHORT $LN2@CreateFLVF
$LN1@CreateFLVF:

; 165  : 
; 166  :     delete fileStream;

	mov	eax, DWORD PTR _fileStream$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@CreateFLVF
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN7@CreateFLVF
$LN6@CreateFLVF:
	mov	DWORD PTR tv89[ebp], 0
$LN7@CreateFLVF:

; 167  :     return NULL;

	xor	eax, eax
$LN2@CreateFLVF:

; 168  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CreateFLVFileStream@@YAPAVVideoFileStream@@PB_W@Z ENDP	; CreateFLVFileStream
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0FLVFileStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0FLVFileStream@@QAE@XZ PROC				; FLVFileStream::FLVFileStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VideoFileStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FLVFileStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0XFileOutputSerializer@@QAE@XZ	; XFileOutputSerializer::XFileOutputSerializer
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	push	ecx
	call	?GetBufferedSEIPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedSEIPacket
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 136				; 00000088H
	push	edx
	call	?GetBufferedAudioHeadersPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedAudioHeadersPacket
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 184				; 000000b8H
	push	eax
	call	?GetBufferedVideoHeadersPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedVideoHeadersPacket
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0FLVFileStream@@QAE@XZ ENDP				; FLVFileStream::FLVFileStream
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0VideoFileStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VideoFileStream@@QAE@XZ PROC				; VideoFileStream::VideoFileStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ClosableStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VideoFileStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VideoFileStream@@QAE@XZ ENDP				; VideoFileStream::VideoFileStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ PROC ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 609  : 		{	// release resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 610  : 		this->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Decref

; 611  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ENDP ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??C?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@1@XZ PROC ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator->, COMDAT
; _this$ = ecx

; 675  : 		{	// return pointer to resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 676  : 		return (this->_Get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Get

; 677  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@1@XZ ENDP ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 944  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::size, COMDAT
; _this$ = ecx

; 1147 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?data@?$vector@EV?$allocator@E@std@@@std@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@?$vector@EV?$allocator@E@std@@@std@@QAEPAEXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::data, COMDAT
; _this$ = ecx

; 1213 : 		{	// return address of first element

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1214 : 		return (this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1215 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$vector@EV?$allocator@E@std@@@std@@QAEPAEXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?data@?$vector@EV?$allocator@E@std@@@std@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@?$vector@EV?$allocator@E@std@@@std@@QBEPBEXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::data, COMDAT
; _this$ = ecx

; 1218 : 		{	// return address of first element

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1219 : 		return (this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1220 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?data@?$vector@EV?$allocator@E@std@@@std@@QBEPBEXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@XZ PROC	; std::function<void __cdecl(DataPacket &)>::~function<void __cdecl(DataPacket &)>, COMDAT
; _this$ = ecx

; 628  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 629  : 		this->_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Func_class@XAAUDataPacket@@@std@@IAEXXZ ; std::_Func_class<void,DataPacket &>::_Tidy

; 630  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ ; std::_Func_class<void,DataPacket &>::~_Func_class<void,DataPacket &>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@XZ ENDP	; std::function<void __cdecl(DataPacket &)>::~function<void __cdecl(DataPacket &)>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??B?$function@$$A6AXAAUDataPacket@@@Z@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv72 = -4						; size = 4
??B?$function@$$A6AXAAUDataPacket@@@Z@std@@QBE_NXZ PROC	; std::function<void __cdecl(DataPacket &)>::operator bool, COMDAT
; _this$ = ecx

; 729  : 		{	// test if wrapper holds null function pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 730  : 		return (!this->_Empty());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Empty@?$_Func_class@XAAUDataPacket@@@std@@QBE_NXZ ; std::_Func_class<void,DataPacket &>::_Empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv72[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv72[ebp]

; 731  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$function@$$A6AXAAUDataPacket@@@Z@std@@QBE_NXZ ENDP	; std::function<void __cdecl(DataPacket &)>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??R?$_Func_class@XAAUDataPacket@@@std@@QBEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??R?$_Func_class@XAAUDataPacket@@@std@@QBEXAAUDataPacket@@@Z PROC ; std::_Func_class<void,DataPacket &>::operator(), COMDAT
; _this$ = ecx

; 312  : 		{	// call through stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 		if (_Impl == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@operator

; 314  : 			_Xbad_function_call();

	call	?_Xbad_function_call@std@@YAXXZ		; std::_Xbad_function_call
$LN1@operator:

; 315  : 		return (_Impl->_Do_call(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN3@operator:

; 316  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$_Func_class@XAAUDataPacket@@@std@@QBEXAAUDataPacket@@@Z ENDP ; std::_Func_class<void,DataPacket &>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Get@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Get, COMDAT
; _this$ = ecx

; 331  : 		{	// return pointer to resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 332  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 333  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Decref@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXXZ PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Decref, COMDAT
; _this$ = ecx

; 341  : 		{	// decrement reference count

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 342  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Decref

; 343  : 			_Rep->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN2@Decref:

; 344  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXXZ ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy, COMDAT
; _this$ = ecx

; 1622 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1623 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1624 : 			{	// something to free, destroy and deallocate it
; 1625 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1626 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy

; 1627 : 			this->_Getal().deallocate(this->_Myfirst,
; 1628 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate

; 1629 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1630 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1631 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1632 : 			}
; 1633 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Empty@?$_Func_class@XAAUDataPacket@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?_Empty@?$_Func_class@XAAUDataPacket@@@std@@QBE_NXZ PROC ; std::_Func_class<void,DataPacket &>::_Empty, COMDAT
; _this$ = ecx

; 319  : 		{	// return true if no stored object

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 		return (_Impl == 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@Empty
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Empty
$LN3@Empty:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Empty:
	mov	al, BYTE PTR tv66[ebp]

; 321  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Empty@?$_Func_class@XAAUDataPacket@@@std@@QBE_NXZ ENDP ; std::_Func_class<void,DataPacket &>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ PROC	; std::_Func_class<void,DataPacket &>::~_Func_class<void,DataPacket &>, COMDAT
; _this$ = ecx

; 324  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 325  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Func_class@XAAUDataPacket@@@std@@IAEXXZ ; std::_Func_class<void,DataPacket &>::_Tidy

; 326  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ ENDP	; std::_Func_class<void,DataPacket &>::~_Func_class<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Tidy@?$_Func_class@XAAUDataPacket@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv77 = -1						; size = 1
?_Tidy@?$_Func_class@XAAUDataPacket@@@std@@IAEXXZ PROC	; std::_Func_class<void,DataPacket &>::_Tidy, COMDAT
; _this$ = ecx

; 446  : 		{	// clean up

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 447  : 		if (_Impl != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@Tidy

; 448  : 			{	// destroy callable object and maybe delete it
; 449  : 			_Impl->_Delete_this(!_Local());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Local@?$_Func_class@XAAUDataPacket@@@std@@ABE_NXZ ; std::_Func_class<void,DataPacket &>::_Local
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Tidy
	mov	BYTE PTR tv77[ebp], 1
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	BYTE PTR tv77[ebp], 0
$LN5@Tidy:
	movzx	edx, BYTE PTR tv77[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR [eax+16]
	call	edx

; 450  : 			_Impl = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN2@Tidy:

; 451  : 			}
; 452  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Func_class@XAAUDataPacket@@@std@@IAEXXZ ENDP	; std::_Func_class<void,DataPacket &>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ PROC	; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@XAAUDataPacket@@@std@@6B@

; 152  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ENDP	; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_base@XAAUDataPacket@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_base@XAAUDataPacket@@@std@@UAEPAXI@Z PROC	; std::_Func_base<void,DataPacket &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_base@XAAUDataPacket@@@std@@UAEPAXI@Z ENDP	; std::_Func_base<void,DataPacket &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy, COMDAT
; _this$ = ecx

; 1565 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1566 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal

; 1567 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 12					; 0000000cH

; 1568 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal, COMDAT
; _this$ = ecx

; 641  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 643  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@E@std@@QAEXPAEI@Z ; std::allocator<unsigned char>::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Local@?$_Func_class@XAAUDataPacket@@@std@@ABE_NXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?_Local@?$_Func_class@XAAUDataPacket@@@std@@ABE_NXZ PROC ; std::_Func_class<void,DataPacket &>::_Local, COMDAT
; _this$ = ecx

; 515  : 		{	// test for locally stored copy of object

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 516  : 		return ((void *)_Impl == (void *)&_Space);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jne	SHORT $LN3@Local
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@Local
$LN3@Local:
	mov	DWORD PTR tv67[ebp], 0
$LN4@Local:
	mov	al, BYTE PTR tv67[ebp]

; 517  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Local@?$_Func_class@XAAUDataPacket@@@std@@ABE_NXZ ENDP ; std::_Func_class<void,DataPacket &>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@E@std@@QAEXPAEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@E@std@@QAEXPAEI@Z PROC		; std::allocator<unsigned char>::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@E@std@@QAEXPAEI@Z ENDP		; std::allocator<unsigned char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@E@std@@QAE@XZ		; std::allocator<unsigned char>::allocator<unsigned char>

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<unsigned char> >::_Wrap_alloc<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@E@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@E@std@@QAE@XZ PROC			; std::allocator<unsigned char>::allocator<unsigned char>, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@E@std@@QAE@XZ ENDP			; std::allocator<unsigned char>::allocator<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *>, COMDAT
; _this$ = ecx

; 1287 : 		typename enable_if<_Is_iterator<_Iter>::value,

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1288 : 			void>::type
; 1289 : 		assign(_Iter _First, _Iter _Last)
; 1290 : 		{	// assign [_First, _Last)
; 1291 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::clear

; 1292 : 		_Assign(_First, _Last, _Iter_cat(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAE@std@@YA?AUrandom_access_iterator_tag@0@ABQAE@Z ; std::_Iter_cat<unsigned char *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR $T2[ebp], dl
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0Uforward_iterator_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign<unsigned char *>

; 1293 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@BufferedDataPacket@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@BufferedDataPacket@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z PROC ; BufferedDataPacket::BufferedDataPacket<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >, COMDAT
; _this$ = ecx

; 28   :     BufferedDataPacket(Func &&func) : DataPacket(), func(std::forward<Func>(func)) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _func$[ebp]
	push	edx
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@BufferedDataPacket@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ENDP ; BufferedDataPacket::BufferedDataPacket<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@BufferedDataPacket@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@BufferedDataPacket@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z PROC ; BufferedDataPacket::BufferedDataPacket<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >, COMDAT
; _this$ = ecx

; 28   :     BufferedDataPacket(Func &&func) : DataPacket(), func(std::forward<Func>(func)) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _func$[ebp]
	push	edx
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@BufferedDataPacket@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ENDP ; BufferedDataPacket::BufferedDataPacket<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@BufferedDataPacket@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@BufferedDataPacket@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z PROC ; BufferedDataPacket::BufferedDataPacket<<lambda_d4dbafb656cab653d44011aca1f5ff94> >, COMDAT
; _this$ = ecx

; 28   :     BufferedDataPacket(Func &&func) : DataPacket(), func(std::forward<Func>(func)) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _func$[ebp]
	push	edx
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@BufferedDataPacket@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ENDP ; BufferedDataPacket::BufferedDataPacket<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z PROC ; std::forward<DataPacket &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ENDP ; std::forward<DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAE0@Z ; std::_Ptr_cat<unsigned char,unsigned char>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 680  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@E@std@@QAE@XZ		; std::allocator<unsigned char>::allocator<unsigned char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@ABV?$allocator@E@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >

; 681  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::clear, COMDAT
; _this$ = ecx

; 1507 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1508 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1509 : 		_Destroy(this->_Myfirst, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy

; 1510 : 		this->_Mylast = this->_Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax

; 1511 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@EV?$allocator@E@std@@@std@@QAEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@ABV?$allocator@E@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@ABV?$allocator@E@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >, COMDAT
; _this$ = ecx

; 588  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >

; 589  : 		{	// construct allocator from _Al
; 590  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@ABV?$allocator@E@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >, COMDAT
; _this$ = ecx

; 480  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 481  : 		{	// initialize values
; 482  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 483  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 484  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 485  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
__Newcapacity$1 = -12					; size = 4
__Newsize$ = -8						; size = 4
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0Uforward_iterator_tag@1@@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign<unsigned char *>, COMDAT
; _this$ = ecx

; 1303 : 		void _Assign(_Iter _First, _Iter _Last, forward_iterator_tag)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1304 : 		{	// assign [_First, _Last), forward iterators
; 1305 : 		if (_First == _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN2@Assign

; 1306 : 			return;	// nothing to do

	jmp	SHORT $LN3@Assign
$LN2@Assign:

; 1307 : 
; 1308 : 		size_type _Newsize = _STD distance(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$distance@PAE@std@@YAHPAE0@Z		; std::distance<unsigned char *>
	add	esp, 8
	mov	DWORD PTR __Newsize$[ebp], eax

; 1309 : 
; 1310 : 		if (capacity() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN1@Assign

; 1311 : 			{	// need more room, try to get it
; 1312 : 			size_type _Newcapacity = _Grow_to(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@EV?$allocator@E@std@@@std@@IBEII@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Grow_to
	mov	DWORD PTR __Newcapacity$1[ebp], eax

; 1313 : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 1314 : 			_Buy(_Newcapacity);

	mov	ecx, DWORD PTR __Newcapacity$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
$LN1@Assign:

; 1315 : 			}
; 1316 : 
; 1317 : 		this->_Mylast = _Ucopy(_First, _Last, this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Assign:

; 1318 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Assign@PAE@?$vector@EV?$allocator@E@std@@@std@@QAEXPAE0Uforward_iterator_tag@1@@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z PROC ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ENDP ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z PROC ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ ; std::_Func_class<void,DataPacket &>::_Func_class<void,DataPacket &>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ENDP ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z PROC ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ENDP ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z PROC ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ ; std::_Func_class<void,DataPacket &>::_Func_class<void,DataPacket &>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ENDP ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z PROC ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ENDP ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z PROC ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_d4dbafb656cab653d44011aca1f5ff94> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ ; std::_Func_class<void,DataPacket &>::_Func_class<void,DataPacket &>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_d4dbafb656cab653d44011aca1f5ff94> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$function@$$A6AXAAUDataPacket@@@Z@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ENDP ; std::function<void __cdecl(DataPacket &)>::function<void __cdecl(DataPacket &)><<lambda_d4dbafb656cab653d44011aca1f5ff94> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAE0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAE0@Z PROC ; std::_Ptr_cat<unsigned char,unsigned char>, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAE0@Z ENDP ; std::_Ptr_cat<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 89   : 	{	// destroy [_First, _Last), scalar type (do nothing)

	push	ebp
	mov	ebp, esp

; 90   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity, COMDAT
; _this$ = ecx

; 1009 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1010 : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]

; 1011 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Capacity$ = 8						; size = 4
?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy, COMDAT
; _this$ = ecx

; 1546 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1547 : 		this->_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1548 : 		this->_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 1549 : 		this->_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1550 : 
; 1551 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy

; 1552 : 			return (false);

	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1553 : 		else if (max_size() < _Capacity)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy

; 1554 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen

; 1555 : 		else

	jmp	SHORT $LN3@Buy
$LN2@Buy:

; 1556 : 			{	// nonempty array, allocate storage
; 1557 : 			this->_Myfirst = this->_Getal().allocate(_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 1558 : 			this->_Mylast = this->_Myfirst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 1559 : 			this->_Myend = this->_Myfirst + _Capacity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR __Capacity$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN3@Buy:

; 1560 : 			}
; 1561 : 		return (true);

	mov	al, 1
$LN6@Buy:

; 1562 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@EV?$allocator@E@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@EV?$allocator@E@std@@@std@@IBEII@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Grow_to, COMDAT
; _this$ = ecx

; 1571 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1573 : 
; 1574 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1575 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1576 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1577 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1578 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1579 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@EV?$allocator@E@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ PROC	; std::_Func_class<void,DataPacket &>::_Func_class<void,DataPacket &>, COMDAT
; _this$ = ecx

; 308  : 		{	// construct without stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 309  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Func_class@XAAUDataPacket@@@std@@QAE@XZ ENDP	; std::_Func_class<void,DataPacket &>::_Func_class<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size, COMDAT
; _this$ = ecx

; 1152 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1153 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size

; 1154 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen, COMDAT
; _this$ = ecx

; 1753 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1755 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@E@std@@QAEPAEI@Z	; std::allocator<unsigned char>::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEPAEI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@E@std@@QAEPAEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@E@std@@QAEPAEI@Z PROC		; std::allocator<unsigned char>::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@E@std@@YAPAEIPAE@Z		; std::_Allocate<unsigned char>
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@E@std@@QAEPAEI@Z ENDP		; std::allocator<unsigned char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z ; std::allocator_traits<std::allocator<unsigned char> >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z PROC ; std::allocator_traits<std::allocator<unsigned char> >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@E@std@@QBEIXZ	; std::allocator<unsigned char>::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@E@std@@@std@@SAIABV?$allocator@E@2@@Z ENDP ; std::allocator_traits<std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@E@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@E@std@@QBEIXZ PROC		; std::allocator<unsigned char>::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@E@std@@QBEIXZ ENDP		; std::allocator<unsigned char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$distance@PAE@std@@YAHPAE0@Z
_TEXT	SEGMENT
__Off$ = -8						; size = 4
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@PAE@std@@YAHPAE0@Z PROC			; std::distance<unsigned char *>, COMDAT

; 756  : 	{	// return distance between iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 757  : 	typename iterator_traits<_InIt>::difference_type _Off = 0;

	mov	DWORD PTR __Off$[ebp], 0

; 758  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAE@std@@YA?AUrandom_access_iterator_tag@0@ABQAE@Z ; std::_Iter_cat<unsigned char *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Distance2@PAEH@std@@YAXPAE0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<unsigned char *,int>
	add	esp, 16					; 00000010H

; 759  : 	return (_Off);

	mov	eax, DWORD PTR __Off$[ebp]

; 760  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@PAE@std@@YAHPAE0@Z ENDP			; std::distance<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>, COMDAT
; _this$ = ecx

; 1636 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		{	// copy initializing [_First, _Last), using allocator
; 1638 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal

; 1639 : 		return (_Uninitialized_copy(_First, _Last,
; 1640 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 16					; 00000010H

; 1641 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@PAE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPAE00@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z PROC ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z PROC ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z PROC ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_d4dbafb656cab653d44011aca1f5ff94> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Reset<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@E@std@@YAPAEIPAE@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@E@std@@YAPAEIPAE@Z PROC			; std::_Allocate<unsigned char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@E@std@@YAPAEIPAE@Z ENDP			; std::_Allocate<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 424  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 425  : 	return (_Rechecked(_Dest,
; 426  : 		_Uninit_copy(_Unchecked(_First), _Unchecked(_Last),
; 427  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	call	??$_Uninit_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninit_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z ; std::_Rechecked<unsigned char *,unsigned char *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 428  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninitialized_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@@?$_Func_class@XAAUDataPacket@@@std@@IAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Reset_alloc<<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_class<void,DataPacket &> >::allocator<std::_Func_class<void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninit_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 414  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 415  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 416  : 		_Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAE0@Z ; std::_Ptr_cat<unsigned char,unsigned char>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@EE@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<unsigned char,unsigned char>
	add	esp, 20					; 00000014H

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninit_copy<unsigned char *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ; std::_Func_class<void,DataPacket &>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ; std::_Func_class<void,DataPacket &>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,std::allocator<std::_Func_class<void,DataPacket &> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ; std::_Func_class<void,DataPacket &>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ; std::_Func_class<void,DataPacket &>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,std::allocator<std::_Func_class<void,DataPacket &> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ; std::_Func_class<void,DataPacket &>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ; std::_Func_class<void,DataPacket &>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@@?$_Func_class@XAAUDataPacket@@@std@@AAEX$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>,<lambda_d4dbafb656cab653d44011aca1f5ff94>,std::allocator<std::_Func_class<void,DataPacket &> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z PROC ; std::_Func_class<void,DataPacket &>::_Set, COMDAT
; _this$ = ecx

; 510  : 		{	// store pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 511  : 		_Impl = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 512  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Set@?$_Func_class@XAAUDataPacket@@@std@@AAEXPAV?$_Func_base@XAAUDataPacket@@@2@@Z ENDP ; std::_Func_class<void,DataPacket &>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_ApplyX<void,DataPacket &>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QBEABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_ApplyX<void,DataPacket &>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QBEABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_ApplyX<void,DataPacket &>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QBEABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ PROC	; std::_Func_base<void,DataPacket &>::_Func_base<void,DataPacket &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@XAAUDataPacket@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ ENDP	; std::_Func_base<void,DataPacket &>::_Func_base<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QBEABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QBEABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ PROC ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QBEABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ ENDP ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QBEABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QBEABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ PROC ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QBEABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ ENDP ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QBEABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QBEABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ PROC ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QBEABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ ENDP ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@EE@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@EE@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<unsigned char,unsigned char>, COMDAT

; 401  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 402  : 	_DEBUG_RANGE(_First, _Last);
; 403  : 	_DEBUG_POINTER(_Dest);
; 404  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 405  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 406  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR __Count$[ebp]

; 407  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@EE@std@@YAPAEPAE00AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z PROC ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ENDP ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z PROC ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ENDP ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z PROC ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ENDP ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> ><std::_Func_class<void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z PROC ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@AAV1@@Z ; std::forward<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@ABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ENDP ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEXAAUDataPacket@@@Z PROC ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_ApplyX<void,DataPacket &>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@QBEXAAUDataPacket@@@Z ; <lambda_cd69b1cb474472a5d89a516a0cbf3fb2>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEXAAUDataPacket@@@Z ENDP ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_ApplyX<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z PROC ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@AAV1@@Z ; std::forward<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@ABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ENDP ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEXAAUDataPacket@@@Z PROC ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_ApplyX<void,DataPacket &>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@QBEXAAUDataPacket@@@Z ; <lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEXAAUDataPacket@@@Z ENDP ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_ApplyX<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z PROC ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><<lambda_d4dbafb656cab653d44011aca1f5ff94> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@AAV1@@Z ; std::forward<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@ABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ENDP ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><<lambda_d4dbafb656cab653d44011aca1f5ff94> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEXAAUDataPacket@@@Z PROC ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_ApplyX<void,DataPacket &>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_d4dbafb656cab653d44011aca1f5ff94>@@QBEXAAUDataPacket@@@Z ; <lambda_d4dbafb656cab653d44011aca1f5ff94>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEXAAUDataPacket@@@Z ENDP ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_ApplyX<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0><std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0><std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0><std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@ABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@ABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z PROC ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAE@ABV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@Z ENDP ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ PROC ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@QAEAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@XZ ENDP ; std::_Callable_base<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@ABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@ABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z PROC ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAE@ABV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@Z ENDP ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ PROC ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@QAEAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@XZ ENDP ; std::_Callable_base<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@ABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@ABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z PROC ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAE@ABV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@Z ENDP ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ PROC ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@QAEAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@XZ ENDP ; std::_Callable_base<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@@std@@YA_NAAV<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@@std@@YA_NAAV<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@@std@@YA_NAAV<lambda_d4dbafb656cab653d44011aca1f5ff94>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_d4dbafb656cab653d44011aca1f5ff94> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_cd69b1cb474472a5d89a516a0cbf3fb2>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_2e7c61b5ac044cc1cd308a4c1c94ce4c>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_d4dbafb656cab653d44011aca1f5ff94>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_d4dbafb656cab653d44011aca1f5ff94>,0> &>
_TEXT	ENDS
END

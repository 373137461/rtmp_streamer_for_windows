; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\MP4FileStream.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BE@LCCIACOI@Video?5Media?5Handler?$AA@	; `string'
PUBLIC	??_C@_0L@OHPFIDIC@AVC?5Coding?$AA@		; `string'
PUBLIC	??_C@_0BE@CKNOAMLK@Sound?5Media?5Handler?$AA@	; `string'
PUBLIC	??_C@_0CC@FDGKDEH@Open?5Broadcaster?5Software?5v0?4657@ ; `string'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4MP4FileStream@@6B@				; MP4FileStream::`RTTI Complete Object Locator'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVMP4FileStream@@@8			; MP4FileStream `RTTI Type Descriptor'
PUBLIC	??_R0?AUSampleToChunk@@@8			; SampleToChunk `RTTI Type Descriptor'
PUBLIC	??_R3MP4FileStream@@8				; MP4FileStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@@8 ; <lambda_33571811cecb93afcaa4a8d7e18a5216> `RTTI Type Descriptor'
PUBLIC	??_R0?AV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@@8 ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820> `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
PUBLIC	??_R0?AUOffsetVal@@@8				; OffsetVal `RTTI Type Descriptor'
PUBLIC	??_7MP4FileStream@@6B@				; MP4FileStream::`vftable'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AUMP4AudioFrameInfo@@@8			; MP4AudioFrameInfo `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUMP4VideoFrameInfo@@@8			; MP4VideoFrameInfo `RTTI Type Descriptor'
PUBLIC	??_R2MP4FileStream@@8				; MP4FileStream::`RTTI Base Class Array'
PUBLIC	??_R0?AV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@@8 ; <lambda_1e86911a4923b6920ae63cad04c7d55e> `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@MP4FileStream@@8			; MP4FileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
EXTRN	__imp_?OutputQword@Serializer@@QAEAAV1@_K@Z:PROC
EXTRN	__imp_?GetPos@BufferOutputSerializer@@UBE_KXZ:PROC
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MP4FileStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MP4FileStream@@8 DD FLAT:??_R0?AVMP4FileStream@@@8 ; MP4FileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MP4FileStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb9'
	DB	'3afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'AAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@@8
data$r	SEGMENT
??_R0?AV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_1e86911a4923b6920ae63cad04c7d55e> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@', 00H
data$r	ENDS
;	COMDAT ??_R2MP4FileStream@@8
rdata$r	SEGMENT
??_R2MP4FileStream@@8 DD FLAT:??_R1A@?0A@EA@MP4FileStream@@8 ; MP4FileStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VideoFileStream@@8
	DD	FLAT:??_R1A@?0A@EA@ClosableStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUMP4VideoFrameInfo@@@8
data$r	SEGMENT
??_R0?AUMP4VideoFrameInfo@@@8 DD FLAT:??_7type_info@@6B@ ; MP4VideoFrameInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUMP4VideoFrameInfo@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b'
	DB	'6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'AAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AUMP4AudioFrameInfo@@@8
data$r	SEGMENT
??_R0?AUMP4AudioFrameInfo@@@8 DD FLAT:??_7type_info@@6B@ ; MP4AudioFrameInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUMP4AudioFrameInfo@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7MP4FileStream@@6B@
CONST	SEGMENT
??_7MP4FileStream@@6B@ DD FLAT:??_R4MP4FileStream@@6B@	; MP4FileStream::`vftable'
	DD	FLAT:??_EMP4FileStream@@UAEPAXI@Z
	DD	FLAT:?AddPacket@VideoFileStream@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
	DD	FLAT:?AddPacket@MP4FileStream@@UAEXPBEIKKW4PacketType@@@Z
CONST	ENDS
;	COMDAT ??_R0?AUOffsetVal@@@8
data$r	SEGMENT
??_R0?AUOffsetVal@@@8 DD FLAT:??_7type_info@@6B@	; OffsetVal `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUOffsetVal@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b52'
	DB	'8b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'AAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@@8
data$r	SEGMENT
??_R0?AV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@@8
data$r	SEGMENT
??_R0?AV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_33571811cecb93afcaa4a8d7e18a5216> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3MP4FileStream@@8
rdata$r	SEGMENT
??_R3MP4FileStream@@8 DD 00H				; MP4FileStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MP4FileStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSampleToChunk@@@8
data$r	SEGMENT
??_R0?AUSampleToChunk@@@8 DD FLAT:??_7type_info@@6B@	; SampleToChunk `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSampleToChunk@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVMP4FileStream@@@8
data$r	SEGMENT
??_R0?AVMP4FileStream@@@8 DD FLAT:??_7type_info@@6B@	; MP4FileStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMP4FileStream@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4MP4FileStream@@6B@
rdata$r	SEGMENT
??_R4MP4FileStream@@6B@ DD 00H				; MP4FileStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMP4FileStream@@@8
	DD	FLAT:??_R3MP4FileStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CC@FDGKDEH@Open?5Broadcaster?5Software?5v0?4657@
CONST	SEGMENT
??_C@_0CC@FDGKDEH@Open?5Broadcaster?5Software?5v0?4657@ DB 'Open Broadcas'
	DB	'ter Software v0.657b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CKNOAMLK@Sound?5Media?5Handler?$AA@
CONST	SEGMENT
??_C@_0BE@CKNOAMLK@Sound?5Media?5Handler?$AA@ DB 'Sound Media Handler', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OHPFIDIC@AVC?5Coding?$AA@
CONST	SEGMENT
??_C@_0L@OHPFIDIC@AVC?5Coding?$AA@ DB 'AVC Coding', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LCCIACOI@Video?5Media?5Handler?$AA@
CONST	SEGMENT
??_C@_0BE@LCCIACOI@Video?5Media?5Handler?$AA@ DB 'Video Media Handler', 00H ; `string'
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>
PUBLIC	?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEAAV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get
PUBLIC	?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEAAV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get
PUBLIC	?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEAAV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get
PUBLIC	??$?0U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_ApplyX<void,DataPacket &>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_ApplyX<void,DataPacket &>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_ApplyX<void,DataPacket &>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QBEABV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QBEABV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QBEABV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
PUBLIC	??$GetChunkInfo@UMP4VideoFrameInfo@@@MP4FileStream@@QAEXABUMP4VideoFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z ; MP4FileStream::GetChunkInfo<MP4VideoFrameInfo>
PUBLIC	??$GetChunkInfo@UMP4AudioFrameInfo@@@MP4FileStream@@QAEXABUMP4AudioFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z ; MP4FileStream::GetChunkInfo<MP4AudioFrameInfo>
PUBLIC	?Clear@?$List@UOffsetVal@@@@QAEXXZ		; List<OffsetVal>::Clear
PUBLIC	?Add@?$List@UOffsetVal@@@@QAEIABUOffsetVal@@@Z	; List<OffsetVal>::Add
PUBLIC	?Clear@?$List@USampleToChunk@@@@QAEXXZ		; List<SampleToChunk>::Clear
PUBLIC	?Add@?$List@USampleToChunk@@@@QAEIABUSampleToChunk@@@Z ; List<SampleToChunk>::Add
PUBLIC	?Clear@?$List@UMP4AudioFrameInfo@@@@QAEXXZ	; List<MP4AudioFrameInfo>::Clear
PUBLIC	?Add@?$List@UMP4AudioFrameInfo@@@@QAEIABUMP4AudioFrameInfo@@@Z ; List<MP4AudioFrameInfo>::Add
PUBLIC	?Clear@?$List@UMP4VideoFrameInfo@@@@QAEXXZ	; List<MP4VideoFrameInfo>::Clear
PUBLIC	?Add@?$List@UMP4VideoFrameInfo@@@@QAEIABUMP4VideoFrameInfo@@@Z ; List<MP4VideoFrameInfo>::Add
PUBLIC	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ	; List<OffsetVal>::Last
PUBLIC	??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z	; List<OffsetVal>::operator[]
PUBLIC	??6?$List@UOffsetVal@@@@QAEAAV0@ABUOffsetVal@@@Z ; List<OffsetVal>::operator<<
PUBLIC	?Num@?$List@UOffsetVal@@@@QBEIXZ		; List<OffsetVal>::Num
PUBLIC	??1?$List@UOffsetVal@@@@QAE@XZ			; List<OffsetVal>::~List<OffsetVal>
PUBLIC	??0?$List@UOffsetVal@@@@QAE@XZ			; List<OffsetVal>::List<OffsetVal>
PUBLIC	?Last@?$List@USampleToChunk@@@@QBEAAUSampleToChunk@@XZ ; List<SampleToChunk>::Last
PUBLIC	??A?$List@USampleToChunk@@@@QAEAAUSampleToChunk@@I@Z ; List<SampleToChunk>::operator[]
PUBLIC	??6?$List@USampleToChunk@@@@QAEAAV0@ABUSampleToChunk@@@Z ; List<SampleToChunk>::operator<<
PUBLIC	?Num@?$List@USampleToChunk@@@@QBEIXZ		; List<SampleToChunk>::Num
PUBLIC	??1?$List@USampleToChunk@@@@QAE@XZ		; List<SampleToChunk>::~List<SampleToChunk>
PUBLIC	??0?$List@USampleToChunk@@@@QAE@XZ		; List<SampleToChunk>::List<SampleToChunk>
PUBLIC	?Last@?$List@UMP4AudioFrameInfo@@@@QBEAAUMP4AudioFrameInfo@@XZ ; List<MP4AudioFrameInfo>::Last
PUBLIC	??A?$List@UMP4AudioFrameInfo@@@@QAEAAUMP4AudioFrameInfo@@I@Z ; List<MP4AudioFrameInfo>::operator[]
PUBLIC	??6?$List@UMP4AudioFrameInfo@@@@QAEAAV0@ABUMP4AudioFrameInfo@@@Z ; List<MP4AudioFrameInfo>::operator<<
PUBLIC	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ	; List<MP4AudioFrameInfo>::Num
PUBLIC	??1?$List@UMP4AudioFrameInfo@@@@QAE@XZ		; List<MP4AudioFrameInfo>::~List<MP4AudioFrameInfo>
PUBLIC	??0?$List@UMP4AudioFrameInfo@@@@QAE@XZ		; List<MP4AudioFrameInfo>::List<MP4AudioFrameInfo>
PUBLIC	?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ ; List<MP4VideoFrameInfo>::Last
PUBLIC	??A?$List@UMP4VideoFrameInfo@@@@QAEAAUMP4VideoFrameInfo@@I@Z ; List<MP4VideoFrameInfo>::operator[]
PUBLIC	??6?$List@UMP4VideoFrameInfo@@@@QAEAAV0@ABUMP4VideoFrameInfo@@@Z ; List<MP4VideoFrameInfo>::operator<<
PUBLIC	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ	; List<MP4VideoFrameInfo>::Num
PUBLIC	??1?$List@UMP4VideoFrameInfo@@@@QAE@XZ		; List<MP4VideoFrameInfo>::~List<MP4VideoFrameInfo>
PUBLIC	??0?$List@UMP4VideoFrameInfo@@@@QAE@XZ		; List<MP4VideoFrameInfo>::List<MP4VideoFrameInfo>
PUBLIC	?Last@?$List@_K@@QBEAA_KXZ			; List<unsigned __int64>::Last
PUBLIC	?Num@?$List@_K@@QBEIXZ				; List<unsigned __int64>::Num
PUBLIC	?Remove@?$List@I@@QAEXI@Z			; List<unsigned int>::Remove
PUBLIC	?Insert@?$List@I@@QAEXIABI@Z			; List<unsigned int>::Insert
PUBLIC	?Num@?$List@I@@QBEIXZ				; List<unsigned int>::Num
PUBLIC	??0MP4FileStream@@QAE@XZ			; MP4FileStream::MP4FileStream
PUBLIC	?CreateMP4FileStream@@YAPAVVideoFileStream@@PB_W@Z ; CreateMP4FileStream
PUBLIC	??_GMP4FileStream@@UAEPAXI@Z			; MP4FileStream::`scalar deleting destructor'
PUBLIC	?AddPacket@MP4FileStream@@UAEXPBEIKKW4PacketType@@@Z ; MP4FileStream::AddPacket
PUBLIC	??1MP4FileStream@@UAE@XZ			; MP4FileStream::~MP4FileStream
PUBLIC	?InitBufferedPackets@MP4FileStream@@QAEXXZ	; MP4FileStream::InitBufferedPackets
PUBLIC	?CopyMetadata@MP4FileStream@@QAEXXZ		; MP4FileStream::CopyMetadata
PUBLIC	?GetAudioDecodeTime@MP4FileStream@@QAEXAAUMP4AudioFrameInfo@@_N@Z ; MP4FileStream::GetAudioDecodeTime
PUBLIC	?GetVideoDecodeTime@MP4FileStream@@QAEXAAUMP4VideoFrameInfo@@_N@Z ; MP4FileStream::GetVideoDecodeTime
PUBLIC	?EndChunkInfo@MP4FileStream@@QAEXAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_KAAI@Z ; MP4FileStream::EndChunkInfo
PUBLIC	?Init@MP4FileStream@@QAE_NPB_W@Z		; MP4FileStream::Init
PUBLIC	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox
PUBLIC	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox
PUBLIC	?ConvertToAudioTime@@YA_KK_K@Z			; ConvertToAudioTime
PUBLIC	?GetMacTime@@YA_JXZ				; GetMacTime
PUBLIC	?GetAudioEncoder@OBS@@QBEPAVAudioEncoder@@XZ	; OBS::GetAudioEncoder
PUBLIC	?fastHtons@@YAGG@Z				; fastHtons
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`vector deleting destructor'
EXTRN	??_EMP4FileStream@@UAEPAXI@Z:PROC		; MP4FileStream::`vector deleting destructor'
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\time.inl
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 132  : {

	push	ebp
	mov	ebp, esp

; 133  :     return _time64(_Time);

	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	__time64
	add	esp, 4

; 134  : }

	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\obsapi.h
;	COMDAT ?fastHtons@@YAGG@Z
_TEXT	SEGMENT
_w$ = 8							; size = 2
?fastHtons@@YAGG@Z PROC					; fastHtons, COMDAT

; 67   : __forceinline  WORD fastHtons (WORD  w)  {return  WORD_BE(w);}

	push	ebp
	mov	ebp, esp
	movzx	eax, WORD PTR _w$[ebp]
	sar	eax, 8
	and	eax, 255				; 000000ffH
	movzx	ecx, WORD PTR _w$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	or	eax, ecx
	pop	ebp
	ret	0
?fastHtons@@YAGG@Z ENDP					; fastHtons
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ?GetAudioEncoder@OBS@@QBEPAVAudioEncoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAudioEncoder@OBS@@QBEPAVAudioEncoder@@XZ PROC	; OBS::GetAudioEncoder, COMDAT
; _this$ = ecx

; 1228 :     inline AudioEncoder* GetAudioEncoder() const {return audioEncoder;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAudioEncoder@OBS@@QBEPAVAudioEncoder@@XZ ENDP	; OBS::GetAudioEncoder
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??R<lambda_1e86911a4923b6920ae63cad04c7d55e>@@QBEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_encoder$ = -4						; size = 4
_p$ = 8							; size = 4
??R<lambda_1e86911a4923b6920ae63cad04c7d55e>@@QBEXAAUDataPacket@@@Z PROC ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::operator(), COMDAT
; _this$ = ecx

; 51   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_1e86911a4923b6920ae63cad04c7d55e>@@QBEXAAUDataPacket@@@Z ENDP ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_cdecl>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CAXAAUDataPacket@@@Z
_TEXT	SEGMENT
_encoder$ = -4						; size = 4
_p$ = 8							; size = 4
?<helper_func_cdecl>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CAXAAUDataPacket@@@Z PROC ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_cdecl>, COMDAT

; 51   :     {

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CAXAAUDataPacket@@@Z ENDP ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_stdcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CGXAAUDataPacket@@@Z
_TEXT	SEGMENT
_encoder$ = -4						; size = 4
_p$ = 8							; size = 4
?<helper_func_stdcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CGXAAUDataPacket@@@Z PROC ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_stdcall>, COMDAT

; 51   :     {

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CGXAAUDataPacket@@@Z ENDP ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_fastcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CIXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_encoder$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CIXAAUDataPacket@@@Z PROC ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_fastcall>, COMDAT
; _p$ = ecx

; 51   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _p$[ebp], ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CIXAAUDataPacket@@@Z ENDP ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_vectorcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CQXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_encoder$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CQXAAUDataPacket@@@Z PROC ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_vectorcall>, COMDAT
; _p$ = ecx

; 51   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _p$[ebp], ecx

; 52   :         VideoEncoder *encoder = App->GetVideoEncoder();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	mov	DWORD PTR _encoder$[ebp], eax

; 53   :         assert(encoder);
; 54   :         encoder->GetSEI(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 55   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_1e86911a4923b6920ae63cad04c7d55e>@@CQXAAUDataPacket@@@Z ENDP ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??R<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@QBEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??R<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@QBEXAAUDataPacket@@@Z PROC ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::operator(), COMDAT
; _this$ = ecx

; 61   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@QBEXAAUDataPacket@@@Z ENDP ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_cdecl>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CAXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_cdecl>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CAXAAUDataPacket@@@Z PROC ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_cdecl>, COMDAT

; 61   :     {

	push	ebp
	mov	ebp, esp

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CAXAAUDataPacket@@@Z ENDP ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_stdcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CGXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_stdcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CGXAAUDataPacket@@@Z PROC ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_stdcall>, COMDAT

; 61   :     {

	push	ebp
	mov	ebp, esp

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CGXAAUDataPacket@@@Z ENDP ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_fastcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CIXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CIXAAUDataPacket@@@Z PROC ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_fastcall>, COMDAT
; _p$ = ecx

; 61   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CIXAAUDataPacket@@@Z ENDP ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_vectorcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CQXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CQXAAUDataPacket@@@Z PROC ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_vectorcall>, COMDAT
; _p$ = ecx

; 61   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 62   :         App->GetAudioHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetAudioHeaders

; 63   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@CQXAAUDataPacket@@@Z ENDP ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ??R<lambda_33571811cecb93afcaa4a8d7e18a5216>@@QBEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??R<lambda_33571811cecb93afcaa4a8d7e18a5216>@@QBEXAAUDataPacket@@@Z PROC ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::operator(), COMDAT
; _this$ = ecx

; 69   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_33571811cecb93afcaa4a8d7e18a5216>@@QBEXAAUDataPacket@@@Z ENDP ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_cdecl>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CAXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_cdecl>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CAXAAUDataPacket@@@Z PROC ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_cdecl>, COMDAT

; 69   :     {

	push	ebp
	mov	ebp, esp

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CAXAAUDataPacket@@@Z ENDP ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_stdcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CGXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?<helper_func_stdcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CGXAAUDataPacket@@@Z PROC ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_stdcall>, COMDAT

; 69   :     {

	push	ebp
	mov	ebp, esp

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CGXAAUDataPacket@@@Z ENDP ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_fastcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CIXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CIXAAUDataPacket@@@Z PROC ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_fastcall>, COMDAT
; _p$ = ecx

; 69   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CIXAAUDataPacket@@@Z ENDP ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\datapackethelpers.h
;	COMDAT ?<helper_func_vectorcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CQXAAUDataPacket@@@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CQXAAUDataPacket@@@Z PROC ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_vectorcall>, COMDAT
; _p$ = ecx

; 69   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _p$[ebp], ecx

; 70   :         App->GetVideoHeaders(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoHeaders@OBS@@QAEXAAUDataPacket@@@Z ; OBS::GetVideoHeaders

; 71   :     };

	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_33571811cecb93afcaa4a8d7e18a5216>@@CQXAAUDataPacket@@@Z ENDP ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?GetMacTime@@YA_JXZ
_TEXT	SEGMENT
?GetMacTime@@YA_JXZ PROC				; GetMacTime, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp

; 28   :     return time(0)+2082844800;

	push	0
	call	_time
	add	esp, 4
	add	eax, 2082844800				; 7c25b080H
	adc	edx, 0

; 29   : }

	pop	ebp
	ret	0
?GetMacTime@@YA_JXZ ENDP				; GetMacTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?ConvertToAudioTime@@YA_KK_K@Z
_TEXT	SEGMENT
tv131 = -20						; size = 8
tv74 = -12						; size = 8
_val$ = -4						; size = 4
_timestamp$ = 8						; size = 4
_minVal$ = 12						; size = 8
?ConvertToAudioTime@@YA_KK_K@Z PROC			; ConvertToAudioTime, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi

; 62   :     UINT val = UINT64(timestamp)*App->GetSampleRateHz()/1000;

	mov	esi, DWORD PTR _timestamp$[ebp]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetSampleRateHz@OBS@@QBEIXZ		; OBS::GetSampleRateHz
	mov	ecx, eax
	mov	eax, esi
	mul	ecx
	push	0
	push	1000					; 000003e8H
	push	edx
	push	eax
	call	__aulldiv
	mov	DWORD PTR _val$[ebp], eax

; 63   :     return MAX(val, minVal);

	mov	edx, DWORD PTR _val$[ebp]
	xor	eax, eax
	mov	DWORD PTR tv131[ebp], edx
	mov	DWORD PTR tv131[ebp+4], eax
	mov	ecx, DWORD PTR tv131[ebp+4]
	cmp	ecx, DWORD PTR _minVal$[ebp+4]
	jb	SHORT $LN3@ConvertToA
	ja	SHORT $LN5@ConvertToA
	mov	edx, DWORD PTR tv131[ebp]
	cmp	edx, DWORD PTR _minVal$[ebp]
	jbe	SHORT $LN3@ConvertToA
$LN5@ConvertToA:
	mov	eax, DWORD PTR _val$[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv74[ebp], eax
	mov	DWORD PTR tv74[ebp+4], ecx
	jmp	SHORT $LN4@ConvertToA
$LN3@ConvertToA:
	mov	edx, DWORD PTR _minVal$[ebp]
	mov	DWORD PTR tv74[ebp], edx
	mov	eax, DWORD PTR _minVal$[ebp+4]
	mov	DWORD PTR tv74[ebp+4], eax
$LN4@ConvertToA:
	mov	eax, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR tv74[ebp+4]

; 64   : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertToAudioTime@@YA_KK_K@Z ENDP			; ConvertToAudioTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
_output$ = 8						; size = 4
_boxName$ = 12						; size = 4
?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z PROC ; MP4FileStream::PushBox, COMDAT
; _this$ = ecx

; 107  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 108  :         boxOffsets.Insert(0, (UINT)output.GetPos());

	mov	eax, DWORD PTR _output$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _output$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	?Insert@?$List@I@@QAEXIABI@Z		; List<unsigned int>::Insert

; 109  : 
; 110  :         output.OutputDword(0);

	push	0
	mov	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 111  :         output.OutputDword(boxName);

	mov	edx, DWORD PTR _boxName$[ebp]
	push	edx
	mov	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 112  :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ENDP ; MP4FileStream::PushBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z
_TEXT	SEGMENT
_boxSize$ = -8						; size = 4
_this$ = -4						; size = 4
_output$ = 8						; size = 4
?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z PROC ; MP4FileStream::PopBox, COMDAT
; _this$ = ecx

; 115  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 116  :         DWORD boxSize = (DWORD)output.GetPos()-boxOffsets[0];

	mov	eax, DWORD PTR _output$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _output$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	sub	esi, DWORD PTR [eax]
	mov	DWORD PTR _boxSize$[ebp], esi

; 117  :         *(DWORD*)(endBuffer.Array()+boxOffsets[0]) = fastHtonl(boxSize);

	mov	ecx, DWORD PTR _boxSize$[ebp]
	push	ecx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	mov	edi, eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??A?$List@I@@QAEAAII@Z			; List<unsigned int>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [edi+edx], esi

; 118  : 
; 119  :         boxOffsets.Remove(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	?Remove@?$List@I@@QAEXI@Z		; List<unsigned int>::Remove

; 120  :     }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ENDP ; MP4FileStream::PopBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?Init@MP4FileStream@@QAE_NPB_W@Z
_TEXT	SEGMENT
tv227 = -16						; size = 4
tv221 = -12						; size = 4
tv215 = -8						; size = 4
_this$ = -4						; size = 4
_lpFile$ = 8						; size = 4
?Init@MP4FileStream@@QAE_NPB_W@Z PROC			; MP4FileStream::Init, COMDAT
; _this$ = ecx

; 149  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 150  :         strFile = lpFile;

	mov	eax, DWORD PTR _lpFile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 151  : 
; 152  :         initialTimeStamp = -1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], -1

; 153  : 
; 154  :         if(!fileOut.Open(lpFile, XFILE_CREATEALWAYS, 1024*1024))

	push	1048576					; 00100000H
	push	2
	mov	edx, DWORD PTR _lpFile$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Open@XFileOutputSerializer@@QAEHPB_WKK@Z ; XFileOutputSerializer::Open
	test	eax, eax
	jne	SHORT $LN1@Init

; 155  :             return false;

	xor	al, al
	jmp	$LN2@Init
$LN1@Init:

; 156  : 
; 157  :         fileOut.OutputDword(DWORD_BE(0x20));

	push	536870912				; 20000000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 158  :         fileOut.OutputDword(DWORD_BE('ftyp'));

	push	1887007846				; 70797466H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 159  :         fileOut.OutputDword(DWORD_BE('isom'));

	push	1836020585				; 6d6f7369H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 160  :         fileOut.OutputDword(DWORD_BE(0x200));

	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 161  :         fileOut.OutputDword(DWORD_BE('isom'));

	push	1836020585				; 6d6f7369H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 162  :         fileOut.OutputDword(DWORD_BE('iso2'));

	push	846164841				; 326f7369H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 163  :         fileOut.OutputDword(DWORD_BE('avc1'));

	push	828601953				; 31637661H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 164  :         fileOut.OutputDword(DWORD_BE('mp41'));

	push	825520237				; 3134706dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 165  : 
; 166  :         fileOut.OutputDword(DWORD_BE(0x8));

	push	134217728				; 08000000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 167  :         fileOut.OutputDword(DWORD_BE('free'));

	push	1701147238				; 65657266H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 168  : 
; 169  :         mdatStart = fileOut.GetPos();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+240], eax
	mov	DWORD PTR [ecx+244], edx

; 170  :         fileOut.OutputDword(DWORD_BE(0x1));

	push	16777216				; 01000000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 171  :         fileOut.OutputDword(DWORD_BE('mdat'));

	push	1952539757				; 7461646dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 172  : #ifdef USE_64BIT_MP4
; 173  :         fileOut.OutputQword(0);

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputQword@Serializer@@QAEAAV1@_K@Z

; 174  : #endif
; 175  : 
; 176  :         bMP3 = scmp(App->GetAudioEncoder()->GetCodec(), TEXT("MP3")) == 0;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioEncoder@OBS@@QBEPAVAudioEncoder@@XZ ; OBS::GetAudioEncoder
	mov	DWORD PTR tv215[ebp], eax
	push	OFFSET ??_C@_17MGFFKIBC@?$AAM?$AAP?$AA3?$AA?$AA@
	mov	edx, DWORD PTR tv215[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv215[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN4@Init
	mov	DWORD PTR tv221[ebp], 1
	jmp	SHORT $LN5@Init
$LN4@Init:
	mov	DWORD PTR tv221[ebp], 0
$LN5@Init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR tv221[ebp]
	mov	BYTE PTR [eax+105], cl

; 177  : 
; 178  :         audioFrameSize = App->GetAudioEncoder()->GetFrameSize();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioEncoder@OBS@@QBEPAVAudioEncoder@@XZ ; OBS::GetAudioEncoder
	mov	DWORD PTR tv227[ebp], eax
	mov	edx, DWORD PTR tv227[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv227[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+208], eax
	mov	DWORD PTR [edx+212], ecx

; 179  : 
; 180  :         CopyMetadata();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyMetadata@MP4FileStream@@QAEXXZ	; MP4FileStream::CopyMetadata

; 181  : 
; 182  :         bStreamOpened = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+104], 1

; 183  : 
; 184  :         return true;

	mov	al, 1
$LN2@Init:

; 185  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Init@MP4FileStream@@QAE_NPB_W@Z ENDP			; MP4FileStream::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?EndChunkInfo@MP4FileStream@@QAEXAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_KAAI@Z
_TEXT	SEGMENT
_stc$1 = -12						; size = 8
_this$ = -4						; size = 4
_chunks$ = 8						; size = 4
_sampleToChunks$ = 12					; size = 4
_curChunkOffset$ = 16					; size = 4
_numSamples$ = 20					; size = 4
?EndChunkInfo@MP4FileStream@@QAEXAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_KAAI@Z PROC ; MP4FileStream::EndChunkInfo, COMDAT
; _this$ = ecx

; 217  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 218  :         chunks << curChunkOffset;

	mov	eax, DWORD PTR _curChunkOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _chunks$[ebp]
	call	??6?$List@_K@@QAEAAV0@AB_K@Z		; List<unsigned __int64>::operator<<

; 219  :         if(!sampleToChunks.Num() || sampleToChunks.Last().samplesPerChunk != numSamples)

	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	?Num@?$List@USampleToChunk@@@@QBEIXZ	; List<SampleToChunk>::Num
	test	eax, eax
	je	SHORT $LN1@EndChunkIn
	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	?Last@?$List@USampleToChunk@@@@QBEAAUSampleToChunk@@XZ ; List<SampleToChunk>::Last
	mov	ecx, DWORD PTR _numSamples$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN3@EndChunkIn
$LN1@EndChunkIn:

; 220  :         {
; 221  :             SampleToChunk stc;
; 222  :             stc.firstChunkID = chunks.Num();

	mov	ecx, DWORD PTR _chunks$[ebp]
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	mov	DWORD PTR _stc$1[ebp], eax

; 223  :             stc.samplesPerChunk = numSamples;

	mov	eax, DWORD PTR _numSamples$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _stc$1[ebp+4], ecx

; 224  :             sampleToChunks << stc;

	lea	edx, DWORD PTR _stc$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	??6?$List@USampleToChunk@@@@QAEAAV0@ABUSampleToChunk@@@Z ; List<SampleToChunk>::operator<<
$LN3@EndChunkIn:

; 225  :         }
; 226  :     }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EndChunkInfo@MP4FileStream@@QAEXAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_KAAI@Z ENDP ; MP4FileStream::EndChunkInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?GetVideoDecodeTime@MP4FileStream@@QAEXAAUMP4VideoFrameInfo@@_N@Z
_TEXT	SEGMENT
_newVal$1 = -36						; size = 8
_newVal$2 = -28						; size = 8
tv146 = -20						; size = 4
_compositionOffset$ = -16				; size = 4
tv92 = -12						; size = 4
_frameTime$ = -8					; size = 4
_this$ = -4						; size = 4
_videoFrame$ = 8					; size = 4
_bLast$ = 12						; size = 1
?GetVideoDecodeTime@MP4FileStream@@QAEXAAUMP4VideoFrameInfo@@_N@Z PROC ; MP4FileStream::GetVideoDecodeTime, COMDAT
; _this$ = ecx

; 229  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 230  :         UINT frameTime;
; 231  : 
; 232  :         if(bLast)

	movzx	eax, BYTE PTR _bLast$[ebp]
	test	eax, eax
	je	SHORT $LN8@GetVideoDe

; 233  :             frameTime = videoDecodeTimes.Last().val;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _frameTime$[ebp], ecx

; 234  :         else

	jmp	SHORT $LN7@GetVideoDe
$LN8@GetVideoDe:

; 235  :             frameTime = videoFrame.timestamp-videoFrames.Last().timestamp;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ ; List<MP4VideoFrameInfo>::Last
	mov	edx, DWORD PTR _videoFrame$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _frameTime$[ebp], ecx
$LN7@GetVideoDe:

; 236  : 
; 237  :         if(!videoDecodeTimes.Num() || videoDecodeTimes.Last().val != (UINT)frameTime)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	test	eax, eax
	je	SHORT $LN5@GetVideoDe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR _frameTime$[ebp]
	je	SHORT $LN6@GetVideoDe
$LN5@GetVideoDe:

; 238  :         {
; 239  :             OffsetVal newVal;
; 240  :             newVal.count = 1;

	mov	DWORD PTR _newVal$2[ebp], 1

; 241  :             newVal.val = (UINT)frameTime;

	mov	eax, DWORD PTR _frameTime$[ebp]
	mov	DWORD PTR _newVal$2[ebp+4], eax

; 242  :             videoDecodeTimes << newVal;

	lea	ecx, DWORD PTR _newVal$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??6?$List@UOffsetVal@@@@QAEAAV0@ABUOffsetVal@@@Z ; List<OffsetVal>::operator<<

; 243  :         }
; 244  :         else

	jmp	SHORT $LN4@GetVideoDe
$LN6@GetVideoDe:

; 245  :             videoDecodeTimes.Last().count++;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	DWORD PTR tv92[ebp], eax
	mov	edx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@GetVideoDe:

; 246  : 
; 247  :         INT compositionOffset = videoFrames.Last().compositionOffset;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ ; List<MP4VideoFrameInfo>::Last
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR _compositionOffset$[ebp], edx

; 248  :         if(!compositionOffsets.Num() || compositionOffsets.Last().val != (UINT)compositionOffset)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	test	eax, eax
	je	SHORT $LN2@GetVideoDe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR _compositionOffset$[ebp]
	je	SHORT $LN3@GetVideoDe
$LN2@GetVideoDe:

; 249  :         {
; 250  :             OffsetVal newVal;
; 251  :             newVal.count = 1;

	mov	DWORD PTR _newVal$1[ebp], 1

; 252  :             newVal.val = (UINT)compositionOffset;

	mov	ecx, DWORD PTR _compositionOffset$[ebp]
	mov	DWORD PTR _newVal$1[ebp+4], ecx

; 253  :             compositionOffsets << newVal;

	lea	edx, DWORD PTR _newVal$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??6?$List@UOffsetVal@@@@QAEAAV0@ABUOffsetVal@@@Z ; List<OffsetVal>::operator<<

; 254  :         }
; 255  :         else

	jmp	SHORT $LN9@GetVideoDe
$LN3@GetVideoDe:

; 256  :             compositionOffsets.Last().count++;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	DWORD PTR tv146[ebp], eax
	mov	eax, DWORD PTR tv146[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv146[ebp]
	mov	DWORD PTR [edx], ecx
$LN9@GetVideoDe:

; 257  :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetVideoDecodeTime@MP4FileStream@@QAEXAAUMP4VideoFrameInfo@@_N@Z ENDP ; MP4FileStream::GetVideoDecodeTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?GetAudioDecodeTime@MP4FileStream@@QAEXAAUMP4AudioFrameInfo@@_N@Z
_TEXT	SEGMENT
_newVal$1 = -36						; size = 8
_convertedTime$2 = -28					; size = 8
_newTimeVal$3 = -20					; size = 8
tv140 = -12						; size = 4
_frameTime$ = -8					; size = 4
_this$ = -4						; size = 4
_audioFrame$ = 8					; size = 4
_bLast$ = 12						; size = 1
?GetAudioDecodeTime@MP4FileStream@@QAEXAAUMP4AudioFrameInfo@@_N@Z PROC ; MP4FileStream::GetAudioDecodeTime, COMDAT
; _this$ = ecx

; 260  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 261  :         UINT frameTime;
; 262  :         if(bLast)

	movzx	eax, BYTE PTR _bLast$[ebp]
	test	eax, eax
	je	SHORT $LN7@GetAudioDe

; 263  :             frameTime = audioDecodeTimes.Last().val;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _frameTime$[ebp], ecx

; 264  :         else

	jmp	$LN6@GetAudioDe
$LN7@GetAudioDe:

; 265  :         {
; 266  :             UINT64 newTimeVal = lastAudioTimeVal+audioFrameSize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	add	ecx, DWORD PTR [eax+208]
	mov	edx, DWORD PTR [edx+204]
	adc	edx, DWORD PTR [eax+212]
	mov	DWORD PTR _newTimeVal$3[ebp], ecx
	mov	DWORD PTR _newTimeVal$3[ebp+4], edx

; 267  :             if(audioFrames.Num() > 1)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ; List<MP4AudioFrameInfo>::Num
	cmp	eax, 1
	jbe	SHORT $LN5@GetAudioDe

; 268  :             {
; 269  :                 UINT64 convertedTime = ConvertToAudioTime(audioFrame.timestamp, audioFrameSize*audioFrames.Num());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ; List<MP4AudioFrameInfo>::Num
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	push	eax
	mov	eax, DWORD PTR [edx+212]
	push	eax
	mov	ecx, DWORD PTR [edx+208]
	push	ecx
	call	__allmul
	push	edx
	push	eax
	mov	edx, DWORD PTR _audioFrame$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	?ConvertToAudioTime@@YA_KK_K@Z		; ConvertToAudioTime
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _convertedTime$2[ebp], eax
	mov	DWORD PTR _convertedTime$2[ebp+4], edx

; 270  :                 if(convertedTime > newTimeVal)

	mov	ecx, DWORD PTR _convertedTime$2[ebp+4]
	cmp	ecx, DWORD PTR _newTimeVal$3[ebp+4]
	jb	SHORT $LN5@GetAudioDe
	ja	SHORT $LN10@GetAudioDe
	mov	edx, DWORD PTR _convertedTime$2[ebp]
	cmp	edx, DWORD PTR _newTimeVal$3[ebp]
	jbe	SHORT $LN5@GetAudioDe
$LN10@GetAudioDe:

; 271  :                     newTimeVal = convertedTime;

	mov	eax, DWORD PTR _convertedTime$2[ebp]
	mov	DWORD PTR _newTimeVal$3[ebp], eax
	mov	ecx, DWORD PTR _convertedTime$2[ebp+4]
	mov	DWORD PTR _newTimeVal$3[ebp+4], ecx
$LN5@GetAudioDe:

; 272  :             }
; 273  : 
; 274  :             frameTime = UINT(newTimeVal - lastAudioTimeVal);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newTimeVal$3[ebp]
	sub	eax, DWORD PTR [edx+200]
	mov	ecx, DWORD PTR _newTimeVal$3[ebp+4]
	sbb	ecx, DWORD PTR [edx+204]
	mov	DWORD PTR _frameTime$[ebp], eax

; 275  :             lastAudioTimeVal = newTimeVal;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newTimeVal$3[ebp]
	mov	DWORD PTR [edx+200], eax
	mov	ecx, DWORD PTR _newTimeVal$3[ebp+4]
	mov	DWORD PTR [edx+204], ecx
$LN6@GetAudioDe:

; 276  :         }
; 277  : 
; 278  :         if(!audioDecodeTimes.Num() || audioDecodeTimes.Last().val != (UINT)frameTime)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	test	eax, eax
	je	SHORT $LN2@GetAudioDe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR _frameTime$[ebp]
	je	SHORT $LN3@GetAudioDe
$LN2@GetAudioDe:

; 279  :         {
; 280  :             OffsetVal newVal;
; 281  :             newVal.count = 1;

	mov	DWORD PTR _newVal$1[ebp], 1

; 282  :             newVal.val = (UINT)frameTime;

	mov	eax, DWORD PTR _frameTime$[ebp]
	mov	DWORD PTR _newVal$1[ebp+4], eax

; 283  :             audioDecodeTimes << newVal;

	lea	ecx, DWORD PTR _newVal$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??6?$List@UOffsetVal@@@@QAEAAV0@ABUOffsetVal@@@Z ; List<OffsetVal>::operator<<

; 284  :         }
; 285  :         else

	jmp	SHORT $LN8@GetAudioDe
$LN3@GetAudioDe:

; 286  :             audioDecodeTimes.Last().count++;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ; List<OffsetVal>::Last
	mov	DWORD PTR tv140[ebp], eax
	mov	edx, DWORD PTR tv140[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR [ecx], eax
$LN8@GetAudioDe:

; 287  :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetAudioDecodeTime@MP4FileStream@@QAEXAAUMP4AudioFrameInfo@@_N@Z ENDP ; MP4FileStream::GetAudioDecodeTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?CopyMetadata@MP4FileStream@@QAEXXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?CopyMetadata@MP4FileStream@@QAEXXZ PROC		; MP4FileStream::CopyMetadata, COMDAT
; _this$ = ecx

; 294  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 295  :         frameTime = App->GetFrameTime();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetFrameTime@OBS@@QBEIXZ		; OBS::GetFrameTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+260], eax

; 296  :         sampleRateHz = App->GetSampleRateHz();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetSampleRateHz@OBS@@QBEIXZ		; OBS::GetSampleRateHz
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+264], eax

; 297  :         App->GetOutputSize(width, height);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 272				; 00000110H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetOutputSize@OBS@@QBEXAAI0@Z		; OBS::GetOutputSize

; 298  : 
; 299  :         //-------------------------------------------
; 300  :         // get AAC headers if using AAC
; 301  :         maxBitRate = fastHtonl(App->GetAudioEncoder()->GetBitRate() * 1000);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetAudioEncoder@OBS@@QBEPAVAudioEncoder@@XZ ; OBS::GetAudioEncoder
	mov	DWORD PTR tv80[ebp], eax
	mov	edx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	imul	eax, eax, 1000
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+276], eax

; 302  : 
; 303  :         InitBufferedPackets();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitBufferedPackets@MP4FileStream@@QAEXXZ ; MP4FileStream::InitBufferedPackets

; 304  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?CopyMetadata@MP4FileStream@@QAEXXZ ENDP		; MP4FileStream::CopyMetadata
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?InitBufferedPackets@MP4FileStream@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitBufferedPackets@MP4FileStream@@QAEXXZ PROC		; MP4FileStream::InitBufferedPackets, COMDAT
; _this$ = ecx

; 311  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 312  :         sei.InitBuffer();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	?InitBuffer@BufferedDataPacket@@QAEXXZ	; BufferedDataPacket::InitBuffer

; 313  :         if (!bMP3)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+105]
	test	ecx, ecx
	jne	SHORT $LN1@InitBuffer

; 314  :             audioHeaders.InitBuffer();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	?InitBuffer@BufferedDataPacket@@QAEXXZ	; BufferedDataPacket::InitBuffer
$LN1@InitBuffer:

; 315  :         videoHeaders.InitBuffer();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	?InitBuffer@BufferedDataPacket@@QAEXXZ	; BufferedDataPacket::InitBuffer

; 316  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?InitBufferedPackets@MP4FileStream@@QAEXXZ ENDP		; MP4FileStream::InitBufferedPackets
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ??1MP4FileStream@@UAE@XZ
_TEXT	SEGMENT
_file$ = -296						; size = 24
_size$1 = -272						; size = 8
_audioDuration$ = -264					; size = 4
tv827 = -260						; size = 4
tv2665 = -256						; size = 4
_audioUnitDuration$ = -252				; size = 4
tv1514 = -248						; size = 4
tv2471 = -244						; size = 4
tv2267 = -240						; size = 4
tv2826 = -236						; size = 4
tv2629 = -232						; size = 4
tv1710 = -228						; size = 4
_stc$2 = -224						; size = 4
tv2772 = -220						; size = 4
tv2366 = -216						; size = 4
_lpVideoTrack$ = -212					; size = 4
tv782 = -208						; size = 4
tv2561 = -204						; size = 4
_PPS$ = -200						; size = 8
_lpVersion$ = -192					; size = 4
_esDecoderDescriptor$ = -188				; size = 8
_stc$3 = -180						; size = 4
_esDescriptor$ = -176					; size = 8
tv288 = -168						; size = 4
_lpAudioTrack$ = -164					; size = 4
_esOut$ = -160						; size = 12
_SPS$ = -148						; size = 8
_esDecoderOut$ = -140					; size = 12
_videoDuration$ = -128					; size = 4
_i$4 = -124						; size = 4
_i$5 = -120						; size = 4
_i$6 = -116						; size = 4
_i$7 = -112						; size = 4
_i$8 = -108						; size = 4
_i$9 = -104						; size = 4
_i$10 = -100						; size = 4
_i$11 = -96						; size = 4
_i$12 = -92						; size = 4
tv2626 = -88						; size = 4
tv2662 = -84						; size = 4
_i$13 = -80						; size = 4
tv2468 = -76						; size = 4
_i$14 = -72						; size = 4
tv2823 = -68						; size = 4
_lpHeaderData$ = -64					; size = 4
tv2632 = -60						; size = 1
tv2474 = -59						; size = 1
tv2829 = -58						; size = 1
tv2668 = -57						; size = 1
_macTime$ = -56						; size = 4
_output$ = -52						; size = 12
_this$ = -40						; size = 4
_videoCompressionName$ = -36				; size = 31
__$ArrayPad$ = -4					; size = 4
??1MP4FileStream@@UAE@XZ PROC				; MP4FileStream::~MP4FileStream, COMDAT
; _this$ = ecx

; 319  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MP4FileStream@@6B@

; 320  :         if(!bStreamOpened)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+104]
	test	edx, edx
	jne	SHORT $LN43@MP4FileStr

; 321  :             return;

	jmp	$LN44@MP4FileStr
$LN43@MP4FileStr:

; 322  : 
; 323  :         App->EnableSceneSwitching(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 324  : 
; 325  :         //---------------------------------------------------
; 326  : 
; 327  :         //HWND hwndProgressDialog = CreateDialog(hinstMain, MAKEINTRESOURCE(IDD_BUILDINGMP4), hwndMain, (DLGPROC)MP4ProgressDialogProc);
; 328  :         //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETRANGE32, 0, 100);
; 329  : 
; 330  :         mdatStop = fileOut.GetPos();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+248], eax
	mov	DWORD PTR [ecx+252], edx

; 331  : 
; 332  :         BufferOutputSerializer output(endBuffer);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 108				; 0000006cH
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_??0BufferOutputSerializer@@QAE@AAV?$List@E@@H@Z

; 333  : 
; 334  :         //set a reasonable initial buffer size
; 335  :         endBuffer.SetSize((videoFrames.Num() + audioFrames.Num()) * 20 + 131072);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ; List<MP4VideoFrameInfo>::Num
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ; List<MP4AudioFrameInfo>::Num
	add	esi, eax
	imul	eax, esi, 20
	add	eax, 131072				; 00020000H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	?SetSize@?$List@E@@QAEHI@Z		; List<unsigned char>::SetSize

; 336  : 
; 337  :         DWORD macTime = fastHtonl(DWORD(GetMacTime()));

	call	?GetMacTime@@YA_JXZ			; GetMacTime
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _macTime$[ebp], eax

; 338  :         UINT videoDuration = fastHtonl(lastVideoTimestamp + frameTime);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+260]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _videoDuration$[ebp], eax

; 339  :         UINT audioDuration = fastHtonl(lastVideoTimestamp + DWORD(double(audioFrameSize)*1000.0/sampleRateHz));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+208]
	mov	edx, DWORD PTR [ecx+212]
	mov	ecx, eax
	call	__ultod3
	mulsd	xmm0, QWORD PTR __real@408f400000000000
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+264]
	mov	DWORD PTR tv2366[ebp], edx
	cvtsi2sd xmm1, DWORD PTR tv2366[ebp]
	mov	eax, DWORD PTR tv2366[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	divsd	xmm0, xmm1
	call	__dtoui3
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+96]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _audioDuration$[ebp], eax

; 340  : 
; 341  :         LPCSTR lpVideoTrack = "Video Media Handler";

	mov	DWORD PTR _lpVideoTrack$[ebp], OFFSET ??_C@_0BE@LCCIACOI@Video?5Media?5Handler?$AA@

; 342  :         LPCSTR lpAudioTrack = "Sound Media Handler";

	mov	DWORD PTR _lpAudioTrack$[ebp], OFFSET ??_C@_0BE@CKNOAMLK@Sound?5Media?5Handler?$AA@

; 343  : 
; 344  :         const char videoCompressionName[31] = "AVC Coding";

	mov	edx, DWORD PTR ??_C@_0L@OHPFIDIC@AVC?5Coding?$AA@
	mov	DWORD PTR _videoCompressionName$[ebp], edx
	mov	eax, DWORD PTR ??_C@_0L@OHPFIDIC@AVC?5Coding?$AA@+4
	mov	DWORD PTR _videoCompressionName$[ebp+4], eax
	mov	cx, WORD PTR ??_C@_0L@OHPFIDIC@AVC?5Coding?$AA@+8
	mov	WORD PTR _videoCompressionName$[ebp+8], cx
	mov	dl, BYTE PTR ??_C@_0L@OHPFIDIC@AVC?5Coding?$AA@+10
	mov	BYTE PTR _videoCompressionName$[ebp+10], dl
	xor	eax, eax
	mov	DWORD PTR _videoCompressionName$[ebp+11], eax
	mov	DWORD PTR _videoCompressionName$[ebp+15], eax
	mov	DWORD PTR _videoCompressionName$[ebp+19], eax
	mov	DWORD PTR _videoCompressionName$[ebp+23], eax
	mov	DWORD PTR _videoCompressionName$[ebp+27], eax

; 345  : 
; 346  :         //-------------------------------------------
; 347  :         // get video headers
; 348  :         List<BYTE> SPS, PPS;

	lea	ecx, DWORD PTR _SPS$[ebp]
	call	??0?$List@E@@QAE@XZ			; List<unsigned char>::List<unsigned char>
	lea	ecx, DWORD PTR _PPS$[ebp]
	call	??0?$List@E@@QAE@XZ			; List<unsigned char>::List<unsigned char>

; 349  : 
; 350  :         LPBYTE lpHeaderData = videoHeaders.lpPacket+11;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+376]
	add	edx, 11					; 0000000bH
	mov	DWORD PTR _lpHeaderData$[ebp], edx

; 351  :         SPS.CopyArray(lpHeaderData+2, fastHtons(*(WORD*)lpHeaderData));

	mov	eax, DWORD PTR _lpHeaderData$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	edx, ax
	push	edx
	mov	eax, DWORD PTR _lpHeaderData$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _SPS$[ebp]
	call	?CopyArray@?$List@E@@QAEXPBEI@Z		; List<unsigned char>::CopyArray

; 352  : 
; 353  :         lpHeaderData += SPS.Num()+3;

	lea	ecx, DWORD PTR _SPS$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	mov	ecx, DWORD PTR _lpHeaderData$[ebp]
	lea	edx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR _lpHeaderData$[ebp], edx

; 354  :         PPS.CopyArray(lpHeaderData+2, fastHtons(*(WORD*)lpHeaderData));

	mov	eax, DWORD PTR _lpHeaderData$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	edx, ax
	push	edx
	mov	eax, DWORD PTR _lpHeaderData$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _PPS$[ebp]
	call	?CopyArray@?$List@E@@QAEXPBEI@Z		; List<unsigned char>::CopyArray

; 355  : 
; 356  :         //-------------------------------------------
; 357  : 
; 358  :         EndChunkInfo(videoChunks, videoSampleToChunk, curVideoChunkOffset, numVideoSamples);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 144				; 00000090H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 184				; 000000b8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndChunkInfo@MP4FileStream@@QAEXAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_KAAI@Z ; MP4FileStream::EndChunkInfo

; 359  :         EndChunkInfo(audioChunks, audioSampleToChunk, curAudioChunkOffset, numAudioSamples);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 176				; 000000b0H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndChunkInfo@MP4FileStream@@QAEXAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_KAAI@Z ; MP4FileStream::EndChunkInfo

; 360  : 
; 361  :         if (numVideoSamples > 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+160], 1
	jbe	SHORT $LN42@MP4FileStr

; 362  :             GetVideoDecodeTime(videoFrames.Last(), true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ ; List<MP4VideoFrameInfo>::Last
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVideoDecodeTime@MP4FileStream@@QAEXAAUMP4VideoFrameInfo@@_N@Z ; MP4FileStream::GetVideoDecodeTime
$LN42@MP4FileStr:

; 363  : 
; 364  :         if (numAudioSamples > 1)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+164], 1
	jbe	SHORT $LN41@MP4FileStr

; 365  :             GetAudioDecodeTime(audioFrames.Last(), true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Last@?$List@UMP4AudioFrameInfo@@@@QBEAAUMP4AudioFrameInfo@@XZ ; List<MP4AudioFrameInfo>::Last
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAudioDecodeTime@MP4FileStream@@QAEXAAUMP4AudioFrameInfo@@_N@Z ; MP4FileStream::GetAudioDecodeTime
$LN41@MP4FileStr:

; 366  : 
; 367  :         UINT audioUnitDuration = fastHtonl(UINT(lastAudioTimeVal));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _audioUnitDuration$[ebp], eax

; 368  : 
; 369  :         //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETPOS, 25, 0);
; 370  : 
; 371  :         //-------------------------------------------
; 372  :         // sound descriptor thingy.  this part made me die a little inside admittedly.
; 373  : 
; 374  :         List<BYTE> esDecoderDescriptor;

	lea	ecx, DWORD PTR _esDecoderDescriptor$[ebp]
	call	??0?$List@E@@QAE@XZ			; List<unsigned char>::List<unsigned char>

; 375  :         BufferOutputSerializer esDecoderOut(esDecoderDescriptor);

	push	1
	lea	ecx, DWORD PTR _esDecoderDescriptor$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_??0BufferOutputSerializer@@QAE@AAV?$List@E@@H@Z

; 376  :         esDecoderOut.OutputByte(bMP3 ? 107 : 64);

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+105]
	test	eax, eax
	je	SHORT $LN46@MP4FileStr
	mov	DWORD PTR tv288[ebp], 107		; 0000006bH
	jmp	SHORT $LN47@MP4FileStr
$LN46@MP4FileStr:
	mov	DWORD PTR tv288[ebp], 64		; 00000040H
$LN47@MP4FileStr:
	movzx	ecx, BYTE PTR tv288[ebp]
	push	ecx
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 377  :         esDecoderOut.OutputByte(0x15); //stream/type flags.  always 0x15 for my purposes.

	push	21					; 00000015H
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 378  :         esDecoderOut.OutputByte(0); //buffer size, just set it to 1536 for both mp3 and aac

	push	0
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 379  :         esDecoderOut.OutputWord(WORD_BE(0x600)); 

	push	6
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 380  :         esDecoderOut.OutputDword(maxBitRate); //max bit rate (cue bill 'o reily meme for these two)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+276]
	push	eax
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 381  :         esDecoderOut.OutputDword(maxBitRate); //avg bit rate

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	push	edx
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 382  : 
; 383  :         if(!bMP3) //if AAC, put in headers

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+105]
	test	ecx, ecx
	jne	SHORT $LN40@MP4FileStr

; 384  :         {
; 385  :             esDecoderOut.OutputByte(0x5);  //decoder specific descriptor type

	push	5
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 386  :             /*esDecoderOut.OutputByte(0x80); //some stuff that no one should probably care about
; 387  :             esDecoderOut.OutputByte(0x80);
; 388  :             esDecoderOut.OutputByte(0x80);*/
; 389  :             assert(audioHeaders.size >= 2);
; 390  :             esDecoderOut.OutputByte(audioHeaders.size - 2);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+332]
	sub	eax, 2
	push	eax
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 391  :             esDecoderOut.Serialize(audioHeaders.lpPacket + 2, audioHeaders.size - 2);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+332]
	sub	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	add	ecx, 2
	push	ecx
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z
$LN40@MP4FileStr:

; 392  :         }
; 393  : 
; 394  : 
; 395  :         List<BYTE> esDescriptor;

	lea	ecx, DWORD PTR _esDescriptor$[ebp]
	call	??0?$List@E@@QAE@XZ			; List<unsigned char>::List<unsigned char>

; 396  :         BufferOutputSerializer esOut(esDescriptor);

	push	1
	lea	edx, DWORD PTR _esDescriptor$[ebp]
	push	edx
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_??0BufferOutputSerializer@@QAE@AAV?$List@E@@H@Z

; 397  :         esOut.OutputWord(0); //es id

	push	0
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 398  :         esOut.OutputByte(0); //stream priority

	push	0
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 399  :         esOut.OutputByte(4); //descriptor type

	push	4
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 400  :         /*esOut.OutputByte(0x80); //some stuff that no one should probably care about
; 401  :         esOut.OutputByte(0x80);
; 402  :         esOut.OutputByte(0x80);*/
; 403  :         esOut.OutputByte(esDecoderDescriptor.Num());

	lea	ecx, DWORD PTR _esDecoderDescriptor$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 404  :         esOut.Serialize((LPVOID)esDecoderDescriptor.Array(), esDecoderDescriptor.Num());

	lea	ecx, DWORD PTR _esDecoderDescriptor$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	lea	ecx, DWORD PTR _esDecoderDescriptor$[ebp]
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	push	eax
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 405  :         esOut.OutputByte(0x6);  //config descriptor type

	push	6
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 406  :         /*esOut.OutputByte(0x80); //some stuff that no one should probably care about
; 407  :         esOut.OutputByte(0x80);
; 408  :         esOut.OutputByte(0x80);*/
; 409  :         esOut.OutputByte(1); //len

	push	1
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 410  :         esOut.OutputByte(2); //SL value(? always 2)

	push	2
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 411  : 
; 412  :         //-------------------------------------------
; 413  : 
; 414  :         PushBox(output, DWORD_BE('moov'));

	push	1987014509				; 766f6f6dH
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 415  : 
; 416  :           //------------------------------------------------------
; 417  :           // header
; 418  :           PushBox(output, DWORD_BE('mvhd'));

	push	1684567661				; 6468766dH
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 419  :             output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 420  :             output.OutputDword(macTime); //creation time

	mov	edx, DWORD PTR _macTime$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 421  :             output.OutputDword(macTime); //modified time

	mov	eax, DWORD PTR _macTime$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 422  :             output.OutputDword(DWORD_BE(1000)); //time base (milliseconds, so 1000)

	push	-402456576				; e8030000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 423  :             output.OutputDword(videoDuration); //duration (in time base units)

	mov	ecx, DWORD PTR _videoDuration$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 424  :             output.OutputDword(DWORD_BE(0x00010000)); //fixed point playback speed 1.0

	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 425  :             output.OutputWord(WORD_BE(0x0100)); //fixed point vol 1.0

	push	1
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 426  :             output.OutputQword(0); //reserved (10 bytes)

	push	0
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputQword@Serializer@@QAEAAV1@_K@Z

; 427  :             output.OutputWord(0);

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 428  :             output.OutputDword(DWORD_BE(0x00010000)); output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00000000)); //window matrix row 1 (1.0, 0.0, 0.0)

	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 429  :             output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00010000)); output.OutputDword(DWORD_BE(0x00000000)); //window matrix row 2 (0.0, 1.0, 0.0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 430  :             output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x40000000)); //window matrix row 3 (0.0, 0.0, 16384.0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	64					; 00000040H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 431  :             output.OutputDword(0); //prevew start time (time base units)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 432  :             output.OutputDword(0); //prevew duration (time base units)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 433  :             output.OutputDword(0); //still poster frame (timestamp of frame)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 434  :             output.OutputDword(0); //selection(?) start time (time base units)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 435  :             output.OutputDword(0); //selection(?) duration (time base units)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 436  :             output.OutputDword(0); //current time (0, time base units)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 437  :             output.OutputDword(DWORD_BE(3)); //next free track id (1-based rather than 0-based)

	push	50331648				; 03000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 438  :           PopBox(output); //mvhd

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 439  : 
; 440  :           //------------------------------------------------------
; 441  :           // audio track
; 442  :           PushBox(output, DWORD_BE('trak'));

	push	1801548404				; 6b617274H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 443  :             PushBox(output, DWORD_BE('tkhd')); //track header

	push	1684564852				; 64686b74H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 444  :               output.OutputDword(DWORD_BE(0x00000007)); //version (0) and flags (0xF)

	push	117440512				; 07000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 445  :               output.OutputDword(macTime); //creation time

	mov	edx, DWORD PTR _macTime$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 446  :               output.OutputDword(macTime); //modified time

	mov	eax, DWORD PTR _macTime$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 447  :               output.OutputDword(DWORD_BE(1)); //track ID

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 448  :               output.OutputDword(0); //reserved

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 449  :               output.OutputDword(audioDuration); //duration (in time base units)

	mov	ecx, DWORD PTR _audioDuration$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 450  :               output.OutputQword(0); //reserved

	push	0
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputQword@Serializer@@QAEAAV1@_K@Z

; 451  :               output.OutputWord(0); //video layer (0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 452  :               output.OutputWord(WORD_BE(0)); //quicktime alternate track id

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 453  :               output.OutputWord(WORD_BE(0x0100)); //volume

	push	1
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 454  :               output.OutputWord(0); //reserved

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 455  :               output.OutputDword(DWORD_BE(0x00010000)); output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00000000)); //window matrix row 1 (1.0, 0.0, 0.0)

	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 456  :               output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00010000)); output.OutputDword(DWORD_BE(0x00000000)); //window matrix row 2 (0.0, 1.0, 0.0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 457  :               output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x40000000)); //window matrix row 3 (0.0, 0.0, 16384.0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	64					; 00000040H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 458  :               output.OutputDword(0); //width (fixed point)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 459  :               output.OutputDword(0); //height (fixed point)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 460  :             PopBox(output); //tkhd

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 461  :             /*PushBox(output, DWORD_BE('edts'));
; 462  :               PushBox(output, DWORD_BE('elst'));
; 463  :                 output.OutputDword(0); //version and flags (none)
; 464  :                 output.OutputDword(DWORD_BE(1)); //count
; 465  :                 output.OutputDword(audioDuration); //duration
; 466  :                 output.OutputDword(0); //start time
; 467  :                 output.OutputDword(DWORD_BE(0x00010000)); //playback speed (1.0)
; 468  :               PopBox(); //elst
; 469  :             PopBox(); //tdst*/
; 470  :             PushBox(output, DWORD_BE('mdia'));

	push	1634296941				; 6169646dH
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 471  :               PushBox(output, DWORD_BE('mdhd'));

	push	1684563053				; 6468646dH
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 472  :                 output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 473  :                 output.OutputDword(macTime); //creation time

	mov	edx, DWORD PTR _macTime$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 474  :                 output.OutputDword(macTime); //modified time

	mov	eax, DWORD PTR _macTime$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 475  :                 output.OutputDword(DWORD_BE(sampleRateHz)); //time scale

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+264]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	and	ecx, 255				; 000000ffH
	shl	ecx, 24					; 00000018H
	or	edx, ecx
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 476  :                 output.OutputDword(audioUnitDuration);

	mov	edx, DWORD PTR _audioUnitDuration$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 477  :                 output.OutputDword(bMP3 ? DWORD_BE(0x55c40000) : DWORD_BE(0x15c70000));

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+105]
	test	ecx, ecx
	je	SHORT $LN48@MP4FileStr
	mov	DWORD PTR tv782[ebp], 50261		; 0000c455H
	jmp	SHORT $LN49@MP4FileStr
$LN48@MP4FileStr:
	mov	DWORD PTR tv782[ebp], 50965		; 0000c715H
$LN49@MP4FileStr:
	mov	edx, DWORD PTR tv782[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 478  :               PopBox(output); //mdhd

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 479  :               PushBox(output, DWORD_BE('hdlr'));

	push	1919706216				; 726c6468H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 480  :                 output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 481  :                 output.OutputDword(0); //quicktime type (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 482  :                 output.OutputDword(DWORD_BE('soun')); //media type

	push	1853190003				; 6e756f73H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 483  :                 output.OutputDword(0); //manufacturer reserved

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 484  :                 output.OutputDword(0); //quicktime component reserved flags

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 485  :                 output.OutputDword(0); //quicktime component reserved mask

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 486  :                 output.Serialize((LPVOID)lpAudioTrack, (DWORD)strlen(lpAudioTrack)+1); //track name

	mov	edx, DWORD PTR _lpAudioTrack$[ebp]
	mov	DWORD PTR tv2468[ebp], edx
	mov	eax, DWORD PTR tv2468[ebp]
	add	eax, 1
	mov	DWORD PTR tv2471[ebp], eax
$LL50@MP4FileStr:
	mov	ecx, DWORD PTR tv2468[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv2474[ebp], dl
	add	DWORD PTR tv2468[ebp], 1
	cmp	BYTE PTR tv2474[ebp], 0
	jne	SHORT $LL50@MP4FileStr
	mov	eax, DWORD PTR tv2468[ebp]
	sub	eax, DWORD PTR tv2471[ebp]
	mov	DWORD PTR tv827[ebp], eax
	mov	ecx, DWORD PTR tv827[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _lpAudioTrack$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 487  :               PopBox(output); //hdlr

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 488  :               PushBox(output, DWORD_BE('minf'));

	push	1718511981				; 666e696dH
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 489  :                 PushBox(output, DWORD_BE('smhd'));

	push	1684565363				; 64686d73H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 490  :                   output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 491  :                   output.OutputDword(0); //balance (fixed point)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 492  :                 PopBox(output); //vdhd

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 493  :                 PushBox(output, DWORD_BE('dinf'));

	push	1718511972				; 666e6964H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 494  :                   PushBox(output, DWORD_BE('dref'));

	push	1717924452				; 66657264H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 495  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 496  :                     output.OutputDword(DWORD_BE(1)); //count

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 497  :                     PushBox(output, DWORD_BE('url '));

	push	543978101				; 206c7275H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 498  :                       output.OutputDword(DWORD_BE(0x00000001)); //version (0) and flags (1)

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 499  :                     PopBox(output); //url

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 500  :                   PopBox(output); //dref

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 501  :                 PopBox(output); //dinf

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 502  :                 PushBox(output, DWORD_BE('stbl'));

	push	1818391667				; 6c627473H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 503  :                   PushBox(output, DWORD_BE('stsd'));

	push	1685288051				; 64737473H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 504  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 505  :                     output.OutputDword(DWORD_BE(1)); //count

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 506  :                     PushBox(output, DWORD_BE('mp4a'));

	push	1630826605				; 6134706dH
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 507  :                       output.OutputDword(0); //reserved (6 bytes)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 508  :                       output.OutputWord(0);

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 509  :                       output.OutputWord(WORD_BE(1)); //dref index

	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 510  :                       output.OutputWord(0); //quicktime encoding version

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 511  :                       output.OutputWord(0); //quicktime encoding revision

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 512  :                       output.OutputDword(0); //quicktime audio encoding vendor

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 513  :                       output.OutputWord(0); //channels (ignored)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 514  :                       output.OutputWord(WORD_BE(16)); //sample size

	push	4096					; 00001000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 515  :                       output.OutputWord(0); //quicktime audio compression id

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 516  :                       output.OutputWord(0); //quicktime audio packet size

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 517  :                       output.OutputDword(DWORD_BE((sampleRateHz<<16))); //sample rate (fixed point)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+264]
	shl	edx, 16					; 00000010H
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	shl	ecx, 16					; 00000010H
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	or	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	shl	ecx, 16					; 00000010H
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	shl	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	shl	ecx, 24					; 00000018H
	or	edx, ecx
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 518  :                       PushBox(output, DWORD_BE('esds'));

	push	1935962981				; 73647365H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 519  :                         output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 520  :                         output.OutputByte(3); //ES descriptor type

	push	3
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 521  :                         /*output.OutputByte(0x80);
; 522  :                         output.OutputByte(0x80);
; 523  :                         output.OutputByte(0x80);*/
; 524  :                         output.OutputByte(esDescriptor.Num());

	lea	ecx, DWORD PTR _esDescriptor$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 525  :                         output.Serialize((LPVOID)esDescriptor.Array(), esDescriptor.Num());

	lea	ecx, DWORD PTR _esDescriptor$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	lea	ecx, DWORD PTR _esDescriptor$[ebp]
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 526  :                       PopBox(output);

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 527  :                     PopBox(output);

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 528  :                   PopBox(output); //stsd

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 529  :                   PushBox(output, DWORD_BE('stts')); //list of keyframe (i-frame) IDs

	push	1937011827				; 73747473H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 530  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 531  :                     output.OutputDword(fastHtonl(audioDecodeTimes.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 532  :                     for(UINT i=0; i<audioDecodeTimes.Num(); i++)

	mov	DWORD PTR _i$12[ebp], 0
	jmp	SHORT $LN39@MP4FileStr
$LN38@MP4FileStr:
	mov	ecx, DWORD PTR _i$12[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$12[ebp], ecx
$LN39@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	cmp	DWORD PTR _i$12[ebp], eax
	jae	SHORT $LN37@MP4FileStr

; 533  :                     {
; 534  :                         output.OutputDword(fastHtonl(audioDecodeTimes[i].count));

	mov	edx, DWORD PTR _i$12[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z ; List<OffsetVal>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 535  :                         output.OutputDword(fastHtonl(audioDecodeTimes[i].val));

	mov	ecx, DWORD PTR _i$12[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z ; List<OffsetVal>::operator[]
	mov	edx, DWORD PTR [eax+4]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 536  :                     }

	jmp	SHORT $LN38@MP4FileStr
$LN37@MP4FileStr:

; 537  :                   PopBox(output); //stss

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 538  :                   PushBox(output, DWORD_BE('stsc')); //sample to chunk list

	push	1668510835				; 63737473H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 539  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 540  :                     output.OutputDword(fastHtonl(audioSampleToChunk.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	?Num@?$List@USampleToChunk@@@@QBEIXZ	; List<SampleToChunk>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 541  :                     for(UINT i=0; i<audioSampleToChunk.Num(); i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN36@MP4FileStr
$LN35@MP4FileStr:
	mov	edx, DWORD PTR _i$5[ebp]
	add	edx, 1
	mov	DWORD PTR _i$5[ebp], edx
$LN36@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	?Num@?$List@USampleToChunk@@@@QBEIXZ	; List<SampleToChunk>::Num
	cmp	DWORD PTR _i$5[ebp], eax
	jae	SHORT $LN34@MP4FileStr

; 542  :                     {
; 543  :                         SampleToChunk &stc  = audioSampleToChunk[i];

	mov	eax, DWORD PTR _i$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	??A?$List@USampleToChunk@@@@QAEAAUSampleToChunk@@I@Z ; List<SampleToChunk>::operator[]
	mov	DWORD PTR _stc$2[ebp], eax

; 544  :                         output.OutputDword(fastHtonl(stc.firstChunkID));

	mov	ecx, DWORD PTR _stc$2[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 545  :                         output.OutputDword(fastHtonl(stc.samplesPerChunk));

	mov	eax, DWORD PTR _stc$2[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 546  :                         output.OutputDword(DWORD_BE(1));

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 547  :                     }

	jmp	SHORT $LN35@MP4FileStr
$LN34@MP4FileStr:

; 548  :                   PopBox(output); //stsc

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 549  : 
; 550  :                   //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETPOS, 30, 0);
; 551  :                   //ProcessEvents();
; 552  : 
; 553  :                   PushBox(output, DWORD_BE('stsz')); //sample sizes

	push	2054386803				; 7a737473H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 554  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 555  :                     output.OutputDword(0); //block size for all (0 if differing sizes)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 556  :                     output.OutputDword(fastHtonl(audioFrames.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ; List<MP4AudioFrameInfo>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 557  :                     for(UINT i=0; i<audioFrames.Num(); i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN33@MP4FileStr
$LN32@MP4FileStr:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN33@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ; List<MP4AudioFrameInfo>::Num
	cmp	DWORD PTR _i$4[ebp], eax
	jae	SHORT $LN31@MP4FileStr

; 558  :                         output.OutputDword(fastHtonl(audioFrames[i].size));

	mov	edx, DWORD PTR _i$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??A?$List@UMP4AudioFrameInfo@@@@QAEAAUMP4AudioFrameInfo@@I@Z ; List<MP4AudioFrameInfo>::operator[]
	mov	eax, DWORD PTR [eax+8]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	jmp	SHORT $LN32@MP4FileStr
$LN31@MP4FileStr:

; 559  :                   PopBox(output);

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 560  : 
; 561  :                   //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETPOS, 40, 0);
; 562  :                   //ProcessEvents();
; 563  : 
; 564  :                   if(audioChunks.Num() && audioChunks.Last() > 0xFFFFFFFFLL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	test	eax, eax
	je	$LN30@MP4FileStr
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	?Last@?$List@_K@@QBEAA_KXZ		; List<unsigned __int64>::Last
	mov	DWORD PTR tv2561[ebp], eax
	mov	edx, DWORD PTR tv2561[ebp]
	cmp	DWORD PTR [edx+4], 0
	ja	SHORT $LN51@MP4FileStr
	mov	eax, DWORD PTR tv2561[ebp]
	cmp	DWORD PTR [eax], -1
	jbe	$LN30@MP4FileStr
$LN51@MP4FileStr:

; 565  :                   {
; 566  :                       PushBox(output, DWORD_BE('co64')); //chunk offsets

	push	875982691				; 34366f63H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 567  :                       output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 568  :                       output.OutputDword(fastHtonl(audioChunks.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 569  :                       for(UINT i=0; i<audioChunks.Num(); i++)

	mov	DWORD PTR _i$9[ebp], 0
	jmp	SHORT $LN29@MP4FileStr
$LN28@MP4FileStr:
	mov	edx, DWORD PTR _i$9[ebp]
	add	edx, 1
	mov	DWORD PTR _i$9[ebp], edx
$LN29@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	cmp	DWORD PTR _i$9[ebp], eax
	jae	SHORT $LN27@MP4FileStr

; 570  :                           output.OutputQword(fastHtonll(audioChunks[i]));

	mov	eax, DWORD PTR _i$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??A?$List@_K@@QAEAA_KI@Z		; List<unsigned __int64>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?fastHtonll@@YA_K_K@Z			; fastHtonll
	add	esp, 8
	push	edx
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputQword@Serializer@@QAEAAV1@_K@Z
	jmp	SHORT $LN28@MP4FileStr
$LN27@MP4FileStr:

; 571  :                       PopBox(output); //co64

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 572  :                   }
; 573  :                   else

	jmp	$LN26@MP4FileStr
$LN30@MP4FileStr:

; 574  :                   {
; 575  :                       PushBox(output, DWORD_BE('stco')); //chunk offsets

	push	1868788851				; 6f637473H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 576  :                         output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 577  :                         output.OutputDword(fastHtonl(audioChunks.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 578  :                         for(UINT i=0; i<audioChunks.Num(); i++)

	mov	DWORD PTR _i$6[ebp], 0
	jmp	SHORT $LN25@MP4FileStr
$LN24@MP4FileStr:
	mov	edx, DWORD PTR _i$6[ebp]
	add	edx, 1
	mov	DWORD PTR _i$6[ebp], edx
$LN25@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	cmp	DWORD PTR _i$6[ebp], eax
	jae	SHORT $LN23@MP4FileStr

; 579  :                             output.OutputDword(fastHtonl((DWORD)audioChunks[i]));

	mov	eax, DWORD PTR _i$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??A?$List@_K@@QAEAA_KI@Z		; List<unsigned __int64>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	jmp	SHORT $LN24@MP4FileStr
$LN23@MP4FileStr:

; 580  :                       PopBox(output); //stco

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox
$LN26@MP4FileStr:

; 581  :                   }
; 582  :                 PopBox(output); //stbl

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 583  :               PopBox(output); //minf

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 584  :             PopBox(output); //mdia

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 585  :           PopBox(output); //trak

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 586  : 
; 587  :           //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETPOS, 50, 0);
; 588  :           //ProcessEvents();
; 589  : 
; 590  :           //------------------------------------------------------
; 591  :           // video track
; 592  :           PushBox(output, DWORD_BE('trak'));

	push	1801548404				; 6b617274H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 593  :             PushBox(output, DWORD_BE('tkhd')); //track header

	push	1684564852				; 64686b74H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 594  :               output.OutputDword(DWORD_BE(0x00000007)); //version (0) and flags (0x7)

	push	117440512				; 07000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 595  :               output.OutputDword(macTime); //creation time

	mov	eax, DWORD PTR _macTime$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 596  :               output.OutputDword(macTime); //modified time

	mov	ecx, DWORD PTR _macTime$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 597  :               output.OutputDword(DWORD_BE(2)); //track ID

	push	33554432				; 02000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 598  :               output.OutputDword(0); //reserved

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 599  :               output.OutputDword(videoDuration); //duration (in time base units)

	mov	edx, DWORD PTR _videoDuration$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 600  :               output.OutputQword(0); //reserved

	push	0
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputQword@Serializer@@QAEAAV1@_K@Z

; 601  :               output.OutputWord(0); //video layer (0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 602  :               output.OutputWord(0); //quicktime alternate track id (0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 603  :               output.OutputWord(0); //track audio volume (this is video, so 0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 604  :               output.OutputWord(0); //reserved

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 605  :               output.OutputDword(DWORD_BE(0x00010000)); output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00000000)); //window matrix row 1 (1.0, 0.0, 0.0)

	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 606  :               output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00010000)); output.OutputDword(DWORD_BE(0x00000000)); //window matrix row 2 (0.0, 1.0, 0.0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 607  :               output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x00000000)); output.OutputDword(DWORD_BE(0x40000000)); //window matrix row 3 (0.0, 0.0, 16384.0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	push	64					; 00000040H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 608  :               output.OutputDword(fastHtonl(width<<16));  //width (fixed point)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+268]
	shl	ecx, 16					; 00000010H
	push	ecx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 609  :               output.OutputDword(fastHtonl(height<<16)); //height (fixed point)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+272]
	shl	eax, 16					; 00000010H
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 610  :             PopBox(output); //tkhd

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 611  :             /*PushBox(output, DWORD_BE('edts'));
; 612  :               PushBox(output, DWORD_BE('elst'));
; 613  :                 output.OutputDword(0); //version and flags (none)
; 614  :                 output.OutputDword(DWORD_BE(1)); //count
; 615  :                 output.OutputDword(videoDuration); //duration
; 616  :                 output.OutputDword(0); //start time
; 617  :                 output.OutputDword(DWORD_BE(0x00010000)); //playback speed (1.0)
; 618  :               PopBox(); //elst
; 619  :             PopBox(); //tdst*/
; 620  :             PushBox(output, DWORD_BE('mdia'));

	push	1634296941				; 6169646dH
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 621  :               PushBox(output, DWORD_BE('mdhd'));

	push	1684563053				; 6468646dH
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 622  :                 output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 623  :                 output.OutputDword(macTime); //creation time

	mov	ecx, DWORD PTR _macTime$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 624  :                 output.OutputDword(macTime); //modified time

	mov	edx, DWORD PTR _macTime$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 625  :                 output.OutputDword(DWORD_BE(1000)); //time scale

	push	-402456576				; e8030000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 626  :                 output.OutputDword(videoDuration);

	mov	eax, DWORD PTR _videoDuration$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 627  :                 output.OutputDword(DWORD_BE(0x55c40000));

	push	50261					; 0000c455H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 628  :               PopBox(output); //mdhd

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 629  :               PushBox(output, DWORD_BE('hdlr'));

	push	1919706216				; 726c6468H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 630  :                 output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 631  :                 output.OutputDword(0); //quicktime type (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 632  :                 output.OutputDword(DWORD_BE('vide')); //media type

	push	1701079414				; 65646976H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 633  :                 output.OutputDword(0); //manufacturer reserved

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 634  :                 output.OutputDword(0); //quicktime component reserved flags

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 635  :                 output.OutputDword(0); //quicktime component reserved mask

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 636  :                 output.Serialize((LPVOID)lpVideoTrack, (DWORD)strlen(lpVideoTrack)+1); //track name

	mov	eax, DWORD PTR _lpVideoTrack$[ebp]
	mov	DWORD PTR tv2626[ebp], eax
	mov	ecx, DWORD PTR tv2626[ebp]
	add	ecx, 1
	mov	DWORD PTR tv2629[ebp], ecx
$LL52@MP4FileStr:
	mov	edx, DWORD PTR tv2626[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv2632[ebp], al
	add	DWORD PTR tv2626[ebp], 1
	cmp	BYTE PTR tv2632[ebp], 0
	jne	SHORT $LL52@MP4FileStr
	mov	ecx, DWORD PTR tv2626[ebp]
	sub	ecx, DWORD PTR tv2629[ebp]
	mov	DWORD PTR tv1514[ebp], ecx
	mov	edx, DWORD PTR tv1514[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _lpVideoTrack$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 637  :               PopBox(output); //hdlr

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 638  :               PushBox(output, DWORD_BE('minf'));

	push	1718511981				; 666e696dH
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 639  :                 PushBox(output, DWORD_BE('vmhd'));

	push	1684565366				; 64686d76H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 640  :                   output.OutputDword(DWORD_BE(0x00000001)); //version (0) and flags (1)

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 641  :                   output.OutputWord(0); //quickdraw graphic mode (copy = 0)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 642  :                   output.OutputWord(0); //quickdraw red value

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 643  :                   output.OutputWord(0); //quickdraw green value

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 644  :                   output.OutputWord(0); //quickdraw blue value

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 645  :                 PopBox(output); //vdhd

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 646  :                 PushBox(output, DWORD_BE('dinf'));

	push	1718511972				; 666e6964H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 647  :                   PushBox(output, DWORD_BE('dref'));

	push	1717924452				; 66657264H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 648  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 649  :                     output.OutputDword(DWORD_BE(1)); //count

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 650  :                     PushBox(output, DWORD_BE('url '));

	push	543978101				; 206c7275H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 651  :                       output.OutputDword(DWORD_BE(0x00000001)); //version (0) and flags (1)

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 652  :                     PopBox(output); //url

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 653  :                   PopBox(output); //dref

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 654  :                 PopBox(output); //dinf

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 655  :                 PushBox(output, DWORD_BE('stbl'));

	push	1818391667				; 6c627473H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 656  :                   PushBox(output, DWORD_BE('stsd'));

	push	1685288051				; 64737473H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 657  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 658  :                     output.OutputDword(DWORD_BE(1)); //count

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 659  :                     PushBox(output, DWORD_BE('avc1'));

	push	828601953				; 31637661H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 660  :                       output.OutputDword(0); //reserved 6 bytes

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 661  :                       output.OutputWord(0);

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 662  :                       output.OutputWord(WORD_BE(1)); //index

	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 663  :                       output.OutputWord(0); //encoding version

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 664  :                       output.OutputWord(0); //encoding revision level

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 665  :                       output.OutputDword(0); //encoding vendor

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 666  :                       output.OutputDword(0); //temporal quality

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 667  :                       output.OutputDword(0); //spatial quality

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 668  :                       output.OutputWord(fastHtons(width)); //width

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+268]
	push	eax
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 669  :                       output.OutputWord(fastHtons(height)); //height

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+272]
	push	eax
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 670  :                       output.OutputDword(DWORD_BE(0x00480000)); //fixed point width pixel resolution (72.0)

	push	18432					; 00004800H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 671  :                       output.OutputDword(DWORD_BE(0x00480000)); //fixed point height pixel resolution (72.0)

	push	18432					; 00004800H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 672  :                       output.OutputDword(0); //quicktime video data size 

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 673  :                       output.OutputWord(WORD_BE(1)); //frame count(?)

	push	256					; 00000100H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 674  :                       output.OutputByte((BYTE)strlen(videoCompressionName)); //compression name length

	lea	edx, DWORD PTR _videoCompressionName$[ebp]
	mov	DWORD PTR tv2662[ebp], edx
	mov	eax, DWORD PTR tv2662[ebp]
	add	eax, 1
	mov	DWORD PTR tv2665[ebp], eax
$LL53@MP4FileStr:
	mov	ecx, DWORD PTR tv2662[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv2668[ebp], dl
	add	DWORD PTR tv2662[ebp], 1
	cmp	BYTE PTR tv2668[ebp], 0
	jne	SHORT $LL53@MP4FileStr
	mov	eax, DWORD PTR tv2662[ebp]
	sub	eax, DWORD PTR tv2665[ebp]
	mov	DWORD PTR tv1710[ebp], eax
	movzx	ecx, BYTE PTR tv1710[ebp]
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 675  :                       output.Serialize(videoCompressionName, 31); //31 bytes for the name

	push	31					; 0000001fH
	lea	edx, DWORD PTR _videoCompressionName$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 676  :                       output.OutputWord(WORD_BE(24)); //bit depth

	push	6144					; 00001800H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 677  :                       output.OutputWord(0xFFFF); //quicktime video color table id (none = -1)

	push	65535					; 0000ffffH
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 678  :                       PushBox(output, DWORD_BE('avcC'));

	push	1130591841				; 43637661H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 679  :                         output.OutputByte(1); //version

	push	1
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 680  :                         output.OutputByte(100); //h264 profile ID

	push	100					; 00000064H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 681  :                         output.OutputByte(0); //h264 compatible profiles

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 682  :                         output.OutputByte(0x1f); //h264 level

	push	31					; 0000001fH
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 683  :                         output.OutputByte(0xff); //reserved

	push	255					; 000000ffH
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 684  :                         output.OutputByte(0xe1); //first half-byte = no clue. second half = sps count

	push	225					; 000000e1H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 685  :                         output.OutputWord(fastHtons(SPS.Num())); //sps size

	lea	ecx, DWORD PTR _SPS$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 686  :                         output.Serialize(SPS.Array(), SPS.Num()); //sps data

	lea	ecx, DWORD PTR _SPS$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	lea	ecx, DWORD PTR _SPS$[ebp]
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 687  :                         output.OutputByte(1); //pps count

	push	1
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 688  :                         output.OutputWord(fastHtons(PPS.Num())); //pps size

	lea	ecx, DWORD PTR _PPS$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	edx, ax
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 689  :                         output.Serialize(PPS.Array(), PPS.Num()); //pps data

	lea	ecx, DWORD PTR _PPS$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	push	eax
	lea	ecx, DWORD PTR _PPS$[ebp]
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 690  :                       PopBox(output); //avcC

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 691  :                     PopBox(output); //avc1

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 692  :                   PopBox(output); //stsd

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 693  :                   PushBox(output, DWORD_BE('stts')); //frame times

	push	1937011827				; 73747473H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 694  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 695  :                     output.OutputDword(fastHtonl(videoDecodeTimes.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 696  :                     for(UINT i=0; i<videoDecodeTimes.Num(); i++)

	mov	DWORD PTR _i$13[ebp], 0
	jmp	SHORT $LN22@MP4FileStr
$LN21@MP4FileStr:
	mov	ecx, DWORD PTR _i$13[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$13[ebp], ecx
$LN22@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	cmp	DWORD PTR _i$13[ebp], eax
	jae	SHORT $LN20@MP4FileStr

; 697  :                     {
; 698  :                         output.OutputDword(fastHtonl(videoDecodeTimes[i].count));

	mov	edx, DWORD PTR _i$13[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z ; List<OffsetVal>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 699  :                         output.OutputDword(fastHtonl(videoDecodeTimes[i].val));

	mov	ecx, DWORD PTR _i$13[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z ; List<OffsetVal>::operator[]
	mov	edx, DWORD PTR [eax+4]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 700  :                     }

	jmp	SHORT $LN21@MP4FileStr
$LN20@MP4FileStr:

; 701  :                   PopBox(output); //stts

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 702  : 
; 703  :                   //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETPOS, 60, 0);
; 704  :                   //ProcessEvents();
; 705  : 
; 706  :                   if (IFrameIDs.Num())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	test	eax, eax
	je	SHORT $LN19@MP4FileStr

; 707  :                   {
; 708  :                       PushBox(output, DWORD_BE('stss')); //list of keyframe (i-frame) IDs

	push	1936946291				; 73737473H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 709  :                         output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 710  :                         output.OutputDword(fastHtonl(IFrameIDs.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 711  :                         output.Serialize(IFrameIDs.Array(), IFrameIDs.Num()*sizeof(UINT));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Num@?$List@I@@QBEIXZ			; List<unsigned int>::Num
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Array@?$List@I@@QBEPAIXZ		; List<unsigned int>::Array
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 712  :                       PopBox(output); //stss

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox
$LN19@MP4FileStr:

; 713  :                   }
; 714  :                   PushBox(output, DWORD_BE('ctts')); //list of composition time offsets

	push	1937011811				; 73747463H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 715  :                     output.OutputDword(0); //version (0) and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 716  :                     //output.OutputDword(DWORD_BE(0x01000000)); //version (1) and flags (none)
; 717  : 
; 718  :                     output.OutputDword(fastHtonl(compositionOffsets.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 719  :                     for(UINT i=0; i<compositionOffsets.Num(); i++)

	mov	DWORD PTR _i$14[ebp], 0
	jmp	SHORT $LN18@MP4FileStr
$LN17@MP4FileStr:
	mov	ecx, DWORD PTR _i$14[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$14[ebp], ecx
$LN18@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@UOffsetVal@@@@QBEIXZ	; List<OffsetVal>::Num
	cmp	DWORD PTR _i$14[ebp], eax
	jae	SHORT $LN16@MP4FileStr

; 720  :                     {
; 721  :                         output.OutputDword(fastHtonl(compositionOffsets[i].count));

	mov	edx, DWORD PTR _i$14[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z ; List<OffsetVal>::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 722  :                         output.OutputDword(fastHtonl(compositionOffsets[i].val));

	mov	ecx, DWORD PTR _i$14[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z ; List<OffsetVal>::operator[]
	mov	edx, DWORD PTR [eax+4]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 723  :                     }

	jmp	SHORT $LN17@MP4FileStr
$LN16@MP4FileStr:

; 724  :                   PopBox(output); //ctts

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 725  : 
; 726  :                   //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETPOS, 70, 0);
; 727  :                   //ProcessEvents();
; 728  : 
; 729  :                   PushBox(output, DWORD_BE('stsc')); //sample to chunk list

	push	1668510835				; 63737473H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 730  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 731  :                     output.OutputDword(fastHtonl(videoSampleToChunk.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	?Num@?$List@USampleToChunk@@@@QBEIXZ	; List<SampleToChunk>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 732  :                     for(UINT i=0; i<videoSampleToChunk.Num(); i++)

	mov	DWORD PTR _i$11[ebp], 0
	jmp	SHORT $LN15@MP4FileStr
$LN14@MP4FileStr:
	mov	edx, DWORD PTR _i$11[ebp]
	add	edx, 1
	mov	DWORD PTR _i$11[ebp], edx
$LN15@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	?Num@?$List@USampleToChunk@@@@QBEIXZ	; List<SampleToChunk>::Num
	cmp	DWORD PTR _i$11[ebp], eax
	jae	SHORT $LN13@MP4FileStr

; 733  :                     {
; 734  :                         SampleToChunk &stc  = videoSampleToChunk[i];

	mov	eax, DWORD PTR _i$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	??A?$List@USampleToChunk@@@@QAEAAUSampleToChunk@@I@Z ; List<SampleToChunk>::operator[]
	mov	DWORD PTR _stc$3[ebp], eax

; 735  :                         output.OutputDword(fastHtonl(stc.firstChunkID));

	mov	ecx, DWORD PTR _stc$3[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 736  :                         output.OutputDword(fastHtonl(stc.samplesPerChunk));

	mov	eax, DWORD PTR _stc$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 737  :                         output.OutputDword(DWORD_BE(1));

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 738  :                     }

	jmp	SHORT $LN14@MP4FileStr
$LN13@MP4FileStr:

; 739  :                   PopBox(output); //stsc

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 740  :                   PushBox(output, DWORD_BE('stsz')); //sample sizes

	push	2054386803				; 7a737473H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 741  :                     output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 742  :                     output.OutputDword(0); //block size for all (0 if differing sizes)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 743  :                     output.OutputDword(fastHtonl(videoFrames.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ; List<MP4VideoFrameInfo>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 744  :                     for(UINT i=0; i<videoFrames.Num(); i++)

	mov	DWORD PTR _i$7[ebp], 0
	jmp	SHORT $LN12@MP4FileStr
$LN11@MP4FileStr:
	mov	ecx, DWORD PTR _i$7[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$7[ebp], ecx
$LN12@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ; List<MP4VideoFrameInfo>::Num
	cmp	DWORD PTR _i$7[ebp], eax
	jae	SHORT $LN10@MP4FileStr

; 745  :                         output.OutputDword(fastHtonl(videoFrames[i].size));

	mov	edx, DWORD PTR _i$7[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??A?$List@UMP4VideoFrameInfo@@@@QAEAAUMP4VideoFrameInfo@@I@Z ; List<MP4VideoFrameInfo>::operator[]
	mov	eax, DWORD PTR [eax+8]
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	jmp	SHORT $LN11@MP4FileStr
$LN10@MP4FileStr:

; 746  :                   PopBox(output);

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 747  : 
; 748  :                   if(videoChunks.Num() && videoChunks.Last() > 0xFFFFFFFFLL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	test	eax, eax
	je	$LN9@MP4FileStr
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	?Last@?$List@_K@@QBEAA_KXZ		; List<unsigned __int64>::Last
	mov	DWORD PTR tv2772[ebp], eax
	mov	edx, DWORD PTR tv2772[ebp]
	cmp	DWORD PTR [edx+4], 0
	ja	SHORT $LN54@MP4FileStr
	mov	eax, DWORD PTR tv2772[ebp]
	cmp	DWORD PTR [eax], -1
	jbe	$LN9@MP4FileStr
$LN54@MP4FileStr:

; 749  :                   {
; 750  :                       PushBox(output, DWORD_BE('co64')); //chunk offsets

	push	875982691				; 34366f63H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 751  :                       output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 752  :                       output.OutputDword(fastHtonl(videoChunks.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 753  :                       for(UINT i=0; i<videoChunks.Num(); i++)

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN8@MP4FileStr
$LN7@MP4FileStr:
	mov	edx, DWORD PTR _i$10[ebp]
	add	edx, 1
	mov	DWORD PTR _i$10[ebp], edx
$LN8@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	cmp	DWORD PTR _i$10[ebp], eax
	jae	SHORT $LN6@MP4FileStr

; 754  :                           output.OutputQword(fastHtonll(videoChunks[i]));

	mov	eax, DWORD PTR _i$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??A?$List@_K@@QAEAA_KI@Z		; List<unsigned __int64>::operator[]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?fastHtonll@@YA_K_K@Z			; fastHtonll
	add	esp, 8
	push	edx
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputQword@Serializer@@QAEAAV1@_K@Z
	jmp	SHORT $LN7@MP4FileStr
$LN6@MP4FileStr:

; 755  :                       PopBox(output); //co64

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 756  :                   }
; 757  :                   else

	jmp	$LN5@MP4FileStr
$LN9@MP4FileStr:

; 758  :                   {
; 759  :                       PushBox(output, DWORD_BE('stco')); //chunk offsets

	push	1868788851				; 6f637473H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 760  :                         output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 761  :                         output.OutputDword(fastHtonl(videoChunks.Num()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 762  :                         for(UINT i=0; i<videoChunks.Num(); i++)

	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN4@MP4FileStr
$LN3@MP4FileStr:
	mov	edx, DWORD PTR _i$8[ebp]
	add	edx, 1
	mov	DWORD PTR _i$8[ebp], edx
$LN4@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	cmp	DWORD PTR _i$8[ebp], eax
	jae	SHORT $LN2@MP4FileStr

; 763  :                             output.OutputDword(fastHtonl((DWORD)videoChunks[i]));

	mov	eax, DWORD PTR _i$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??A?$List@_K@@QAEAA_KI@Z		; List<unsigned __int64>::operator[]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z
	jmp	SHORT $LN3@MP4FileStr
$LN2@MP4FileStr:

; 764  :                       PopBox(output); //stco

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox
$LN5@MP4FileStr:

; 765  :                   }
; 766  :                 PopBox(output); //stbl

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 767  :               PopBox(output); //minf

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 768  :             PopBox(output); //mdia

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 769  :           PopBox(output); //trak

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 770  : 
; 771  :           //SendMessage(GetDlgItem(hwndProgressDialog, IDC_PROGRESS1), PBM_SETPOS, 80, 0);
; 772  :           //ProcessEvents();
; 773  : 
; 774  :           //------------------------------------------------------
; 775  :           // info thingy
; 776  :           PushBox(output, DWORD_BE('udta'));

	push	1635017845				; 61746475H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 777  :             PushBox(output, DWORD_BE('meta'));

	push	1635018093				; 6174656dH
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 778  :               output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 779  :               PushBox(output, DWORD_BE('hdlr'));

	push	1919706216				; 726c6468H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 780  :                 output.OutputDword(0); //version and flags (none)

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 781  :                 output.OutputDword(0); //quicktime type

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 782  :                 output.OutputDword(DWORD_BE('mdir')); //metadata type

	push	1919509613				; 7269646dH
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 783  :                 output.OutputDword(DWORD_BE('appl')); //quicktime manufacturer reserved thingy

	push	1819308129				; 6c707061H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 784  :                 output.OutputDword(0); //quicktime component reserved flag

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 785  :                 output.OutputDword(0); //quicktime component reserved flag mask

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 786  :                 output.OutputByte(0); //null string

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputByte@Serializer@@QAEAAV1@E@Z

; 787  :               PopBox(output); //hdlr

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 788  :               PushBox(output, DWORD_BE('ilst'));

	push	1953721449				; 74736c69H
	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 789  :                 PushBox(output, DWORD_BE('\xa9too'));

	push	1869575337				; 6f6f74a9H
	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 790  :                   PushBox(output, DWORD_BE('data'));

	push	1635017060				; 61746164H
	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@K@Z ; MP4FileStream::PushBox

; 791  :                     output.OutputDword(DWORD_BE(1)); //version (1) + flags (0)

	push	16777216				; 01000000H
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 792  :                     output.OutputDword(0); //reserved

	push	0
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?OutputDword@Serializer@@QAEAAV1@K@Z

; 793  :                     LPSTR lpVersion = OBS_VERSION_STRING_ANSI;

	mov	DWORD PTR _lpVersion$[ebp], OFFSET ??_C@_0CC@FDGKDEH@Open?5Broadcaster?5Software?5v0?4657@

; 794  :                     output.Serialize(lpVersion, (DWORD)strlen(lpVersion));

	mov	edx, DWORD PTR _lpVersion$[ebp]
	mov	DWORD PTR tv2823[ebp], edx
	mov	eax, DWORD PTR tv2823[ebp]
	add	eax, 1
	mov	DWORD PTR tv2826[ebp], eax
$LL55@MP4FileStr:
	mov	ecx, DWORD PTR tv2823[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv2829[ebp], dl
	add	DWORD PTR tv2823[ebp], 1
	cmp	BYTE PTR tv2829[ebp], 0
	jne	SHORT $LL55@MP4FileStr
	mov	eax, DWORD PTR tv2823[ebp]
	sub	eax, DWORD PTR tv2826[ebp]
	mov	DWORD PTR tv2267[ebp], eax
	mov	ecx, DWORD PTR tv2267[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpVersion$[ebp]
	push	edx
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?Serialize@BufferOutputSerializer@@UAEXPBXK@Z

; 795  :                   PopBox(output); //data

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 796  :                 PopBox(output); //@too

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 797  :               PopBox(output); //ilst

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 798  :             PopBox(output); //meta

	lea	eax, DWORD PTR _output$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 799  :           PopBox(output); //udta

	lea	ecx, DWORD PTR _output$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 800  : 
; 801  :         PopBox(output); //moov

	lea	edx, DWORD PTR _output$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PopBox@MP4FileStream@@AAEXAAVBufferOutputSerializer@@@Z ; MP4FileStream::PopBox

; 802  : 
; 803  :         fileOut.Serialize(endBuffer.Array(), (DWORD)output.GetPos());

	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_?GetPos@BufferOutputSerializer@@UBE_KXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 804  :         fileOut.Close();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Close@XFileOutputSerializer@@QAEXXZ	; XFileOutputSerializer::Close

; 805  : 
; 806  :         XFile file;

	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_??0XFile@@QAE@XZ

; 807  :         if(file.Open(strFile, XFILE_WRITE, XFILE_OPENEXISTING))

	push	3
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?Open@XFile@@QAEHPB_WKK@Z
	test	eax, eax
	je	SHORT $LN1@MP4FileStr

; 808  :         {
; 809  : #ifdef USE_64BIT_MP4
; 810  :             file.SetPos((INT64)mdatStart+8, XFILE_BEGIN);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+240]
	add	edx, 8
	mov	eax, DWORD PTR [ecx+244]
	adc	eax, 0
	push	eax
	push	edx
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?SetPos@XFile@@QAE_K_JK@Z

; 811  : 
; 812  :             UINT64 size = fastHtonll(mdatStop-mdatStart);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+248]
	sub	eax, DWORD PTR [edx+240]
	mov	ecx, DWORD PTR [ecx+252]
	sbb	ecx, DWORD PTR [edx+244]
	push	ecx
	push	eax
	call	?fastHtonll@@YA_K_K@Z			; fastHtonll
	add	esp, 8
	mov	DWORD PTR _size$1[ebp], eax
	mov	DWORD PTR _size$1[ebp+4], edx

; 813  :             file.Write(&size, 8);

	push	8
	lea	edx, DWORD PTR _size$1[ebp]
	push	edx
	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?Write@XFile@@QAEKPBXK@Z

; 814  : #else
; 815  :             file.SetPos((INT64)mdatStart, XFILE_BEGIN);
; 816  :             UINT size = fastHtonl((DWORD)(mdatStop-mdatStart));
; 817  :             file.Write(&size, 4);
; 818  : #endif
; 819  :             file.Close();

	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_?Close@XFile@@QAEXXZ
$LN1@MP4FileStr:

; 820  :         }
; 821  : 
; 822  :         App->EnableSceneSwitching(true);

	push	1
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?EnableSceneSwitching@OBS@@QAEX_N@Z	; OBS::EnableSceneSwitching

; 823  : 
; 824  :         //DestroyWindow(hwndProgressDialog);
; 825  :     }

	lea	ecx, DWORD PTR _file$[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _esOut$[ebp]
	call	DWORD PTR __imp_??1BufferOutputSerializer@@UAE@XZ
	lea	ecx, DWORD PTR _esDescriptor$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _esDecoderOut$[ebp]
	call	DWORD PTR __imp_??1BufferOutputSerializer@@UAE@XZ
	lea	ecx, DWORD PTR _esDecoderDescriptor$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _PPS$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _SPS$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _output$[ebp]
	call	DWORD PTR __imp_??1BufferOutputSerializer@@UAE@XZ
$LN44@MP4FileStr:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??1BufferedDataPacket@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??1BufferedDataPacket@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	??1BufferedDataPacket@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??1?$List@UOffsetVal@@@@QAE@XZ		; List<OffsetVal>::~List<OffsetVal>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??1?$List@UOffsetVal@@@@QAE@XZ		; List<OffsetVal>::~List<OffsetVal>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1?$List@UOffsetVal@@@@QAE@XZ		; List<OffsetVal>::~List<OffsetVal>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	??1?$List@USampleToChunk@@@@QAE@XZ	; List<SampleToChunk>::~List<SampleToChunk>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	??1?$List@USampleToChunk@@@@QAE@XZ	; List<SampleToChunk>::~List<SampleToChunk>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??1?$List@_K@@QAE@XZ			; List<unsigned __int64>::~List<unsigned __int64>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??1?$List@_K@@QAE@XZ			; List<unsigned __int64>::~List<unsigned __int64>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1?$List@I@@QAE@XZ			; List<unsigned int>::~List<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??1?$List@UMP4AudioFrameInfo@@@@QAE@XZ	; List<MP4AudioFrameInfo>::~List<MP4AudioFrameInfo>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1?$List@UMP4VideoFrameInfo@@@@QAE@XZ	; List<MP4VideoFrameInfo>::~List<MP4VideoFrameInfo>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1XFileOutputSerializer@@UAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VideoFileStream@@UAE@XZ		; VideoFileStream::~VideoFileStream
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??1MP4FileStream@@UAE@XZ ENDP				; MP4FileStream::~MP4FileStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?AddPacket@MP4FileStream@@UAEXPBEIKKW4PacketType@@@Z
_TEXT	SEGMENT
$T1 = -88						; size = 4
tv361 = -84						; size = 4
_ppsSize$2 = -80					; size = 4
_offset$ = -76						; size = 8
_spsSize$3 = -68					; size = 4
_copySize$4 = -64					; size = 4
_lpData$5 = -60						; size = 4
_timeOffset$6 = -56					; size = 4
_totalCopied$7 = -52					; size = 4
_this$ = -48						; size = 4
_frameInfo$8 = -44					; size = 24
_audioFrame$9 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_timestamp$ = 16					; size = 4
___formal$ = 20						; size = 4
_type$ = 24						; size = 4
?AddPacket@MP4FileStream@@UAEXPBEIKKW4PacketType@@@Z PROC ; MP4FileStream::AddPacket, COMDAT
; _this$ = ecx

; 828  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 829  :         InitBufferedPackets();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitBufferedPackets@MP4FileStream@@QAEXXZ ; MP4FileStream::InitBufferedPackets

; 830  : 
; 831  :         UINT64 offset = fileOut.GetPos();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR _offset$[ebp], eax
	mov	DWORD PTR _offset$[ebp+4], edx

; 832  : 
; 833  :         if(initialTimeStamp == -1 && data[0] != 0x17)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+100], -1
	jne	SHORT $LN18@AddPacket
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 23					; 00000017H
	je	SHORT $LN18@AddPacket

; 834  :             return;

	jmp	$LN19@AddPacket
	jmp	SHORT $LN17@AddPacket
$LN18@AddPacket:

; 835  :         else if(initialTimeStamp == -1 && data[0] == 0x17) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], -1
	jne	SHORT $LN17@AddPacket
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 23					; 00000017H
	jne	SHORT $LN17@AddPacket

; 836  :             initialTimeStamp = timestamp;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _timestamp$[ebp]
	mov	DWORD PTR [edx+100], eax
$LN17@AddPacket:

; 837  :         }
; 838  : 
; 839  :         if(type == PacketType_Audio)

	cmp	DWORD PTR _type$[ebp], 4
	jne	$LN15@AddPacket

; 840  :         {
; 841  :             UINT copySize;
; 842  : 
; 843  :             if(bMP3)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+105]
	test	edx, edx
	je	SHORT $LN14@AddPacket

; 844  :             {
; 845  :                 copySize = size-1;

	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _copySize$4[ebp], eax

; 846  :                 fileOut.Serialize(data+1, copySize);

	mov	ecx, DWORD PTR _copySize$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 847  :             }
; 848  :             else

	jmp	SHORT $LN13@AddPacket
$LN14@AddPacket:

; 849  :             {
; 850  :                 copySize = size-2;

	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, 2
	mov	DWORD PTR _copySize$4[ebp], ecx

; 851  :                 fileOut.Serialize(data+2, copySize);

	mov	edx, DWORD PTR _copySize$4[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN13@AddPacket:

; 852  :             }
; 853  : 
; 854  :             MP4AudioFrameInfo audioFrame;
; 855  :             audioFrame.fileOffset   = offset;

	mov	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _audioFrame$9[ebp], eax
	mov	ecx, DWORD PTR _offset$[ebp+4]
	mov	DWORD PTR _audioFrame$9[ebp+4], ecx

; 856  :             audioFrame.size         = copySize;

	mov	edx, DWORD PTR _copySize$4[ebp]
	mov	DWORD PTR _audioFrame$9[ebp+8], edx

; 857  :             audioFrame.timestamp    = timestamp-initialTimeStamp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timestamp$[ebp]
	sub	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR _audioFrame$9[ebp+12], ecx

; 858  : 
; 859  :             GetChunkInfo<MP4AudioFrameInfo>(audioFrame, audioFrames.Num(), audioChunks, audioSampleToChunk,
; 860  :                                             curAudioChunkOffset, connectedAudioSampleOffset, numAudioSamples);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 192				; 000000c0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 176				; 000000b0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ; List<MP4AudioFrameInfo>::Num
	push	eax
	lea	ecx, DWORD PTR _audioFrame$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$GetChunkInfo@UMP4AudioFrameInfo@@@MP4FileStream@@QAEXABUMP4AudioFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z ; MP4FileStream::GetChunkInfo<MP4AudioFrameInfo>

; 861  : 
; 862  :             if(audioFrames.Num())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ; List<MP4AudioFrameInfo>::Num
	test	eax, eax
	je	SHORT $LN12@AddPacket

; 863  :                 GetAudioDecodeTime(audioFrames.Last(), false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Last@?$List@UMP4AudioFrameInfo@@@@QBEAAUMP4AudioFrameInfo@@XZ ; List<MP4AudioFrameInfo>::Last
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAudioDecodeTime@MP4FileStream@@QAEXAAUMP4AudioFrameInfo@@_N@Z ; MP4FileStream::GetAudioDecodeTime
$LN12@AddPacket:

; 864  : 
; 865  :             audioFrames << audioFrame;

	lea	edx, DWORD PTR _audioFrame$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??6?$List@UMP4AudioFrameInfo@@@@QAEAAV0@ABUMP4AudioFrameInfo@@@Z ; List<MP4AudioFrameInfo>::operator<<

; 866  :         }
; 867  :         else

	jmp	$LN19@AddPacket
$LN15@AddPacket:

; 868  :         {
; 869  :             UINT totalCopied = 0;

	mov	DWORD PTR _totalCopied$7[ebp], 0

; 870  : 
; 871  :             if(data[0] == 0x17 && data[1] == 0) //if SPS/PPS

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 23					; 00000017H
	jne	$LN10@AddPacket
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	jne	$LN10@AddPacket

; 872  :             {
; 873  :                 const BYTE *lpData = data+11;

	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 11					; 0000000bH
	mov	DWORD PTR _lpData$5[ebp], ecx

; 874  : 
; 875  :                 UINT spsSize = fastHtons(*(WORD*)lpData);

	mov	edx, DWORD PTR _lpData$5[ebp]
	movzx	eax, WORD PTR [edx]
	push	eax
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _spsSize$3[ebp], ecx

; 876  :                 fileOut.OutputWord(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 877  :                 fileOut.Serialize(lpData, spsSize+2);

	mov	edx, DWORD PTR _spsSize$3[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _lpData$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 878  : 
; 879  :                 lpData += spsSize+3;

	mov	eax, DWORD PTR _spsSize$3[ebp]
	mov	ecx, DWORD PTR _lpData$5[ebp]
	lea	edx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR _lpData$5[ebp], edx

; 880  : 
; 881  :                 UINT ppsSize = fastHtons(*(WORD*)lpData);

	mov	eax, DWORD PTR _lpData$5[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?fastHtons@@YAGG@Z			; fastHtons
	add	esp, 4
	movzx	edx, ax
	mov	DWORD PTR _ppsSize$2[ebp], edx

; 882  :                 fileOut.OutputWord(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?OutputWord@Serializer@@QAEAAV1@G@Z

; 883  :                 fileOut.Serialize(lpData, ppsSize+2);

	mov	eax, DWORD PTR _ppsSize$2[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _lpData$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 884  : 
; 885  :                 totalCopied = spsSize+ppsSize+8;

	mov	eax, DWORD PTR _ppsSize$2[ebp]
	mov	ecx, DWORD PTR _spsSize$3[ebp]
	lea	edx, DWORD PTR [ecx+eax+8]
	mov	DWORD PTR _totalCopied$7[ebp], edx

; 886  :             }
; 887  :             else

	jmp	$LN9@AddPacket
$LN10@AddPacket:

; 888  :             {
; 889  :                 if (!bSentSEI) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+257]
	test	ecx, ecx
	jne	SHORT $LN8@AddPacket

; 890  :                     if (sei.size > 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+284], 0
	jbe	SHORT $LN8@AddPacket

; 891  :                     {
; 892  :                         fileOut.Serialize(sei.lpPacket, sei.size);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 893  :                         totalCopied += sei.size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _totalCopied$7[ebp]
	add	ecx, DWORD PTR [eax+284]
	mov	DWORD PTR _totalCopied$7[ebp], ecx

; 894  : 
; 895  :                         bSentSEI = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+257], 1
$LN8@AddPacket:

; 896  :                     }
; 897  :                 }
; 898  : 
; 899  :                 totalCopied += size-5;

	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _totalCopied$7[ebp]
	lea	edx, DWORD PTR [ecx+eax-5]
	mov	DWORD PTR _totalCopied$7[ebp], edx

; 900  :                 fileOut.Serialize(data+5, size-5);

	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 5
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 5
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN9@AddPacket:

; 901  :             }
; 902  : 
; 903  :             if(!videoFrames.Num() || (timestamp-initialTimeStamp) != lastVideoTimestamp)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ; List<MP4VideoFrameInfo>::Num
	test	eax, eax
	je	SHORT $LN5@AddPacket
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timestamp$[ebp]
	sub	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+96]
	je	$LN6@AddPacket
$LN5@AddPacket:

; 904  :             {
; 905  :                 INT timeOffset = 0;

	mov	DWORD PTR _timeOffset$6[ebp], 0

; 906  :                 mcpy(((BYTE*)&timeOffset)+1, data+2, 3);

	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 2
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _timeOffset$6[ebp+1], cx
	mov	dl, BYTE PTR [eax+2]
	mov	BYTE PTR _timeOffset$6[ebp+3], dl

; 907  :                 if(data[2] >= 0x80)

	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 128				; 00000080H
	jl	SHORT $LN4@AddPacket

; 908  :                     timeOffset |= 0xFF;

	mov	eax, DWORD PTR _timeOffset$6[ebp]
	or	eax, 255				; 000000ffH
	mov	DWORD PTR _timeOffset$6[ebp], eax
$LN4@AddPacket:

; 909  :                 timeOffset = (INT)fastHtonl(DWORD(timeOffset));

	mov	ecx, DWORD PTR _timeOffset$6[ebp]
	push	ecx
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR _timeOffset$6[ebp], eax

; 910  : 
; 911  :                 if(data[0] == 0x17) //i-frame

	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 23					; 00000017H
	jne	SHORT $LN3@AddPacket

; 912  :                     IFrameIDs << fastHtonl(videoFrames.Num()+1);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ; List<MP4VideoFrameInfo>::Num
	add	eax, 1
	push	eax
	call	?fastHtonl@@YAKK@Z			; fastHtonl
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??6?$List@I@@QAEAAV0@ABI@Z		; List<unsigned int>::operator<<
$LN3@AddPacket:

; 913  : 
; 914  :                 MP4VideoFrameInfo frameInfo;
; 915  :                 frameInfo.fileOffset        = offset;

	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _frameInfo$8[ebp], ecx
	mov	edx, DWORD PTR _offset$[ebp+4]
	mov	DWORD PTR _frameInfo$8[ebp+4], edx

; 916  :                 frameInfo.size              = totalCopied;

	mov	eax, DWORD PTR _totalCopied$7[ebp]
	mov	DWORD PTR _frameInfo$8[ebp+8], eax

; 917  :                 frameInfo.timestamp         = timestamp-initialTimeStamp;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _timestamp$[ebp]
	sub	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR _frameInfo$8[ebp+12], edx

; 918  :                 frameInfo.compositionOffset = timeOffset;

	mov	eax, DWORD PTR _timeOffset$6[ebp]
	mov	DWORD PTR _frameInfo$8[ebp+16], eax

; 919  : 
; 920  :                 GetChunkInfo<MP4VideoFrameInfo>(frameInfo, videoFrames.Num(), videoChunks, videoSampleToChunk,
; 921  :                                                 curVideoChunkOffset, connectedVideoSampleOffset, numVideoSamples);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 136				; 00000088H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 144				; 00000090H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 168				; 000000a8H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ; List<MP4VideoFrameInfo>::Num
	push	eax
	lea	eax, DWORD PTR _frameInfo$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$GetChunkInfo@UMP4VideoFrameInfo@@@MP4FileStream@@QAEXABUMP4VideoFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z ; MP4FileStream::GetChunkInfo<MP4VideoFrameInfo>

; 922  : 
; 923  :                 if(videoFrames.Num())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ; List<MP4VideoFrameInfo>::Num
	test	eax, eax
	je	SHORT $LN2@AddPacket

; 924  :                     GetVideoDecodeTime(frameInfo, false);

	push	0
	lea	ecx, DWORD PTR _frameInfo$8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetVideoDecodeTime@MP4FileStream@@QAEXAAUMP4VideoFrameInfo@@_N@Z ; MP4FileStream::GetVideoDecodeTime
$LN2@AddPacket:

; 925  : 
; 926  :                 videoFrames << frameInfo;

	lea	edx, DWORD PTR _frameInfo$8[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??6?$List@UMP4VideoFrameInfo@@@@QAEAAV0@ABUMP4VideoFrameInfo@@@Z ; List<MP4VideoFrameInfo>::operator<<

; 927  :             }
; 928  :             else

	jmp	SHORT $LN1@AddPacket
$LN6@AddPacket:

; 929  :                 videoFrames.Last().size += totalCopied;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ ; List<MP4VideoFrameInfo>::Last
	add	eax, 8
	mov	DWORD PTR tv361[ebp], eax
	mov	eax, DWORD PTR tv361[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _totalCopied$7[ebp]
	mov	edx, DWORD PTR tv361[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@AddPacket:

; 930  : 
; 931  :             lastVideoTimestamp = timestamp-initialTimeStamp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timestamp$[ebp]
	sub	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], ecx
$LN19@AddPacket:

; 932  :         }
; 933  :     }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddPacket@MP4FileStream@@UAEXPBEIKKW4PacketType@@@Z ENDP ; MP4FileStream::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GMP4FileStream@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMP4FileStream@@UAEPAXI@Z PROC			; MP4FileStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MP4FileStream@@UAE@XZ		; MP4FileStream::~MP4FileStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMP4FileStream@@UAEPAXI@Z ENDP			; MP4FileStream::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ?CreateMP4FileStream@@YAPAVVideoFileStream@@PB_W@Z
_TEXT	SEGMENT
tv89 = -24						; size = 4
$T1 = -20						; size = 4
tv69 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_fileStream$ = -4					; size = 4
_lpFile$ = 8						; size = 4
?CreateMP4FileStream@@YAPAVVideoFileStream@@PB_W@Z PROC	; CreateMP4FileStream, COMDAT

; 938  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 939  :     MP4FileStream *fileStream = new MP4FileStream;

	push	424					; 000001a8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@CreateMP4F
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0MP4FileStream@@QAE@XZ
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN5@CreateMP4F
$LN4@CreateMP4F:
	mov	DWORD PTR tv69[ebp], 0
$LN5@CreateMP4F:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _fileStream$[ebp], eax

; 940  :     if(fileStream->Init(lpFile))

	mov	ecx, DWORD PTR _lpFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fileStream$[ebp]
	call	?Init@MP4FileStream@@QAE_NPB_W@Z	; MP4FileStream::Init
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@CreateMP4F

; 941  :         return fileStream;

	mov	eax, DWORD PTR _fileStream$[ebp]
	jmp	SHORT $LN2@CreateMP4F
$LN1@CreateMP4F:

; 942  : 
; 943  :     delete fileStream;

	mov	eax, DWORD PTR _fileStream$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@CreateMP4F
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN7@CreateMP4F
$LN6@CreateMP4F:
	mov	DWORD PTR tv89[ebp], 0
$LN7@CreateMP4F:

; 944  :     return NULL;

	xor	eax, eax
$LN2@CreateMP4F:

; 945  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CreateMP4FileStream@@YAPAVVideoFileStream@@PB_W@Z ENDP	; CreateMP4FileStream
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0MP4FileStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MP4FileStream@@QAE@XZ PROC				; MP4FileStream::MP4FileStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VideoFileStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MP4FileStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0XFileOutputSerializer@@QAE@XZ	; XFileOutputSerializer::XFileOutputSerializer
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0?$List@UMP4VideoFrameInfo@@@@QAE@XZ	; List<MP4VideoFrameInfo>::List<MP4VideoFrameInfo>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0?$List@UMP4AudioFrameInfo@@@@QAE@XZ	; List<MP4AudioFrameInfo>::List<MP4AudioFrameInfo>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0?$List@I@@QAE@XZ			; List<unsigned int>::List<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0?$List@E@@QAE@XZ			; List<unsigned char>::List<unsigned char>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0?$List@I@@QAE@XZ			; List<unsigned int>::List<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	??0?$List@_K@@QAE@XZ			; List<unsigned __int64>::List<unsigned __int64>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	call	??0?$List@_K@@QAE@XZ			; List<unsigned __int64>::List<unsigned __int64>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	??0?$List@USampleToChunk@@@@QAE@XZ	; List<SampleToChunk>::List<SampleToChunk>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	??0?$List@USampleToChunk@@@@QAE@XZ	; List<SampleToChunk>::List<SampleToChunk>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0?$List@UOffsetVal@@@@QAE@XZ		; List<OffsetVal>::List<OffsetVal>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??0?$List@UOffsetVal@@@@QAE@XZ		; List<OffsetVal>::List<OffsetVal>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??0?$List@UOffsetVal@@@@QAE@XZ		; List<OffsetVal>::List<OffsetVal>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+260], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+264], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+268], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+272], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 280				; 00000118H
	push	eax
	call	?GetBufferedSEIPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedSEIPacket
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	push	ecx
	call	?GetBufferedAudioHeadersPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedAudioHeadersPacket
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 376				; 00000178H
	push	edx
	call	?GetBufferedVideoHeadersPacket@@YA?AUBufferedDataPacket@@XZ ; GetBufferedVideoHeadersPacket
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0MP4FileStream@@QAE@XZ ENDP				; MP4FileStream::MP4FileStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@I@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@I@@QBEIXZ PROC				; List<unsigned int>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@I@@QBEIXZ ENDP				; List<unsigned int>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Insert@?$List@I@@QAEXIABI@Z
_TEXT	SEGMENT
_moveCount$ = -16					; size = 4
tv94 = -12						; size = 4
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_val$ = 12						; size = 4
?Insert@?$List@I@@QAEXIABI@Z PROC			; List<unsigned int>::Insert, COMDAT
; _this$ = ecx

; 64   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 65   :         assert(index <= num);
; 66   :         if(index > num) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN3@Insert
	jmp	$LN4@Insert
$LN3@Insert:

; 67   : 
; 68   :         if(!num && !index)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN2@Insert
	cmp	DWORD PTR _index$[ebp], 0
	jne	SHORT $LN2@Insert

; 69   :         {
; 70   :             Add(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$List@I@@QAEIABI@Z		; List<unsigned int>::Add

; 71   :             return;

	jmp	$LN4@Insert
$LN2@Insert:

; 72   :         }
; 73   : 
; 74   :         //this makes it safe to insert an item already in the list
; 75   :         T *temp = (T*)Allocate(sizeof(T));

	push	4
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR _temp$[ebp], eax

; 76   :         mcpy(temp, &val, sizeof(T));

	mov	ecx, DWORD PTR _temp$[ebp]
	mov	edx, DWORD PTR _val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 77   : 
; 78   :         UINT moveCount = num-index;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR _moveCount$[ebp], edx

; 79   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv94[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR tv94[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 80   :         if(moveCount)

	cmp	DWORD PTR _moveCount$[ebp], 0
	je	SHORT $LN1@Insert

; 81   :             mcpyrev(array+(index+1), array+index, moveCount*sizeof(T));

	mov	edx, DWORD PTR _moveCount$[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _index$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4+4]
	push	ecx
	call	?mcpyrev@@YGXPAXPBXI@Z			; mcpyrev
$LN1@Insert:

; 82   :         mcpy(&array[index], temp, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _temp$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx*4], edx

; 83   : 
; 84   :         Free(temp);

	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4
$LN4@Insert:

; 85   :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?Insert@?$List@I@@QAEXIABI@Z ENDP			; List<unsigned int>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Remove@?$List@I@@QAEXI@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Remove@?$List@I@@QAEXI@Z PROC				; List<unsigned int>::Remove, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         assert(index < num);
; 90   :         if(index >= num) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN2@Remove
	jmp	$LN3@Remove
$LN2@Remove:

; 91   : 
; 92   :         if(!--num) {Free(array); array=NULL; return;}

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR [ecx+4], edx
	cmp	DWORD PTR tv68[ebp], 0
	jne	SHORT $LN1@Remove
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
	jmp	SHORT $LN3@Remove
$LN1@Remove:

; 93   : 
; 94   :         mcpy(&array[index], &array[index+1], sizeof(T)*(num-index));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _index$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 95   : 
; 96   :         array = (T*)ReAllocate(array, sizeof(T)*num);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@Remove:

; 97   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@?$List@I@@QAEXI@Z ENDP				; List<unsigned int>::Remove
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@_K@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@_K@@QBEIXZ PROC				; List<unsigned __int64>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@_K@@QBEIXZ ENDP				; List<unsigned __int64>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Last@?$List@_K@@QBEAA_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Last@?$List@_K@@QBEAA_KXZ PROC				; List<unsigned __int64>::Last, COMDAT
; _this$ = ecx

; 446  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 447  :         assert(num > 0);
; 448  : 
; 449  :         return array[num-1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [eax+ecx*8-8]

; 450  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Last@?$List@_K@@QBEAA_KXZ ENDP				; List<unsigned __int64>::Last
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@UMP4VideoFrameInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$List@UMP4VideoFrameInfo@@@@QAE@XZ PROC		; List<MP4VideoFrameInfo>::List<MP4VideoFrameInfo>, COMDAT
; _this$ = ecx

; 35   :     inline List() : array(NULL), num(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMP4VideoFrameInfo@@@@QAE@XZ ENDP		; List<MP4VideoFrameInfo>::List<MP4VideoFrameInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??1?$List@UMP4VideoFrameInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$List@UMP4VideoFrameInfo@@@@QAE@XZ PROC		; List<MP4VideoFrameInfo>::~List<MP4VideoFrameInfo>, COMDAT
; _this$ = ecx

; 37   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   :         Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMP4VideoFrameInfo@@@@QAEXXZ ; List<MP4VideoFrameInfo>::Clear

; 39   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMP4VideoFrameInfo@@@@QAE@XZ ENDP		; List<MP4VideoFrameInfo>::~List<MP4VideoFrameInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ PROC		; List<MP4VideoFrameInfo>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@UMP4VideoFrameInfo@@@@QBEIXZ ENDP		; List<MP4VideoFrameInfo>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??6?$List@UMP4VideoFrameInfo@@@@QAEAAV0@ABUMP4VideoFrameInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
??6?$List@UMP4VideoFrameInfo@@@@QAEAAV0@ABUMP4VideoFrameInfo@@@Z PROC ; List<MP4VideoFrameInfo>::operator<<, COMDAT
; _this$ = ecx

; 366  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  :         Add(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$List@UMP4VideoFrameInfo@@@@QAEIABUMP4VideoFrameInfo@@@Z ; List<MP4VideoFrameInfo>::Add

; 368  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 369  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??6?$List@UMP4VideoFrameInfo@@@@QAEAAV0@ABUMP4VideoFrameInfo@@@Z ENDP ; List<MP4VideoFrameInfo>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??A?$List@UMP4VideoFrameInfo@@@@QAEAAUMP4VideoFrameInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$List@UMP4VideoFrameInfo@@@@QAEAAUMP4VideoFrameInfo@@I@Z PROC ; List<MP4VideoFrameInfo>::operator[], COMDAT
; _this$ = ecx

; 379  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  :         assert(index < num);
; 381  :         if(index >= num) {DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AUMP4VideoFrameInfo@@@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	mov	eax, 24					; 00000018H
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator
$LN1@operator:

; 382  :         return array[index];

	imul	eax, DWORD PTR _index$[ebp], 24
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx]
$LN3@operator:

; 383  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMP4VideoFrameInfo@@@@QAEAAUMP4VideoFrameInfo@@I@Z ENDP ; List<MP4VideoFrameInfo>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ PROC ; List<MP4VideoFrameInfo>::Last, COMDAT
; _this$ = ecx

; 446  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 447  :         assert(num > 0);
; 448  : 
; 449  :         return array[num-1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	imul	eax, ecx, 24
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx]

; 450  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Last@?$List@UMP4VideoFrameInfo@@@@QBEAAUMP4VideoFrameInfo@@XZ ENDP ; List<MP4VideoFrameInfo>::Last
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@UMP4AudioFrameInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$List@UMP4AudioFrameInfo@@@@QAE@XZ PROC		; List<MP4AudioFrameInfo>::List<MP4AudioFrameInfo>, COMDAT
; _this$ = ecx

; 35   :     inline List() : array(NULL), num(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UMP4AudioFrameInfo@@@@QAE@XZ ENDP		; List<MP4AudioFrameInfo>::List<MP4AudioFrameInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??1?$List@UMP4AudioFrameInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$List@UMP4AudioFrameInfo@@@@QAE@XZ PROC		; List<MP4AudioFrameInfo>::~List<MP4AudioFrameInfo>, COMDAT
; _this$ = ecx

; 37   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   :         Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UMP4AudioFrameInfo@@@@QAEXXZ ; List<MP4AudioFrameInfo>::Clear

; 39   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UMP4AudioFrameInfo@@@@QAE@XZ ENDP		; List<MP4AudioFrameInfo>::~List<MP4AudioFrameInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ PROC		; List<MP4AudioFrameInfo>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@UMP4AudioFrameInfo@@@@QBEIXZ ENDP		; List<MP4AudioFrameInfo>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??6?$List@UMP4AudioFrameInfo@@@@QAEAAV0@ABUMP4AudioFrameInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
??6?$List@UMP4AudioFrameInfo@@@@QAEAAV0@ABUMP4AudioFrameInfo@@@Z PROC ; List<MP4AudioFrameInfo>::operator<<, COMDAT
; _this$ = ecx

; 366  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  :         Add(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$List@UMP4AudioFrameInfo@@@@QAEIABUMP4AudioFrameInfo@@@Z ; List<MP4AudioFrameInfo>::Add

; 368  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 369  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??6?$List@UMP4AudioFrameInfo@@@@QAEAAV0@ABUMP4AudioFrameInfo@@@Z ENDP ; List<MP4AudioFrameInfo>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??A?$List@UMP4AudioFrameInfo@@@@QAEAAUMP4AudioFrameInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$List@UMP4AudioFrameInfo@@@@QAEAAUMP4AudioFrameInfo@@I@Z PROC ; List<MP4AudioFrameInfo>::operator[], COMDAT
; _this$ = ecx

; 379  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  :         assert(index < num);
; 381  :         if(index >= num) {DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AUMP4AudioFrameInfo@@@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	mov	eax, 16					; 00000010H
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator
$LN1@operator:

; 382  :         return array[index];

	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 4
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx]
$LN3@operator:

; 383  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UMP4AudioFrameInfo@@@@QAEAAUMP4AudioFrameInfo@@I@Z ENDP ; List<MP4AudioFrameInfo>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Last@?$List@UMP4AudioFrameInfo@@@@QBEAAUMP4AudioFrameInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Last@?$List@UMP4AudioFrameInfo@@@@QBEAAUMP4AudioFrameInfo@@XZ PROC ; List<MP4AudioFrameInfo>::Last, COMDAT
; _this$ = ecx

; 446  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 447  :         assert(num > 0);
; 448  : 
; 449  :         return array[num-1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 450  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Last@?$List@UMP4AudioFrameInfo@@@@QBEAAUMP4AudioFrameInfo@@XZ ENDP ; List<MP4AudioFrameInfo>::Last
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@USampleToChunk@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$List@USampleToChunk@@@@QAE@XZ PROC			; List<SampleToChunk>::List<SampleToChunk>, COMDAT
; _this$ = ecx

; 35   :     inline List() : array(NULL), num(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@USampleToChunk@@@@QAE@XZ ENDP			; List<SampleToChunk>::List<SampleToChunk>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??1?$List@USampleToChunk@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$List@USampleToChunk@@@@QAE@XZ PROC			; List<SampleToChunk>::~List<SampleToChunk>, COMDAT
; _this$ = ecx

; 37   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   :         Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@USampleToChunk@@@@QAEXXZ	; List<SampleToChunk>::Clear

; 39   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@USampleToChunk@@@@QAE@XZ ENDP			; List<SampleToChunk>::~List<SampleToChunk>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@USampleToChunk@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@USampleToChunk@@@@QBEIXZ PROC		; List<SampleToChunk>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@USampleToChunk@@@@QBEIXZ ENDP		; List<SampleToChunk>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??6?$List@USampleToChunk@@@@QAEAAV0@ABUSampleToChunk@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
??6?$List@USampleToChunk@@@@QAEAAV0@ABUSampleToChunk@@@Z PROC ; List<SampleToChunk>::operator<<, COMDAT
; _this$ = ecx

; 366  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  :         Add(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$List@USampleToChunk@@@@QAEIABUSampleToChunk@@@Z ; List<SampleToChunk>::Add

; 368  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 369  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??6?$List@USampleToChunk@@@@QAEAAV0@ABUSampleToChunk@@@Z ENDP ; List<SampleToChunk>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??A?$List@USampleToChunk@@@@QAEAAUSampleToChunk@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$List@USampleToChunk@@@@QAEAAUSampleToChunk@@I@Z PROC ; List<SampleToChunk>::operator[], COMDAT
; _this$ = ecx

; 379  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  :         assert(index < num);
; 381  :         if(index >= num) {DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AUSampleToChunk@@@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	mov	eax, 8
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator
$LN1@operator:

; 382  :         return array[index];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [eax+ecx*8]
$LN3@operator:

; 383  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@USampleToChunk@@@@QAEAAUSampleToChunk@@I@Z ENDP ; List<SampleToChunk>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Last@?$List@USampleToChunk@@@@QBEAAUSampleToChunk@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Last@?$List@USampleToChunk@@@@QBEAAUSampleToChunk@@XZ PROC ; List<SampleToChunk>::Last, COMDAT
; _this$ = ecx

; 446  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 447  :         assert(num > 0);
; 448  : 
; 449  :         return array[num-1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [eax+ecx*8-8]

; 450  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Last@?$List@USampleToChunk@@@@QBEAAUSampleToChunk@@XZ ENDP ; List<SampleToChunk>::Last
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@UOffsetVal@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$List@UOffsetVal@@@@QAE@XZ PROC			; List<OffsetVal>::List<OffsetVal>, COMDAT
; _this$ = ecx

; 35   :     inline List() : array(NULL), num(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$List@UOffsetVal@@@@QAE@XZ ENDP			; List<OffsetVal>::List<OffsetVal>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??1?$List@UOffsetVal@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$List@UOffsetVal@@@@QAE@XZ PROC			; List<OffsetVal>::~List<OffsetVal>, COMDAT
; _this$ = ecx

; 37   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 38   :         Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$List@UOffsetVal@@@@QAEXXZ	; List<OffsetVal>::Clear

; 39   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$List@UOffsetVal@@@@QAE@XZ ENDP			; List<OffsetVal>::~List<OffsetVal>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Num@?$List@UOffsetVal@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Num@?$List@UOffsetVal@@@@QBEIXZ PROC			; List<OffsetVal>::Num, COMDAT
; _this$ = ecx

; 42   :     inline unsigned int Num() const     {return num;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Num@?$List@UOffsetVal@@@@QBEIXZ ENDP			; List<OffsetVal>::Num
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??6?$List@UOffsetVal@@@@QAEAAV0@ABUOffsetVal@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
??6?$List@UOffsetVal@@@@QAEAAV0@ABUOffsetVal@@@Z PROC	; List<OffsetVal>::operator<<, COMDAT
; _this$ = ecx

; 366  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 367  :         Add(val);

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$List@UOffsetVal@@@@QAEIABUOffsetVal@@@Z ; List<OffsetVal>::Add

; 368  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 369  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??6?$List@UOffsetVal@@@@QAEAAV0@ABUOffsetVal@@@Z ENDP	; List<OffsetVal>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z PROC	; List<OffsetVal>::operator[], COMDAT
; _this$ = ecx

; 379  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  :         assert(index < num);
; 381  :         if(index >= num) {DumpError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AUOffsetVal@@@8
	call	?name@type_info@@QBEPBDPAU__type_info_node@@@Z ; type_info::name
	push	eax
	push	OFFSET ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	DWORD PTR __imp_?DumpError@@YAXPB_WZZ
	mov	eax, 8
	imul	eax, eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	jmp	SHORT $LN3@operator
$LN1@operator:

; 382  :         return array[index];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [eax+ecx*8]
$LN3@operator:

; 383  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$List@UOffsetVal@@@@QAEAAUOffsetVal@@I@Z ENDP	; List<OffsetVal>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ PROC	; List<OffsetVal>::Last, COMDAT
; _this$ = ecx

; 446  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 447  :         assert(num > 0);
; 448  : 
; 449  :         return array[num-1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [eax+ecx*8-8]

; 450  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Last@?$List@UOffsetVal@@@@QBEAAUOffsetVal@@XZ ENDP	; List<OffsetVal>::Last
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Add@?$List@UMP4VideoFrameInfo@@@@QAEIABUMP4VideoFrameInfo@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Add@?$List@UMP4VideoFrameInfo@@@@QAEIABUMP4VideoFrameInfo@@@Z PROC ; List<MP4VideoFrameInfo>::Add, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+4], eax
	imul	ecx, DWORD PTR tv73[ebp], 24
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 47   :         mcpy(&array[(num-1)], (void*)&val, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	imul	ecx, eax, 24
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, ecx
	mov	ecx, DWORD PTR _val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx

; 48   :         return num-1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1

; 49   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$List@UMP4VideoFrameInfo@@@@QAEIABUMP4VideoFrameInfo@@@Z ENDP ; List<MP4VideoFrameInfo>::Add
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@UMP4VideoFrameInfo@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@UMP4VideoFrameInfo@@@@QAEXXZ PROC		; List<MP4VideoFrameInfo>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@UMP4VideoFrameInfo@@@@QAEXXZ ENDP		; List<MP4VideoFrameInfo>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Add@?$List@UMP4AudioFrameInfo@@@@QAEIABUMP4AudioFrameInfo@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Add@?$List@UMP4AudioFrameInfo@@@@QAEIABUMP4AudioFrameInfo@@@Z PROC ; List<MP4AudioFrameInfo>::Add, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR tv73[ebp]
	shl	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 47   :         mcpy(&array[(num-1)], (void*)&val, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax

; 48   :         return num-1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, 1

; 49   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$List@UMP4AudioFrameInfo@@@@QAEIABUMP4AudioFrameInfo@@@Z ENDP ; List<MP4AudioFrameInfo>::Add
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@UMP4AudioFrameInfo@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@UMP4AudioFrameInfo@@@@QAEXXZ PROC		; List<MP4AudioFrameInfo>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@UMP4AudioFrameInfo@@@@QAEXXZ ENDP		; List<MP4AudioFrameInfo>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Add@?$List@USampleToChunk@@@@QAEIABUSampleToChunk@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Add@?$List@USampleToChunk@@@@QAEIABUSampleToChunk@@@Z PROC ; List<SampleToChunk>::Add, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR tv73[ebp]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 47   :         mcpy(&array[(num-1)], (void*)&val, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax*8-8], esi
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax*8-4], ecx

; 48   :         return num-1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1

; 49   :     }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$List@USampleToChunk@@@@QAEIABUSampleToChunk@@@Z ENDP ; List<SampleToChunk>::Add
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@USampleToChunk@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@USampleToChunk@@@@QAEXXZ PROC		; List<SampleToChunk>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@USampleToChunk@@@@QAEXXZ ENDP		; List<SampleToChunk>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Add@?$List@UOffsetVal@@@@QAEIABUOffsetVal@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Add@?$List@UOffsetVal@@@@QAEIABUOffsetVal@@@Z PROC	; List<OffsetVal>::Add, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR tv73[ebp]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 47   :         mcpy(&array[(num-1)], (void*)&val, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax*8-8], esi
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax*8-4], ecx

; 48   :         return num-1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1

; 49   :     }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$List@UOffsetVal@@@@QAEIABUOffsetVal@@@Z ENDP	; List<OffsetVal>::Add
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Clear@?$List@UOffsetVal@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$List@UOffsetVal@@@@QAEXXZ PROC			; List<OffsetVal>::Clear, COMDAT
; _this$ = ecx

; 334  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 335  :         if(array)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Clear

; 336  :         {
; 337  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 338  :                 CrashError(TEXT("what the.."));*/
; 339  :             Free(array);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 340  :             array = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 341  :             num = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN2@Clear:

; 342  :         }
; 343  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$List@UOffsetVal@@@@QAEXXZ ENDP			; List<OffsetVal>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ??$GetChunkInfo@UMP4AudioFrameInfo@@@MP4FileStream@@QAEXABUMP4AudioFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z
_TEXT	SEGMENT
_stc$1 = -24						; size = 8
_curOffset$ = -16					; size = 8
_this$ = -8						; size = 4
tv94 = -4						; size = 4
_data$ = 8						; size = 4
_index$ = 12						; size = 4
_chunks$ = 16						; size = 4
_sampleToChunks$ = 20					; size = 4
_curChunkOffset$ = 24					; size = 4
_connectedSampleOffset$ = 28				; size = 4
_numSamples$ = 32					; size = 4
??$GetChunkInfo@UMP4AudioFrameInfo@@@MP4FileStream@@QAEXABUMP4AudioFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z PROC ; MP4FileStream::GetChunkInfo<MP4AudioFrameInfo>, COMDAT
; _this$ = ecx

; 190  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 191  :         UINT64 curOffset = data.fileOffset;

	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _curOffset$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _curOffset$[ebp+4], edx

; 192  :         if(index == 0)

	cmp	DWORD PTR _index$[ebp], 0
	jne	SHORT $LN5@GetChunkIn

; 193  :             curChunkOffset = curOffset;

	mov	eax, DWORD PTR _curChunkOffset$[ebp]
	mov	ecx, DWORD PTR _curOffset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _curOffset$[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 194  :         else

	jmp	SHORT $LN4@GetChunkIn
$LN5@GetChunkIn:

; 195  :         {
; 196  :             if(curOffset != connectedSampleOffset)

	mov	eax, DWORD PTR _connectedSampleOffset$[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR tv94[ebp]
	mov	edx, DWORD PTR _curOffset$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN8@GetChunkIn
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR _curOffset$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@GetChunkIn
$LN8@GetChunkIn:

; 197  :             {
; 198  :                 chunks << curChunkOffset;

	mov	edx, DWORD PTR _curChunkOffset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chunks$[ebp]
	call	??6?$List@_K@@QAEAAV0@AB_K@Z		; List<unsigned __int64>::operator<<

; 199  :                 if(!sampleToChunks.Num() || sampleToChunks.Last().samplesPerChunk != numSamples)

	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	?Num@?$List@USampleToChunk@@@@QBEIXZ	; List<SampleToChunk>::Num
	test	eax, eax
	je	SHORT $LN1@GetChunkIn
	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	?Last@?$List@USampleToChunk@@@@QBEAAUSampleToChunk@@XZ ; List<SampleToChunk>::Last
	mov	ecx, DWORD PTR _numSamples$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN2@GetChunkIn
$LN1@GetChunkIn:

; 200  :                 {
; 201  :                     SampleToChunk stc;
; 202  :                     stc.firstChunkID = chunks.Num();

	mov	ecx, DWORD PTR _chunks$[ebp]
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	mov	DWORD PTR _stc$1[ebp], eax

; 203  :                     stc.samplesPerChunk = numSamples;

	mov	eax, DWORD PTR _numSamples$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _stc$1[ebp+4], ecx

; 204  :                     sampleToChunks << stc;

	lea	edx, DWORD PTR _stc$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	??6?$List@USampleToChunk@@@@QAEAAV0@ABUSampleToChunk@@@Z ; List<SampleToChunk>::operator<<
$LN2@GetChunkIn:

; 205  :                 }
; 206  : 
; 207  :                 curChunkOffset = curOffset;

	mov	eax, DWORD PTR _curChunkOffset$[ebp]
	mov	ecx, DWORD PTR _curOffset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _curOffset$[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 208  :                 numSamples = 0;

	mov	eax, DWORD PTR _numSamples$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@GetChunkIn:

; 209  :             }
; 210  :         }
; 211  : 
; 212  :         numSamples++;

	mov	ecx, DWORD PTR _numSamples$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _numSamples$[ebp]
	mov	DWORD PTR [eax], edx

; 213  :         connectedSampleOffset = curOffset+data.size;

	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	xor	eax, eax
	add	edx, DWORD PTR _curOffset$[ebp]
	adc	eax, DWORD PTR _curOffset$[ebp+4]
	mov	ecx, DWORD PTR _connectedSampleOffset$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 214  :     }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
??$GetChunkInfo@UMP4AudioFrameInfo@@@MP4FileStream@@QAEXABUMP4AudioFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z ENDP ; MP4FileStream::GetChunkInfo<MP4AudioFrameInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\mp4filestream.cpp
;	COMDAT ??$GetChunkInfo@UMP4VideoFrameInfo@@@MP4FileStream@@QAEXABUMP4VideoFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z
_TEXT	SEGMENT
_stc$1 = -24						; size = 8
_curOffset$ = -16					; size = 8
_this$ = -8						; size = 4
tv94 = -4						; size = 4
_data$ = 8						; size = 4
_index$ = 12						; size = 4
_chunks$ = 16						; size = 4
_sampleToChunks$ = 20					; size = 4
_curChunkOffset$ = 24					; size = 4
_connectedSampleOffset$ = 28				; size = 4
_numSamples$ = 32					; size = 4
??$GetChunkInfo@UMP4VideoFrameInfo@@@MP4FileStream@@QAEXABUMP4VideoFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z PROC ; MP4FileStream::GetChunkInfo<MP4VideoFrameInfo>, COMDAT
; _this$ = ecx

; 190  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 191  :         UINT64 curOffset = data.fileOffset;

	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _curOffset$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _curOffset$[ebp+4], edx

; 192  :         if(index == 0)

	cmp	DWORD PTR _index$[ebp], 0
	jne	SHORT $LN5@GetChunkIn

; 193  :             curChunkOffset = curOffset;

	mov	eax, DWORD PTR _curChunkOffset$[ebp]
	mov	ecx, DWORD PTR _curOffset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _curOffset$[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 194  :         else

	jmp	SHORT $LN4@GetChunkIn
$LN5@GetChunkIn:

; 195  :         {
; 196  :             if(curOffset != connectedSampleOffset)

	mov	eax, DWORD PTR _connectedSampleOffset$[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR tv94[ebp]
	mov	edx, DWORD PTR _curOffset$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN8@GetChunkIn
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR _curOffset$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@GetChunkIn
$LN8@GetChunkIn:

; 197  :             {
; 198  :                 chunks << curChunkOffset;

	mov	edx, DWORD PTR _curChunkOffset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _chunks$[ebp]
	call	??6?$List@_K@@QAEAAV0@AB_K@Z		; List<unsigned __int64>::operator<<

; 199  :                 if(!sampleToChunks.Num() || sampleToChunks.Last().samplesPerChunk != numSamples)

	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	?Num@?$List@USampleToChunk@@@@QBEIXZ	; List<SampleToChunk>::Num
	test	eax, eax
	je	SHORT $LN1@GetChunkIn
	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	?Last@?$List@USampleToChunk@@@@QBEAAUSampleToChunk@@XZ ; List<SampleToChunk>::Last
	mov	ecx, DWORD PTR _numSamples$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN2@GetChunkIn
$LN1@GetChunkIn:

; 200  :                 {
; 201  :                     SampleToChunk stc;
; 202  :                     stc.firstChunkID = chunks.Num();

	mov	ecx, DWORD PTR _chunks$[ebp]
	call	?Num@?$List@_K@@QBEIXZ			; List<unsigned __int64>::Num
	mov	DWORD PTR _stc$1[ebp], eax

; 203  :                     stc.samplesPerChunk = numSamples;

	mov	eax, DWORD PTR _numSamples$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _stc$1[ebp+4], ecx

; 204  :                     sampleToChunks << stc;

	lea	edx, DWORD PTR _stc$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _sampleToChunks$[ebp]
	call	??6?$List@USampleToChunk@@@@QAEAAV0@ABUSampleToChunk@@@Z ; List<SampleToChunk>::operator<<
$LN2@GetChunkIn:

; 205  :                 }
; 206  : 
; 207  :                 curChunkOffset = curOffset;

	mov	eax, DWORD PTR _curChunkOffset$[ebp]
	mov	ecx, DWORD PTR _curOffset$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _curOffset$[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 208  :                 numSamples = 0;

	mov	eax, DWORD PTR _numSamples$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@GetChunkIn:

; 209  :             }
; 210  :         }
; 211  : 
; 212  :         numSamples++;

	mov	ecx, DWORD PTR _numSamples$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _numSamples$[ebp]
	mov	DWORD PTR [eax], edx

; 213  :         connectedSampleOffset = curOffset+data.size;

	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	xor	eax, eax
	add	edx, DWORD PTR _curOffset$[ebp]
	adc	eax, DWORD PTR _curOffset$[ebp+4]
	mov	ecx, DWORD PTR _connectedSampleOffset$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 214  :     }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
??$GetChunkInfo@UMP4VideoFrameInfo@@@MP4FileStream@@QAEXABUMP4VideoFrameInfo@@IAAV?$List@_K@@AAV?$List@USampleToChunk@@@@AA_K3AAI@Z ENDP ; MP4FileStream::GetChunkInfo<MP4VideoFrameInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_ApplyX<void,DataPacket &>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QBEABV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_ApplyX<void,DataPacket &>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QBEABV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAV?$_Func_base@XAAUDataPacket@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_base<void,DataPacket &>::~_Func_base<void,DataPacket &>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEXAAUDataPacket@@@Z ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_ApplyX<void,DataPacket &>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEXAAUDataPacket@@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QBEABV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::~_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QBEABV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QBEABV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ PROC ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QBEABV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ ENDP ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QBEABV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QBEABV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ PROC ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QBEABV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ ENDP ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@XAAUDataPacket@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QBEABV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QBEABV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ PROC ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QBEABV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ ENDP ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEXAAUDataPacket@@@Z PROC ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_ApplyX<void,DataPacket &>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEAAV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_1e86911a4923b6920ae63cad04c7d55e>@@QBEXAAUDataPacket@@@Z ; <lambda_1e86911a4923b6920ae63cad04c7d55e>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEXAAUDataPacket@@@Z ENDP ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_ApplyX<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEXAAUDataPacket@@@Z PROC ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_ApplyX<void,DataPacket &>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEAAV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@QBEXAAUDataPacket@@@Z ; <lambda_73fdaea7b9b528b55d7e3e3acc13b820>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEXAAUDataPacket@@@Z ENDP ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_ApplyX<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEXAAUDataPacket@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEXAAUDataPacket@@@Z PROC ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_ApplyX<void,DataPacket &>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUDataPacket@@@std@@YAAAUDataPacket@@AAU1@@Z ; std::forward<DataPacket &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEAAV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_33571811cecb93afcaa4a8d7e18a5216>@@QBEXAAUDataPacket@@@Z ; <lambda_33571811cecb93afcaa4a8d7e18a5216>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_ApplyX@XAAUDataPacket@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEXAAUDataPacket@@@Z ENDP ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_ApplyX<void,DataPacket &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAUDataPacket@@@std@@@2@XAAUDataPacket@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>,std::allocator<std::_Func_class<void,DataPacket &> >,void,DataPacket &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0><std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0><std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0><std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEAAV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEAAV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ PROC ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@QAEAAV<lambda_1e86911a4923b6920ae63cad04c7d55e>@@XZ ENDP ; std::_Callable_base<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEAAV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEAAV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ PROC ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@QAEAAV<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@XZ ENDP ; std::_Callable_base<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEAAV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEAAV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ PROC ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@QAEAAV<lambda_33571811cecb93afcaa4a8d7e18a5216>@@XZ ENDP ; std::_Callable_base<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_1e86911a4923b6920ae63cad04c7d55e>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_1e86911a4923b6920ae63cad04c7d55e>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_73fdaea7b9b528b55d7e3e3acc13b820>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_73fdaea7b9b528b55d7e3e3acc13b820>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_33571811cecb93afcaa4a8d7e18a5216>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_33571811cecb93afcaa4a8d7e18a5216>,0> &>
_TEXT	ENDS
END

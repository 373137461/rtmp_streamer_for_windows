; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\SettingsQSV.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R3SettingsQSV@@8				; SettingsQSV::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@SettingsQSV@@8			; SettingsQSV::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SettingsQSV@@6B@				; SettingsQSV::`RTTI Complete Object Locator'
PUBLIC	??_R2SettingsQSV@@8				; SettingsQSV::`RTTI Base Class Array'
PUBLIC	?parameter_control_ids@?A0x5d360590@@3PAHA	; `anonymous namespace'::parameter_control_ids
PUBLIC	?id_method_map@?A0x5d360590@@3PAU<unnamed-type-id_method_map>@1@A ; `anonymous namespace'::id_method_map
PUBLIC	??_R0?AVSettingsQSV@@@8				; SettingsQSV `RTTI Type Descriptor'
PUBLIC	??_7SettingsQSV@@6B@				; SettingsQSV::`vftable'
EXTRN	__imp__IsWindowEnabled@4:PROC
EXTRN	__imp_?FloatString@@YA?AVString@@N@Z:PROC
;	COMDAT ?updating_accuracy@?1??ProcMessage@SettingsQSV@@UAEHIIJ@Z@4_NA
_BSS	SEGMENT
?updating_accuracy@?1??ProcMessage@SettingsQSV@@UAEHIIJ@Z@4_NA DB 01H DUP (?) ; `SettingsQSV::ProcMessage'::`2'::updating_accuracy
_BSS	ENDS
;	COMDAT ??_7SettingsQSV@@6B@
CONST	SEGMENT
??_7SettingsQSV@@6B@ DD FLAT:??_R4SettingsQSV@@6B@	; SettingsQSV::`vftable'
	DD	FLAT:??_ESettingsQSV@@UAEPAXI@Z
	DD	FLAT:?GetCategory@SettingsQSV@@UBEPB_WXZ
	DD	FLAT:?CreatePane@SettingsQSV@@UAEPAUHWND__@@PAU2@@Z
	DD	FLAT:?DestroyPane@SettingsQSV@@UAEXXZ
	DD	FLAT:?ProcMessage@SettingsQSV@@UAEHIIJ@Z
	DD	FLAT:?ApplySettings@SettingsQSV@@UAEXXZ
	DD	FLAT:?CancelSettings@SettingsQSV@@UAEXXZ
	DD	FLAT:?HasDefaults@SettingsQSV@@UBE_NXZ
	DD	FLAT:?SetDefaults@SettingsPane@@UAEXXZ
	DD	FLAT:?OptimizeSettings@SettingsPane@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R0?AVSettingsQSV@@@8
data$r	SEGMENT
??_R0?AVSettingsQSV@@@8 DD FLAT:??_7type_info@@6B@	; SettingsQSV `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSettingsQSV@@', 00H
data$r	ENDS
;	COMDAT ??_R2SettingsQSV@@8
rdata$r	SEGMENT
??_R2SettingsQSV@@8 DD FLAT:??_R1A@?0A@EA@SettingsQSV@@8 ; SettingsQSV::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SettingsPane@@8
rdata$r	ENDS
;	COMDAT ??_R4SettingsQSV@@6B@
rdata$r	SEGMENT
??_R4SettingsQSV@@6B@ DD 00H				; SettingsQSV::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSettingsQSV@@@8
	DD	FLAT:??_R3SettingsQSV@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SettingsQSV@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SettingsQSV@@8 DD FLAT:??_R0?AVSettingsQSV@@@8 ; SettingsQSV::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SettingsQSV@@8
rdata$r	ENDS
;	COMDAT ??_R3SettingsQSV@@8
rdata$r	SEGMENT
??_R3SettingsQSV@@8 DD 00H				; SettingsQSV::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SettingsQSV@@8
	ORG $+4
?parameter_control_ids@?A0x5d360590@@3PAHA DD 04a2H	; `anonymous namespace'::parameter_control_ids
	DD	04b8H
	DD	04a7H
	DD	03f8H
	DD	04b9H
	DD	04a9H
	DD	04aaH
	DD	04abH
	DD	04acH
	DD	04adH
	DD	04aeH
	DD	04afH
	DD	04b0H
	DD	04b1H
	DD	04b2H
	DD	04b3H
	DD	04b4H
	DD	04b5H
	DD	04b6H
	ORG $+4
?id_method_map@?A0x5d360590@@3PAU<unnamed-type-id_method_map>@1@A DD 049fH ; `anonymous namespace'::id_method_map
	DW	01H
	ORG $+2
	DD	04a6H
	DW	0aH
	ORG $+2
	DD	04a0H
	DW	02H
	ORG $+2
	DD	04a1H
	DW	04H
	ORG $+2
	DD	046fH
	DW	08H
	ORG $+2
	DD	04a3H
	DW	03H
	ORG $+2
	DD	04a4H
	DW	09H
	ORG $+2
	DD	04a5H
	DW	0bH
	ORG $+2
	ORG $+2
$SG4294731608 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731609 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'u', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, 's', 00H, 00H, 00H
$SG4294731610 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'Q', 00H, 'S', 00H, 'V', 00H, 00H
	DB	00H
	ORG $+2
$SG4294731604 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731605 DB 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'K', 00H, 'b', 00H, 'p', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294731606 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731607 DB 'R', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'M', 00H, 'e'
	DB	00H, 't', 00H, 'h', 00H, 'o', 00H, 'd', 00H, 00H, 00H
$SG4294731600 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731601 DB 'M', 00H, 'a', 00H, 'x', 00H, 'K', 00H, 'b', 00H, 'p', 00H
	DB	's', 00H, 00H, 00H
$SG4294731602 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731603 DB 'U', 00H, 's', 00H, 'e', 00H, 'G', 00H, 'l', 00H, 'o', 00H
	DB	'b', 00H, 'a', 00H, 'l', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294731596 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731597 DB 'U', 00H, 's', 00H, 'e', 00H, 'G', 00H, 'l', 00H, 'o', 00H
	DB	'b', 00H, 'a', 00H, 'l', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H
$SG4294731598 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731599 DB 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'K'
	DB	00H, 'B', 00H, 00H, 00H
	ORG $+2
$SG4294731592 DB 'Q', 00H, 'P', 00H, 'I', 00H, 00H, 00H
$SG4294731593 DB 'L', 00H, 'A', 00H, 'D', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
$SG4294731594 DB 'C', 00H, 'o', 00H, 'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG4294731595 DB 'A', 00H, 'c', 00H, 'c', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294731588 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731589 DB 'I', 00H, 'C', 00H, 'Q', 00H, 'Q', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294731590 DB 'Q', 00H, 'P', 00H, 'B', 00H, 00H, 00H
$SG4294731591 DB 'Q', 00H, 'P', 00H, 'P', 00H, 00H, 00H
$SG4294731584 DB 'R', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'M', 00H, 'e'
	DB	00H, 't', 00H, 'h', 00H, 'o', 00H, 'd', 00H, 00H, 00H
$SG4294731585 DB 'Q', 00H, 'S', 00H, 'V', 00H, 00H, 00H
$SG4294731586 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294731587 DB 'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG4294731580 DB 'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG4294731581 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731582 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'u', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, 's', 00H, 00H, 00H
$SG4294731583 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731576 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731577 DB 'R', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'M', 00H, 'e'
	DB	00H, 't', 00H, 'h', 00H, 'o', 00H, 'd', 00H, 00H, 00H
$SG4294731578 DB 'Q', 00H, 'S', 00H, 'V', 00H, 00H, 00H
$SG4294731579 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294731572 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731573 DB 'U', 00H, 's', 00H, 'e', 00H, 'G', 00H, 'l', 00H, 'o', 00H
	DB	'b', 00H, 'a', 00H, 'l', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H
$SG4294731574 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731575 DB 'U', 00H, 's', 00H, 'e', 00H, 'G', 00H, 'l', 00H, 'o', 00H
	DB	'b', 00H, 'a', 00H, 'l', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294731568 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731569 DB 'M', 00H, 'a', 00H, 'x', 00H, 'K', 00H, 'b', 00H, 'p', 00H
	DB	's', 00H, 00H, 00H
$SG4294731570 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731571 DB 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'K', 00H, 'b', 00H, 'p', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294731564 DB 'C', 00H, 'o', 00H, 'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG4294731565 DB 'A', 00H, 'c', 00H, 'c', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294731566 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731567 DB 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'K'
	DB	00H, 'B', 00H, 00H, 00H
	ORG $+2
$SG4294731560 DB 'Q', 00H, 'P', 00H, 'B', 00H, 00H, 00H
$SG4294731561 DB 'Q', 00H, 'P', 00H, 'P', 00H, 00H, 00H
$SG4294731562 DB 'Q', 00H, 'P', 00H, 'I', 00H, 00H, 00H
$SG4294731563 DB 'L', 00H, 'A', 00H, 'D', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
$SG4294731558 DB 'Q', 00H, 'S', 00H, 'V', 00H, ' ', 00H, '(', 00H, 'A', 00H
	DB	'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG4294731559 DB 'I', 00H, 'C', 00H, 'Q', 00H, 'Q', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
PUBLIC	??$_Find@PBHH@std@@YAPBHPBH0ABHU?$integral_constant@_N$0A@@0@@Z ; std::_Find<int const *,int>
PUBLIC	??$_Rechecked@PBHPBH@std@@YAAAPBHAAPBHPBH@Z	; std::_Rechecked<int const *,int const *>
PUBLIC	??$_Find@PBHH@std@@YAPBHPBH0ABH@Z		; std::_Find<int const *,int>
PUBLIC	??$_Unchecked@PBH@std@@YAPBHPBH@Z		; std::_Unchecked<int const *>
PUBLIC	??$_Rechecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@std@@YAAAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAPAU12@PAU12@@Z ; std::_Rechecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,A0x5d360590::<unnamed-type-method_enabled_ids> *>
PUBLIC	??$_Find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z ; std::_Find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >
PUBLIC	??$_Unchecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@Z ; std::_Unchecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *>
PUBLIC	?end@?$initializer_list@H@std@@QBEPBHXZ		; std::initializer_list<int>::end
PUBLIC	?begin@?$initializer_list@H@std@@QBEPBHXZ	; std::initializer_list<int>::begin
PUBLIC	??$find@PBHH@std@@YAPBHPBH0ABH@Z		; std::find<int const *,int>
PUBLIC	??$end@H@std@@YAPBHV?$initializer_list@H@0@@Z	; std::end<int>
PUBLIC	??$begin@H@std@@YAPBHV?$initializer_list@H@0@@Z	; std::begin<int>
PUBLIC	??$find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z ; std::find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >
PUBLIC	??$end@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z ; std::end<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>
PUBLIC	??$begin@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z ; std::begin<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>
PUBLIC	??0?$initializer_list@H@std@@QAE@PBH0@Z		; std::initializer_list<int>::initializer_list<int>
PUBLIC	?ProcMessage@SettingsQSV@@UAEHIIJ@Z		; SettingsQSV::ProcMessage
PUBLIC	?RateControlMethodChanged@SettingsQSV@@AAEXXZ	; SettingsQSV::RateControlMethodChanged
PUBLIC	?HasDefaults@SettingsQSV@@UBE_NXZ		; SettingsQSV::HasDefaults
PUBLIC	?CancelSettings@SettingsQSV@@UAEXXZ		; SettingsQSV::CancelSettings
PUBLIC	?ApplySettings@SettingsQSV@@UAEXXZ		; SettingsQSV::ApplySettings
PUBLIC	?DestroyPane@SettingsQSV@@UAEXXZ		; SettingsQSV::DestroyPane
PUBLIC	?CreatePane@SettingsQSV@@UAEPAUHWND__@@PAU2@@Z	; SettingsQSV::CreatePane
PUBLIC	?GetCategory@SettingsQSV@@UBEPB_WXZ		; SettingsQSV::GetCategory
PUBLIC	??1SettingsQSV@@UAE@XZ				; SettingsQSV::~SettingsQSV
PUBLIC	??_GSettingsQSV@@UAEPAXI@Z			; SettingsQSV::`scalar deleting destructor'
PUBLIC	??0SettingsQSV@@QAE@XZ				; SettingsQSV::SettingsQSV
PUBLIC	?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A ; `anonymous namespace'::method_enabled_ids
EXTRN	??_ESettingsQSV@@UAEPAXI@Z:PROC			; SettingsQSV::`vector deleting destructor'
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A DB 060H DUP (?) ; `anonymous namespace'::method_enabled_ids
_BSS	ENDS
;	COMDAT ?name@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4PB_WB
_BSS	SEGMENT
?name@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4PB_WB DD 01H DUP (?) ; `SettingsQSV::GetCategory'::`2'::name
_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?$S9@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4IA
_BSS	SEGMENT
?$S9@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4IA DD 01H DUP (?) ; S9<`template-parameter-2',SettingsQSV::tCategory,unsigned int, ?? &>
	ALIGN	4

_$S4	DD	06H DUP (?)
_$S6	DD	06H DUP (?)
_$S8	DD	04H DUP (?)
_$S3	DD	05H DUP (?)
_$S5	DD	04H DUP (?)
_$S1	DD	04H DUP (?)
_$S7	DD	02H DUP (?)
_$S2	DD	05H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
_method_enabled_ids$initializer$ DD FLAT:??__Emethod_enabled_ids@?A0x5d360590@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0SettingsQSV@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SettingsQSV@@QAE@XZ PROC				; SettingsQSV::SettingsQSV, COMDAT
; _this$ = ecx

; 91   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SettingsPane@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsQSV@@6B@

; 92   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SettingsQSV@@QAE@XZ ENDP				; SettingsQSV::SettingsQSV
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\qsvhelper\utilities.h
;	COMDAT ?valid_method@@YA_NG@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_method$ = 8						; size = 2
?valid_method@@YA_NG@Z PROC				; valid_method, COMDAT

; 66   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 67   :     switch (method)

	movzx	eax, WORD PTR _method$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 10			; 0000000aH
	ja	SHORT $LN2@valid_meth
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN6@valid_meth[edx]
	jmp	DWORD PTR $LN7@valid_meth[eax*4]
$LN1@valid_meth:

; 68   :     {
; 69   :     case MFX_RATECONTROL_CBR:
; 70   :     case MFX_RATECONTROL_VBR:
; 71   :     case MFX_RATECONTROL_CQP:
; 72   :     case MFX_RATECONTROL_AVBR:
; 73   :     case MFX_RATECONTROL_LA:
; 74   :     case MFX_RATECONTROL_ICQ:
; 75   :     case MFX_RATECONTROL_VCM:
; 76   :     case MFX_RATECONTROL_LA_ICQ:
; 77   :         return true;

	mov	al, 1
	jmp	SHORT $LN4@valid_meth
$LN2@valid_meth:

; 78   :     }
; 79   :     return false;

	xor	al, al
$LN4@valid_meth:

; 80   : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@valid_meth:
	DD	$LN1@valid_meth
	DD	$LN2@valid_meth
$LN6@valid_meth:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
?valid_method@@YA_NG@Z ENDP				; valid_method
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??__Emethod_enabled_ids@?A0x5d360590@@YAXXZ
text$di	SEGMENT
??__Emethod_enabled_ids@?A0x5d360590@@YAXXZ PROC	; `anonymous namespace'::`dynamic initializer for 'method_enabled_ids'', COMDAT

; 83   :     };

	push	ebp
	mov	ebp, esp
	mov	eax, 1
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A, ax
	mov	DWORD PTR _$S1, 1186			; 000004a2H
	mov	DWORD PTR _$S1+4, 1208			; 000004b8H
	mov	DWORD PTR _$S1+8, 1016			; 000003f8H
	mov	DWORD PTR _$S1+12, 1209			; 000004b9H
	push	OFFSET _$S1+16
	push	OFFSET _$S1
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+4
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	mov	ecx, 10					; 0000000aH
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+12, cx
	mov	DWORD PTR _$S2, 1186			; 000004a2H
	mov	DWORD PTR _$S2+4, 1208			; 000004b8H
	mov	DWORD PTR _$S2+8, 1191			; 000004a7H
	mov	DWORD PTR _$S2+12, 1016			; 000003f8H
	mov	DWORD PTR _$S2+16, 1209			; 000004b9H
	push	OFFSET _$S2+20
	push	OFFSET _$S2
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+16
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	mov	edx, 2
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+24, dx
	mov	DWORD PTR _$S3, 1186			; 000004a2H
	mov	DWORD PTR _$S3+4, 1208			; 000004b8H
	mov	DWORD PTR _$S3+8, 1191			; 000004a7H
	mov	DWORD PTR _$S3+12, 1016			; 000003f8H
	mov	DWORD PTR _$S3+16, 1209			; 000004b9H
	push	OFFSET _$S3+20
	push	OFFSET _$S3
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+28
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	mov	eax, 4
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+36, ax
	mov	DWORD PTR _$S4, 1186			; 000004a2H
	mov	DWORD PTR _$S4+4, 1208			; 000004b8H
	mov	DWORD PTR _$S4+8, 1194			; 000004aaH
	mov	DWORD PTR _$S4+12, 1196			; 000004acH
	mov	DWORD PTR _$S4+16, 1193			; 000004a9H
	mov	DWORD PTR _$S4+20, 1195			; 000004abH
	push	OFFSET _$S4+24
	push	OFFSET _$S4
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+40
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	mov	ecx, 8
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+48, cx
	mov	DWORD PTR _$S5, 1186			; 000004a2H
	mov	DWORD PTR _$S5+4, 1208			; 000004b8H
	mov	DWORD PTR _$S5+8, 1204			; 000004b4H
	mov	DWORD PTR _$S5+12, 1203			; 000004b3H
	push	OFFSET _$S5+16
	push	OFFSET _$S5
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+52
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	mov	edx, 3
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+60, dx
	mov	DWORD PTR _$S6, 1197			; 000004adH
	mov	DWORD PTR _$S6+4, 1198			; 000004aeH
	mov	DWORD PTR _$S6+8, 1199			; 000004afH
	mov	DWORD PTR _$S6+12, 1200			; 000004b0H
	mov	DWORD PTR _$S6+16, 1201			; 000004b1H
	mov	DWORD PTR _$S6+20, 1202			; 000004b2H
	push	OFFSET _$S6+24
	push	OFFSET _$S6
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+64
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	mov	eax, 9
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+72, ax
	mov	DWORD PTR _$S7, 1206			; 000004b6H
	mov	DWORD PTR _$S7+4, 1205			; 000004b5H
	push	OFFSET _$S7+8
	push	OFFSET _$S7
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+76
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	mov	ecx, 11					; 0000000bH
	mov	WORD PTR ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+84, cx
	mov	DWORD PTR _$S8, 1204			; 000004b4H
	mov	DWORD PTR _$S8+4, 1203			; 000004b3H
	mov	DWORD PTR _$S8+8, 1206			; 000004b6H
	mov	DWORD PTR _$S8+12, 1205			; 000004b5H
	push	OFFSET _$S8+16
	push	OFFSET _$S8
	mov	ecx, OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A+88
	call	??0?$initializer_list@H@std@@QAE@PBH0@Z	; std::initializer_list<int>::initializer_list<int>
	pop	ebp
	ret	0
??__Emethod_enabled_ids@?A0x5d360590@@YAXXZ ENDP	; `anonymous namespace'::`dynamic initializer for 'method_enabled_ids''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSettingsQSV@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSettingsQSV@@UAEPAXI@Z PROC				; SettingsQSV::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SettingsQSV@@UAE@XZ			; SettingsQSV::~SettingsQSV
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSettingsQSV@@UAEPAXI@Z ENDP				; SettingsQSV::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??1SettingsQSV@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SettingsQSV@@UAE@XZ PROC				; SettingsQSV::~SettingsQSV, COMDAT
; _this$ = ecx

; 95   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsQSV@@6B@

; 96   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SettingsPane@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1SettingsQSV@@UAE@XZ ENDP				; SettingsQSV::~SettingsQSV
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?GetCategory@SettingsQSV@@UBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCategory@SettingsQSV@@UBEPB_WXZ PROC		; SettingsQSV::GetCategory, COMDAT
; _this$ = ecx

; 99   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  :     static CTSTR name = Str("Settings.QSV");

	mov	eax, DWORD PTR ?$S9@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4IA
	and	eax, 1
	jne	SHORT $LN1@GetCategor
	mov	ecx, DWORD PTR ?$S9@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4IA
	or	ecx, 1
	mov	DWORD PTR ?$S9@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4IA, ecx
	push	OFFSET $SG4294731610
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR ?name@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4PB_WB, eax
$LN1@GetCategor:

; 101  :     return name;

	mov	eax, DWORD PTR ?name@?1??GetCategory@SettingsQSV@@UBEPB_WXZ@4PB_WB

; 102  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCategory@SettingsQSV@@UBEPB_WXZ ENDP		; SettingsQSV::GetCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?CreatePane@SettingsQSV@@UAEPAUHWND__@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_parentHwnd$ = 8					; size = 4
?CreatePane@SettingsQSV@@UAEPAUHWND__@@PAU2@@Z PROC	; SettingsQSV::CreatePane, COMDAT
; _this$ = ecx

; 105  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  :     hwnd = OBSCreateDialog(hinstMain, MAKEINTRESOURCE(IDD_SETTINGS_QSV), parentHwnd, (DLGPROC)DialogProc, (LPARAM)this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?DialogProc@SettingsPane@@SGHPAUHWND__@@IIJ@Z
	push	ecx
	mov	edx, DWORD PTR _parentHwnd$[ebp]
	push	edx
	push	150					; 00000096H
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSCreateDialog@@YAPAUHWND__@@PAUHINSTANCE__@@PB_WPAU1@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 107  :     return hwnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]

; 108  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CreatePane@SettingsQSV@@UAEPAUHWND__@@PAU2@@Z ENDP	; SettingsQSV::CreatePane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?DestroyPane@SettingsQSV@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyPane@SettingsQSV@@UAEXXZ PROC			; SettingsQSV::DestroyPane, COMDAT
; _this$ = ecx

; 111  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 112  :     DestroyWindow(hwnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4

; 113  :     hwnd = nullptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 114  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyPane@SettingsQSV@@UAEXXZ ENDP			; SettingsQSV::DestroyPane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?get_method@@YAGPAUHWND__@@@Z
_TEXT	SEGMENT
_mapping$1 = -20					; size = 8
_$S12$2 = -12						; size = 4
_$S10$3 = -8						; size = 4
_$S11$4 = -4						; size = 4
_hwnd$ = 8						; size = 4
?get_method@@YAGPAUHWND__@@@Z PROC			; get_method, COMDAT

; 117  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 118  :     for (auto mapping : id_method_map)

	mov	DWORD PTR _$S10$3[ebp], OFFSET ?id_method_map@?A0x5d360590@@3PAU<unnamed-type-id_method_map>@1@A ; `anonymous namespace'::id_method_map
	mov	eax, DWORD PTR _$S10$3[ebp]
	mov	DWORD PTR _$S11$4[ebp], eax
	mov	ecx, DWORD PTR _$S10$3[ebp]
	add	ecx, 64					; 00000040H
	mov	DWORD PTR _$S12$2[ebp], ecx
	jmp	SHORT $LN4@get_method
$LN3@get_method:
	mov	edx, DWORD PTR _$S11$4[ebp]
	add	edx, 8
	mov	DWORD PTR _$S11$4[ebp], edx
$LN4@get_method:
	mov	eax, DWORD PTR _$S11$4[ebp]
	cmp	eax, DWORD PTR _$S12$2[ebp]
	je	SHORT $LN2@get_method
	mov	ecx, DWORD PTR _$S11$4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _mapping$1[ebp], edx
	mov	DWORD PTR _mapping$1[ebp+4], eax

; 119  :         if (SendMessage(GetDlgItem(hwnd, mapping.id), BM_GETCHECK, 0, 0) == BST_CHECKED)

	push	0
	push	0
	push	240					; 000000f0H
	mov	ecx, DWORD PTR _mapping$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN1@get_method

; 120  :             return mapping.method;

	mov	ax, WORD PTR _mapping$1[ebp+4]
	jmp	SHORT $LN5@get_method
$LN1@get_method:

; 121  : 
; 122  :     return MFX_RATECONTROL_VBR;

	jmp	SHORT $LN3@get_method
$LN2@get_method:
	mov	eax, 2
$LN5@get_method:

; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?get_method@@YAGPAUHWND__@@@Z ENDP			; get_method
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?ApplySettings@SettingsQSV@@UAEXXZ
_TEXT	SEGMENT
$T1 = -40						; size = 8
$T2 = -32						; size = 8
$T3 = -24						; size = 8
_checked$ = -16						; size = 4
_this$ = -12						; size = 4
_save_range$ = -8					; size = 4
_method$ = -4						; size = 2
?ApplySettings@SettingsQSV@@UAEXXZ PROC			; SettingsQSV::ApplySettings, COMDAT
; _this$ = ecx

; 126  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 127  :     auto checked = [&](int id) { return SendMessage(GetDlgItem(hwnd, id), BM_GETCHECK, 0, 0) == BST_CHECKED; };

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??0<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QAE@PAVSettingsQSV@@@Z ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::<lambda_a63d8437f028d068ebed3bfd5dd60edb>

; 128  : 
; 129  :     AppConfig->SetInt(L"QSV (Advanced)", L"UseCustomParams", checked(IDC_USECUSTOMPARAMS));

	push	1207					; 000004b7H
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??R<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QBE_NH@Z ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::operator()
	movzx	ecx, al
	push	ecx
	push	OFFSET $SG4294731609
	push	OFFSET $SG4294731608
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 130  : 
; 131  :     ratecontrol_t method = get_method(hwnd);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?get_method@@YAGPAUHWND__@@@Z		; get_method
	add	esp, 4
	mov	WORD PTR _method$[ebp], ax

; 132  :     AppConfig->SetInt(L"QSV (Advanced)", L"RateControlMethod", method);

	movzx	ecx, WORD PTR _method$[ebp]
	push	ecx
	push	OFFSET $SG4294731607
	push	OFFSET $SG4294731606
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 133  : 
; 134  :     AppConfig->SetInt(L"QSV (Advanced)", L"TargetKbps", GetEditText(GetDlgItem(hwnd, IDC_TARGETKBPS)).ToInt());

	push	10					; 0000000aH
	push	1186					; 000004a2H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	push	eax
	push	OFFSET $SG4294731605
	push	OFFSET $SG4294731604
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 135  :     AppConfig->SetInt(L"QSV (Advanced)", L"UseGlobalBitrate", checked(IDC_USEGLOBALBITRATE));

	push	1208					; 000004b8H
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??R<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QBE_NH@Z ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::operator()
	movzx	edx, al
	push	edx
	push	OFFSET $SG4294731603
	push	OFFSET $SG4294731602
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 136  :     AppConfig->SetInt(L"QSV (Advanced)", L"MaxKbps", GetEditText(GetDlgItem(hwnd, IDC_MAXKBPS)).ToInt());

	push	10					; 0000000aH
	push	1191					; 000004a7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	push	eax
	push	OFFSET $SG4294731601
	push	OFFSET $SG4294731600
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 137  :     AppConfig->SetInt(L"QSV (Advanced)", L"BufferSizeInKB", GetEditText(GetDlgItem(hwnd, IDC_BUFFERSIZE)).ToInt());

	push	10					; 0000000aH
	push	1016					; 000003f8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	push	eax
	push	OFFSET $SG4294731599
	push	OFFSET $SG4294731598
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 138  :     AppConfig->SetInt(L"QSV (Advanced)", L"UseGlobalBufferSize", checked(IDC_USEGLOBALBUFFERSIZE));

	push	1209					; 000004b9H
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??R<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QBE_NH@Z ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::operator()
	movzx	eax, al
	push	eax
	push	OFFSET $SG4294731597
	push	OFFSET $SG4294731596
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 139  : 
; 140  :     auto save_range = [&](int id, CTSTR name)
; 141  :     {
; 142  :         AppConfig->SetInt(L"QSV (Advanced)", name, (UINT)SendMessage(GetDlgItem(hwnd, id), UDM_GETPOS32, 0, 0));
; 143  :     };

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??0<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QAE@PAVSettingsQSV@@@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::<lambda_d8f9aaf52d0289e0fe7faea967863541>

; 144  : 
; 145  :     save_range(IDC_ACCURACY, L"Accuracy");

	push	OFFSET $SG4294731595
	push	1194					; 000004aaH
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()

; 146  : 
; 147  :     save_range(IDC_CONVERGENCE, L"Convergence");

	push	OFFSET $SG4294731594
	push	1196					; 000004acH
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()

; 148  : 
; 149  :     save_range(IDC_LADEPTH, L"LADepth");

	push	OFFSET $SG4294731593
	push	1204					; 000004b4H
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()

; 150  : 
; 151  :     save_range(IDC_QPI, L"QPI");

	push	OFFSET $SG4294731592
	push	1198					; 000004aeH
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()

; 152  :     save_range(IDC_QPP, L"QPP");

	push	OFFSET $SG4294731591
	push	1200					; 000004b0H
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()

; 153  :     save_range(IDC_QPB, L"QPB");

	push	OFFSET $SG4294731590
	push	1202					; 000004b2H
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()

; 154  : 
; 155  :     save_range(IDC_ICQQUALITY, L"ICQQuality");

	push	OFFSET $SG4294731589
	push	1206					; 000004b6H
	lea	ecx, DWORD PTR _save_range$[ebp]
	call	??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()

; 156  : 
; 157  :     RateControlMethodChanged();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RateControlMethodChanged@SettingsQSV@@AAEXXZ ; SettingsQSV::RateControlMethodChanged

; 158  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ApplySettings@SettingsQSV@@UAEXXZ ENDP			; SettingsQSV::ApplySettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QAE@PAVSettingsQSV@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QAE@PAVSettingsQSV@@@Z PROC ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::<lambda_a63d8437f028d068ebed3bfd5dd60edb>, COMDAT
; _this$ = ecx

; 127  :     auto checked = [&](int id) { return SendMessage(GetDlgItem(hwnd, id), BM_GETCHECK, 0, 0) == BST_CHECKED; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QAE@PAVSettingsQSV@@@Z ENDP ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::<lambda_a63d8437f028d068ebed3bfd5dd60edb>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??R<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv79 = -4						; size = 4
_id$ = 8						; size = 4
??R<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QBE_NH@Z PROC ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::operator(), COMDAT
; _this$ = ecx

; 127  :     auto checked = [&](int id) { return SendMessage(GetDlgItem(hwnd, id), BM_GETCHECK, 0, 0) == BST_CHECKED; };

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	240					; 000000f0H
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv79[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv79[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_a63d8437f028d068ebed3bfd5dd60edb>@@QBE_NH@Z ENDP ; <lambda_a63d8437f028d068ebed3bfd5dd60edb>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QAE@PAVSettingsQSV@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QAE@PAVSettingsQSV@@@Z PROC ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::<lambda_d8f9aaf52d0289e0fe7faea967863541>, COMDAT
; _this$ = ecx

; 143  :     };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QAE@PAVSettingsQSV@@@Z ENDP ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::<lambda_d8f9aaf52d0289e0fe7faea967863541>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
_name$ = 12						; size = 4
??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z PROC ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator(), COMDAT
; _this$ = ecx

; 141  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 142  :         AppConfig->SetInt(L"QSV (Advanced)", name, (UINT)SendMessage(GetDlgItem(hwnd, id), UDM_GETPOS32, 0, 0));

	push	0
	push	0
	push	1138					; 00000472H
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET $SG4294731588
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 143  :     };

	mov	esp, ebp
	pop	ebp
	ret	8
??R<lambda_d8f9aaf52d0289e0fe7faea967863541>@@QBEXHPB_W@Z ENDP ; <lambda_d8f9aaf52d0289e0fe7faea967863541>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?CancelSettings@SettingsQSV@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelSettings@SettingsQSV@@UAEXXZ PROC		; SettingsQSV::CancelSettings, COMDAT
; _this$ = ecx

; 161  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 162  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelSettings@SettingsQSV@@UAEXXZ ENDP		; SettingsQSV::CancelSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?HasDefaults@SettingsQSV@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasDefaults@SettingsQSV@@UBE_NXZ PROC			; SettingsQSV::HasDefaults, COMDAT
; _this$ = ecx

; 165  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 166  :     return false;

	xor	al, al

; 167  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasDefaults@SettingsQSV@@UBE_NXZ ENDP			; SettingsQSV::HasDefaults
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?RateControlMethodChanged@SettingsQSV@@AAEXXZ
_TEXT	SEGMENT
$T1 = -92						; size = 8
_mapping$2 = -84					; size = 8
_$S18$3 = -76						; size = 4
_$S15$4 = -72						; size = 4
_enable$ = -68						; size = 4
_id$5 = -64						; size = 4
tv194 = -60						; size = 4
_$S16$6 = -56						; size = 4
tv150 = -52						; size = 4
_$S13$7 = -48						; size = 4
tv85 = -44						; size = 4
_checked$ = -40						; size = 4
_mapping$ = -36						; size = 4
_$S17$8 = -32						; size = 4
_$S14$9 = -28						; size = 4
$T10 = -24						; size = 4
_this$ = -20						; size = 4
$T11 = -14						; size = 2
_method$ = -12						; size = 2
_config_method$ = -8					; size = 2
tv241 = -3						; size = 1
tv221 = -2						; size = 1
_enabled$ = -1						; size = 1
?RateControlMethodChanged@SettingsQSV@@AAEXXZ PROC	; SettingsQSV::RateControlMethodChanged, COMDAT
; _this$ = ecx

; 170  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T10[ebp], 0

; 171  :     using namespace std;
; 172  : 
; 173  :     auto checked = [&](int id) { return SendMessage(GetDlgItem(hwnd, id), BM_GETCHECK, 0, 0) == BST_CHECKED; };

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??0<lambda_3beb4a24917d353c60e7356d1113caf6>@@QAE@PAVSettingsQSV@@@Z ; <lambda_3beb4a24917d353c60e7356d1113caf6>::<lambda_3beb4a24917d353c60e7356d1113caf6>

; 174  :     auto enable  = [&](int id, bool enable) { EnableWindow(GetDlgItem(hwnd, id), enable); };

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _enable$[ebp]
	call	??0<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QAE@PAVSettingsQSV@@@Z ; <lambda_c07b4e539772f1d69a2b1b7838dc7f75>::<lambda_c07b4e539772f1d69a2b1b7838dc7f75>

; 175  : 
; 176  :     bool enabled = checked(IDC_USECUSTOMPARAMS) && AppConfig->GetString(L"Video Encoding", L"Encoder") == L"QSV";

	push	1207					; 000004b7H
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??R<lambda_3beb4a24917d353c60e7356d1113caf6>@@QBE_NH@Z ; <lambda_3beb4a24917d353c60e7356d1113caf6>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@RateContro
	or	DWORD PTR $T10[ebp], 1
	push	OFFSET $SG4294731585
	push	0
	push	OFFSET $SG4294731587
	push	OFFSET $SG4294731586
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN11@RateContro
	mov	DWORD PTR tv85[ebp], 1
	jmp	SHORT $LN12@RateContro
$LN11@RateContro:
	mov	DWORD PTR tv85[ebp], 0
$LN12@RateContro:
	mov	cl, BYTE PTR tv85[ebp]
	mov	BYTE PTR _enabled$[ebp], cl
	mov	edx, DWORD PTR $T10[ebp]
	and	edx, 1
	je	SHORT $LN22@RateContro
	and	DWORD PTR $T10[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN22@RateContro:

; 177  : 
; 178  :     //--------------------------------------------
; 179  : 
; 180  :     ratecontrol_t config_method = AppConfig->GetInt(L"QSV (Advanced)", L"RateControlMethod", MFX_RATECONTROL_CBR);

	push	1
	push	OFFSET $SG4294731584
	push	OFFSET $SG4294731583
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	WORD PTR _config_method$[ebp], ax

; 181  :     if (!valid_method(config_method))

	movzx	eax, WORD PTR _config_method$[ebp]
	push	eax
	call	?valid_method@@YA_NG@Z			; valid_method
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@RateContro

; 182  :         config_method = MFX_RATECONTROL_CBR;

	mov	edx, 1
	mov	WORD PTR _config_method$[ebp], dx
$LN8@RateContro:

; 183  : 
; 184  :     ratecontrol_t method = get_method(hwnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?get_method@@YAGPAUHWND__@@@Z		; get_method
	add	esp, 4
	mov	WORD PTR _method$[ebp], ax

; 185  : 
; 186  :     for (auto mapping : id_method_map)

	mov	DWORD PTR _$S13$7[ebp], OFFSET ?id_method_map@?A0x5d360590@@3PAU<unnamed-type-id_method_map>@1@A ; `anonymous namespace'::id_method_map
	mov	edx, DWORD PTR _$S13$7[ebp]
	mov	DWORD PTR _$S14$9[ebp], edx
	mov	eax, DWORD PTR _$S13$7[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR _$S15$4[ebp], eax
	jmp	SHORT $LN7@RateContro
$LN6@RateContro:
	mov	ecx, DWORD PTR _$S14$9[ebp]
	add	ecx, 8
	mov	DWORD PTR _$S14$9[ebp], ecx
$LN7@RateContro:
	mov	edx, DWORD PTR _$S14$9[ebp]
	cmp	edx, DWORD PTR _$S15$4[ebp]
	je	SHORT $LN5@RateContro
	mov	eax, DWORD PTR _$S14$9[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _mapping$2[ebp], ecx
	mov	DWORD PTR _mapping$2[ebp+4], edx

; 187  :         EnableWindow(GetDlgItem(hwnd, mapping.id), enabled && (config_method == mapping.method || QSVMethodAvailable(mapping.method)));

	movzx	eax, BYTE PTR _enabled$[ebp]
	test	eax, eax
	je	SHORT $LN14@RateContro
	movzx	ecx, WORD PTR _config_method$[ebp]
	movzx	edx, WORD PTR _mapping$2[ebp+4]
	cmp	ecx, edx
	je	SHORT $LN13@RateContro
	movzx	eax, WORD PTR _mapping$2[ebp+4]
	push	eax
	call	?QSVMethodAvailable@@YA_NG@Z		; QSVMethodAvailable
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@RateContro
$LN13@RateContro:
	mov	DWORD PTR tv150[ebp], 1
	jmp	SHORT $LN15@RateContro
$LN14@RateContro:
	mov	DWORD PTR tv150[ebp], 0
$LN15@RateContro:
	mov	edx, DWORD PTR tv150[ebp]
	push	edx
	mov	eax, DWORD PTR _mapping$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	jmp	SHORT $LN6@RateContro
$LN5@RateContro:

; 188  : 
; 189  :     //--------------------------------------------
; 190  : 
; 191  :     auto mapping = find_if(begin(method_enabled_ids), end(method_enabled_ids), [method](const decltype(method_enabled_ids[0]) &item) { return item.method == method; });

	lea	eax, DWORD PTR _method$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	call	??0<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QAE@ABG@Z ; <lambda_1d20971aaee566fe1e517ac5f48029eb>::<lambda_1d20971aaee566fe1e517ac5f48029eb>
	mov	cx, WORD PTR [eax]
	movzx	edx, cx
	push	edx
	push	OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A ; `anonymous namespace'::method_enabled_ids
	call	??$end@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z ; std::end<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>
	add	esp, 4
	push	eax
	push	OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A ; `anonymous namespace'::method_enabled_ids
	call	??$begin@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z ; std::begin<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>
	add	esp, 4
	push	eax
	call	??$find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z ; std::find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _mapping$[ebp], eax

; 192  :     if (mapping == end(method_enabled_ids))

	push	OFFSET ?method_enabled_ids@?A0x5d360590@@3PAU<unnamed-type-method_enabled_ids>@1@A ; `anonymous namespace'::method_enabled_ids
	call	??$end@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z ; std::end<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>
	add	esp, 4
	cmp	DWORD PTR _mapping$[ebp], eax
	jne	SHORT $LN4@RateContro

; 193  :         return;

	jmp	$LN9@RateContro
$LN4@RateContro:

; 194  : 
; 195  :     for (auto id : parameter_control_ids)

	mov	DWORD PTR _$S16$6[ebp], OFFSET ?parameter_control_ids@?A0x5d360590@@3PAHA ; `anonymous namespace'::parameter_control_ids
	mov	eax, DWORD PTR _$S16$6[ebp]
	mov	DWORD PTR _$S17$8[ebp], eax
	mov	ecx, DWORD PTR _$S16$6[ebp]
	add	ecx, 76					; 0000004cH
	mov	DWORD PTR _$S18$3[ebp], ecx
	jmp	SHORT $LN3@RateContro
$LN2@RateContro:
	mov	edx, DWORD PTR _$S17$8[ebp]
	add	edx, 4
	mov	DWORD PTR _$S17$8[ebp], edx
$LN3@RateContro:
	mov	eax, DWORD PTR _$S17$8[ebp]
	cmp	eax, DWORD PTR _$S18$3[ebp]
	je	$LN1@RateContro
	mov	ecx, DWORD PTR _$S17$8[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _id$5[ebp], edx

; 196  :         EnableWindow(GetDlgItem(hwnd, id), enabled && find(begin(mapping->enabled_ids), end(mapping->enabled_ids), id) != end(mapping->enabled_ids));

	movzx	eax, BYTE PTR _enabled$[ebp]
	test	eax, eax
	je	SHORT $LN16@RateContro
	lea	ecx, DWORD PTR _id$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _mapping$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	push	ecx
	call	??$end@H@std@@YAPBHV?$initializer_list@H@0@@Z ; std::end<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _mapping$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	push	ecx
	call	??$begin@H@std@@YAPBHV?$initializer_list@H@0@@Z ; std::begin<int>
	add	esp, 8
	push	eax
	call	??$find@PBHH@std@@YAPBHPBH0ABH@Z	; std::find<int const *,int>
	add	esp, 12					; 0000000cH
	mov	esi, eax
	mov	edx, DWORD PTR _mapping$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	push	ecx
	call	??$end@H@std@@YAPBHV?$initializer_list@H@0@@Z ; std::end<int>
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN16@RateContro
	mov	DWORD PTR tv194[ebp], 1
	jmp	SHORT $LN17@RateContro
$LN16@RateContro:
	mov	DWORD PTR tv194[ebp], 0
$LN17@RateContro:
	mov	edx, DWORD PTR tv194[ebp]
	push	edx
	mov	eax, DWORD PTR _id$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	jmp	$LN2@RateContro
$LN1@RateContro:

; 197  : 
; 198  :     enable(IDC_TARGETKBPS, IsWindowEnabled(GetDlgItem(hwnd, IDC_USEGLOBALBITRATE)) && !checked(IDC_USEGLOBALBITRATE));

	push	1208					; 000004b8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__IsWindowEnabled@4
	test	eax, eax
	je	SHORT $LN18@RateContro
	push	1208					; 000004b8H
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??R<lambda_3beb4a24917d353c60e7356d1113caf6>@@QBE_NH@Z ; <lambda_3beb4a24917d353c60e7356d1113caf6>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN18@RateContro
	mov	BYTE PTR tv221[ebp], 1
	jmp	SHORT $LN19@RateContro
$LN18@RateContro:
	mov	BYTE PTR tv221[ebp], 0
$LN19@RateContro:
	movzx	eax, BYTE PTR tv221[ebp]
	push	eax
	push	1186					; 000004a2H
	lea	ecx, DWORD PTR _enable$[ebp]
	call	??R<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QBEXH_N@Z ; <lambda_c07b4e539772f1d69a2b1b7838dc7f75>::operator()

; 199  :     enable(IDC_BUFFERSIZE, IsWindowEnabled(GetDlgItem(hwnd, IDC_USEGLOBALBUFFERSIZE)) && !checked(IDC_USEGLOBALBUFFERSIZE));

	push	1209					; 000004b9H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__IsWindowEnabled@4
	test	eax, eax
	je	SHORT $LN20@RateContro
	push	1209					; 000004b9H
	lea	ecx, DWORD PTR _checked$[ebp]
	call	??R<lambda_3beb4a24917d353c60e7356d1113caf6>@@QBE_NH@Z ; <lambda_3beb4a24917d353c60e7356d1113caf6>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN20@RateContro
	mov	BYTE PTR tv241[ebp], 1
	jmp	SHORT $LN21@RateContro
$LN20@RateContro:
	mov	BYTE PTR tv241[ebp], 0
$LN21@RateContro:
	movzx	ecx, BYTE PTR tv241[ebp]
	push	ecx
	push	1016					; 000003f8H
	lea	ecx, DWORD PTR _enable$[ebp]
	call	??R<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QBEXH_N@Z ; <lambda_c07b4e539772f1d69a2b1b7838dc7f75>::operator()
$LN9@RateContro:

; 200  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?RateControlMethodChanged@SettingsQSV@@AAEXXZ ENDP	; SettingsQSV::RateControlMethodChanged
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0<lambda_3beb4a24917d353c60e7356d1113caf6>@@QAE@PAVSettingsQSV@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_3beb4a24917d353c60e7356d1113caf6>@@QAE@PAVSettingsQSV@@@Z PROC ; <lambda_3beb4a24917d353c60e7356d1113caf6>::<lambda_3beb4a24917d353c60e7356d1113caf6>, COMDAT
; _this$ = ecx

; 173  :     auto checked = [&](int id) { return SendMessage(GetDlgItem(hwnd, id), BM_GETCHECK, 0, 0) == BST_CHECKED; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_3beb4a24917d353c60e7356d1113caf6>@@QAE@PAVSettingsQSV@@@Z ENDP ; <lambda_3beb4a24917d353c60e7356d1113caf6>::<lambda_3beb4a24917d353c60e7356d1113caf6>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??R<lambda_3beb4a24917d353c60e7356d1113caf6>@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv79 = -4						; size = 4
_id$ = 8						; size = 4
??R<lambda_3beb4a24917d353c60e7356d1113caf6>@@QBE_NH@Z PROC ; <lambda_3beb4a24917d353c60e7356d1113caf6>::operator(), COMDAT
; _this$ = ecx

; 173  :     auto checked = [&](int id) { return SendMessage(GetDlgItem(hwnd, id), BM_GETCHECK, 0, 0) == BST_CHECKED; };

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	240					; 000000f0H
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv79[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv79[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_3beb4a24917d353c60e7356d1113caf6>@@QBE_NH@Z ENDP ; <lambda_3beb4a24917d353c60e7356d1113caf6>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QAE@PAVSettingsQSV@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QAE@PAVSettingsQSV@@@Z PROC ; <lambda_c07b4e539772f1d69a2b1b7838dc7f75>::<lambda_c07b4e539772f1d69a2b1b7838dc7f75>, COMDAT
; _this$ = ecx

; 174  :     auto enable  = [&](int id, bool enable) { EnableWindow(GetDlgItem(hwnd, id), enable); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QAE@PAVSettingsQSV@@@Z ENDP ; <lambda_c07b4e539772f1d69a2b1b7838dc7f75>::<lambda_c07b4e539772f1d69a2b1b7838dc7f75>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??R<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QBEXH_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
_enable$ = 12						; size = 1
??R<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QBEXH_N@Z PROC ; <lambda_c07b4e539772f1d69a2b1b7838dc7f75>::operator(), COMDAT
; _this$ = ecx

; 174  :     auto enable  = [&](int id, bool enable) { EnableWindow(GetDlgItem(hwnd, id), enable); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _enable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	mov	esp, ebp
	pop	ebp
	ret	8
??R<lambda_c07b4e539772f1d69a2b1b7838dc7f75>@@QBEXH_N@Z ENDP ; <lambda_c07b4e539772f1d69a2b1b7838dc7f75>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QAE@ABG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___method$ = 8						; size = 4
??0<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QAE@ABG@Z PROC ; <lambda_1d20971aaee566fe1e517ac5f48029eb>::<lambda_1d20971aaee566fe1e517ac5f48029eb>, COMDAT
; _this$ = ecx

; 191  :     auto mapping = find_if(begin(method_enabled_ids), end(method_enabled_ids), [method](const decltype(method_enabled_ids[0]) &item) { return item.method == method; });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___method$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QAE@ABG@Z ENDP ; <lambda_1d20971aaee566fe1e517ac5f48029eb>::<lambda_1d20971aaee566fe1e517ac5f48029eb>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??R<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QBE_NAAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
_item$ = 8						; size = 4
??R<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QBE_NAAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@Z PROC ; <lambda_1d20971aaee566fe1e517ac5f48029eb>::operator(), COMDAT
; _this$ = ecx

; 191  :     auto mapping = find_if(begin(method_enabled_ids), end(method_enabled_ids), [method](const decltype(method_enabled_ids[0]) &item) { return item.method == method; });

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??R<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QBE_NAAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@Z ENDP ; <lambda_1d20971aaee566fe1e517ac5f48029eb>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ?ProcMessage@SettingsQSV@@UAEHIIJ@Z
_TEXT	SEGMENT
$T1 = -160						; size = 8
$T2 = -152						; size = 8
$T3 = -144						; size = 8
$T4 = -136						; size = 8
$T5 = -128						; size = 8
$T6 = -120						; size = 8
tv592 = -112						; size = 4
_$S21$7 = -108						; size = 4
tv436 = -104						; size = 4
tv601 = -100						; size = 4
_foo$8 = -96						; size = 4
_accuracy$9 = -92					; size = 4
_mapping$10 = -88					; size = 8
_prev$11 = -80						; size = 4
tv186 = -76						; size = 4
tv80 = -72						; size = 4
tv175 = -68						; size = 4
tv129 = -64						; size = 4
_$S19$12 = -60						; size = 4
tv146 = -56						; size = 4
_newpos$13 = -52					; size = 4
_val$14 = -48						; size = 4
_lpnmud$15 = -44					; size = 4
tv64 = -40						; size = 4
tv309 = -36						; size = 4
_$S20$16 = -32						; size = 4
_check$17 = -28						; size = 4
_use_global_buffer$18 = -21				; size = 1
_method$19 = -20					; size = 2
_use_global_bitrate$20 = -13				; size = 1
_load_range$21 = -12					; size = 4
tv166 = -7						; size = 1
_qsv_selected$22 = -6					; size = 1
_enabled$23 = -5					; size = 1
_this$ = -4						; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?ProcMessage@SettingsQSV@@UAEHIIJ@Z PROC		; SettingsQSV::ProcMessage, COMDAT
; _this$ = ecx

; 203  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 160				; 000000a0H
	mov	DWORD PTR _this$[ebp], ecx

; 204  :     static bool updating_accuracy = false;
; 205  : 
; 206  :     switch (message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 78			; 0000004eH
	je	$LN7@ProcMessag
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN24@ProcMessag
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN19@ProcMessag
	jmp	$LN25@ProcMessag
$LN24@ProcMessag:

; 207  :     {
; 208  :     case WM_INITDIALOG:
; 209  :     {
; 210  :         LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 211  : 
; 212  :         //--------------------------------------------
; 213  : 
; 214  :         auto check = [&](int item, bool checked)
; 215  :         {
; 216  :             SendMessage(GetDlgItem(hwnd, item), BM_SETCHECK, checked ? BST_CHECKED : BST_UNCHECKED, 0);
; 217  :         };

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _check$17[ebp]
	call	??0<lambda_47d582553872744430080c2682539697>@@QAE@PAVSettingsQSV@@@Z ; <lambda_47d582553872744430080c2682539697>::<lambda_47d582553872744430080c2682539697>

; 218  : 
; 219  :         //--------------------------------------------
; 220  : 
; 221  :         bool enabled = !!AppConfig->GetInt(L"QSV (Advanced)", L"UseCustomParams");

	push	0
	push	OFFSET $SG4294731582
	push	OFFSET $SG4294731581
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN29@ProcMessag
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN30@ProcMessag
$LN29@ProcMessag:
	mov	DWORD PTR tv80[ebp], 0
$LN30@ProcMessag:
	mov	cl, BYTE PTR tv80[ebp]
	mov	BYTE PTR _enabled$23[ebp], cl

; 222  :         check(IDC_USECUSTOMPARAMS, enabled);

	movzx	edx, BYTE PTR _enabled$23[ebp]
	push	edx
	push	1207					; 000004b7H
	lea	ecx, DWORD PTR _check$17[ebp]
	call	??R<lambda_47d582553872744430080c2682539697>@@QBEXH_N@Z ; <lambda_47d582553872744430080c2682539697>::operator()

; 223  : 
; 224  :         bool qsv_selected = !!(AppConfig->GetString(L"Video Encoding", L"Encoder") == L"QSV");

	push	OFFSET $SG4294731578
	push	0
	push	OFFSET $SG4294731580
	push	OFFSET $SG4294731579
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??8String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN31@ProcMessag
	mov	DWORD PTR tv129[ebp], 1
	jmp	SHORT $LN32@ProcMessag
$LN31@ProcMessag:
	mov	DWORD PTR tv129[ebp], 0
$LN32@ProcMessag:
	mov	cl, BYTE PTR tv129[ebp]
	mov	BYTE PTR _qsv_selected$22[ebp], cl
	lea	ecx, DWORD PTR $T6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 225  :         EnableWindow(GetDlgItem(hwnd, IDC_USECUSTOMPARAMS), qsv_selected);

	movzx	edx, BYTE PTR _qsv_selected$22[ebp]
	push	edx
	push	1207					; 000004b7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 226  :         enabled = enabled && qsv_selected;

	movzx	edx, BYTE PTR _enabled$23[ebp]
	test	edx, edx
	je	SHORT $LN33@ProcMessag
	movzx	eax, BYTE PTR _qsv_selected$22[ebp]
	test	eax, eax
	je	SHORT $LN33@ProcMessag
	mov	DWORD PTR tv146[ebp], 1
	jmp	SHORT $LN34@ProcMessag
$LN33@ProcMessag:
	mov	DWORD PTR tv146[ebp], 0
$LN34@ProcMessag:
	mov	cl, BYTE PTR tv146[ebp]
	mov	BYTE PTR _enabled$23[ebp], cl

; 227  : 
; 228  :         //--------------------------------------------
; 229  : 
; 230  :         ratecontrol_t method = AppConfig->GetInt(L"QSV (Advanced)", L"RateControlMethod", MFX_RATECONTROL_CBR);

	push	1
	push	OFFSET $SG4294731577
	push	OFFSET $SG4294731576
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	WORD PTR _method$19[ebp], ax

; 231  :         if (!valid_method(method))

	movzx	edx, WORD PTR _method$19[ebp]
	push	edx
	call	?valid_method@@YA_NG@Z			; valid_method
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN23@ProcMessag

; 232  :             method = MFX_RATECONTROL_CBR;

	mov	ecx, 1
	mov	WORD PTR _method$19[ebp], cx
$LN23@ProcMessag:

; 233  : 
; 234  :         for (auto mapping : id_method_map)

	mov	DWORD PTR _$S19$12[ebp], OFFSET ?id_method_map@?A0x5d360590@@3PAU<unnamed-type-id_method_map>@1@A ; `anonymous namespace'::id_method_map
	mov	edx, DWORD PTR _$S19$12[ebp]
	mov	DWORD PTR _$S20$16[ebp], edx
	mov	eax, DWORD PTR _$S19$12[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR _$S21$7[ebp], eax
	jmp	SHORT $LN22@ProcMessag
$LN21@ProcMessag:
	mov	ecx, DWORD PTR _$S20$16[ebp]
	add	ecx, 8
	mov	DWORD PTR _$S20$16[ebp], ecx
$LN22@ProcMessag:
	mov	edx, DWORD PTR _$S20$16[ebp]
	cmp	edx, DWORD PTR _$S21$7[ebp]
	je	SHORT $LN20@ProcMessag
	mov	eax, DWORD PTR _$S20$16[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _mapping$10[ebp], ecx
	mov	DWORD PTR _mapping$10[ebp+4], edx

; 235  :             check(mapping.id, method == mapping.method);

	movzx	eax, WORD PTR _method$19[ebp]
	movzx	ecx, WORD PTR _mapping$10[ebp+4]
	cmp	eax, ecx
	jne	SHORT $LN35@ProcMessag
	mov	BYTE PTR tv166[ebp], 1
	jmp	SHORT $LN36@ProcMessag
$LN35@ProcMessag:
	mov	BYTE PTR tv166[ebp], 0
$LN36@ProcMessag:
	movzx	edx, BYTE PTR tv166[ebp]
	push	edx
	mov	eax, DWORD PTR _mapping$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _check$17[ebp]
	call	??R<lambda_47d582553872744430080c2682539697>@@QBEXH_N@Z ; <lambda_47d582553872744430080c2682539697>::operator()
	jmp	SHORT $LN21@ProcMessag
$LN20@ProcMessag:

; 236  : 
; 237  :         //--------------------------------------------
; 238  : 
; 239  :         bool use_global_bitrate = !!AppConfig->GetInt(L"QSV (Advanced)", L"UseGlobalBitrate", true);

	push	1
	push	OFFSET $SG4294731575
	push	OFFSET $SG4294731574
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN37@ProcMessag
	mov	DWORD PTR tv175[ebp], 1
	jmp	SHORT $LN38@ProcMessag
$LN37@ProcMessag:
	mov	DWORD PTR tv175[ebp], 0
$LN38@ProcMessag:
	mov	cl, BYTE PTR tv175[ebp]
	mov	BYTE PTR _use_global_bitrate$20[ebp], cl

; 240  :         check(IDC_USEGLOBALBITRATE, use_global_bitrate);

	movzx	edx, BYTE PTR _use_global_bitrate$20[ebp]
	push	edx
	push	1208					; 000004b8H
	lea	ecx, DWORD PTR _check$17[ebp]
	call	??R<lambda_47d582553872744430080c2682539697>@@QBEXH_N@Z ; <lambda_47d582553872744430080c2682539697>::operator()

; 241  : 
; 242  :         //--------------------------------------------
; 243  : 
; 244  :         bool use_global_buffer = !!AppConfig->GetInt(L"QSV (Advanced)", L"UseGlobalBufferSize", true);

	push	1
	push	OFFSET $SG4294731573
	push	OFFSET $SG4294731572
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN39@ProcMessag
	mov	DWORD PTR tv186[ebp], 1
	jmp	SHORT $LN40@ProcMessag
$LN39@ProcMessag:
	mov	DWORD PTR tv186[ebp], 0
$LN40@ProcMessag:
	mov	al, BYTE PTR tv186[ebp]
	mov	BYTE PTR _use_global_buffer$18[ebp], al

; 245  :         check(IDC_USEGLOBALBUFFERSIZE, use_global_buffer);

	movzx	ecx, BYTE PTR _use_global_buffer$18[ebp]
	push	ecx
	push	1209					; 000004b9H
	lea	ecx, DWORD PTR _check$17[ebp]
	call	??R<lambda_47d582553872744430080c2682539697>@@QBEXH_N@Z ; <lambda_47d582553872744430080c2682539697>::operator()

; 246  : 
; 247  :         //--------------------------------------------
; 248  : 
; 249  :         LoadSettingEditInt(GetDlgItem(hwnd, IDC_TARGETKBPS), L"QSV (Advanced)", L"TargetKbps", 1000);

	push	1000					; 000003e8H
	push	OFFSET $SG4294731571
	push	OFFSET $SG4294731570
	push	1186					; 000004a2H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?LoadSettingEditInt@@YAHPAUHWND__@@PB_W1H@Z ; LoadSettingEditInt
	add	esp, 16					; 00000010H

; 250  :         LoadSettingEditInt(GetDlgItem(hwnd, IDC_MAXKBPS), L"QSV (Advanced)", L"MaxKbps", 0);

	push	0
	push	OFFSET $SG4294731569
	push	OFFSET $SG4294731568
	push	1191					; 000004a7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?LoadSettingEditInt@@YAHPAUHWND__@@PB_W1H@Z ; LoadSettingEditInt
	add	esp, 16					; 00000010H

; 251  :         LoadSettingEditInt(GetDlgItem(hwnd, IDC_BUFFERSIZE), L"QSV (Advanced)", L"BufferSizeInKB", 0);

	push	0
	push	OFFSET $SG4294731567
	push	OFFSET $SG4294731566
	push	1016					; 000003f8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?LoadSettingEditInt@@YAHPAUHWND__@@PB_W1H@Z ; LoadSettingEditInt
	add	esp, 16					; 00000010H

; 252  : 
; 253  :         //--------------------------------------------
; 254  : 
; 255  :         auto load_range = [&](int id, CTSTR name, int def, int min, int max)
; 256  :         {
; 257  :             HWND dlg = GetDlgItem(hwnd, id);
; 258  :             int val = clamp(AppConfig->GetInt(L"QSV (Advanced)", name, def), min, max);
; 259  :             SendMessage(dlg, UDM_SETRANGE32, min, max);
; 260  :             SendMessage(dlg, UDM_SETPOS32, 0, val);
; 261  :             return val;
; 262  :         };

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??0<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QAE@PAVSettingsQSV@@@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::<lambda_3a8a0158af60f9470c9b0844c073ff8f>

; 263  : 
; 264  :         int accuracy = load_range(IDC_ACCURACY, L"Accuracy", 1000, 0, 1000);

	push	1000					; 000003e8H
	push	0
	push	1000					; 000003e8H
	push	OFFSET $SG4294731565
	push	1194					; 000004aaH
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()
	mov	DWORD PTR _accuracy$9[ebp], eax

; 265  : 
; 266  :         load_range(IDC_CONVERGENCE, L"Convergence", 0, 0, 1000);

	push	1000					; 000003e8H
	push	0
	push	0
	push	OFFSET $SG4294731564
	push	1196					; 000004acH
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()

; 267  : 
; 268  :         load_range(IDC_LADEPTH, L"LADepth", 40, 10, 100);

	push	100					; 00000064H
	push	10					; 0000000aH
	push	40					; 00000028H
	push	OFFSET $SG4294731563
	push	1204					; 000004b4H
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()

; 269  : 
; 270  :         load_range(IDC_QPI, L"QPI", 23, 1, 51);

	push	51					; 00000033H
	push	1
	push	23					; 00000017H
	push	OFFSET $SG4294731562
	push	1198					; 000004aeH
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()

; 271  :         load_range(IDC_QPP, L"QPP", 23, 1, 51);

	push	51					; 00000033H
	push	1
	push	23					; 00000017H
	push	OFFSET $SG4294731561
	push	1200					; 000004b0H
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()

; 272  :         load_range(IDC_QPB, L"QPB", 23, 1, 51);

	push	51					; 00000033H
	push	1
	push	23					; 00000017H
	push	OFFSET $SG4294731560
	push	1202					; 000004b2H
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()

; 273  : 
; 274  :         load_range(IDC_ICQQUALITY, L"ICQQuality", 23, 1, 51);

	push	51					; 00000033H
	push	1
	push	23					; 00000017H
	push	OFFSET $SG4294731559
	push	1206					; 000004b6H
	lea	ecx, DWORD PTR _load_range$21[ebp]
	call	??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()

; 275  : 
; 276  :         //--------------------------------------------
; 277  : 
; 278  :         SetWindowText(GetDlgItem(hwnd, IDC_ACCURACY_EDIT), FloatString(accuracy / 10.).Array());

	cvtsi2sd xmm0, DWORD PTR _accuracy$9[ebp]
	divsd	xmm0, QWORD PTR __real@4024000000000000
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	DWORD PTR __imp_?FloatString@@YA?AVString@@N@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1193					; 000004a9H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 279  : 
; 280  :         //--------------------------------------------
; 281  : 
; 282  :         RateControlMethodChanged();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RateControlMethodChanged@SettingsQSV@@AAEXXZ ; SettingsQSV::RateControlMethodChanged

; 283  : 
; 284  :         //--------------------------------------------
; 285  : 
; 286  :         //need this as some of the dialog item sets above trigger the notifications
; 287  :         SetChangedSettings(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 288  :         ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_HIDE);

	push	0
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 289  :         return TRUE;

	mov	eax, 1
	jmp	$LN27@ProcMessag
$LN19@ProcMessag:

; 290  :     }
; 291  : 
; 292  :     case WM_COMMAND:
; 293  :         switch (LOWORD(wParam))

	movzx	edx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv309[ebp], edx
	mov	eax, DWORD PTR tv309[ebp]
	sub	eax, 1041				; 00000411H
	mov	DWORD PTR tv309[ebp], eax
	cmp	DWORD PTR tv309[ebp], 168		; 000000a8H
	ja	$LN17@ProcMessag
	mov	ecx, DWORD PTR tv309[ebp]
	movzx	edx, BYTE PTR $LN41@ProcMessag[ecx]
	jmp	DWORD PTR $LN42@ProcMessag[edx*4]
$LN16@ProcMessag:

; 294  :         {
; 295  :         case IDC_USECUSTOMPARAMS:
; 296  :         case IDC_QSVCBR:
; 297  :         case IDC_QSVVCM:
; 298  :         case IDC_QSVVBR:
; 299  :         case IDC_QSVAVBR:
; 300  :         case IDC_QSVLA:
; 301  :         case IDC_QSVCQP:
; 302  :         case IDC_QSVICQ:
; 303  :         case IDC_QSVLAICQ:
; 304  :         case IDC_USEGLOBALBITRATE:
; 305  :         case IDC_USEGLOBALBUFFERSIZE:
; 306  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN15@ProcMessag

; 307  :             {
; 308  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 309  :                 if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN14@ProcMessag

; 310  :                     ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN14@ProcMessag:

; 311  :                 RateControlMethodChanged();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RateControlMethodChanged@SettingsQSV@@AAEXXZ ; SettingsQSV::RateControlMethodChanged
$LN15@ProcMessag:

; 312  :             }
; 313  :             break;

	jmp	$LN17@ProcMessag
$LN13@ProcMessag:

; 314  : 
; 315  :         case IDC_ACCURACY_EDIT:
; 316  :             if (HIWORD(wParam) == EN_CHANGE && !updating_accuracy)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 768				; 00000300H
	jne	$LN12@ProcMessag
	movzx	eax, BYTE PTR ?updating_accuracy@?1??ProcMessage@SettingsQSV@@UAEHIIJ@Z@4_NA
	test	eax, eax
	jne	$LN12@ProcMessag

; 317  :             {
; 318  :                 updating_accuracy = true;

	mov	BYTE PTR ?updating_accuracy@?1??ProcMessage@SettingsQSV@@UAEHIIJ@Z@4_NA, 1

; 319  :                 int prev = int(GetEditText(GetDlgItem(hwnd, IDC_ACCURACY_EDIT)).ToFloat() * 10);

	push	1193					; 000004a9H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToFloat@String@@QBEMXZ
	fstp	DWORD PTR tv592[ebp]
	movss	xmm0, DWORD PTR tv592[ebp]
	mulss	xmm0, DWORD PTR __real@41200000
	cvttss2si ecx, xmm0
	mov	DWORD PTR _prev$11[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 320  :                 int val = clamp(int(GetEditText(GetDlgItem(hwnd, IDC_ACCURACY_EDIT)).ToFloat() * 10), 0, 1000);

	push	1000					; 000003e8H
	push	0
	push	1193					; 000004a9H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToFloat@String@@QBEMXZ
	fstp	DWORD PTR tv601[ebp]
	movss	xmm0, DWORD PTR tv601[ebp]
	mulss	xmm0, DWORD PTR __real@41200000
	cvttss2si edx, xmm0
	push	edx
	call	??$clamp@HHH@@YAHHHH@Z			; clamp<int,int,int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _val$14[ebp], eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 321  :                 SendMessage(GetDlgItem(hwnd, IDC_ACCURACY), UDM_SETPOS32, 0, val);

	mov	eax, DWORD PTR _val$14[ebp]
	push	eax
	push	0
	push	1137					; 00000471H
	push	1194					; 000004aaH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 322  :                 if (val != prev)

	mov	eax, DWORD PTR _val$14[ebp]
	cmp	eax, DWORD PTR _prev$11[ebp]
	je	SHORT $LN11@ProcMessag

; 323  :                    SetWindowText(GetDlgItem(hwnd, IDC_ACCURACY_EDIT), FloatString(val / 10.).Array());

	cvtsi2sd xmm0, DWORD PTR _val$14[ebp]
	divsd	xmm0, QWORD PTR __real@4024000000000000
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	DWORD PTR __imp_?FloatString@@YA?AVString@@N@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1193					; 000004a9H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN11@ProcMessag:

; 324  :                 updating_accuracy = false;

	mov	BYTE PTR ?updating_accuracy@?1??ProcMessage@SettingsQSV@@UAEHIIJ@Z@4_NA, 0
$LN12@ProcMessag:

; 325  :             }
; 326  :         case IDC_TARGETKBPS:
; 327  :         case IDC_MAXKBPS:
; 328  :         case IDC_CUSTOMBUFFER:
; 329  :         case IDC_CONVERGENCE_EDIT:
; 330  :         case IDC_LADEPTH_EDIT:
; 331  :         case IDC_QPI_EDIT:
; 332  :         case IDC_QPP_EDIT:
; 333  :         case IDC_QPB_EDIT:
; 334  :         case IDC_ICQQUALITY_EDIT:
; 335  :             if (HIWORD(wParam) == EN_CHANGE)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 768				; 00000300H
	jne	SHORT $LN8@ProcMessag

; 336  :             {
; 337  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 338  :                 if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN8@ProcMessag

; 339  :                     ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN8@ProcMessag:
$LN17@ProcMessag:

; 340  :             }
; 341  :             break;
; 342  :         }
; 343  :         break;

	jmp	$LN25@ProcMessag
$LN7@ProcMessag:

; 344  : 
; 345  :     case WM_NOTIFY:
; 346  :         auto foo = (LPNMHDR)lParam;

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _foo$8[ebp], edx

; 347  :         switch (foo->code)

	mov	eax, DWORD PTR _foo$8[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv436[ebp], ecx
	cmp	DWORD PTR tv436[ebp], -722		; fffffd2eH
	je	SHORT $LN4@ProcMessag
	jmp	$LN5@ProcMessag
$LN4@ProcMessag:

; 348  :         {
; 349  :         case UDN_DELTAPOS:
; 350  :             {
; 351  :                 auto lpnmud = (LPNMUPDOWN)lParam;

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _lpnmud$15[ebp], edx

; 352  :                 if (lpnmud->hdr.hwndFrom != GetDlgItem(hwnd, IDC_ACCURACY))

	push	1194					; 000004aaH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	edx, DWORD PTR _lpnmud$15[ebp]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN3@ProcMessag

; 353  :                     break;

	jmp	$LN5@ProcMessag
$LN3@ProcMessag:

; 354  : 
; 355  :                 int newpos = lpnmud->iPos + lpnmud->iDelta;

	mov	eax, DWORD PTR _lpnmud$15[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _lpnmud$15[ebp]
	add	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR _newpos$13[ebp], ecx

; 356  :                 if (newpos < 0 || newpos > 1000)

	js	SHORT $LN1@ProcMessag
	cmp	DWORD PTR _newpos$13[ebp], 1000		; 000003e8H
	jle	SHORT $LN2@ProcMessag
$LN1@ProcMessag:

; 357  :                     return TRUE;

	mov	eax, 1
	jmp	SHORT $LN27@ProcMessag
$LN2@ProcMessag:

; 358  : 
; 359  :                 updating_accuracy = true;

	mov	BYTE PTR ?updating_accuracy@?1??ProcMessage@SettingsQSV@@UAEHIIJ@Z@4_NA, 1

; 360  :                 SetWindowText(GetDlgItem(hwnd, IDC_ACCURACY_EDIT), FloatString(newpos/10.).Array());

	cvtsi2sd xmm0, DWORD PTR _newpos$13[ebp]
	divsd	xmm0, QWORD PTR __real@4024000000000000
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?FloatString@@YA?AVString@@N@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1193					; 000004a9H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 361  :                 updating_accuracy = false;

	mov	BYTE PTR ?updating_accuracy@?1??ProcMessage@SettingsQSV@@UAEHIIJ@Z@4_NA, 0
$LN5@ProcMessag:
$LN25@ProcMessag:

; 362  :                 break;
; 363  :             }
; 364  :         }
; 365  : 
; 366  :     }
; 367  :     return FALSE;

	xor	eax, eax
$LN27@ProcMessag:

; 368  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN42@ProcMessag:
	DD	$LN12@ProcMessag
	DD	$LN16@ProcMessag
	DD	$LN13@ProcMessag
	DD	$LN17@ProcMessag
$LN41@ProcMessag:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	3
	DB	2
	DB	3
	DB	0
	DB	3
	DB	0
	DB	3
	DB	0
	DB	3
	DB	0
	DB	3
	DB	0
	DB	3
	DB	0
	DB	3
	DB	1
	DB	1
	DB	1
?ProcMessage@SettingsQSV@@UAEHIIJ@Z ENDP		; SettingsQSV::ProcMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0<lambda_47d582553872744430080c2682539697>@@QAE@PAVSettingsQSV@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_47d582553872744430080c2682539697>@@QAE@PAVSettingsQSV@@@Z PROC ; <lambda_47d582553872744430080c2682539697>::<lambda_47d582553872744430080c2682539697>, COMDAT
; _this$ = ecx

; 217  :         };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_47d582553872744430080c2682539697>@@QAE@PAVSettingsQSV@@@Z ENDP ; <lambda_47d582553872744430080c2682539697>::<lambda_47d582553872744430080c2682539697>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??R<lambda_47d582553872744430080c2682539697>@@QBEXH_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_item$ = 8						; size = 4
_checked$ = 12						; size = 1
??R<lambda_47d582553872744430080c2682539697>@@QBEXH_N@Z PROC ; <lambda_47d582553872744430080c2682539697>::operator(), COMDAT
; _this$ = ecx

; 215  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 216  :             SendMessage(GetDlgItem(hwnd, item), BM_SETCHECK, checked ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	eax, BYTE PTR _checked$[ebp]
	test	eax, eax
	je	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	push	0
	mov	ecx, DWORD PTR tv68[ebp]
	push	ecx
	push	241					; 000000f1H
	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 217  :         };

	mov	esp, ebp
	pop	ebp
	ret	8
??R<lambda_47d582553872744430080c2682539697>@@QBEXH_N@Z ENDP ; <lambda_47d582553872744430080c2682539697>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??0<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QAE@PAVSettingsQSV@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QAE@PAVSettingsQSV@@@Z PROC ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::<lambda_3a8a0158af60f9470c9b0844c073ff8f>, COMDAT
; _this$ = ecx

; 262  :         };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QAE@PAVSettingsQSV@@@Z ENDP ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::<lambda_3a8a0158af60f9470c9b0844c073ff8f>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsqsv.cpp
;	COMDAT ??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_val$ = -8						; size = 4
_dlg$ = -4						; size = 4
_id$ = 8						; size = 4
_name$ = 12						; size = 4
_def$ = 16						; size = 4
_min$ = 20						; size = 4
_max$ = 24						; size = 4
??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z PROC ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator(), COMDAT
; _this$ = ecx

; 256  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 257  :             HWND dlg = GetDlgItem(hwnd, id);

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _dlg$[ebp], eax

; 258  :             int val = clamp(AppConfig->GetInt(L"QSV (Advanced)", name, def), min, max);

	mov	ecx, DWORD PTR _max$[ebp]
	push	ecx
	mov	edx, DWORD PTR _min$[ebp]
	push	edx
	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET $SG4294731558
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	push	eax
	call	??$clamp@HHH@@YAHHHH@Z			; clamp<int,int,int>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _val$[ebp], eax

; 259  :             SendMessage(dlg, UDM_SETRANGE32, min, max);

	mov	edx, DWORD PTR _max$[ebp]
	push	edx
	mov	eax, DWORD PTR _min$[ebp]
	push	eax
	push	1135					; 0000046fH
	mov	ecx, DWORD PTR _dlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 260  :             SendMessage(dlg, UDM_SETPOS32, 0, val);

	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	push	0
	push	1137					; 00000471H
	mov	eax, DWORD PTR _dlg$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 261  :             return val;

	mov	eax, DWORD PTR _val$[ebp]

; 262  :         };

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??R<lambda_3a8a0158af60f9470c9b0844c073ff8f>@@QBEHHPB_WHHH@Z ENDP ; <lambda_3a8a0158af60f9470c9b0844c073ff8f>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\initializer_list
;	COMDAT ??0?$initializer_list@H@std@@QAE@PBH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First_arg$ = 8					; size = 4
__Last_arg$ = 12					; size = 4
??0?$initializer_list@H@std@@QAE@PBH0@Z PROC		; std::initializer_list<int>::initializer_list<int>, COMDAT
; _this$ = ecx

; 35   : 		{	// construct with pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR [edx+4], eax

; 36   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$initializer_list@H@std@@QAE@PBH0@Z ENDP		; std::initializer_list<int>::initializer_list<int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$begin@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$begin@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z PROC ; std::begin<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>, COMDAT

; 1214 : 	{	// get beginning of array

	push	ebp
	mov	ebp, esp

; 1215 : 	return (_Array);

	mov	eax, DWORD PTR __Array$[ebp]

; 1216 : 	}

	pop	ebp
	ret	0
??$begin@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z ENDP ; std::begin<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$end@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$end@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z PROC ; std::end<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>, COMDAT

; 1221 : 	{	// get end of array

	push	ebp
	mov	ebp, esp

; 1222 : 	return (_Array + _Size);

	mov	eax, DWORD PTR __Array$[ebp]
	add	eax, 96					; 00000060H

; 1223 : 	}

	pop	ebp
	ret	0
??$end@U<unnamed-type-method_enabled_ids>@?A0x5d360590@@$07@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAY07U12@@Z ENDP ; std::end<`anonymous namespace'::<unnamed-type-method_enabled_ids>,8>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\algorithm
;	COMDAT ??$find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 2
??$find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z PROC ; std::find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >, COMDAT

; 52   : 	{	// find first satisfying _Pred

	push	ebp
	mov	ebp, esp

; 53   : 	_DEBUG_RANGE(_First, _Last);
; 54   : 	_DEBUG_POINTER(_Pred);
; 55   : 	return (_Rechecked(_First,
; 56   : 		_Find_if(_Unchecked(_First), _Unchecked(_Last), _Pred)));

	movzx	eax, WORD PTR __Pred$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Unchecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@Z ; std::_Unchecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Unchecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@Z ; std::_Unchecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *>
	add	esp, 4
	push	eax
	call	??$_Find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z ; std::_Find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Rechecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@std@@YAAAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAPAU12@PAU12@@Z ; std::_Rechecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,A0x5d360590::<unnamed-type-method_enabled_ids> *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	pop	ebp
	ret	0
??$find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z ENDP ; std::find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\initializer_list
;	COMDAT ??$begin@H@std@@YAPBHV?$initializer_list@H@0@@Z
_TEXT	SEGMENT
__Ilist$ = 8						; size = 8
??$begin@H@std@@YAPBHV?$initializer_list@H@0@@Z PROC	; std::begin<int>, COMDAT

; 61   : 	{	// get beginning of sequence

	push	ebp
	mov	ebp, esp

; 62   : 	return (_Ilist.begin());

	lea	ecx, DWORD PTR __Ilist$[ebp]
	call	?begin@?$initializer_list@H@std@@QBEPBHXZ ; std::initializer_list<int>::begin

; 63   : 	}

	pop	ebp
	ret	0
??$begin@H@std@@YAPBHV?$initializer_list@H@0@@Z ENDP	; std::begin<int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\initializer_list
;	COMDAT ??$end@H@std@@YAPBHV?$initializer_list@H@0@@Z
_TEXT	SEGMENT
__Ilist$ = 8						; size = 8
??$end@H@std@@YAPBHV?$initializer_list@H@0@@Z PROC	; std::end<int>, COMDAT

; 68   : 	{	// get end of sequence

	push	ebp
	mov	ebp, esp

; 69   : 	return (_Ilist.end());

	lea	ecx, DWORD PTR __Ilist$[ebp]
	call	?end@?$initializer_list@H@std@@QBEPBHXZ	; std::initializer_list<int>::end

; 70   : 	}

	pop	ebp
	ret	0
??$end@H@std@@YAPBHV?$initializer_list@H@0@@Z ENDP	; std::end<int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$find@PBHH@std@@YAPBHPBH0ABH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$find@PBHH@std@@YAPBHPBH0ABH@Z PROC			; std::find<int const *,int>, COMDAT

; 3051 : 	{	// find first matching _Val

	push	ebp
	mov	ebp, esp

; 3052 : 	_DEBUG_RANGE(_First, _Last);
; 3053 : 	return (_Rechecked(_First,
; 3054 : 		_Find(_Unchecked(_First), _Unchecked(_Last), _Val)));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Unchecked@PBH@std@@YAPBHPBH@Z	; std::_Unchecked<int const *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Unchecked@PBH@std@@YAPBHPBH@Z	; std::_Unchecked<int const *>
	add	esp, 4
	push	eax
	call	??$_Find@PBHH@std@@YAPBHPBH0ABH@Z	; std::_Find<int const *,int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Rechecked@PBHPBH@std@@YAAAPBHAAPBHPBH@Z ; std::_Rechecked<int const *,int const *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 3055 : 	}

	pop	ebp
	ret	0
??$find@PBHH@std@@YAPBHPBH0ABH@Z ENDP			; std::find<int const *,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\qsvhelper\utilities.h
;	COMDAT ??$clamp@HHH@@YAHHHH@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
_t$ = 8							; size = 4
_u$ = 12						; size = 4
_v$ = 16						; size = 4
??$clamp@HHH@@YAHHHH@Z PROC				; clamp<int,int,int>, COMDAT

; 59   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 60   :     if (t < u)

	mov	eax, DWORD PTR _t$[ebp]
	cmp	eax, DWORD PTR _u$[ebp]
	jge	SHORT $LN1@clamp

; 61   :         return u;

	mov	eax, DWORD PTR _u$[ebp]
	jmp	SHORT $LN2@clamp
$LN1@clamp:

; 62   :     return t > v ? v : t;

	mov	ecx, DWORD PTR _t$[ebp]
	cmp	ecx, DWORD PTR _v$[ebp]
	jle	SHORT $LN4@clamp
	mov	edx, DWORD PTR _v$[ebp]
	mov	DWORD PTR tv66[ebp], edx
	jmp	SHORT $LN5@clamp
$LN4@clamp:
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR tv66[ebp], eax
$LN5@clamp:
	mov	eax, DWORD PTR tv66[ebp]
$LN2@clamp:

; 63   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$clamp@HHH@@YAHHHH@Z ENDP				; clamp<int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\initializer_list
;	COMDAT ?begin@?$initializer_list@H@std@@QBEPBHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?begin@?$initializer_list@H@std@@QBEPBHXZ PROC		; std::initializer_list<int>::begin, COMDAT
; _this$ = ecx

; 39   : 		{	// get beginning of list

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 		return (_First);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 41   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?begin@?$initializer_list@H@std@@QBEPBHXZ ENDP		; std::initializer_list<int>::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\initializer_list
;	COMDAT ?end@?$initializer_list@H@std@@QBEPBHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?end@?$initializer_list@H@std@@QBEPBHXZ PROC		; std::initializer_list<int>::end, COMDAT
; _this$ = ecx

; 44   : 		{	// get end of list

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		return (_Last);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 46   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?end@?$initializer_list@H@std@@QBEPBHXZ ENDP		; std::initializer_list<int>::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@Z PROC ; std::_Unchecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@Z ENDP ; std::_Unchecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\algorithm
;	COMDAT ??$_Find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 2
??$_Find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z PROC ; std::_Find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >, COMDAT

; 42   : 	{	// find first satisfying _Pred

	push	ebp
	mov	ebp, esp

; 43   : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Find_if
$LN3@Find_if:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __First$[ebp], eax
$LN4@Find_if:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN2@Find_if

; 44   : 		if (_Pred(*_First))

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R<lambda_1d20971aaee566fe1e517ac5f48029eb>@@QBE_NAAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@@Z ; <lambda_1d20971aaee566fe1e517ac5f48029eb>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Find_if

; 45   : 			break;

	jmp	SHORT $LN2@Find_if
$LN1@Find_if:

; 46   : 	return (_First);

	jmp	SHORT $LN3@Find_if
$LN2@Find_if:
	mov	eax, DWORD PTR __First$[ebp]

; 47   : 	}

	pop	ebp
	ret	0
??$_Find_if@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@std@@YAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@0V<lambda_1d20971aaee566fe1e517ac5f48029eb>@@@Z ENDP ; std::_Find_if<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,<lambda_1d20971aaee566fe1e517ac5f48029eb> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@std@@YAAAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAPAU12@PAU12@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@std@@YAAAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAPAU12@PAU12@@Z PROC ; std::_Rechecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,A0x5d360590::<unnamed-type-method_enabled_ids> *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@PAU12@@std@@YAAAPAU<unnamed-type-method_enabled_ids>@?A0x5d360590@@AAPAU12@PAU12@@Z ENDP ; std::_Rechecked<`anonymous namespace'::<unnamed-type-method_enabled_ids> *,A0x5d360590::<unnamed-type-method_enabled_ids> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PBH@std@@YAPBHPBH@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PBH@std@@YAPBHPBH@Z PROC			; std::_Unchecked<int const *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PBH@std@@YAPBHPBH@Z ENDP			; std::_Unchecked<int const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Find@PBHH@std@@YAPBHPBH0ABH@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Find@PBHH@std@@YAPBHPBH0ABH@Z PROC			; std::_Find<int const *,int>, COMDAT

; 3034 : 	{	// find first matching _Val

	push	ebp
	mov	ebp, esp
	push	ecx

; 3035 : 	// activate optimization for pointers to (const) bytes and integral values
; 3036 : 	typedef integral_constant<bool,
; 3037 : 		(  is_same<_InIt, char *>::value
; 3038 : 		|| is_same<_InIt, signed char *>::value
; 3039 : 		|| is_same<_InIt, unsigned char *>::value
; 3040 : 		|| is_same<_InIt, const char *>::value
; 3041 : 		|| is_same<_InIt, const signed char *>::value
; 3042 : 		|| is_same<_InIt, const unsigned char *>::value)
; 3043 : 		&& is_integral<_Ty>::value
; 3044 : 	> _Memchr_opt;
; 3045 : 	return (_Find(_First, _Last, _Val, _Memchr_opt()));

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Find@PBHH@std@@YAPBHPBH0ABHU?$integral_constant@_N$0A@@0@@Z ; std::_Find<int const *,int>
	add	esp, 16					; 00000010H

; 3046 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Find@PBHH@std@@YAPBHPBH0ABH@Z ENDP			; std::_Find<int const *,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PBHPBH@std@@YAAAPBHAAPBHPBH@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PBHPBH@std@@YAAAPBHAAPBHPBH@Z PROC	; std::_Rechecked<int const *,int const *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PBHPBH@std@@YAAAPBHAAPBHPBH@Z ENDP	; std::_Rechecked<int const *,int const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Find@PBHH@std@@YAPBHPBH0ABHU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Find@PBHH@std@@YAPBHPBH0ABHU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Find<int const *,int>, COMDAT

; 3024 : 	{	// find first matching _Val

	push	ebp
	mov	ebp, esp

; 3025 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Find
$LN3@Find:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN4@Find:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN2@Find

; 3026 : 		if (*_First == _Val)

	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Find

; 3027 : 			break;

	jmp	SHORT $LN2@Find
$LN1@Find:

; 3028 : 	return (_First);

	jmp	SHORT $LN3@Find
$LN2@Find:
	mov	eax, DWORD PTR __First$[ebp]

; 3029 : 	}

	pop	ebp
	ret	0
??$_Find@PBHH@std@@YAPBHPBH0ABHU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Find<int const *,int>
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\InstallService.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp_??1XConfig@@QAE@XZ:PROC
EXTRN	__imp_??0XConfig@@QAE@XZ:PROC
EXTRN	__imp_?GetRootElement@XConfig@@QAEPAVXElement@@XZ:PROC
EXTRN	__imp_?OSCopyFile@@YGHPB_W0@Z:PROC
EXTRN	__imp__RegOpenCurrentUser@8:PROC
EXTRN	__imp_?NumDataItems@XElement@@QAEKPB_W@Z:PROC
EXTRN	__imp_?OSDeleteFile@@YGHPB_W@Z:PROC
EXTRN	__imp__RegSetValueW@20:PROC
EXTRN	__imp__RegCreateKeyExW@36:PROC
	ORG $+2
$SG4294836764 DB 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c'
	DB	00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H
	DB	'r', 00H, 'm', 00H, 00H, 00H
$SG4294836765 DB 's', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 00H, 00H
$SG4294836762 DB 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c'
	DB	00H, 'e', 00H, 'A', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, 'y', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG4294836763 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294836760 DB 00H, 00H
	ORG $+2
$SG4294836761 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294836758 DB '%', 00H, 's', 00H, '\', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, '%'
	DB	00H, 's', 00H, '.', 00H, 'x', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'f', 00H, 'i', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294836759 DB '.', 00H, 'o', 00H, 'b', 00H, 's', 00H, '-', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294836756 DB 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'B', 00H
	DB	'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'c', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'S', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 00H
	DB	00H
$SG4294836757 DB 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'B', 00H
	DB	'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'c', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'S', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 00H
	DB	00H
$SG4294836754 DB 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'p'
	DB	00H, 'y', 00H, ' ', 00H, 's', 00H, 'e', 00H, 'r', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, ':', 00H, ' ', 00H, 'e', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
$SG4294836755 DB 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'B', 00H
	DB	'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'c', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'S', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 00H
	DB	00H
$SG4294836752 DB 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c'
	DB	00H, 'e', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294836753 DB 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'B', 00H
	DB	'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'c', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'S', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 00H
	DB	00H
$SG4294836750 DB 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'B', 00H, 'r', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'c', 00H, 'a', 00H, 's', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 00H, 00H
$SG4294836751 DB 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, '\', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, '.', 00H, 'o', 00H
	DB	'b', 00H, 's', 00H, '-', 00H, 's', 00H, 'e', 00H, 'r', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG4294836748 DB 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG4294836749 DB 'a', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '/', 00H, 'x'
	DB	00H, '-', 00H, 'o', 00H, 'b', 00H, 's', 00H, '-', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
$SG4294836746 DB 'a', 00H, 'p', 00H, 'p', 00H, 'l', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '/', 00H, 'x'
	DB	00H, '-', 00H, 'o', 00H, 'b', 00H, 's', 00H, '-', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H
$SG4294836747 DB 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, '\', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, 'O', 00H, 'p', 00H
	DB	'e', 00H, 'n', 00H, 'B', 00H, 'r', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'c', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '\', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'T', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, 00H, 00H
$SG4294836744 DB 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 00H, 00H
	ORG $+2
$SG4294836745 DB 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, '\', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, 'O', 00H, 'p', 00H
	DB	'e', 00H, 'n', 00H, 'B', 00H, 'r', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'c', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '\', 00H, 's', 00H, 'h', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, 00H, 00H
	ORG $+2
$SG4294836742 DB 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i'
	DB	00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG4294836743 DB 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, '\', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, 'O', 00H, 'p', 00H
	DB	'e', 00H, 'n', 00H, 'B', 00H, 'r', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'c', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '\', 00H, 's', 00H, 'h', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, '\', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294836740 DB '"', 00H, '%', 00H, 's', 00H, '"', 00H, ' ', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 's', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, '"', 00H, '%', 00H, '%', 00H, '1', 00H, '"'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294836741 DB 'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, '\', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'e', 00H, 's', 00H, '\', 00H, 'O', 00H, 'p', 00H
	DB	'e', 00H, 'n', 00H, 'B', 00H, 'r', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'c', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, '\', 00H, 's', 00H, 'h', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, '\', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'm', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 00H, 00H
PUBLIC	?RegisterServiceFileHandler@@YAXXZ		; RegisterServiceFileHandler
PUBLIC	?InstallUserService@@YA_NPA_W@Z			; InstallUserService
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\installservice.cpp
;	COMDAT ?InstallUserService@@YA_NPA_W@Z
_TEXT	SEGMENT
_serverData$ = -88					; size = 12
$T1 = -76						; size = 8
_baseFilename$2 = -68					; size = 8
_confirmMessage$3 = -60					; size = 8
_uninstallMessage$4 = -52				; size = 8
_destination$5 = -44					; size = 8
_numServices$6 = -36					; size = 4
_servers$7 = -32					; size = 4
_service$8 = -28					; size = 4
_services$9 = -24					; size = 4
_serviceFileName$10 = -20				; size = 4
_name$11 = -16						; size = 4
$T12 = -10						; size = 1
$T13 = -9						; size = 1
$T14 = -8						; size = 1
$T15 = -7						; size = 1
$T16 = -6						; size = 1
$T17 = -5						; size = 1
$T18 = -4						; size = 1
$T19 = -3						; size = 1
$T20 = -2						; size = 1
$T21 = -1						; size = 1
_path$ = 8						; size = 4
?InstallUserService@@YA_NPA_W@Z PROC			; InstallUserService, COMDAT

; 23   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H

; 24   :     XConfig serverData;

	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??0XConfig@@QAE@XZ

; 25   :     if (serverData.Open(path))

	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_?Open@XConfig@@QAE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN15@InstallUse

; 26   :     {
; 27   :         XElement *services = serverData.GetRootElement();

	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_?GetRootElement@XConfig@@QAEPAVXElement@@XZ
	mov	DWORD PTR _services$9[ebp], eax

; 28   :         if (services)

	cmp	DWORD PTR _services$9[ebp], 0
	je	$LN14@InstallUse

; 29   :         {
; 30   :             auto numServices = services->NumElements();

	push	0
	mov	ecx, DWORD PTR _services$9[ebp]
	call	DWORD PTR __imp_?NumElements@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numServices$6[ebp], eax

; 31   : 
; 32   :             if (numServices != 1)

	cmp	DWORD PTR _numServices$6[ebp], 1
	je	SHORT $LN13@InstallUse

; 33   :                 return false;

	mov	BYTE PTR $T21[ebp], 0
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T21[ebp]
	jmp	$LN16@InstallUse
$LN13@InstallUse:

; 34   : 
; 35   :             auto service = services->GetElementByID(0);

	push	0
	mov	ecx, DWORD PTR _services$9[ebp]
	call	DWORD PTR __imp_?GetElementByID@XElement@@QBEPAV1@K@Z
	mov	DWORD PTR _service$8[ebp], eax

; 36   :             if (!service)

	cmp	DWORD PTR _service$8[ebp], 0
	jne	SHORT $LN12@InstallUse

; 37   :                 return false;

	mov	BYTE PTR $T20[ebp], 0
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T20[ebp]
	jmp	$LN16@InstallUse
$LN12@InstallUse:

; 38   : 
; 39   :             CTSTR name = service->GetName();

	mov	ecx, DWORD PTR _service$8[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	DWORD PTR _name$11[ebp], eax

; 40   : 
; 41   :             auto servers = service->GetElement(TEXT("servers"));

	push	OFFSET $SG4294836765
	mov	ecx, DWORD PTR _service$8[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _servers$7[ebp], eax

; 42   :             if (!servers || !servers->NumDataItems())

	cmp	DWORD PTR _servers$7[ebp], 0
	je	SHORT $LN10@InstallUse
	push	0
	mov	ecx, DWORD PTR _servers$7[ebp]
	call	DWORD PTR __imp_?NumDataItems@XElement@@QAEKPB_W@Z
	test	eax, eax
	jne	SHORT $LN11@InstallUse
$LN10@InstallUse:

; 43   :                 return false;

	mov	BYTE PTR $T19[ebp], 0
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T19[ebp]
	jmp	$LN16@InstallUse
$LN11@InstallUse:

; 44   : 
; 45   :             String confirmMessage = FormattedString(Str("InstallServiceConfirm"), name);

	mov	edx, DWORD PTR _name$11[ebp]
	push	edx
	push	OFFSET $SG4294836764
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH

; 46   :             confirmMessage.FindReplace(TEXT("$1"), name);

	mov	edx, DWORD PTR _name$11[ebp]
	push	edx
	push	OFFSET $SG4294836763
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 47   : 
; 48   :             String uninstallMessage = FormattedString(Str("InstallServiceAlreadyInstalled"), name);

	mov	eax, DWORD PTR _name$11[ebp]
	push	eax
	push	OFFSET $SG4294836762
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	edx, DWORD PTR _uninstallMessage$4[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH

; 49   :             uninstallMessage.FindReplace(TEXT("$1"), name);

	mov	eax, DWORD PTR _name$11[ebp]
	push	eax
	push	OFFSET $SG4294836761
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 50   : 
; 51   :             serverData.Close();

	push	0
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_?Close@XConfig@@QAEX_N@Z

; 52   : 
; 53   :             CTSTR serviceFileName = srchr(path, '\\');

	push	92					; 0000005cH
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	DWORD PTR __imp_?srchr@@YGPA_WPB_W_W@Z
	mov	DWORD PTR _serviceFileName$10[ebp], eax

; 54   :             if (serviceFileName)

	cmp	DWORD PTR _serviceFileName$10[ebp], 0
	je	SHORT $LN9@InstallUse

; 55   :                 serviceFileName++;

	mov	edx, DWORD PTR _serviceFileName$10[ebp]
	add	edx, 2
	mov	DWORD PTR _serviceFileName$10[ebp], edx

; 56   :             else

	jmp	SHORT $LN8@InstallUse
$LN9@InstallUse:

; 57   :                 return false;

	mov	BYTE PTR $T18[ebp], 0
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T18[ebp]
	jmp	$LN16@InstallUse
$LN8@InstallUse:

; 58   : 
; 59   :             String baseFilename = serviceFileName;

	mov	eax, DWORD PTR _serviceFileName$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 60   :             baseFilename.FindReplace(TEXT(".obs-service"), TEXT(""));

	push	OFFSET $SG4294836760
	push	OFFSET $SG4294836759
	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 61   : 
; 62   :             String destination = FormattedString(TEXT("%s\\services\\%s.xconfig"), lpAppDataPath, baseFilename.Array());

	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET ?lpAppDataPath@@3PA_WA		; lpAppDataPath
	push	OFFSET $SG4294836758
	lea	ecx, DWORD PTR _destination$5[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H

; 63   : 
; 64   :             if (OSFileExists(destination.Array()))

	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN7@InstallUse

; 65   :             {
; 66   :                 if (OBSMessageBox(NULL, uninstallMessage.Array(), L"Open Broadcaster Software", MB_ICONQUESTION | MB_YESNO) == IDYES)

	push	36					; 00000024H
	push	OFFSET $SG4294836757
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	SHORT $LN6@InstallUse

; 67   :                     OSDeleteFile(destination.Array());

	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSDeleteFile@@YGHPB_W@Z
$LN6@InstallUse:

; 68   :                 return true;

	mov	BYTE PTR $T17[ebp], 1
	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T17[ebp]
	jmp	$LN16@InstallUse
$LN7@InstallUse:

; 69   :             }
; 70   : 
; 71   :             if (OBSMessageBox(NULL, confirmMessage.Array(), L"Open Broadcaster Software", MB_ICONQUESTION | MB_YESNO) == IDYES)

	push	36					; 00000024H
	push	OFFSET $SG4294836756
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 6
	jne	$LN5@InstallUse

; 72   :             {
; 73   :                 if (!OSCopyFile(destination.Array(), path))

	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSCopyFile@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN4@InstallUse

; 74   :                 {
; 75   :                     OBSMessageBox(NULL, FormattedString(TEXT("Failed to copy service file: error %d"), GetLastError()), L"Open Broadcaster Software", MB_ICONERROR);

	push	16					; 00000010H
	push	OFFSET $SG4294836755
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG4294836754
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	0
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 76   :                     return false;

	mov	BYTE PTR $T16[ebp], 0
	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T16[ebp]
	jmp	$LN16@InstallUse

; 77   :                 }
; 78   :                 else

	jmp	SHORT $LN3@InstallUse
$LN4@InstallUse:

; 79   :                 {
; 80   :                     OBSMessageBox(NULL, Str("InstallServiceInstalled"), L"Open Broadcaster Software", MB_ICONINFORMATION);

	push	64					; 00000040H
	push	OFFSET $SG4294836753
	push	OFFSET $SG4294836752
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 81   :                     return true;

	mov	BYTE PTR $T15[ebp], 1
	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T15[ebp]
	jmp	$LN16@InstallUse
$LN3@InstallUse:

; 82   :                 }
; 83   :             }
; 84   :             else

	jmp	SHORT $LN2@InstallUse
$LN5@InstallUse:

; 85   :                 return false;

	mov	BYTE PTR $T14[ebp], 0
	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T14[ebp]
	jmp	SHORT $LN16@InstallUse
$LN2@InstallUse:

; 86   :         }

	lea	ecx, DWORD PTR _destination$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _baseFilename$2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _uninstallMessage$4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _confirmMessage$3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 87   :         else

	jmp	SHORT $LN15@InstallUse
$LN14@InstallUse:

; 88   :             return false;

	mov	BYTE PTR $T13[ebp], 0
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T13[ebp]
	jmp	SHORT $LN16@InstallUse
$LN15@InstallUse:

; 89   :     }
; 90   :     return false;

	mov	BYTE PTR $T12[ebp], 0
	lea	ecx, DWORD PTR _serverData$[ebp]
	call	DWORD PTR __imp_??1XConfig@@QAE@XZ
	mov	al, BYTE PTR $T12[ebp]
$LN16@InstallUse:

; 91   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InstallUserService@@YA_NPA_W@Z ENDP			; InstallUserService
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\installservice.cpp
;	COMDAT ?RegisterServiceFileHandler@@YAXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
_modulePath$ = -16					; size = 8
_hk$ = -8						; size = 4
_newKey$ = -4						; size = 4
?RegisterServiceFileHandler@@YAXXZ PROC			; RegisterServiceFileHandler, COMDAT

; 94   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 95   :     // the Win32 API seems to be lacking a nice way to register file extensions
; 96   :     // so we just try to register it every time.
; 97   : 
; 98   :     HKEY hk, newKey;
; 99   : 
; 100  :     if (RegOpenCurrentUser(KEY_WRITE, &hk) != ERROR_SUCCESS)

	lea	eax, DWORD PTR _hk$[ebp]
	push	eax
	push	131078					; 00020006H
	call	DWORD PTR __imp__RegOpenCurrentUser@8
	test	eax, eax
	je	SHORT $LN7@RegisterSe

; 101  :         return;

	jmp	$LN8@RegisterSe
$LN7@RegisterSe:

; 102  : 
; 103  :     if (RegCreateKeyEx(hk, L"Software\\Classes\\.obs-service", 0, NULL, 0, KEY_WRITE, NULL, &newKey, NULL) != ERROR_SUCCESS)

	push	0
	lea	ecx, DWORD PTR _newKey$[ebp]
	push	ecx
	push	0
	push	131078					; 00020006H
	push	0
	push	0
	push	0
	push	OFFSET $SG4294836751
	mov	edx, DWORD PTR _hk$[ebp]
	push	edx
	call	DWORD PTR __imp__RegCreateKeyExW@36
	test	eax, eax
	je	SHORT $LN6@RegisterSe

; 104  :     {
; 105  :         RegCloseKey(hk);

	mov	eax, DWORD PTR _hk$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 106  :         return;

	jmp	$LN8@RegisterSe
$LN6@RegisterSe:

; 107  :     }
; 108  : 
; 109  :     RegSetValue(newKey, NULL, REG_SZ, L"OpenBroadcasterSoftware", 0);

	push	0
	push	OFFSET $SG4294836750
	push	1
	push	0
	mov	ecx, DWORD PTR _newKey$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegSetValueW@20

; 110  :     RegSetValue(newKey, L"Content Type", REG_SZ, L"application/x-obs-service", 0);

	push	0
	push	OFFSET $SG4294836749
	push	1
	push	OFFSET $SG4294836748
	mov	edx, DWORD PTR _newKey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegSetValueW@20

; 111  :     RegCloseKey(newKey);

	mov	eax, DWORD PTR _newKey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 112  : 
; 113  :     if (RegCreateKeyEx(hk, L"Software\\Classes\\OpenBroadcasterSoftware\\Content Type", 0, NULL, 0, KEY_WRITE, NULL, &newKey, NULL) != ERROR_SUCCESS)

	push	0
	lea	ecx, DWORD PTR _newKey$[ebp]
	push	ecx
	push	0
	push	131078					; 00020006H
	push	0
	push	0
	push	0
	push	OFFSET $SG4294836747
	mov	edx, DWORD PTR _hk$[ebp]
	push	edx
	call	DWORD PTR __imp__RegCreateKeyExW@36
	test	eax, eax
	je	SHORT $LN5@RegisterSe

; 114  :     {
; 115  :         RegCloseKey(hk);

	mov	eax, DWORD PTR _hk$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 116  :         return;

	jmp	$LN8@RegisterSe
$LN5@RegisterSe:

; 117  :     }
; 118  : 
; 119  :     RegSetValue(newKey, NULL, REG_SZ, L"application/x-obs-service", 0);

	push	0
	push	OFFSET $SG4294836746
	push	1
	push	0
	mov	ecx, DWORD PTR _newKey$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegSetValueW@20

; 120  :     RegCloseKey(newKey);

	mov	edx, DWORD PTR _newKey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegCloseKey@4

; 121  : 
; 122  :     if (RegCreateKeyEx(hk, L"Software\\Classes\\OpenBroadcasterSoftware\\shell", 0, NULL, 0, KEY_WRITE, NULL, &newKey, NULL) != ERROR_SUCCESS)

	push	0
	lea	eax, DWORD PTR _newKey$[ebp]
	push	eax
	push	0
	push	131078					; 00020006H
	push	0
	push	0
	push	0
	push	OFFSET $SG4294836745
	mov	ecx, DWORD PTR _hk$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCreateKeyExW@36
	test	eax, eax
	je	SHORT $LN4@RegisterSe

; 123  :     {
; 124  :         RegCloseKey(hk);

	mov	edx, DWORD PTR _hk$[ebp]
	push	edx
	call	DWORD PTR __imp__RegCloseKey@4

; 125  :         return;

	jmp	$LN8@RegisterSe
$LN4@RegisterSe:

; 126  :     }
; 127  : 
; 128  :     RegSetValue(newKey, NULL, REG_SZ, L"install", 0);

	push	0
	push	OFFSET $SG4294836744
	push	1
	push	0
	mov	eax, DWORD PTR _newKey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegSetValueW@20

; 129  :     RegCloseKey(newKey);

	mov	ecx, DWORD PTR _newKey$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4

; 130  : 
; 131  :     if (RegCreateKeyEx(hk, L"Software\\Classes\\OpenBroadcasterSoftware\\shell\\install", 0, NULL, 0, KEY_WRITE, NULL, &newKey, NULL) != ERROR_SUCCESS)

	push	0
	lea	edx, DWORD PTR _newKey$[ebp]
	push	edx
	push	0
	push	131078					; 00020006H
	push	0
	push	0
	push	0
	push	OFFSET $SG4294836743
	mov	eax, DWORD PTR _hk$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCreateKeyExW@36
	test	eax, eax
	je	SHORT $LN3@RegisterSe

; 132  :     {
; 133  :         RegCloseKey(hk);

	mov	ecx, DWORD PTR _hk$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4

; 134  :         return;

	jmp	$LN8@RegisterSe
$LN3@RegisterSe:

; 135  :     }
; 136  : 
; 137  :     RegSetValue(newKey, NULL, REG_SZ, L"Install Service", 0);

	push	0
	push	OFFSET $SG4294836742
	push	1
	push	0
	mov	edx, DWORD PTR _newKey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegSetValueW@20

; 138  :     RegCloseKey(newKey);

	mov	eax, DWORD PTR _newKey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 139  : 
; 140  :     if (RegCreateKeyEx(hk, L"Software\\Classes\\OpenBroadcasterSoftware\\shell\\install\\command", 0, NULL, 0, KEY_WRITE, NULL, &newKey, NULL) != ERROR_SUCCESS)

	push	0
	lea	ecx, DWORD PTR _newKey$[ebp]
	push	ecx
	push	0
	push	131078					; 00020006H
	push	0
	push	0
	push	0
	push	OFFSET $SG4294836741
	mov	edx, DWORD PTR _hk$[ebp]
	push	edx
	call	DWORD PTR __imp__RegCreateKeyExW@36
	test	eax, eax
	je	SHORT $LN2@RegisterSe

; 141  :     {
; 142  :         RegCloseKey(hk);

	mov	eax, DWORD PTR _hk$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 143  :         return;

	jmp	$LN8@RegisterSe
$LN2@RegisterSe:

; 144  :     }
; 145  : 
; 146  :     String modulePath;

	lea	ecx, DWORD PTR _modulePath$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 147  :     modulePath.SetLength(MAX_PATH);

	push	260					; 00000104H
	lea	ecx, DWORD PTR _modulePath$[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 148  : 
; 149  :     if (GetModuleFileName(NULL, modulePath, modulePath.Length() - 1))

	lea	ecx, DWORD PTR _modulePath$[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _modulePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	0
	call	DWORD PTR __imp__GetModuleFileNameW@12
	test	eax, eax
	je	SHORT $LN1@RegisterSe

; 150  :         RegSetValue(newKey, NULL, REG_SZ, FormattedString(TEXT("\"%s\" -installservice \"%%1\""), modulePath.Array()), 0);

	push	0
	lea	ecx, DWORD PTR _modulePath$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294836740
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	1
	push	0
	mov	edx, DWORD PTR _newKey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegSetValueW@20
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@RegisterSe:

; 151  : 
; 152  :     RegCloseKey(newKey);

	mov	eax, DWORD PTR _newKey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 153  :     RegCloseKey(hk);

	mov	ecx, DWORD PTR _hk$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4

; 154  : }

	lea	ecx, DWORD PTR _modulePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN8@RegisterSe:
	mov	esp, ebp
	pop	ebp
	ret	0
?RegisterServiceFileHandler@@YAXXZ ENDP			; RegisterServiceFileHandler
_TEXT	ENDS
END

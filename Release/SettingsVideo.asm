; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\SettingsVideo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R0?AVSettingsVideo@@@8			; SettingsVideo `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@SettingsVideo@@8			; SettingsVideo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7SettingsVideo@@6B@				; SettingsVideo::`vftable'
PUBLIC	?editProc@@3P6GHXZA				; editProc
PUBLIC	??_R4SettingsVideo@@6B@				; SettingsVideo::`RTTI Complete Object Locator'
PUBLIC	??_R2SettingsVideo@@8				; SettingsVideo::`RTTI Base Class Array'
PUBLIC	??_R3SettingsVideo@@8				; SettingsVideo::`RTTI Class Hierarchy Descriptor'
?editProc@@3P6GHXZA DD 01H DUP (?)			; editProc
_BSS	ENDS
;	COMDAT ??_R3SettingsVideo@@8
rdata$r	SEGMENT
??_R3SettingsVideo@@8 DD 00H				; SettingsVideo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SettingsVideo@@8
rdata$r	ENDS
;	COMDAT ??_R2SettingsVideo@@8
rdata$r	SEGMENT
??_R2SettingsVideo@@8 DD FLAT:??_R1A@?0A@EA@SettingsVideo@@8 ; SettingsVideo::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SettingsPane@@8
rdata$r	ENDS
;	COMDAT ??_R4SettingsVideo@@6B@
rdata$r	SEGMENT
??_R4SettingsVideo@@6B@ DD 00H				; SettingsVideo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSettingsVideo@@@8
	DD	FLAT:??_R3SettingsVideo@@8
rdata$r	ENDS
;	COMDAT ??_7SettingsVideo@@6B@
CONST	SEGMENT
??_7SettingsVideo@@6B@ DD FLAT:??_R4SettingsVideo@@6B@	; SettingsVideo::`vftable'
	DD	FLAT:??_ESettingsVideo@@UAEPAXI@Z
	DD	FLAT:?GetCategory@SettingsVideo@@UBEPB_WXZ
	DD	FLAT:?CreatePane@SettingsVideo@@UAEPAUHWND__@@PAU2@@Z
	DD	FLAT:?DestroyPane@SettingsVideo@@UAEXXZ
	DD	FLAT:?ProcMessage@SettingsVideo@@UAEHIIJ@Z
	DD	FLAT:?ApplySettings@SettingsVideo@@UAEXXZ
	DD	FLAT:?CancelSettings@SettingsVideo@@UAEXXZ
	DD	FLAT:?HasDefaults@SettingsVideo@@UBE_NXZ
	DD	FLAT:?SetDefaults@SettingsPane@@UAEXXZ
	DD	FLAT:?OptimizeSettings@SettingsPane@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@SettingsVideo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SettingsVideo@@8 DD FLAT:??_R0?AVSettingsVideo@@@8 ; SettingsVideo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SettingsVideo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSettingsVideo@@@8
data$r	SEGMENT
??_R0?AVSettingsVideo@@@8 DD FLAT:??_7type_info@@6B@	; SettingsVideo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSettingsVideo@@', 00H
	ORG $+2
$SG4294727244 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG4294727245 DB '1', 00H, '2', 00H, '8', 00H, 00H, 00H
$SG4294727246 DB '4', 00H, '0', 00H, '9', 00H, '6', 00H, 00H, 00H
	ORG $+2
$SG4294727247 DB '1', 00H, '2', 00H, '8', 00H, 00H, 00H
$SG4294727240 DB 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 's', 00H, 'c', 00H
	DB	'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294727241 DB '$', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG4294727242 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294727236 DB 'x', 00H, 00H, 00H
$SG4294727243 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'A', 00H, 's', 00H, 'p', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'R', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294727237 DB ' ', 00H, ' ', 00H, '(', 00H, 00H, 00H
$SG4294727238 DB 'N', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294727239 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727232 DB 'x', 00H, 00H, 00H
$SG4294727233 DB ' ', 00H, ' ', 00H, '(', 00H, 00H, 00H
$SG4294727234 DB '%', 00H, '0', 00H, '.', 00H, '2', 00H, 'f', 00H, 00H, 00H
$SG4294727235 DB ')', 00H, 00H, 00H
$SG4294727228 DB 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG4294727229 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727230 DB 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 's', 00H, 'c', 00H
	DB	'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294727231 DB ')', 00H, 00H, 00H
$SG4294727224 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'L', 00H, 'a', 00H, 'n', 00H, 'c'
	DB	00H, 'z', 00H, 'o', 00H, 's', 00H, 00H, 00H
$SG4294727225 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'B', 00H, 'i', 00H, 'c', 00H, 'u'
	DB	00H, 'b', 00H, 'i', 00H, 'c', 00H, 00H, 00H
$SG4294727226 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'B', 00H, 'i', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294727227 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727220 DB 'M', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 00H, 00H
$SG4294727221 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727222 DB 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG4294727223 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'B', 00H, 'i', 00H, 'l', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294727216 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294727217 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727218 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG4294727219 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727212 DB 'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294727213 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727214 DB 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 'A', 00H, 'e', 00H, 'r', 00H, 'o', 00H, 00H, 00H
$SG4294727215 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727208 DB 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG4294727209 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727210 DB 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 's', 00H, 'c', 00H
	DB	'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294727211 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727205 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727204 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, ':', 00H, ':', 00H, 'V', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, 'o', 00H, ':', 00H, ' ', 00H, 'D', 00H, 'i', 00H
	DB	's', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'A', 00H, 'e', 00H, 'r', 00H, 'o', 00H, 00H, 00H
$SG4294727206 DB 'G', 00H, 'a', 00H, 'm', 00H, 'm', 00H, 'a', 00H, 00H, 00H
$SG4294727207 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727200 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727201 DB 'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG4294727202 DB 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H
	DB	'p', 00H, 's', 00H, '_', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG4294727203 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, ':', 00H, ':', 00H, 'V', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, 'o', 00H, ':', 00H, ' ', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 'A', 00H, 'e', 00H, 'r', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG4294727196 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727197 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG4294727198 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727199 DB 'M', 00H, 'o', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 00H, 00H
$SG4294727192 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727193 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG4294727194 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727195 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294727188 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727189 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG4294727190 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727191 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294727184 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727185 DB 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 'A', 00H, 'e', 00H, 'r', 00H, 'o', 00H, 00H, 00H
$SG4294727186 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727187 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294727180 DB 'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294727181 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727182 DB 'U', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294727177 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727183 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'e', 00H, 'r', 00H, 'o'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H
	DB	'p', 00H, 00H, 00H
$SG4294727176 DB 'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294727178 DB 'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294727179 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727172 DB 'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294727173 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727174 DB 'F', 00H, 'P', 00H, 'S', 00H, 00H, 00H
$SG4294727175 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294727170 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	's', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'o'
	DB	00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p', 00H, 00H, 00H
$SG4294727171 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
_downscaleMultipliers DD 03f800000r		; 1
	DD	03fa00000r			; 1.25
	DD	03fc00000r			; 1.5
	DD	03fe00000r			; 1.75
	DD	040000000r			; 2
	DD	040100000r			; 2.25
	DD	040200000r			; 2.5
	DD	040300000r			; 2.75
	DD	040400000r			; 3
PUBLIC	?ProcMessage@SettingsVideo@@UAEHIIJ@Z		; SettingsVideo::ProcMessage
PUBLIC	?HasDefaults@SettingsVideo@@UBE_NXZ		; SettingsVideo::HasDefaults
PUBLIC	?CancelSettings@SettingsVideo@@UAEXXZ		; SettingsVideo::CancelSettings
PUBLIC	?ApplySettings@SettingsVideo@@UAEXXZ		; SettingsVideo::ApplySettings
PUBLIC	?RefreshFilters@SettingsVideo@@AAEXPAUHWND__@@_N@Z ; SettingsVideo::RefreshFilters
PUBLIC	?RefreshDownscales@SettingsVideo@@AAEXPAUHWND__@@HH@Z ; SettingsVideo::RefreshDownscales
PUBLIC	?DestroyPane@SettingsVideo@@UAEXXZ		; SettingsVideo::DestroyPane
PUBLIC	?CreatePane@SettingsVideo@@UAEPAUHWND__@@PAU2@@Z ; SettingsVideo::CreatePane
PUBLIC	?GetCategory@SettingsVideo@@UBEPB_WXZ		; SettingsVideo::GetCategory
PUBLIC	??1SettingsVideo@@UAE@XZ			; SettingsVideo::~SettingsVideo
PUBLIC	??_GSettingsVideo@@UAEPAXI@Z			; SettingsVideo::`scalar deleting destructor'
PUBLIC	?ResolutionEditSubclassProc@@YGJPAUHWND__@@IIJ@Z ; ResolutionEditSubclassProc
PUBLIC	??0SettingsVideo@@QAE@XZ			; SettingsVideo::SettingsVideo
EXTRN	??_ESettingsVideo@@UAEPAXI@Z:PROC		; SettingsVideo::`vector deleting destructor'
__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?name@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4PB_WB
_BSS	SEGMENT
?name@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4PB_WB DD 01H DUP (?) ; `SettingsVideo::GetCategory'::`2'::name
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?$S1@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4IA
_BSS	SEGMENT
?$S1@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4IA DD 01H DUP (?) ; S1<`template-parameter-2',SettingsVideo::tCategory,unsigned int, ?? &>
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ??0SettingsVideo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SettingsVideo@@QAE@XZ PROC				; SettingsVideo::SettingsVideo, COMDAT
; _this$ = ecx

; 64   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SettingsPane@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsVideo@@6B@

; 65   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SettingsVideo@@QAE@XZ ENDP				; SettingsVideo::SettingsVideo
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?ResolutionEditSubclassProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_strText$1 = -16					; size = 8
$T2 = -8						; size = 4
_iVal$3 = -4						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?ResolutionEditSubclassProc@@YGJPAUHWND__@@IIJ@Z PROC	; ResolutionEditSubclassProc, COMDAT

; 31   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 32   :     if( ((message == WM_KEYDOWN) && (wParam == VK_RETURN)) ||
; 33   :         (message == WM_KILLFOCUS) )

	cmp	DWORD PTR _message$[ebp], 256		; 00000100H
	jne	SHORT $LN7@Resolution
	cmp	DWORD PTR _wParam$[ebp], 13		; 0000000dH
	je	SHORT $LN8@Resolution
$LN7@Resolution:
	cmp	DWORD PTR _message$[ebp], 8
	jne	$LN9@Resolution
$LN8@Resolution:

; 34   :     {
; 35   :         String strText = GetEditText(hwnd);

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strText$1[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8

; 36   :         if(ValidIntString(strText))

	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?ValidIntString@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN6@Resolution

; 37   :         {
; 38   :             int iVal = strText.ToInt();

	push	10					; 0000000aH
	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	mov	DWORD PTR _iVal$3[ebp], eax

; 39   : 
; 40   :             if(iVal < 128)

	cmp	DWORD PTR _iVal$3[ebp], 128		; 00000080H
	jge	SHORT $LN5@Resolution

; 41   :                 strText = TEXT("128");

	push	OFFSET $SG4294727247
	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z
	jmp	SHORT $LN4@Resolution
$LN5@Resolution:

; 42   :             else if(iVal > 4096)

	cmp	DWORD PTR _iVal$3[ebp], 4096		; 00001000H
	jle	SHORT $LN3@Resolution

; 43   :                 strText = TEXT("4096");

	push	OFFSET $SG4294727246
	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 44   :             else

	jmp	SHORT $LN4@Resolution
$LN3@Resolution:

; 45   :                 return CallWindowProc((WNDPROC)editProc, hwnd, message, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	mov	eax, DWORD PTR ?editProc@@3P6GHXZA	; editProc
	push	eax
	call	DWORD PTR __imp__CallWindowProcW@20
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN10@Resolution
$LN4@Resolution:

; 46   :         }
; 47   :         else

	jmp	SHORT $LN1@Resolution
$LN6@Resolution:

; 48   :             strText = TEXT("128");

	push	OFFSET $SG4294727245
	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z
$LN1@Resolution:

; 49   : 
; 50   :         SetWindowText(hwnd, strText);

	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowTextW@8

; 51   :     }

	lea	ecx, DWORD PTR _strText$1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@Resolution:

; 52   : 
; 53   :     return CallWindowProc((WNDPROC)editProc, hwnd, message, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	mov	eax, DWORD PTR ?editProc@@3P6GHXZA	; editProc
	push	eax
	call	DWORD PTR __imp__CallWindowProcW@20
$LN10@Resolution:

; 54   : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResolutionEditSubclassProc@@YGJPAUHWND__@@IIJ@Z ENDP	; ResolutionEditSubclassProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSettingsVideo@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSettingsVideo@@UAEPAXI@Z PROC			; SettingsVideo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SettingsVideo@@UAE@XZ		; SettingsVideo::~SettingsVideo
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSettingsVideo@@UAEPAXI@Z ENDP			; SettingsVideo::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ??1SettingsVideo@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SettingsVideo@@UAE@XZ PROC				; SettingsVideo::~SettingsVideo, COMDAT
; _this$ = ecx

; 68   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsVideo@@6B@

; 69   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SettingsPane@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1SettingsVideo@@UAE@XZ ENDP				; SettingsVideo::~SettingsVideo
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?GetCategory@SettingsVideo@@UBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCategory@SettingsVideo@@UBEPB_WXZ PROC		; SettingsVideo::GetCategory, COMDAT
; _this$ = ecx

; 72   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 73   :     static CTSTR name = Str("Settings.Video");

	mov	eax, DWORD PTR ?$S1@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4IA
	and	eax, 1
	jne	SHORT $LN1@GetCategor
	mov	ecx, DWORD PTR ?$S1@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4IA
	or	ecx, 1
	mov	DWORD PTR ?$S1@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4IA, ecx
	push	OFFSET $SG4294727244
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR ?name@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4PB_WB, eax
$LN1@GetCategor:

; 74   :     return name;

	mov	eax, DWORD PTR ?name@?1??GetCategory@SettingsVideo@@UBEPB_WXZ@4PB_WB

; 75   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCategory@SettingsVideo@@UBEPB_WXZ ENDP		; SettingsVideo::GetCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?CreatePane@SettingsVideo@@UAEPAUHWND__@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_parentHwnd$ = 8					; size = 4
?CreatePane@SettingsVideo@@UAEPAUHWND__@@PAU2@@Z PROC	; SettingsVideo::CreatePane, COMDAT
; _this$ = ecx

; 78   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 79   :     hwnd = OBSCreateDialog(hinstMain, MAKEINTRESOURCE(IDD_SETTINGS_VIDEO), parentHwnd, (DLGPROC)DialogProc, (LPARAM)this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?DialogProc@SettingsPane@@SGHPAUHWND__@@IIJ@Z
	push	ecx
	mov	edx, DWORD PTR _parentHwnd$[ebp]
	push	edx
	push	116					; 00000074H
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSCreateDialog@@YAPAUHWND__@@PAUHINSTANCE__@@PB_WPAU1@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 80   :     return hwnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]

; 81   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CreatePane@SettingsVideo@@UAEPAUHWND__@@PAU2@@Z ENDP	; SettingsVideo::CreatePane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?DestroyPane@SettingsVideo@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyPane@SettingsVideo@@UAEXXZ PROC			; SettingsVideo::DestroyPane, COMDAT
; _this$ = ecx

; 84   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 85   :     DestroyWindow(hwnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4

; 86   :     hwnd = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 87   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyPane@SettingsVideo@@UAEXXZ ENDP			; SettingsVideo::DestroyPane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?gcd@@YAHHH@Z
_TEXT	SEGMENT
_remainder$ = -16					; size = 4
tv69 = -12						; size = 4
_c$ = -8						; size = 4
tv67 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?gcd@@YAHHH@Z PROC					; gcd, COMDAT

; 90   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 91   :     if (!a) return b;

	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN5@gcd
	mov	eax, DWORD PTR _b$[ebp]
	jmp	SHORT $LN6@gcd
$LN5@gcd:

; 92   :     if (!b) return a;

	cmp	DWORD PTR _b$[ebp], 0
	jne	SHORT $LN4@gcd
	mov	eax, DWORD PTR _a$[ebp]
	jmp	SHORT $LN6@gcd
$LN4@gcd:

; 93   : 
; 94   :     int c = a;

	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _c$[ebp], eax

; 95   :     a = max(a, b);

	mov	ecx, DWORD PTR _a$[ebp]
	cmp	ecx, DWORD PTR _b$[ebp]
	jle	SHORT $LN8@gcd
	mov	edx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv67[ebp], edx
	jmp	SHORT $LN9@gcd
$LN8@gcd:
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv67[ebp], eax
$LN9@gcd:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 96   :     b = min(c, b);

	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR _b$[ebp]
	jge	SHORT $LN10@gcd
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN11@gcd
$LN10@gcd:
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN11@gcd:
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR _b$[ebp], edx
$LN3@gcd:

; 97   : 
; 98   :     int remainder;
; 99   :     do
; 100  :     {
; 101  :         remainder = a % b;

	mov	eax, DWORD PTR _a$[ebp]
	cdq
	idiv	DWORD PTR _b$[ebp]
	mov	DWORD PTR _remainder$[ebp], edx

; 102  :         a = b;

	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax

; 103  :         b = remainder;

	mov	ecx, DWORD PTR _remainder$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 104  :     } while (remainder);

	cmp	DWORD PTR _remainder$[ebp], 0
	jne	SHORT $LN3@gcd

; 105  : 
; 106  :     return a;

	mov	eax, DWORD PTR _a$[ebp]
$LN6@gcd:

; 107  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?gcd@@YAHHH@Z ENDP					; gcd
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?RefreshAspect@@YAXPAUHWND__@@HH@Z
_TEXT	SEGMENT
$T1 = -28						; size = 8
$T2 = -20						; size = 8
_aspect$ = -12						; size = 8
_divisor$ = -4						; size = 4
_hwnd$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?RefreshAspect@@YAXPAUHWND__@@HH@Z PROC			; RefreshAspect, COMDAT

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 111  :     int divisor = gcd(cx, cy);

	mov	eax, DWORD PTR _cy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cx$[ebp]
	push	ecx
	call	?gcd@@YAHHH@Z				; gcd
	add	esp, 8
	mov	DWORD PTR _divisor$[ebp], eax

; 112  : 
; 113  :     String aspect = Str("Settings.Video.AspectRatioFormat");

	push	OFFSET $SG4294727243
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _aspect$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 114  :     aspect.FindReplace(L"$1", UIntString(cx / divisor));

	push	10					; 0000000aH
	mov	eax, DWORD PTR _cx$[ebp]
	cdq
	idiv	DWORD PTR _divisor$[ebp]
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294727242
	lea	ecx, DWORD PTR _aspect$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 115  :     aspect.FindReplace(L"$2", UIntString(cy / divisor));

	push	10					; 0000000aH
	mov	eax, DWORD PTR _cy$[ebp]
	cdq
	idiv	DWORD PTR _divisor$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294727241
	lea	ecx, DWORD PTR _aspect$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 116  : 
; 117  :     SetWindowText(GetDlgItem(hwnd, IDC_ASPECT), aspect.Array());

	lea	ecx, DWORD PTR _aspect$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1035					; 0000040bH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 118  : }

	lea	ecx, DWORD PTR _aspect$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
?RefreshAspect@@YAXPAUHWND__@@HH@Z ENDP			; RefreshAspect
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?RefreshDownscales@SettingsVideo@@AAEXPAUHWND__@@HH@Z
_TEXT	SEGMENT
$T1 = -84						; size = 8
$T2 = -76						; size = 8
$T3 = -68						; size = 8
$T4 = -60						; size = 8
$T5 = -52						; size = 8
_strText$6 = -44					; size = 8
_this$ = -36						; size = 4
_downscale$ = -32					; size = 4
_id$7 = -28						; size = 4
_scaleCX$8 = -24					; size = 4
_scaleCY$9 = -20					; size = 4
_lastID$ = -16						; size = 4
_i$10 = -12						; size = 4
_multiplier$11 = -8					; size = 4
_bFoundVal$ = -1					; size = 1
_hwnd$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?RefreshDownscales@SettingsVideo@@AAEXPAUHWND__@@HH@Z PROC ; SettingsVideo::RefreshDownscales, COMDAT
; _this$ = ecx

; 121  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	DWORD PTR _this$[ebp], ecx

; 122  :     int lastID = (int)SendMessage(hwnd, CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _lastID$[ebp], eax

; 123  : 
; 124  :     SendMessage(hwnd, CB_RESETCONTENT, 0, 0);

	push	0
	push	0
	push	331					; 0000014bH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 125  : 
; 126  :     float downscale = AppConfig->GetFloat(TEXT("Video"), TEXT("Downscale"));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294727240
	push	OFFSET $SG4294727239
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetFloat@ConfigFile@@QAEMPB_W0M@Z
	fstp	DWORD PTR _downscale$[ebp]

; 127  :     bool bFoundVal = false;

	mov	BYTE PTR _bFoundVal$[ebp], 0

; 128  : 
; 129  :     for(int i=0; i<multiplierCount; i++)

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN10@RefreshDow
$LN9@RefreshDow:
	mov	edx, DWORD PTR _i$10[ebp]
	add	edx, 1
	mov	DWORD PTR _i$10[ebp], edx
$LN10@RefreshDow:
	cmp	DWORD PTR _i$10[ebp], 9
	jge	$LN8@RefreshDow

; 130  :     {
; 131  :         float multiplier = downscaleMultipliers[i];

	mov	eax, DWORD PTR _i$10[ebp]
	movss	xmm0, DWORD PTR _downscaleMultipliers[eax*4]
	movss	DWORD PTR _multiplier$11[ebp], xmm0

; 132  : 
; 133  :         int scaleCX = int(float(cx)/multiplier) & 0xFFFFFFFE;

	cvtsi2ss xmm0, DWORD PTR _cx$[ebp]
	divss	xmm0, DWORD PTR _multiplier$11[ebp]
	cvttss2si ecx, xmm0
	and	ecx, -2					; fffffffeH
	mov	DWORD PTR _scaleCX$8[ebp], ecx

; 134  :         int scaleCY = int(float(cy)/multiplier) & 0xFFFFFFFE;

	cvtsi2ss xmm0, DWORD PTR _cy$[ebp]
	divss	xmm0, DWORD PTR _multiplier$11[ebp]
	cvttss2si edx, xmm0
	and	edx, -2					; fffffffeH
	mov	DWORD PTR _scaleCY$9[ebp], edx

; 135  : 
; 136  :         String strText;

	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 137  :         if(i == 0)

	cmp	DWORD PTR _i$10[ebp], 0
	jne	$LN7@RefreshDow

; 138  :             strText << Str("None") << TEXT("  (") << IntString(scaleCX) << TEXT("x") << IntString(scaleCY) << TEXT(")");

	push	OFFSET $SG4294727235
	push	10					; 0000000aH
	mov	eax, DWORD PTR _scaleCY$9[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294727236
	push	10					; 0000000aH
	mov	edx, DWORD PTR _scaleCX$8[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294727237
	push	OFFSET $SG4294727238
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 139  :         else

	jmp	$LN6@RefreshDow
$LN7@RefreshDow:

; 140  :             strText << FormattedString(TEXT("%0.2f"), multiplier) << TEXT("  (") << IntString(scaleCX) << TEXT("x") << IntString(scaleCY) << TEXT(")");

	push	OFFSET $SG4294727231
	push	10					; 0000000aH
	mov	edx, DWORD PTR _scaleCY$9[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294727232
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _scaleCX$8[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET $SG4294727233
	cvtss2sd xmm0, DWORD PTR _multiplier$11[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG4294727234
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN6@RefreshDow:

; 141  : 
; 142  :         int id = (int)SendMessage(hwnd, CB_ADDSTRING, 0, (LPARAM)strText.Array());

	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$7[ebp], eax

; 143  :         SendMessage(hwnd, CB_SETITEMDATA, id, (LPARAM)*(DWORD*)&multiplier);

	mov	edx, DWORD PTR _multiplier$11[ebp]
	push	edx
	mov	eax, DWORD PTR _id$7[ebp]
	push	eax
	push	337					; 00000151H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 144  : 
; 145  :         if(CloseFloat(downscale, multiplier))

	push	ecx
	movss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _multiplier$11[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _downscale$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@RefreshDow

; 146  :         {
; 147  :             if(lastID == CB_ERR)

	cmp	DWORD PTR _lastID$[ebp], -1
	jne	SHORT $LN4@RefreshDow

; 148  :                 SendMessage(hwnd, CB_SETCURSEL, id, 0);

	push	0
	mov	edx, DWORD PTR _id$7[ebp]
	push	edx
	push	334					; 0000014eH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN4@RefreshDow:

; 149  :             downscale = multiplier;

	movss	xmm0, DWORD PTR _multiplier$11[ebp]
	movss	DWORD PTR _downscale$[ebp], xmm0

; 150  :             bFoundVal = true;

	mov	BYTE PTR _bFoundVal$[ebp], 1
$LN5@RefreshDow:

; 151  :         }
; 152  :     }

	lea	ecx, DWORD PTR _strText$6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN9@RefreshDow
$LN8@RefreshDow:

; 153  : 
; 154  :     if(!bFoundVal)

	movzx	ecx, BYTE PTR _bFoundVal$[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@RefreshDow

; 155  :     {
; 156  :         AppConfig->SetFloat(TEXT("Video"), TEXT("Downscale"), 1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294727230
	push	OFFSET $SG4294727229
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetFloat@ConfigFile@@QAEXPB_W0M@Z

; 157  :         if(lastID == CB_ERR)

	cmp	DWORD PTR _lastID$[ebp], -1
	jne	SHORT $LN2@RefreshDow

; 158  :             SendMessage(hwnd, CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN2@RefreshDow:

; 159  : 
; 160  :         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN3@RefreshDow:

; 161  :     }
; 162  : 
; 163  :     if(lastID != CB_ERR)

	cmp	DWORD PTR _lastID$[ebp], -1
	je	SHORT $LN1@RefreshDow

; 164  :         SendMessage(hwnd, CB_SETCURSEL, lastID, 0);

	push	0
	mov	eax, DWORD PTR _lastID$[ebp]
	push	eax
	push	334					; 0000014eH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN1@RefreshDow:

; 165  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?RefreshDownscales@SettingsVideo@@AAEXPAUHWND__@@HH@Z ENDP ; SettingsVideo::RefreshDownscales
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?RefreshFilters@SettingsVideo@@AAEXPAUHWND__@@_N@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
_hwndDownscale$ = -24					; size = 4
tv167 = -20						; size = 4
_curFilter$ = -16					; size = 4
_curSel$ = -12						; size = 4
_downscale$ = -8					; size = 4
_hwndFilter$ = -4					; size = 4
_hwndParent$ = 8					; size = 4
_bGetConfig$ = 12					; size = 1
?RefreshFilters@SettingsVideo@@AAEXPAUHWND__@@_N@Z PROC	; SettingsVideo::RefreshFilters, COMDAT
; _this$ = ecx

; 168  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 169  :     HWND hwndFilter = GetDlgItem(hwndParent, IDC_FILTER);

	push	1015					; 000003f7H
	mov	eax, DWORD PTR _hwndParent$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndFilter$[ebp], eax

; 170  :     HWND hwndDownscale = GetDlgItem(hwndParent, IDC_DOWNSCALE);

	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _hwndParent$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndDownscale$[ebp], eax

; 171  : 
; 172  :     int curFilter;
; 173  :     if(bGetConfig)

	movzx	edx, BYTE PTR _bGetConfig$[ebp]
	test	edx, edx
	je	SHORT $LN5@RefreshFil

; 174  :         curFilter = AppConfig->GetInt(TEXT("Video"), TEXT("Filter"), 0);

	push	0
	push	OFFSET $SG4294727228
	push	OFFSET $SG4294727227
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _curFilter$[ebp], eax

; 175  :     else

	jmp	SHORT $LN4@RefreshFil
$LN5@RefreshFil:

; 176  :         curFilter = (int)SendMessage(hwndFilter, CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	mov	eax, DWORD PTR _hwndFilter$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _curFilter$[ebp], eax
$LN4@RefreshFil:

; 177  : 
; 178  :     float downscale = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _downscale$[ebp], xmm0

; 179  : 
; 180  :     int curSel = (int)SendMessage(hwndDownscale, CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	mov	ecx, DWORD PTR _hwndDownscale$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _curSel$[ebp], eax

; 181  :     if(curSel != CB_ERR)

	cmp	DWORD PTR _curSel$[ebp], -1
	je	SHORT $LN3@RefreshFil

; 182  :         downscale = downscaleMultipliers[curSel];

	mov	edx, DWORD PTR _curSel$[ebp]
	movss	xmm0, DWORD PTR _downscaleMultipliers[edx*4]
	movss	DWORD PTR _downscale$[ebp], xmm0
$LN3@RefreshFil:

; 183  : 
; 184  :     SendMessage(hwndFilter, CB_RESETCONTENT, 0, 0);

	push	0
	push	0
	push	331					; 0000014bH
	mov	eax, DWORD PTR _hwndFilter$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 185  :     if(downscale < 2.01)

	cvtss2sd xmm0, DWORD PTR _downscale$[ebp]
	movsd	xmm1, QWORD PTR __real@4000147ae147ae14
	comisd	xmm1, xmm0
	jbe	$LN2@RefreshFil

; 186  :     {
; 187  :         SendMessage(hwndFilter, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Video.Filter.Bilinear"));

	push	OFFSET $SG4294727226
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	edx, DWORD PTR _hwndFilter$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 188  :         SendMessage(hwndFilter, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Video.Filter.Bicubic"));

	push	OFFSET $SG4294727225
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndFilter$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 189  :         SendMessage(hwndFilter, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Video.Filter.Lanczos"));

	push	OFFSET $SG4294727224
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	eax, DWORD PTR _hwndFilter$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 190  : 
; 191  :         SendMessage(hwndFilter, CB_SETCURSEL, curFilter, 0);

	push	0
	mov	ecx, DWORD PTR _curFilter$[ebp]
	push	ecx
	push	334					; 0000014eH
	mov	edx, DWORD PTR _hwndFilter$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 192  :     }
; 193  :     else

	jmp	SHORT $LN1@RefreshFil
$LN2@RefreshFil:

; 194  :     {
; 195  :         SendMessage(hwndFilter, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Video.Filter.Bilinear"));

	push	OFFSET $SG4294727223
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndFilter$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 196  :         SendMessage(hwndFilter, CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	mov	edx, DWORD PTR _hwndFilter$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN1@RefreshFil:

; 197  :     }
; 198  : 
; 199  :     EnableWindow(hwndFilter, (downscale > 1.01));

	cvtss2sd xmm0, DWORD PTR _downscale$[ebp]
	comisd	xmm0, QWORD PTR __real@3ff028f5c28f5c29
	jbe	SHORT $LN8@RefreshFil
	mov	DWORD PTR tv167[ebp], 1
	jmp	SHORT $LN9@RefreshFil
$LN8@RefreshFil:
	mov	DWORD PTR tv167[ebp], 0
$LN9@RefreshFil:
	mov	eax, DWORD PTR tv167[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndFilter$[ebp]
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8

; 200  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?RefreshFilters@SettingsVideo@@AAEXPAUHWND__@@_N@Z ENDP	; SettingsVideo::RefreshFilters
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?ApplySettings@SettingsVideo@@UAEXXZ
_TEXT	SEGMENT
$T1 = -56						; size = 8
$T2 = -48						; size = 8
_gammaVal$ = -40					; size = 4
_fps$ = -36						; size = 4
_bFailed$ = -32						; size = 4
_bDisableAero$ = -28					; size = 4
tv208 = -24						; size = 4
tv188 = -20						; size = 4
_adapterID$ = -16					; size = 4
_iVal$ = -12						; size = 4
_this$ = -8						; size = 4
_curSel$ = -4						; size = 4
?ApplySettings@SettingsVideo@@UAEXXZ PROC		; SettingsVideo::ApplySettings, COMDAT
; _this$ = ecx

; 203  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 204  :     UINT adapterID = (UINT)SendMessage(GetDlgItem(hwnd, IDC_DEVICE), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1016					; 000003f8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _adapterID$[ebp], eax

; 205  :     if (adapterID == CB_ERR)

	cmp	DWORD PTR _adapterID$[ebp], -1
	jne	SHORT $LN10@ApplySetti

; 206  :         adapterID = 0;

	mov	DWORD PTR _adapterID$[ebp], 0
$LN10@ApplySetti:

; 207  : 
; 208  :     GlobalConfig->SetInt(TEXT("Video"), TEXT("Adapter"), adapterID);

	mov	edx, DWORD PTR _adapterID$[ebp]
	push	edx
	push	OFFSET $SG4294727222
	push	OFFSET $SG4294727221
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 209  : 
; 210  :     int curSel = (int)SendMessage(GetDlgItem(hwnd, IDC_MONITOR), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1019					; 000003fbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _curSel$[ebp], eax

; 211  :     if(curSel != CB_ERR)

	cmp	DWORD PTR _curSel$[ebp], -1
	je	SHORT $LN9@ApplySetti

; 212  :         AppConfig->SetInt(TEXT("Video"), TEXT("Monitor"), curSel);

	mov	edx, DWORD PTR _curSel$[ebp]
	push	edx
	push	OFFSET $SG4294727220
	push	OFFSET $SG4294727219
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
$LN9@ApplySetti:

; 213  : 
; 214  :     int iVal = GetEditText(GetDlgItem(hwnd, IDC_SIZEX)).ToInt();

	push	10					; 0000000aH
	push	1033					; 00000409H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	mov	DWORD PTR _iVal$[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 215  :     if(iVal >=  128)

	cmp	DWORD PTR _iVal$[ebp], 128		; 00000080H
	jl	SHORT $LN8@ApplySetti

; 216  :         AppConfig->SetInt(TEXT("Video"), TEXT("BaseWidth"), iVal);

	mov	eax, DWORD PTR _iVal$[ebp]
	push	eax
	push	OFFSET $SG4294727218
	push	OFFSET $SG4294727217
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
$LN8@ApplySetti:

; 217  : 
; 218  :     iVal = GetEditText(GetDlgItem(hwnd, IDC_SIZEY)).ToInt();

	push	10					; 0000000aH
	push	1034					; 0000040aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	mov	DWORD PTR _iVal$[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 219  :     if(iVal >= 128)

	cmp	DWORD PTR _iVal$[ebp], 128		; 00000080H
	jl	SHORT $LN7@ApplySetti

; 220  :         AppConfig->SetInt(TEXT("Video"), TEXT("BaseHeight"), iVal);

	mov	ecx, DWORD PTR _iVal$[ebp]
	push	ecx
	push	OFFSET $SG4294727216
	push	OFFSET $SG4294727215
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
$LN7@ApplySetti:

; 221  : 
; 222  :     BOOL bDisableAero = SendMessage(GetDlgItem(hwnd, IDC_DISABLEAERO), BM_GETCHECK, 0, 0) == BST_CHECKED ? TRUE : FALSE;

	push	0
	push	0
	push	240					; 000000f0H
	push	1038					; 0000040eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN13@ApplySetti
	mov	DWORD PTR tv188[ebp], 1
	jmp	SHORT $LN14@ApplySetti
$LN13@ApplySetti:
	mov	DWORD PTR tv188[ebp], 0
$LN14@ApplySetti:
	mov	ecx, DWORD PTR tv188[ebp]
	mov	DWORD PTR _bDisableAero$[ebp], ecx

; 223  :     AppConfig->SetInt(TEXT("Video"), TEXT("DisableAero"), bDisableAero);

	mov	edx, DWORD PTR _bDisableAero$[ebp]
	push	edx
	push	OFFSET $SG4294727214
	push	OFFSET $SG4294727213
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 224  : 
; 225  :     BOOL bFailed;
; 226  :     int fps = (int)SendMessage(GetDlgItem(hwnd, IDC_FPS), UDM_GETPOS32, 0, (LPARAM)&bFailed);

	lea	eax, DWORD PTR _bFailed$[ebp]
	push	eax
	push	0
	push	1138					; 00000472H
	push	1030					; 00000406H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _fps$[ebp], eax

; 227  :     AppConfig->SetInt(TEXT("Video"), TEXT("FPS"), (bFailed) ? 30 : fps);

	cmp	DWORD PTR _bFailed$[ebp], 0
	je	SHORT $LN15@ApplySetti
	mov	DWORD PTR tv208[ebp], 30		; 0000001eH
	jmp	SHORT $LN16@ApplySetti
$LN15@ApplySetti:
	mov	eax, DWORD PTR _fps$[ebp]
	mov	DWORD PTR tv208[ebp], eax
$LN16@ApplySetti:
	mov	ecx, DWORD PTR tv208[ebp]
	push	ecx
	push	OFFSET $SG4294727212
	push	OFFSET $SG4294727211
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 228  : 
; 229  :     curSel = (int)SendMessage(GetDlgItem(hwnd, IDC_DOWNSCALE), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1014					; 000003f6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _curSel$[ebp], eax

; 230  :     if(curSel != CB_ERR)

	cmp	DWORD PTR _curSel$[ebp], -1
	je	SHORT $LN6@ApplySetti

; 231  :         AppConfig->SetFloat(TEXT("Video"), TEXT("Downscale"), downscaleMultipliers[curSel]);

	mov	ecx, DWORD PTR _curSel$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR _downscaleMultipliers[ecx*4]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG4294727210
	push	OFFSET $SG4294727209
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetFloat@ConfigFile@@QAEXPB_W0M@Z
$LN6@ApplySetti:

; 232  : 
; 233  :     curSel = (int)SendMessage(GetDlgItem(hwnd, IDC_FILTER), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1015					; 000003f7H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _curSel$[ebp], eax

; 234  :     if(curSel == CB_ERR) curSel = 0;

	cmp	DWORD PTR _curSel$[ebp], -1
	jne	SHORT $LN5@ApplySetti
	mov	DWORD PTR _curSel$[ebp], 0
$LN5@ApplySetti:

; 235  :     AppConfig->SetInt(TEXT("Video"), TEXT("Filter"), curSel);

	mov	ecx, DWORD PTR _curSel$[ebp]
	push	ecx
	push	OFFSET $SG4294727208
	push	OFFSET $SG4294727207
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 236  : 
; 237  :     int gammaVal = (int)SendMessage(GetDlgItem(hwnd, IDC_GAMMA), TBM_GETPOS, 0, 0);

	push	0
	push	0
	push	1024					; 00000400H
	push	1035					; 0000040bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _gammaVal$[ebp], eax

; 238  :     AppConfig->SetInt(TEXT("Video"), TEXT("Gamma"), gammaVal);

	mov	ecx, DWORD PTR _gammaVal$[ebp]
	push	ecx
	push	OFFSET $SG4294727206
	push	OFFSET $SG4294727205
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 239  : 
; 240  :     //------------------------------------
; 241  : 
; 242  :     if(!App->bRunning)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+622]
	test	eax, eax
	jne	SHORT $LN4@ApplySetti

; 243  :         App->ResizeWindow(false);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ResizeWindow@OBS@@QAEX_N@Z		; OBS::ResizeWindow
$LN4@ApplySetti:

; 244  :     
; 245  :     if(OSGetVersion() < 8)

	call	DWORD PTR __imp_?OSGetVersion@@YGHXZ
	cmp	eax, 8
	jge	SHORT $LN1@ApplySetti

; 246  :     {
; 247  :         if (bDisableAero)

	cmp	DWORD PTR _bDisableAero$[ebp], 0
	je	SHORT $LN2@ApplySetti

; 248  :         {
; 249  :             Log(TEXT("Settings::Video: Disabling Aero"));

	push	OFFSET $SG4294727204
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 4

; 250  :             DwmEnableComposition(DWM_EC_DISABLECOMPOSITION);

	push	0
	call	DWORD PTR __imp__DwmEnableComposition@4

; 251  :         }
; 252  :         else

	jmp	SHORT $LN1@ApplySetti
$LN2@ApplySetti:

; 253  :         {
; 254  :             Log(TEXT("Settings::Video: Enabling Aero"));

	push	OFFSET $SG4294727203
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 4

; 255  :             DwmEnableComposition(DWM_EC_ENABLECOMPOSITION);

	push	1
	call	DWORD PTR __imp__DwmEnableComposition@4
$LN1@ApplySetti:

; 256  :         }
; 257  :     }
; 258  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ApplySettings@SettingsVideo@@UAEXXZ ENDP		; SettingsVideo::ApplySettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?CancelSettings@SettingsVideo@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelSettings@SettingsVideo@@UAEXXZ PROC		; SettingsVideo::CancelSettings, COMDAT
; _this$ = ecx

; 261  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 262  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelSettings@SettingsVideo@@UAEXXZ ENDP		; SettingsVideo::CancelSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?HasDefaults@SettingsVideo@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasDefaults@SettingsVideo@@UBE_NXZ PROC		; SettingsVideo::HasDefaults, COMDAT
; _this$ = ecx

; 265  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 266  :     return false;

	xor	al, al

; 267  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasDefaults@SettingsVideo@@UBE_NXZ ENDP		; SettingsVideo::HasDefaults
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingsvideo.cpp
;	COMDAT ?ProcMessage@SettingsVideo@@UAEHIIJ@Z
_TEXT	SEGMENT
$T1 = -280						; size = 8
$T2 = -272						; size = 8
$T3 = -264						; size = 8
$T4 = -256						; size = 8
$T5 = -248						; size = 8
$T6 = -240						; size = 8
$T7 = -232						; size = 8
$T8 = -224						; size = 8
$T9 = -216						; size = 8
$T10 = -208						; size = 4
_bDisableAero$11 = -204					; size = 4
_bUnlockFPS$12 = -200					; size = 4
tv64 = -196						; size = 4
_cy$13 = -192						; size = 4
_cx$14 = -188						; size = 4
_cx$15 = -184						; size = 4
_outputs$16 = -180					; size = 8
tv500 = -172						; size = 4
_cy$17 = -168						; size = 4
tv484 = -164						; size = 4
_adapterID$18 = -160					; size = 4
_topFPS$19 = -156					; size = 4
_hwndToolTip$20 = -152					; size = 4
_i$21 = -148						; size = 4
_sel$22 = -144						; size = 4
_monitor$23 = -140					; size = 4
_sel$24 = -136						; size = 4
tv617 = -132						; size = 4
_monitor$25 = -128					; size = 4
_i$26 = -124						; size = 4
_cx$27 = -120						; size = 4
_fps$28 = -116						; size = 4
_cy$29 = -112						; size = 4
_monitorID$30 = -108					; size = 4
_cx$31 = -104						; size = 4
_cy$32 = -100						; size = 4
_hwndTemp$ = -96					; size = 4
_bDataChanged$33 = -89					; size = 1
_this$ = -88						; size = 4
_ti$34 = -84						; size = 48
_yRect$35 = -36						; size = 16
_xRect$36 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?ProcMessage@SettingsVideo@@UAEHIIJ@Z PROC		; SettingsVideo::ProcMessage, COMDAT
; _this$ = ecx

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 281  :     HWND hwndTemp;
; 282  :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN55@ProcMessag
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN29@ProcMessag
	jmp	$LN56@ProcMessag
$LN55@ProcMessag:

; 283  :     {
; 284  :         case WM_INITDIALOG:
; 285  :             {
; 286  :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 287  : 
; 288  :                 if (LocaleIsRTL())

	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp_?LocaleIsRTL@@YA_NPAVLocaleStringLookup@@@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	$LN54@ProcMessag

; 289  :                 {
; 290  :                     RECT xRect, yRect;
; 291  :                     GetWindowRect(GetDlgItem(hwnd, IDC_SIZEX), &xRect);

	lea	eax, DWORD PTR _xRect$36[ebp]
	push	eax
	push	1033					; 00000409H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 292  :                     MapWindowPoints(HWND_DESKTOP, hwnd, (LPPOINT)&xRect.left, 2);

	push	2
	lea	eax, DWORD PTR _xRect$36[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	0
	call	DWORD PTR __imp__MapWindowPoints@16

; 293  :                     GetWindowRect(GetDlgItem(hwnd, IDC_SIZEY), &yRect);

	lea	eax, DWORD PTR _yRect$35[ebp]
	push	eax
	push	1034					; 0000040aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 294  :                     MapWindowPoints(HWND_DESKTOP, hwnd, (LPPOINT)&yRect.left, 2);

	push	2
	lea	eax, DWORD PTR _yRect$35[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	0
	call	DWORD PTR __imp__MapWindowPoints@16

; 295  : 
; 296  :                     SetWindowPos(GetDlgItem(hwnd, IDC_SIZEX), nullptr, yRect.left, yRect.top, 0, 0, SWP_NOSIZE);

	push	1
	push	0
	push	0
	mov	eax, DWORD PTR _yRect$35[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _yRect$35[ebp]
	push	ecx
	push	0
	push	1033					; 00000409H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28

; 297  :                     SetWindowPos(GetDlgItem(hwnd, IDC_SIZEY), nullptr, xRect.left, xRect.top, 0, 0, SWP_NOSIZE);

	push	1
	push	0
	push	0
	mov	ecx, DWORD PTR _xRect$36[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _xRect$36[ebp]
	push	edx
	push	0
	push	1034					; 0000040aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
$LN54@ProcMessag:

; 298  :                 }
; 299  : 
; 300  :                 //--------------------------------------------
; 301  : 
; 302  :                 HWND hwndToolTip = CreateWindowEx(NULL, TOOLTIPS_CLASS, NULL, WS_POPUP|TTS_NOPREFIX|TTS_ALWAYSTIP,
; 303  :                     CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
; 304  :                     hwnd, NULL, hinstMain, NULL);

	push	0
	mov	edx, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483645				; 80000003H
	push	0
	push	OFFSET $SG4294727202
	push	0
	call	_IsolationAwareCreateWindowExW@48
	mov	DWORD PTR _hwndToolTip$20[ebp], eax

; 305  : 
; 306  :                 TOOLINFO ti;
; 307  :                 zero(&ti, sizeof(ti));

	push	48					; 00000030H
	lea	edx, DWORD PTR _ti$34[ebp]
	push	edx
	call	?zero@@YGXPAXI@Z			; zero

; 308  :                 ti.cbSize = sizeof(ti);

	mov	DWORD PTR _ti$34[ebp], 48		; 00000030H

; 309  :                 ti.uFlags = TTF_SUBCLASS|TTF_IDISHWND;

	mov	DWORD PTR _ti$34[ebp+4], 17		; 00000011H

; 310  :                 ti.hwnd = hwnd;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ti$34[ebp+8], ecx

; 311  : 
; 312  :                 if (LocaleIsRTL())

	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp_?LocaleIsRTL@@YA_NPAVLocaleStringLookup@@@Z
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN53@ProcMessag

; 313  :                     ti.uFlags |= TTF_RTLREADING;

	mov	edx, DWORD PTR _ti$34[ebp+4]
	or	edx, 4
	mov	DWORD PTR _ti$34[ebp+4], edx
$LN53@ProcMessag:

; 314  : 
; 315  :                 SendMessage(hwndToolTip, TTM_SETMAXTIPWIDTH, 0, 500);

	push	500					; 000001f4H
	push	0
	push	1048					; 00000418H
	mov	eax, DWORD PTR _hwndToolTip$20[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 316  :                 SendMessage(hwndToolTip, TTM_SETDELAYTIME, TTDT_AUTOPOP, 8000);

	push	8000					; 00001f40H
	push	2
	push	1027					; 00000403H
	mov	ecx, DWORD PTR _hwndToolTip$20[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 317  : 
; 318  :                 //--------------------------------------------
; 319  : 
; 320  :                 DeviceOutputs outputs;

	lea	ecx, DWORD PTR _outputs$16[ebp]
	call	??0DeviceOutputs@@QAE@XZ

; 321  :                 GetDisplayDevices(outputs);

	lea	edx, DWORD PTR _outputs$16[ebp]
	push	edx
	call	?GetDisplayDevices@@YAXAAUDeviceOutputs@@@Z ; GetDisplayDevices
	add	esp, 4

; 322  : 
; 323  :                 hwndTemp = GetDlgItem(hwnd, IDC_DEVICE);

	push	1016					; 000003f8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 324  :                 for (UINT i=0; i<outputs.devices.Num(); i++) {

	mov	DWORD PTR _i$21[ebp], 0
	jmp	SHORT $LN52@ProcMessag
$LN51@ProcMessag:
	mov	edx, DWORD PTR _i$21[ebp]
	add	edx, 1
	mov	DWORD PTR _i$21[ebp], edx
$LN52@ProcMessag:
	lea	ecx, DWORD PTR _outputs$16[ebp]
	call	?Num@?$List@UDeviceOutputData@@@@QBEIXZ	; List<DeviceOutputData>::Num
	cmp	DWORD PTR _i$21[ebp], eax
	jae	SHORT $LN50@ProcMessag

; 325  :                     SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)outputs.devices[i].strDevice.Array());

	mov	eax, DWORD PTR _i$21[ebp]
	push	eax
	lea	ecx, DWORD PTR _outputs$16[ebp]
	call	??A?$List@UDeviceOutputData@@@@QAEAAUDeviceOutputData@@I@Z ; List<DeviceOutputData>::operator[]
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 326  :                 }

	jmp	SHORT $LN51@ProcMessag
$LN50@ProcMessag:

; 327  : 
; 328  :                 UINT adapterID = GlobalConfig->GetInt(TEXT("Video"), TEXT("Adapter"), 0);

	push	0
	push	OFFSET $SG4294727201
	push	OFFSET $SG4294727200
	mov	ecx, DWORD PTR ?GlobalConfig@@3PAVConfigFile@@A ; GlobalConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _adapterID$18[ebp], eax

; 329  :                 if (adapterID >= outputs.devices.Num())

	lea	ecx, DWORD PTR _outputs$16[ebp]
	call	?Num@?$List@UDeviceOutputData@@@@QBEIXZ	; List<DeviceOutputData>::Num
	cmp	DWORD PTR _adapterID$18[ebp], eax
	jb	SHORT $LN49@ProcMessag

; 330  :                     adapterID = 0;

	mov	DWORD PTR _adapterID$18[ebp], 0
$LN49@ProcMessag:

; 331  :                 SendMessage(hwndTemp, CB_SETCURSEL, adapterID, 0);

	push	0
	mov	edx, DWORD PTR _adapterID$18[ebp]
	push	edx
	push	334					; 0000014eH
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 332  : 
; 333  :                 //--------------------------------------------
; 334  : 
; 335  :                 hwndTemp = GetDlgItem(hwnd, IDC_MONITOR);

	push	1019					; 000003fbH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 336  : 
; 337  :                 App->monitors.Clear();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	?Clear@?$List@UMonitorInfo@@@@QAEXXZ	; List<MonitorInfo>::Clear

; 338  :                 EnumDisplayMonitors(NULL, NULL, (MONITORENUMPROC)MonitorInfoEnumProc, (LPARAM)&App->monitors);

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 156				; 0000009cH
	push	eax
	push	OFFSET ?MonitorInfoEnumProc@@YGHPAUHMONITOR__@@PAUHDC__@@PAUtagRECT@@AAV?$List@UMonitorInfo@@@@@Z ; MonitorInfoEnumProc
	push	0
	push	0
	call	DWORD PTR __imp__EnumDisplayMonitors@16

; 339  : 
; 340  :                 for(UINT i=0; i<App->monitors.Num(); i++)

	mov	DWORD PTR _i$26[ebp], 0
	jmp	SHORT $LN48@ProcMessag
$LN47@ProcMessag:
	mov	ecx, DWORD PTR _i$26[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$26[ebp], ecx
$LN48@ProcMessag:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	?Num@?$List@UMonitorInfo@@@@QBEIXZ	; List<MonitorInfo>::Num
	cmp	DWORD PTR _i$26[ebp], eax
	jae	SHORT $LN46@ProcMessag

; 341  :                     SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)IntString(i+1).Array());

	push	10					; 0000000aH
	mov	edx, DWORD PTR _i$26[ebp]
	add	edx, 1
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN47@ProcMessag
$LN46@ProcMessag:

; 342  : 
; 343  :                 int monitorID = LoadSettingComboInt(hwndTemp, TEXT("Video"), TEXT("Monitor"), 0, App->monitors.Num()-1);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	?Num@?$List@UMonitorInfo@@@@QBEIXZ	; List<MonitorInfo>::Num
	sub	eax, 1
	push	eax
	push	0
	push	OFFSET $SG4294727199
	push	OFFSET $SG4294727198
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	?LoadSettingComboInt@@YAHPAUHWND__@@PB_W1HH@Z ; LoadSettingComboInt
	add	esp, 20					; 00000014H
	mov	DWORD PTR _monitorID$30[ebp], eax

; 344  :                 if(monitorID > (int)App->monitors.Num())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	?Num@?$List@UMonitorInfo@@@@QBEIXZ	; List<MonitorInfo>::Num
	cmp	DWORD PTR _monitorID$30[ebp], eax
	jle	SHORT $LN45@ProcMessag

; 345  :                     monitorID = 0;

	mov	DWORD PTR _monitorID$30[ebp], 0
$LN45@ProcMessag:

; 346  : 
; 347  :                 //--------------------------------------------
; 348  : 
; 349  :                 SendMessage(GetDlgItem(hwnd, IDC_USECUSTOM), BM_SETCHECK, BST_CHECKED, 0);

	push	0
	push	1
	push	241					; 000000f1H
	push	1036					; 0000040cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 350  :                 EnableWindow(GetDlgItem(hwnd, IDC_MONITOR), FALSE);

	push	0
	push	1019					; 000003fbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 351  : 
; 352  :                 //--------------------------------------------
; 353  : 
; 354  :                 int cx, cy;
; 355  :                 if(!AppConfig->HasKey(TEXT("Video"), TEXT("BaseWidth")) || !AppConfig->HasKey(TEXT("Video"), TEXT("BaseHeight")))

	push	OFFSET $SG4294727197
	push	OFFSET $SG4294727196
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?HasKey@ConfigFile@@QAEHPB_W0@Z
	test	eax, eax
	je	SHORT $LN43@ProcMessag
	push	OFFSET $SG4294727195
	push	OFFSET $SG4294727194
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?HasKey@ConfigFile@@QAEHPB_W0@Z
	test	eax, eax
	jne	$LN44@ProcMessag
$LN43@ProcMessag:

; 356  :                 {
; 357  :                     cx = App->monitors[monitorID].rect.right  - App->monitors[monitorID].rect.left;

	mov	ecx, DWORD PTR _monitorID$30[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	??A?$List@UMonitorInfo@@@@QAEAAUMonitorInfo@@I@Z ; List<MonitorInfo>::operator[]
	mov	esi, eax
	mov	edx, DWORD PTR _monitorID$30[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	??A?$List@UMonitorInfo@@@@QAEAAUMonitorInfo@@I@Z ; List<MonitorInfo>::operator[]
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cx$31[ebp], ecx

; 358  :                     cy = App->monitors[monitorID].rect.bottom - App->monitors[monitorID].rect.top;

	mov	edx, DWORD PTR _monitorID$30[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	??A?$List@UMonitorInfo@@@@QAEAAUMonitorInfo@@I@Z ; List<MonitorInfo>::operator[]
	mov	esi, eax
	mov	eax, DWORD PTR _monitorID$30[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	??A?$List@UMonitorInfo@@@@QAEAAUMonitorInfo@@I@Z ; List<MonitorInfo>::operator[]
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _cy$32[ebp], ecx

; 359  :                     AppConfig->SetInt(TEXT("Video"), TEXT("BaseWidth"),  cx);

	mov	edx, DWORD PTR _cx$31[ebp]
	push	edx
	push	OFFSET $SG4294727193
	push	OFFSET $SG4294727192
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 360  :                     AppConfig->SetInt(TEXT("Video"), TEXT("BaseHeight"), cy);

	mov	eax, DWORD PTR _cy$32[ebp]
	push	eax
	push	OFFSET $SG4294727191
	push	OFFSET $SG4294727190
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 361  :                 }
; 362  :                 else

	jmp	SHORT $LN42@ProcMessag
$LN44@ProcMessag:

; 363  :                 {
; 364  :                     cx = AppConfig->GetInt(TEXT("Video"), TEXT("BaseWidth"));

	push	0
	push	OFFSET $SG4294727189
	push	OFFSET $SG4294727188
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _cx$31[ebp], eax

; 365  :                     cy = AppConfig->GetInt(TEXT("Video"), TEXT("BaseHeight"));

	push	0
	push	OFFSET $SG4294727187
	push	OFFSET $SG4294727186
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _cy$32[ebp], eax

; 366  : 
; 367  :                     if(cx < 128)        cx = 128;

	cmp	DWORD PTR _cx$31[ebp], 128		; 00000080H
	jge	SHORT $LN41@ProcMessag
	mov	DWORD PTR _cx$31[ebp], 128		; 00000080H
	jmp	SHORT $LN40@ProcMessag
$LN41@ProcMessag:

; 368  :                     else if(cx > 4096)  cx = 4096;

	cmp	DWORD PTR _cx$31[ebp], 4096		; 00001000H
	jle	SHORT $LN40@ProcMessag
	mov	DWORD PTR _cx$31[ebp], 4096		; 00001000H
$LN40@ProcMessag:

; 369  : 
; 370  :                     if(cy < 128)        cy = 128;

	cmp	DWORD PTR _cy$32[ebp], 128		; 00000080H
	jge	SHORT $LN38@ProcMessag
	mov	DWORD PTR _cy$32[ebp], 128		; 00000080H
	jmp	SHORT $LN42@ProcMessag
$LN38@ProcMessag:

; 371  :                     else if(cy > 4096)  cy = 4096;

	cmp	DWORD PTR _cy$32[ebp], 4096		; 00001000H
	jle	SHORT $LN42@ProcMessag
	mov	DWORD PTR _cy$32[ebp], 4096		; 00001000H
$LN42@ProcMessag:

; 372  :                 }
; 373  : 
; 374  :                 RefreshAspect(hwnd, cx, cy);

	mov	ecx, DWORD PTR _cy$32[ebp]
	push	ecx
	mov	edx, DWORD PTR _cx$31[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?RefreshAspect@@YAXPAUHWND__@@HH@Z	; RefreshAspect
	add	esp, 12					; 0000000cH

; 375  : 
; 376  : 
; 377  :                 hwndTemp = GetDlgItem(hwnd, IDC_SIZEX);

	push	1033					; 00000409H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 378  :                 editProc = (FARPROC)GetWindowLongPtr(hwndTemp, GWLP_WNDPROC);

	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR ?editProc@@3P6GHXZA, eax	; editProc

; 379  :                 SetWindowLongPtr(hwndTemp, GWLP_WNDPROC, (LONG_PTR)ResolutionEditSubclassProc);

	push	OFFSET ?ResolutionEditSubclassProc@@YGJPAUHWND__@@IIJ@Z ; ResolutionEditSubclassProc
	push	-4					; fffffffcH
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 380  :                 SetWindowText(hwndTemp, IntString(cx).Array());

	push	10					; 0000000aH
	mov	eax, DWORD PTR _cx$31[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 381  : 
; 382  :                 hwndTemp = GetDlgItem(hwnd, IDC_SIZEY);

	push	1034					; 0000040aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 383  :                 SetWindowLongPtr(hwndTemp, GWLP_WNDPROC, (LONG_PTR)ResolutionEditSubclassProc);

	push	OFFSET ?ResolutionEditSubclassProc@@YGJPAUHWND__@@IIJ@Z ; ResolutionEditSubclassProc
	push	-4					; fffffffcH
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12

; 384  :                 SetWindowText(hwndTemp, IntString(cy).Array());

	push	10					; 0000000aH
	mov	eax, DWORD PTR _cy$32[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T9[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 385  : 
; 386  :                 //--------------------------------------------
; 387  : 
; 388  :                 hwndTemp = GetDlgItem(hwnd, IDC_DISABLEAERO);

	push	1038					; 0000040eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 389  : 
; 390  :                 if(OSGetVersion() == 8)

	call	DWORD PTR __imp_?OSGetVersion@@YGHXZ
	cmp	eax, 8
	jne	SHORT $LN35@ProcMessag

; 391  :                     EnableWindow(hwndTemp, FALSE);

	push	0
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__EnableWindow@8
$LN35@ProcMessag:

; 392  : 
; 393  :                 BOOL bDisableAero = AppConfig->GetInt(TEXT("Video"), TEXT("DisableAero"), 0);

	push	0
	push	OFFSET $SG4294727185
	push	OFFSET $SG4294727184
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bDisableAero$11[ebp], eax

; 394  :                 SendMessage(hwndTemp, BM_SETCHECK, bDisableAero ? BST_CHECKED : 0, 0);

	cmp	DWORD PTR _bDisableAero$11[ebp], 0
	je	SHORT $LN60@ProcMessag
	mov	DWORD PTR tv484[ebp], 1
	jmp	SHORT $LN61@ProcMessag
$LN60@ProcMessag:
	mov	DWORD PTR tv484[ebp], 0
$LN61@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv484[ebp]
	push	eax
	push	241					; 000000f1H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 395  : 
; 396  :                 ti.lpszText = (LPWSTR)Str("Settings.Video.DisableAeroTooltip");

	push	OFFSET $SG4294727183
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$34[ebp+36], eax

; 397  :                 ti.uId = (UINT_PTR)hwndTemp;

	mov	eax, DWORD PTR _hwndTemp$[ebp]
	mov	DWORD PTR _ti$34[ebp+12], eax

; 398  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	ecx, DWORD PTR _ti$34[ebp]
	push	ecx
	push	0
	push	1074					; 00000432H
	mov	edx, DWORD PTR _hwndToolTip$20[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 399  : 
; 400  :                 //--------------------------------------------
; 401  : 
; 402  :                 BOOL bUnlockFPS = AppConfig->GetInt(TEXT("Video"), TEXT("UnlockFPS"));

	push	0
	push	OFFSET $SG4294727182
	push	OFFSET $SG4294727181
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bUnlockFPS$12[ebp], eax

; 403  :                 int topFPS = bUnlockFPS ? 120 : 60;

	cmp	DWORD PTR _bUnlockFPS$12[ebp], 0
	je	SHORT $LN62@ProcMessag
	mov	DWORD PTR tv500[ebp], 120		; 00000078H
	jmp	SHORT $LN63@ProcMessag
$LN62@ProcMessag:
	mov	DWORD PTR tv500[ebp], 60		; 0000003cH
$LN63@ProcMessag:
	mov	eax, DWORD PTR tv500[ebp]
	mov	DWORD PTR _topFPS$19[ebp], eax

; 404  : 
; 405  :                 hwndTemp = GetDlgItem(hwnd, IDC_FPS);

	push	1030					; 00000406H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 406  :                 SendMessage(hwndTemp, UDM_SETRANGE32, 1, topFPS);

	mov	eax, DWORD PTR _topFPS$19[ebp]
	push	eax
	push	1
	push	1135					; 0000046fH
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 407  : 
; 408  :                 int fps = AppConfig->GetInt(TEXT("Video"), TEXT("FPS"), 30);

	push	30					; 0000001eH
	push	OFFSET $SG4294727180
	push	OFFSET $SG4294727179
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _fps$28[ebp], eax

; 409  :                 if(!AppConfig->HasKey(TEXT("Video"), TEXT("FPS")))

	push	OFFSET $SG4294727178
	push	OFFSET $SG4294727177
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?HasKey@ConfigFile@@QAEHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN34@ProcMessag

; 410  :                 {
; 411  :                     AppConfig->SetInt(TEXT("Video"), TEXT("FPS"), 30);

	push	30					; 0000001eH
	push	OFFSET $SG4294727176
	push	OFFSET $SG4294727175
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 412  :                     fps = 30;

	mov	DWORD PTR _fps$28[ebp], 30		; 0000001eH
	jmp	SHORT $LN33@ProcMessag
$LN34@ProcMessag:

; 413  :                 }
; 414  :                 else if(fps < 1)

	cmp	DWORD PTR _fps$28[ebp], 1
	jge	SHORT $LN32@ProcMessag

; 415  :                 {
; 416  :                     AppConfig->SetInt(TEXT("Video"), TEXT("FPS"), 1);

	push	1
	push	OFFSET $SG4294727174
	push	OFFSET $SG4294727173
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 417  :                     fps = 1;

	mov	DWORD PTR _fps$28[ebp], 1
	jmp	SHORT $LN33@ProcMessag
$LN32@ProcMessag:

; 418  :                 }
; 419  :                 else if(fps > topFPS)

	mov	edx, DWORD PTR _fps$28[ebp]
	cmp	edx, DWORD PTR _topFPS$19[ebp]
	jle	SHORT $LN33@ProcMessag

; 420  :                 {
; 421  :                     AppConfig->SetInt(TEXT("Video"), TEXT("FPS"), topFPS);

	mov	eax, DWORD PTR _topFPS$19[ebp]
	push	eax
	push	OFFSET $SG4294727172
	push	OFFSET $SG4294727171
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 422  :                     fps = topFPS;

	mov	ecx, DWORD PTR _topFPS$19[ebp]
	mov	DWORD PTR _fps$28[ebp], ecx
$LN33@ProcMessag:

; 423  :                 }
; 424  : 
; 425  :                 SendMessage(hwndTemp, UDM_SETPOS32, 0, fps);

	mov	edx, DWORD PTR _fps$28[ebp]
	push	edx
	push	0
	push	1137					; 00000471H
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 426  : 
; 427  :                 //--------------------------------------------
; 428  : 
; 429  :                 hwndTemp = GetDlgItem(hwnd, IDC_DOWNSCALE);

	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 430  :                 RefreshDownscales(hwndTemp, cx, cy);

	mov	eax, DWORD PTR _cy$32[ebp]
	push	eax
	mov	ecx, DWORD PTR _cx$31[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RefreshDownscales@SettingsVideo@@AAEXPAUHWND__@@HH@Z ; SettingsVideo::RefreshDownscales

; 431  : 
; 432  :                 ti.lpszText = (LPWSTR)Str("Settings.Video.DownscaleTooltip");

	push	OFFSET $SG4294727170
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$34[ebp+36], eax

; 433  :                 ti.uId = (UINT_PTR)hwndTemp;

	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	mov	DWORD PTR _ti$34[ebp+12], ecx

; 434  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	edx, DWORD PTR _ti$34[ebp]
	push	edx
	push	0
	push	1074					; 00000432H
	mov	eax, DWORD PTR _hwndToolTip$20[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 435  : 
; 436  :                 //--------------------------------------------
; 437  : 
; 438  :                 RefreshFilters(hwnd, true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RefreshFilters@SettingsVideo@@AAEXPAUHWND__@@_N@Z ; SettingsVideo::RefreshFilters

; 439  : 
; 440  :                 //--------------------------------------------
; 441  : 
; 442  :                 ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_HIDE);

	push	0
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 443  :                 SetChangedSettings(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 444  : 
; 445  :                 return TRUE;

	mov	DWORD PTR $T10[ebp], 1
	lea	ecx, DWORD PTR _outputs$16[ebp]
	call	??1DeviceOutputs@@QAE@XZ		; DeviceOutputs::~DeviceOutputs
	mov	eax, DWORD PTR $T10[ebp]
	jmp	$LN58@ProcMessag
$LN29@ProcMessag:

; 446  :             }
; 447  : 
; 448  :         case WM_COMMAND:
; 449  :             {
; 450  :                 bool bDataChanged = false;

	mov	BYTE PTR _bDataChanged$33[ebp], 0

; 451  : 
; 452  :                 switch(LOWORD(wParam))

	movzx	edx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv617[ebp], edx
	mov	eax, DWORD PTR tv617[ebp]
	sub	eax, 1014				; 000003f6H
	mov	DWORD PTR tv617[ebp], eax
	cmp	DWORD PTR tv617[ebp], 24		; 00000018H
	ja	$LN27@ProcMessag
	mov	ecx, DWORD PTR tv617[ebp]
	movzx	edx, BYTE PTR $LN64@ProcMessag[ecx]
	jmp	DWORD PTR $LN65@ProcMessag[edx*4]
$LN26@ProcMessag:

; 453  :                 {
; 454  :                     case IDC_MONITOR:
; 455  :                         {
; 456  :                             if(HIWORD(wParam) != CBN_SELCHANGE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 1
	je	SHORT $LN25@ProcMessag

; 457  :                                 break;

	jmp	$LN27@ProcMessag
$LN25@ProcMessag:

; 458  : 
; 459  :                             int sel = (int)SendMessage(GetDlgItem(hwnd, IDC_MONITOR), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1019					; 000003fbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _sel$24[ebp], eax

; 460  :                             if(sel != CB_ERR)

	cmp	DWORD PTR _sel$24[ebp], -1
	je	$LN24@ProcMessag

; 461  :                             {
; 462  :                                 if(sel >= (int)App->monitors.Num())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	?Num@?$List@UMonitorInfo@@@@QBEIXZ	; List<MonitorInfo>::Num
	cmp	DWORD PTR _sel$24[ebp], eax
	jl	SHORT $LN23@ProcMessag

; 463  :                                     sel = 0;

	mov	DWORD PTR _sel$24[ebp], 0
$LN23@ProcMessag:

; 464  : 
; 465  :                                 MonitorInfo &monitor = App->monitors[sel];

	mov	ecx, DWORD PTR _sel$24[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	??A?$List@UMonitorInfo@@@@QAEAAUMonitorInfo@@I@Z ; List<MonitorInfo>::operator[]
	mov	DWORD PTR _monitor$23[ebp], eax

; 466  : 
; 467  :                                 int cx, cy;
; 468  :                                 cx = monitor.rect.right  - monitor.rect.left;

	mov	edx, DWORD PTR _monitor$23[ebp]
	mov	eax, DWORD PTR _monitor$23[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cx$14[ebp], ecx

; 469  :                                 cy = monitor.rect.bottom - monitor.rect.top;

	mov	edx, DWORD PTR _monitor$23[ebp]
	mov	eax, DWORD PTR _monitor$23[ebp]
	mov	ecx, DWORD PTR [edx+16]
	sub	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _cy$17[ebp], ecx

; 470  : 
; 471  :                                 SetWindowText(GetDlgItem(hwnd, IDC_SIZEX), IntString(cx).Array());

	push	10					; 0000000aH
	mov	edx, DWORD PTR _cx$14[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1033					; 00000409H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 472  :                                 SetWindowText(GetDlgItem(hwnd, IDC_SIZEY), IntString(cy).Array());

	push	10					; 0000000aH
	mov	eax, DWORD PTR _cy$17[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1034					; 0000040aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 473  : 
; 474  :                                 RefreshAspect(hwnd, cx, cy);

	mov	ecx, DWORD PTR _cy$17[ebp]
	push	ecx
	mov	edx, DWORD PTR _cx$14[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?RefreshAspect@@YAXPAUHWND__@@HH@Z	; RefreshAspect
	add	esp, 12					; 0000000cH
$LN24@ProcMessag:

; 475  :                             }
; 476  :                             break;

	jmp	$LN27@ProcMessag
$LN22@ProcMessag:

; 477  :                         }
; 478  : 
; 479  :                     case IDC_USECUSTOM:
; 480  :                         SendMessage(GetDlgItem(hwnd, IDC_SIZEX), EM_SETREADONLY, FALSE, 0);

	push	0
	push	0
	push	207					; 000000cfH
	push	1033					; 00000409H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 481  :                         SendMessage(GetDlgItem(hwnd, IDC_SIZEY), EM_SETREADONLY, FALSE, 0);

	push	0
	push	0
	push	207					; 000000cfH
	push	1034					; 0000040aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 482  :                         EnableWindow(GetDlgItem(hwnd, IDC_MONITOR), FALSE);

	push	0
	push	1019					; 000003fbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 483  :                         break;

	jmp	$LN27@ProcMessag
$LN21@ProcMessag:

; 484  : 
; 485  :                     case IDC_USEMONITOR:
; 486  :                         {
; 487  :                             SendMessage(GetDlgItem(hwnd, IDC_SIZEX), EM_SETREADONLY, TRUE, 0);

	push	0
	push	1
	push	207					; 000000cfH
	push	1033					; 00000409H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 488  :                             SendMessage(GetDlgItem(hwnd, IDC_SIZEY), EM_SETREADONLY, TRUE, 0);

	push	0
	push	1
	push	207					; 000000cfH
	push	1034					; 0000040aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 489  :                             EnableWindow(GetDlgItem(hwnd, IDC_MONITOR), TRUE);

	push	1
	push	1019					; 000003fbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 490  : 
; 491  :                             int sel = (int)SendMessage(GetDlgItem(hwnd, IDC_MONITOR), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1019					; 000003fbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _sel$22[ebp], eax

; 492  :                             if(sel != CB_ERR)

	cmp	DWORD PTR _sel$22[ebp], -1
	je	$LN20@ProcMessag

; 493  :                             {
; 494  :                                 if(sel >= (int)App->monitors.Num())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	?Num@?$List@UMonitorInfo@@@@QBEIXZ	; List<MonitorInfo>::Num
	cmp	DWORD PTR _sel$22[ebp], eax
	jl	SHORT $LN19@ProcMessag

; 495  :                                     sel = 0;

	mov	DWORD PTR _sel$22[ebp], 0
$LN19@ProcMessag:

; 496  : 
; 497  :                                 MonitorInfo &monitor = App->monitors[sel];

	mov	ecx, DWORD PTR _sel$22[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 156				; 0000009cH
	call	??A?$List@UMonitorInfo@@@@QAEAAUMonitorInfo@@I@Z ; List<MonitorInfo>::operator[]
	mov	DWORD PTR _monitor$25[ebp], eax

; 498  : 
; 499  :                                 int cx, cy;
; 500  :                                 cx = monitor.rect.right  - monitor.rect.left;

	mov	edx, DWORD PTR _monitor$25[ebp]
	mov	eax, DWORD PTR _monitor$25[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cx$15[ebp], ecx

; 501  :                                 cy = monitor.rect.bottom - monitor.rect.top;

	mov	edx, DWORD PTR _monitor$25[ebp]
	mov	eax, DWORD PTR _monitor$25[ebp]
	mov	ecx, DWORD PTR [edx+16]
	sub	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _cy$13[ebp], ecx

; 502  : 
; 503  :                                 SetWindowText(GetDlgItem(hwnd, IDC_SIZEX), IntString(cx).Array());

	push	10					; 0000000aH
	mov	edx, DWORD PTR _cx$15[ebp]
	push	edx
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1033					; 00000409H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 504  :                                 SetWindowText(GetDlgItem(hwnd, IDC_SIZEY), IntString(cy).Array());

	push	10					; 0000000aH
	mov	eax, DWORD PTR _cy$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1034					; 0000040aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 505  : 
; 506  :                                 RefreshAspect(hwnd, cx, cy);

	mov	ecx, DWORD PTR _cy$13[ebp]
	push	ecx
	mov	edx, DWORD PTR _cx$15[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?RefreshAspect@@YAXPAUHWND__@@HH@Z	; RefreshAspect
	add	esp, 12					; 0000000cH
$LN20@ProcMessag:

; 507  :                             }
; 508  :                             break;

	jmp	$LN27@ProcMessag
$LN18@ProcMessag:

; 509  :                         }
; 510  : 
; 511  :                     case IDC_SIZEX:
; 512  :                     case IDC_SIZEY:
; 513  :                         {
; 514  :                             if(HIWORD(wParam) != EN_CHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 768				; 00000300H
	je	SHORT $LN17@ProcMessag

; 515  :                                 break;

	jmp	$LN27@ProcMessag
$LN17@ProcMessag:

; 516  : 
; 517  :                             int cx = GetEditText(GetDlgItem(hwnd, IDC_SIZEX)).ToInt();

	push	10					; 0000000aH
	push	1033					; 00000409H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	mov	DWORD PTR _cx$27[ebp], eax
	lea	ecx, DWORD PTR $T8[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 518  :                             int cy = GetEditText(GetDlgItem(hwnd, IDC_SIZEY)).ToInt();

	push	10					; 0000000aH
	push	1034					; 0000040aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	mov	DWORD PTR _cy$29[ebp], eax
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 519  : 
; 520  :                             if(cx < 128)        cx = 128;

	cmp	DWORD PTR _cx$27[ebp], 128		; 00000080H
	jge	SHORT $LN16@ProcMessag
	mov	DWORD PTR _cx$27[ebp], 128		; 00000080H
	jmp	SHORT $LN15@ProcMessag
$LN16@ProcMessag:

; 521  :                             else if(cx > 4096)  cx = 4096;

	cmp	DWORD PTR _cx$27[ebp], 4096		; 00001000H
	jle	SHORT $LN15@ProcMessag
	mov	DWORD PTR _cx$27[ebp], 4096		; 00001000H
$LN15@ProcMessag:

; 522  : 
; 523  :                             if(cy < 128)        cy = 128;

	cmp	DWORD PTR _cy$29[ebp], 128		; 00000080H
	jge	SHORT $LN13@ProcMessag
	mov	DWORD PTR _cy$29[ebp], 128		; 00000080H
	jmp	SHORT $LN12@ProcMessag
$LN13@ProcMessag:

; 524  :                             else if(cy > 4096)  cy = 4096;

	cmp	DWORD PTR _cy$29[ebp], 4096		; 00001000H
	jle	SHORT $LN12@ProcMessag
	mov	DWORD PTR _cy$29[ebp], 4096		; 00001000H
$LN12@ProcMessag:

; 525  : 
; 526  :                             RefreshDownscales(GetDlgItem(hwnd, IDC_DOWNSCALE), cx, cy);

	mov	ecx, DWORD PTR _cy$29[ebp]
	push	ecx
	mov	edx, DWORD PTR _cx$27[ebp]
	push	edx
	push	1014					; 000003f6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RefreshDownscales@SettingsVideo@@AAEXPAUHWND__@@HH@Z ; SettingsVideo::RefreshDownscales

; 527  : 
; 528  :                             RefreshAspect(hwnd, cx, cy);

	mov	edx, DWORD PTR _cy$29[ebp]
	push	edx
	mov	eax, DWORD PTR _cx$27[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?RefreshAspect@@YAXPAUHWND__@@HH@Z	; RefreshAspect
	add	esp, 12					; 0000000cH

; 529  : 
; 530  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$33[ebp], 1

; 531  :                             break;

	jmp	SHORT $LN27@ProcMessag
$LN10@ProcMessag:

; 532  :                         }
; 533  : 
; 534  :                     case IDC_DISABLEAERO:
; 535  :                         if(HIWORD(wParam) == BN_CLICKED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN9@ProcMessag

; 536  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$33[ebp], 1
$LN9@ProcMessag:

; 537  :                         break;

	jmp	SHORT $LN27@ProcMessag
$LN8@ProcMessag:

; 538  : 
; 539  :                     case IDC_FPS_EDIT:
; 540  :                         if(HIWORD(wParam) == EN_CHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 768				; 00000300H
	jne	SHORT $LN7@ProcMessag

; 541  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$33[ebp], 1
$LN7@ProcMessag:

; 542  :                         break;

	jmp	SHORT $LN27@ProcMessag
$LN6@ProcMessag:

; 543  : 
; 544  :                     case IDC_DEVICE:
; 545  :                     case IDC_FILTER:
; 546  :                         if(HIWORD(wParam) == CBN_SELCHANGE)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 1
	jne	SHORT $LN5@ProcMessag

; 547  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$33[ebp], 1
$LN5@ProcMessag:

; 548  :                         break;

	jmp	SHORT $LN27@ProcMessag
$LN4@ProcMessag:

; 549  : 
; 550  :                     case IDC_DOWNSCALE:
; 551  :                         if(HIWORD(wParam) == CBN_SELCHANGE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $LN27@ProcMessag

; 552  :                         {
; 553  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$33[ebp], 1

; 554  :                             RefreshFilters(hwnd, false);

	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RefreshFilters@SettingsVideo@@AAEXPAUHWND__@@_N@Z ; SettingsVideo::RefreshFilters
$LN27@ProcMessag:

; 555  :                         }
; 556  :                         break;
; 557  :                 }
; 558  : 
; 559  :                 if(bDataChanged)

	movzx	ecx, BYTE PTR _bDataChanged$33[ebp]
	test	ecx, ecx
	je	SHORT $LN56@ProcMessag

; 560  :                 {
; 561  :                     if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN1@ProcMessag

; 562  :                         ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN1@ProcMessag:

; 563  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN56@ProcMessag:

; 564  :                 }
; 565  :                 break;
; 566  :             }
; 567  :     }
; 568  :     return FALSE;

	xor	eax, eax
$LN58@ProcMessag:

; 569  : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN65@ProcMessag:
	DD	$LN4@ProcMessag
	DD	$LN6@ProcMessag
	DD	$LN26@ProcMessag
	DD	$LN8@ProcMessag
	DD	$LN18@ProcMessag
	DD	$LN22@ProcMessag
	DD	$LN21@ProcMessag
	DD	$LN10@ProcMessag
	DD	$LN27@ProcMessag
$LN64@ProcMessag:
	DB	0
	DB	1
	DB	1
	DB	8
	DB	8
	DB	2
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	3
	DB	8
	DB	4
	DB	4
	DB	8
	DB	5
	DB	6
	DB	7
?ProcMessage@SettingsVideo@@UAEHIIJ@Z ENDP		; SettingsVideo::ProcMessage
_TEXT	ENDS
END

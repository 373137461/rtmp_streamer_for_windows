; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\SettingsHotkeys.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R2SettingsHotkeys@@8				; SettingsHotkeys::`RTTI Base Class Array'
PUBLIC	??_R0?AVSettingsHotkeys@@@8			; SettingsHotkeys `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@SettingsHotkeys@@8		; SettingsHotkeys::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3SettingsHotkeys@@8				; SettingsHotkeys::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4SettingsHotkeys@@6B@			; SettingsHotkeys::`RTTI Complete Object Locator'
PUBLIC	??_7SettingsHotkeys@@6B@			; SettingsHotkeys::`vftable'
;	COMDAT ??_7SettingsHotkeys@@6B@
CONST	SEGMENT
??_7SettingsHotkeys@@6B@ DD FLAT:??_R4SettingsHotkeys@@6B@ ; SettingsHotkeys::`vftable'
	DD	FLAT:??_ESettingsHotkeys@@UAEPAXI@Z
	DD	FLAT:?GetCategory@SettingsHotkeys@@UBEPB_WXZ
	DD	FLAT:?CreatePane@SettingsHotkeys@@UAEPAUHWND__@@PAU2@@Z
	DD	FLAT:?DestroyPane@SettingsHotkeys@@UAEXXZ
	DD	FLAT:?ProcMessage@SettingsHotkeys@@UAEHIIJ@Z
	DD	FLAT:?ApplySettings@SettingsHotkeys@@UAEXXZ
	DD	FLAT:?CancelSettings@SettingsHotkeys@@UAEXXZ
	DD	FLAT:?HasDefaults@SettingsHotkeys@@UBE_NXZ
	DD	FLAT:?SetDefaults@SettingsPane@@UAEXXZ
	DD	FLAT:?OptimizeSettings@SettingsPane@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R4SettingsHotkeys@@6B@
rdata$r	SEGMENT
??_R4SettingsHotkeys@@6B@ DD 00H			; SettingsHotkeys::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSettingsHotkeys@@@8
	DD	FLAT:??_R3SettingsHotkeys@@8
rdata$r	ENDS
;	COMDAT ??_R3SettingsHotkeys@@8
rdata$r	SEGMENT
??_R3SettingsHotkeys@@8 DD 00H				; SettingsHotkeys::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SettingsHotkeys@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SettingsHotkeys@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SettingsHotkeys@@8 DD FLAT:??_R0?AVSettingsHotkeys@@@8 ; SettingsHotkeys::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SettingsHotkeys@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSettingsHotkeys@@@8
data$r	SEGMENT
??_R0?AVSettingsHotkeys@@@8 DD FLAT:??_7type_info@@6B@	; SettingsHotkeys `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSettingsHotkeys@@', 00H
data$r	ENDS
;	COMDAT ??_R2SettingsHotkeys@@8
rdata$r	SEGMENT
??_R2SettingsHotkeys@@8 DD FLAT:??_R1A@?0A@EA@SettingsHotkeys@@8 ; SettingsHotkeys::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SettingsPane@@8
	ORG $+2
$SG4294741844 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741845 DB 'U', 00H, 's', 00H, 'e', 00H, 'P', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 'T', 00H, 'o', 00H, 'T', 00H, 'a', 00H, 'l', 00H, 'k'
	DB	00H, 00H, 00H
$SG4294741846 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'H', 00H, 'o', 00H, 't', 00H, 'k'
	DB	00H, 'e', 00H, 'y', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294741840 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741841 DB 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'T', 00H, 'o', 00H
	DB	'T', 00H, 'a', 00H, 'l', 00H, 'k', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, '2', 00H, 00H, 00H
$SG4294741842 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741843 DB 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'T', 00H, 'o', 00H
	DB	'T', 00H, 'a', 00H, 'l', 00H, 'k', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741836 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741837 DB 'M', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e', 00H
	DB	's', 00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'H', 00H, 'o'
	DB	00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG4294741838 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741839 DB 'M', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'H', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y'
	DB	00H, 00H, 00H
$SG4294741832 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741833 DB 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'H', 00H, 'o'
	DB	00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG4294741834 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741835 DB 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741828 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741829 DB 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'R', 00H
	DB	'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'H', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H
	DB	'y', 00H, 00H, 00H
	ORG $+2
$SG4294741830 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741831 DB 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'H', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	00H, 00H
$SG4294741824 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741825 DB 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'R', 00H
	DB	'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H
	DB	't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG4294741826 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741827 DB 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't', 00H
	DB	'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741820 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741821 DB 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	'F', 00H, 'r', 00H, 'o', 00H, 'm', 00H, 'R', 00H, 'e', 00H, 'p'
	DB	00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't', 00H, 'k'
	DB	00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741822 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741823 DB 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't', 00H
	DB	'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741816 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741817 DB 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'T', 00H, 'o', 00H
	DB	'T', 00H, 'a', 00H, 'l', 00H, 'k', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741818 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741819 DB 'U', 00H, 's', 00H, 'e', 00H, 'P', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 'T', 00H, 'o', 00H, 'T', 00H, 'a', 00H, 'l', 00H, 'k'
	DB	00H, 00H, 00H
$SG4294741812 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741813 DB 'M', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'H', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y'
	DB	00H, 00H, 00H
$SG4294741814 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741815 DB 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'T', 00H, 'o', 00H
	DB	'T', 00H, 'a', 00H, 'l', 00H, 'k', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, '2', 00H, 00H, 00H
$SG4294741808 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741809 DB 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'H', 00H, 'o'
	DB	00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG4294741810 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294741811 DB 'M', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'D', 00H, 'e', 00H
	DB	's', 00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'H', 00H, 'o'
	DB	00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG4294741804 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741805 DB 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'R', 00H
	DB	'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'H', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H
	DB	'y', 00H, 00H, 00H
	ORG $+2
$SG4294741806 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741807 DB 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'H', 00H, 'o', 00H, 't'
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741800 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741801 DB 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'R', 00H
	DB	'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H
	DB	't', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG4294741802 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741803 DB 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'H', 00H, 'o', 00H, 't', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	00H, 00H
$SG4294741796 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741797 DB 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't', 00H
	DB	'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741798 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741799 DB 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't', 00H
	DB	'k', 00H, 'e', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294741794 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294741795 DB 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	'F', 00H, 'r', 00H, 'o', 00H, 'm', 00H, 'R', 00H, 'e', 00H, 'p'
	DB	00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'H', 00H, 'o', 00H, 't', 00H, 'k'
	DB	00H, 'e', 00H, 'y', 00H, 00H, 00H
PUBLIC	?ProcMessage@SettingsHotkeys@@UAEHIIJ@Z		; SettingsHotkeys::ProcMessage
PUBLIC	?HasDefaults@SettingsHotkeys@@UBE_NXZ		; SettingsHotkeys::HasDefaults
PUBLIC	?CancelSettings@SettingsHotkeys@@UAEXXZ		; SettingsHotkeys::CancelSettings
PUBLIC	?ApplySettings@SettingsHotkeys@@UAEXXZ		; SettingsHotkeys::ApplySettings
PUBLIC	?DestroyPane@SettingsHotkeys@@UAEXXZ		; SettingsHotkeys::DestroyPane
PUBLIC	?CreatePane@SettingsHotkeys@@UAEPAUHWND__@@PAU2@@Z ; SettingsHotkeys::CreatePane
PUBLIC	?GetCategory@SettingsHotkeys@@UBEPB_WXZ		; SettingsHotkeys::GetCategory
PUBLIC	??1SettingsHotkeys@@UAE@XZ			; SettingsHotkeys::~SettingsHotkeys
PUBLIC	??_GSettingsHotkeys@@UAEPAXI@Z			; SettingsHotkeys::`scalar deleting destructor'
PUBLIC	??0SettingsHotkeys@@QAE@XZ			; SettingsHotkeys::SettingsHotkeys
EXTRN	??_ESettingsHotkeys@@UAEPAXI@Z:PROC		; SettingsHotkeys::`vector deleting destructor'
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?$S1@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4IA
_BSS	SEGMENT
?$S1@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4IA DD 01H DUP (?) ; S1<`template-parameter-2',SettingsHotkeys::tCategory,unsigned int, ?? &>
_BSS	ENDS
;	COMDAT ?name@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4PB_WB
_BSS	SEGMENT
?name@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4PB_WB DD 01H DUP (?) ; `SettingsHotkeys::GetCategory'::`2'::name
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ??0SettingsHotkeys@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SettingsHotkeys@@QAE@XZ PROC				; SettingsHotkeys::SettingsHotkeys, COMDAT
; _this$ = ecx

; 26   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SettingsPane@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsHotkeys@@6B@

; 27   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SettingsHotkeys@@QAE@XZ ENDP				; SettingsHotkeys::SettingsHotkeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSettingsHotkeys@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSettingsHotkeys@@UAEPAXI@Z PROC			; SettingsHotkeys::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SettingsHotkeys@@UAE@XZ		; SettingsHotkeys::~SettingsHotkeys
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSettingsHotkeys@@UAEPAXI@Z ENDP			; SettingsHotkeys::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ??1SettingsHotkeys@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SettingsHotkeys@@UAE@XZ PROC				; SettingsHotkeys::~SettingsHotkeys, COMDAT
; _this$ = ecx

; 30   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsHotkeys@@6B@

; 31   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SettingsPane@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1SettingsHotkeys@@UAE@XZ ENDP				; SettingsHotkeys::~SettingsHotkeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ?GetCategory@SettingsHotkeys@@UBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCategory@SettingsHotkeys@@UBEPB_WXZ PROC		; SettingsHotkeys::GetCategory, COMDAT
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   :     static CTSTR name = Str("Settings.Hotkeys");

	mov	eax, DWORD PTR ?$S1@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4IA
	and	eax, 1
	jne	SHORT $LN1@GetCategor
	mov	ecx, DWORD PTR ?$S1@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4IA
	or	ecx, 1
	mov	DWORD PTR ?$S1@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4IA, ecx
	push	OFFSET $SG4294741846
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR ?name@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4PB_WB, eax
$LN1@GetCategor:

; 36   :     return name;

	mov	eax, DWORD PTR ?name@?1??GetCategory@SettingsHotkeys@@UBEPB_WXZ@4PB_WB

; 37   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCategory@SettingsHotkeys@@UBEPB_WXZ ENDP		; SettingsHotkeys::GetCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ?CreatePane@SettingsHotkeys@@UAEPAUHWND__@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_parentHwnd$ = 8					; size = 4
?CreatePane@SettingsHotkeys@@UAEPAUHWND__@@PAU2@@Z PROC	; SettingsHotkeys::CreatePane, COMDAT
; _this$ = ecx

; 40   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   :     hwnd = OBSCreateDialog(hinstMain, MAKEINTRESOURCE(IDD_SETTINGS_HOTKEYS), parentHwnd, (DLGPROC)DialogProc, (LPARAM)this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?DialogProc@SettingsPane@@SGHPAUHWND__@@IIJ@Z
	push	ecx
	mov	edx, DWORD PTR _parentHwnd$[ebp]
	push	edx
	push	149					; 00000095H
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSCreateDialog@@YAPAUHWND__@@PAUHINSTANCE__@@PB_WPAU1@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 42   :     return hwnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]

; 43   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CreatePane@SettingsHotkeys@@UAEPAUHWND__@@PAU2@@Z ENDP	; SettingsHotkeys::CreatePane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ?DestroyPane@SettingsHotkeys@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyPane@SettingsHotkeys@@UAEXXZ PROC		; SettingsHotkeys::DestroyPane, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   :     DestroyWindow(hwnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4

; 48   :     hwnd = nullptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 49   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyPane@SettingsHotkeys@@UAEXXZ ENDP		; SettingsHotkeys::DestroyPane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ?ApplySettings@SettingsHotkeys@@UAEXXZ
_TEXT	SEGMENT
tv81 = -12						; size = 4
_this$ = -8						; size = 4
_update_hotkey$ = -4					; size = 4
?ApplySettings@SettingsHotkeys@@UAEXXZ PROC		; SettingsHotkeys::ApplySettings, COMDAT
; _this$ = ecx

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 53   :     auto update_hotkey = [&](decltype(App->pushToTalkHotkeyID) &hotkey, int dlg_id, CTSTR section, CTSTR key, OBSHOTKEYPROC proc, bool enabled)
; 54   :     {
; 55   :         if (hotkey)
; 56   :         {
; 57   :             API->DeleteHotkey(hotkey);
; 58   :             hotkey = 0;
; 59   :         }
; 60   : 
; 61   :         DWORD new_hotkey = (DWORD)SendMessage(GetDlgItem(hwnd, dlg_id), HKM_GETHOTKEY, 0, 0);
; 62   :         if (enabled && new_hotkey)
; 63   :             hotkey = API->CreateHotkey(new_hotkey, proc, NULL);
; 64   : 
; 65   :         AppConfig->SetInt(section, key, new_hotkey);
; 66   :         
; 67   :         return new_hotkey;
; 68   :     };

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??0<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QAE@PAVSettingsHotkeys@@@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>

; 69   : 
; 70   :     //------------------------------------
; 71   : 
; 72   :     App->bUsingPushToTalk = SendMessage(GetDlgItem(hwnd, IDC_PUSHTOTALK), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1041					; 00000411H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN3@ApplySetti
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN4@ApplySetti
$LN3@ApplySetti:
	mov	DWORD PTR tv81[ebp], 0
$LN4@ApplySetti:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	cl, BYTE PTR tv81[ebp]
	mov	BYTE PTR [eax+1244], cl

; 73   :     AppConfig->SetInt(L"Audio", L"UsePushToTalk", App->bUsingPushToTalk);

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+1244]
	push	eax
	push	OFFSET $SG4294741845
	push	OFFSET $SG4294741844
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 74   : 
; 75   :     //------------------------------------
; 76   : 
; 77   :     update_hotkey(App->pushToTalkHotkeyID, IDC_PUSHTOTALKHOTKEY, L"Audio", L"PushToTalkHotkey", OBS::PushToTalkHotkey, App->bUsingPushToTalk);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+1244]
	push	edx
	push	OFFSET ?PushToTalkHotkey@OBS@@CGXKK_N@Z	; OBS::PushToTalkHotkey
	push	OFFSET $SG4294741843
	push	OFFSET $SG4294741842
	push	1073					; 00000431H
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 1264				; 000004f0H
	push	eax
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 78   :     update_hotkey(App->pushToTalkHotkey2ID, IDC_PUSHTOTALKHOTKEY2, L"Audio", L"PushToTalkHotkey2", OBS::PushToTalkHotkey, App->bUsingPushToTalk);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+1244]
	push	edx
	push	OFFSET ?PushToTalkHotkey@OBS@@CGXKK_N@Z	; OBS::PushToTalkHotkey
	push	OFFSET $SG4294741841
	push	OFFSET $SG4294741840
	push	1156					; 00000484H
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 1268				; 000004f4H
	push	eax
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 79   : 
; 80   :     //------------------------------------
; 81   : 
; 82   :     update_hotkey(App->muteMicHotkeyID, IDC_MUTEMICHOTKEY, L"Audio", L"MuteMicHotkey", OBS::MuteMicHotkey, true);

	push	1
	push	OFFSET ?MuteMicHotkey@OBS@@CGXKK_N@Z	; OBS::MuteMicHotkey
	push	OFFSET $SG4294741839
	push	OFFSET $SG4294741838
	push	1074					; 00000432H
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1272				; 000004f8H
	push	ecx
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 83   : 
; 84   :     //------------------------------------
; 85   : 
; 86   :     update_hotkey(App->muteDesktopHotkeyID, IDC_MUTEDESKTOPHOTKEY, L"Audio", L"MuteDesktopHotkey", OBS::MuteDesktopHotkey, true);

	push	1
	push	OFFSET ?MuteDesktopHotkey@OBS@@CGXKK_N@Z ; OBS::MuteDesktopHotkey
	push	OFFSET $SG4294741837
	push	OFFSET $SG4294741836
	push	1075					; 00000433H
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	edx, 1276				; 000004fcH
	push	edx
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 87   : 
; 88   :     //------------------------------------------
; 89   : 
; 90   :     update_hotkey(App->stopStreamHotkeyID, IDC_STOPSTREAMHOTKEY, L"Publish", L"StopStreamHotkey", OBS::StopStreamHotkey, true);

	push	1
	push	OFFSET ?StopStreamHotkey@OBS@@CGXKK_N@Z	; OBS::StopStreamHotkey
	push	OFFSET $SG4294741835
	push	OFFSET $SG4294741834
	push	1093					; 00000445H
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 1284				; 00000504H
	push	eax
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 91   : 
; 92   :     //------------------------------------------
; 93   : 
; 94   :     update_hotkey(App->startStreamHotkeyID, IDC_STARTSTREAMHOTKEY, L"Publish", L"StartStreamHotkey", OBS::StartStreamHotkey, true);

	push	1
	push	OFFSET ?StartStreamHotkey@OBS@@CGXKK_N@Z ; OBS::StartStreamHotkey
	push	OFFSET $SG4294741833
	push	OFFSET $SG4294741832
	push	1097					; 00000449H
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1280				; 00000500H
	push	ecx
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 95   : 
; 96   :     //------------------------------------------
; 97   : 
; 98   :     update_hotkey(App->stopRecordingHotkeyID, IDC_STOPRECORDINGHOTKEY, L"Publish", L"StopRecordingHotkey", OBS::StopRecordingHotkey, true);

	push	1
	push	OFFSET ?StopRecordingHotkey@OBS@@CGXKK_N@Z ; OBS::StopRecordingHotkey
	push	OFFSET $SG4294741831
	push	OFFSET $SG4294741830
	push	1173					; 00000495H
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	edx, 1292				; 0000050cH
	push	edx
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 99   : 
; 100  :     //------------------------------------------
; 101  : 
; 102  :     update_hotkey(App->startRecordingHotkeyID, IDC_STARTRECORDINGHOTKEY, L"Publish", L"StartRecordingHotkey", OBS::StartRecordingHotkey, true);

	push	1
	push	OFFSET ?StartRecordingHotkey@OBS@@CGXKK_N@Z ; OBS::StartRecordingHotkey
	push	OFFSET $SG4294741829
	push	OFFSET $SG4294741828
	push	1172					; 00000494H
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 1288				; 00000508H
	push	eax
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 103  : 
; 104  :     //------------------------------------------
; 105  : 
; 106  :     update_hotkey(App->stopReplayBufferHotkeyID, IDC_STOPREPLAYBUFFERHOTKEY, L"Publish", L"StopReplayBufferHotkey", OBS::StopReplayBufferHotkey, true);

	push	1
	push	OFFSET ?StopReplayBufferHotkey@OBS@@CGXKK_N@Z ; OBS::StopReplayBufferHotkey
	push	OFFSET $SG4294741827
	push	OFFSET $SG4294741826
	push	1183					; 0000049fH
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1300				; 00000514H
	push	ecx
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 107  : 
; 108  :     //------------------------------------------
; 109  : 
; 110  :     update_hotkey(App->startReplayBufferHotkeyID, IDC_STARTREPLAYBUFFERHOTKEY, L"Publish", L"StartReplayBufferHotkey", OBS::StartReplayBufferHotkey, true);

	push	1
	push	OFFSET ?StartReplayBufferHotkey@OBS@@CGXKK_N@Z ; OBS::StartReplayBufferHotkey
	push	OFFSET $SG4294741825
	push	OFFSET $SG4294741824
	push	1180					; 0000049cH
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	edx, 1296				; 00000510H
	push	edx
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 111  : 
; 112  :     //------------------------------------------
; 113  : 
; 114  :     update_hotkey(App->saveReplayBufferHotkeyID, IDC_SAVEREPLAYBUFFERHOTKEY, L"Publish", L"SaveReplayBufferHotkey", OBS::SaveReplayBufferHotkey, true);

	push	1
	push	OFFSET ?SaveReplayBufferHotkey@OBS@@CGXKK_N@Z ; OBS::SaveReplayBufferHotkey
	push	OFFSET $SG4294741823
	push	OFFSET $SG4294741822
	push	1177					; 00000499H
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 1304				; 00000518H
	push	eax
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 115  : 
; 116  :     //------------------------------------------
; 117  : 
; 118  :     update_hotkey(App->recordFromReplayBufferHotkeyID, IDC_RECORDFROMREPLAYBUFFERHOTKEY, L"Publish", L"RecordFromReplayBufferHotkey", OBS::RecordFromReplayBufferHotkey, true);

	push	1
	push	OFFSET ?RecordFromReplayBufferHotkey@OBS@@CGXKK_N@Z ; OBS::RecordFromReplayBufferHotkey
	push	OFFSET $SG4294741821
	push	OFFSET $SG4294741820
	push	1186					; 000004a2H
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1308				; 0000051cH
	push	ecx
	lea	ecx, DWORD PTR _update_hotkey$[ebp]
	call	??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()

; 119  : 
; 120  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ApplySettings@SettingsHotkeys@@UAEXXZ ENDP		; SettingsHotkeys::ApplySettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ??0<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QAE@PAVSettingsHotkeys@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QAE@PAVSettingsHotkeys@@@Z PROC ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>, COMDAT
; _this$ = ecx

; 68   :     };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QAE@PAVSettingsHotkeys@@@Z ENDP ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_new_hotkey$ = -4					; size = 4
_hotkey$ = 8						; size = 4
_dlg_id$ = 12						; size = 4
_section$ = 16						; size = 4
_key$ = 20						; size = 4
_proc$ = 24						; size = 4
_enabled$ = 28						; size = 1
??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z PROC ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator(), COMDAT
; _this$ = ecx

; 54   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 55   :         if (hotkey)

	mov	eax, DWORD PTR _hotkey$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator

; 56   :         {
; 57   :             API->DeleteHotkey(hotkey);

	mov	ecx, DWORD PTR _hotkey$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 58   :             hotkey = 0;

	mov	eax, DWORD PTR _hotkey$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@operator:

; 59   :         }
; 60   : 
; 61   :         DWORD new_hotkey = (DWORD)SendMessage(GetDlgItem(hwnd, dlg_id), HKM_GETHOTKEY, 0, 0);

	push	0
	push	0
	push	1026					; 00000402H
	mov	ecx, DWORD PTR _dlg_id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _new_hotkey$[ebp], eax

; 62   :         if (enabled && new_hotkey)

	movzx	edx, BYTE PTR _enabled$[ebp]
	test	edx, edx
	je	SHORT $LN1@operator
	cmp	DWORD PTR _new_hotkey$[ebp], 0
	je	SHORT $LN1@operator

; 63   :             hotkey = API->CreateHotkey(new_hotkey, proc, NULL);

	push	0
	mov	eax, DWORD PTR _proc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_hotkey$[ebp]
	push	ecx
	mov	edx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	mov	ecx, DWORD PTR _hotkey$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@operator:

; 64   : 
; 65   :         AppConfig->SetInt(section, key, new_hotkey);

	mov	edx, DWORD PTR _new_hotkey$[ebp]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _section$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 66   :         
; 67   :         return new_hotkey;

	mov	eax, DWORD PTR _new_hotkey$[ebp]

; 68   :     };

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??R<lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>@@QBEKAAIHPB_W1P6GXKK_N@Z2@Z ENDP ; <lambda_ab7373ad2b8ee1697b7f09c0db4c4c63>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ?CancelSettings@SettingsHotkeys@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelSettings@SettingsHotkeys@@UAEXXZ PROC		; SettingsHotkeys::CancelSettings, COMDAT
; _this$ = ecx

; 123  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelSettings@SettingsHotkeys@@UAEXXZ ENDP		; SettingsHotkeys::CancelSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ?HasDefaults@SettingsHotkeys@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasDefaults@SettingsHotkeys@@UBE_NXZ PROC		; SettingsHotkeys::HasDefaults, COMDAT
; _this$ = ecx

; 127  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 128  :     return false;

	xor	al, al

; 129  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasDefaults@SettingsHotkeys@@UBE_NXZ ENDP		; SettingsHotkeys::HasDefaults
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingshotkeys.cpp
;	COMDAT ?ProcMessage@SettingsHotkeys@@UAEHIIJ@Z
_TEXT	SEGMENT
_recordFromReplayBufferHotkey$1 = -48			; size = 4
_saveReplayBufferHotkey$2 = -44				; size = 4
_hotkey2$3 = -40					; size = 4
tv84 = -36						; size = 4
tv78 = -32						; size = 4
tv64 = -28						; size = 4
tv338 = -24						; size = 4
_stopHotkey$4 = -20					; size = 4
_startHotkey$5 = -16					; size = 4
_hotkey$6 = -12						; size = 4
_this$ = -8						; size = 4
_pushToTalk$7 = -1					; size = 1
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?ProcMessage@SettingsHotkeys@@UAEHIIJ@Z PROC		; SettingsHotkeys::ProcMessage, COMDAT
; _this$ = ecx

; 132  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 133  :     switch (message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN40@ProcMessag
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN39@ProcMessag
	jmp	$LN41@ProcMessag
$LN40@ProcMessag:

; 134  :     {
; 135  :     case WM_INITDIALOG:
; 136  :     {
; 137  :         LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 138  : 
; 139  :         //--------------------------------------------
; 140  :         
; 141  :         bool pushToTalk = !!AppConfig->GetInt(L"Audio", L"UsePushToTalk");

	push	0
	push	OFFSET $SG4294741819
	push	OFFSET $SG4294741818
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN45@ProcMessag
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN46@ProcMessag
$LN45@ProcMessag:
	mov	DWORD PTR tv78[ebp], 0
$LN46@ProcMessag:
	mov	al, BYTE PTR tv78[ebp]
	mov	BYTE PTR _pushToTalk$7[ebp], al

; 142  :         SendMessage(GetDlgItem(hwnd, IDC_PUSHTOTALK), BM_SETCHECK, pushToTalk ? BST_CHECKED : BST_UNCHECKED, 0);

	movzx	ecx, BYTE PTR _pushToTalk$7[ebp]
	test	ecx, ecx
	je	SHORT $LN47@ProcMessag
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN48@ProcMessag
$LN47@ProcMessag:
	mov	DWORD PTR tv84[ebp], 0
$LN48@ProcMessag:
	push	0
	mov	edx, DWORD PTR tv84[ebp]
	push	edx
	push	241					; 000000f1H
	push	1041					; 00000411H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 143  : 
; 144  :         //--------------------------------------------
; 145  : 
; 146  :         DWORD hotkey = AppConfig->GetInt(TEXT("Audio"), TEXT("PushToTalkHotkey"));

	push	0
	push	OFFSET $SG4294741817
	push	OFFSET $SG4294741816
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _hotkey$6[ebp], eax

; 147  :         SendMessage(GetDlgItem(hwnd, IDC_PUSHTOTALKHOTKEY), HKM_SETHOTKEY, hotkey, 0);

	push	0
	mov	edx, DWORD PTR _hotkey$6[ebp]
	push	edx
	push	1025					; 00000401H
	push	1073					; 00000431H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 148  :         DWORD hotkey2 = AppConfig->GetInt(TEXT("Audio"), TEXT("PushToTalkHotkey2"));

	push	0
	push	OFFSET $SG4294741815
	push	OFFSET $SG4294741814
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _hotkey2$3[ebp], eax

; 149  :         SendMessage(GetDlgItem(hwnd, IDC_PUSHTOTALKHOTKEY2), HKM_SETHOTKEY, hotkey2, 0);

	push	0
	mov	edx, DWORD PTR _hotkey2$3[ebp]
	push	edx
	push	1025					; 00000401H
	push	1156					; 00000484H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 150  : 
; 151  :         //--------------------------------------------
; 152  : 
; 153  :         hotkey = AppConfig->GetInt(TEXT("Audio"), TEXT("MuteMicHotkey"));

	push	0
	push	OFFSET $SG4294741813
	push	OFFSET $SG4294741812
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _hotkey$6[ebp], eax

; 154  :         SendMessage(GetDlgItem(hwnd, IDC_MUTEMICHOTKEY), HKM_SETHOTKEY, hotkey, 0);

	push	0
	mov	edx, DWORD PTR _hotkey$6[ebp]
	push	edx
	push	1025					; 00000401H
	push	1074					; 00000432H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 155  : 
; 156  :         //--------------------------------------------
; 157  : 
; 158  :         hotkey = AppConfig->GetInt(TEXT("Audio"), TEXT("MuteDesktopHotkey"));

	push	0
	push	OFFSET $SG4294741811
	push	OFFSET $SG4294741810
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _hotkey$6[ebp], eax

; 159  :         SendMessage(GetDlgItem(hwnd, IDC_MUTEDESKTOPHOTKEY), HKM_SETHOTKEY, hotkey, 0);

	push	0
	mov	edx, DWORD PTR _hotkey$6[ebp]
	push	edx
	push	1025					; 00000401H
	push	1075					; 00000433H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 160  : 
; 161  :         //--------------------------------------------
; 162  : 
; 163  :         DWORD startHotkey = AppConfig->GetInt(TEXT("Publish"), TEXT("StartStreamHotkey"));

	push	0
	push	OFFSET $SG4294741809
	push	OFFSET $SG4294741808
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _startHotkey$5[ebp], eax

; 164  :         SendMessage(GetDlgItem(hwnd, IDC_STARTSTREAMHOTKEY), HKM_SETHOTKEY, startHotkey, 0);

	push	0
	mov	edx, DWORD PTR _startHotkey$5[ebp]
	push	edx
	push	1025					; 00000401H
	push	1097					; 00000449H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 165  : 
; 166  :         //--------------------------------------------
; 167  : 
; 168  :         DWORD stopHotkey = AppConfig->GetInt(TEXT("Publish"), TEXT("StopStreamHotkey"));

	push	0
	push	OFFSET $SG4294741807
	push	OFFSET $SG4294741806
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _stopHotkey$4[ebp], eax

; 169  :         SendMessage(GetDlgItem(hwnd, IDC_STOPSTREAMHOTKEY), HKM_SETHOTKEY, stopHotkey, 0);

	push	0
	mov	edx, DWORD PTR _stopHotkey$4[ebp]
	push	edx
	push	1025					; 00000401H
	push	1093					; 00000445H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 170  : 
; 171  :         //--------------------------------------------
; 172  : 
; 173  :         startHotkey = AppConfig->GetInt(TEXT("Publish"), TEXT("StartRecordingHotkey"));

	push	0
	push	OFFSET $SG4294741805
	push	OFFSET $SG4294741804
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _startHotkey$5[ebp], eax

; 174  :         SendMessage(GetDlgItem(hwnd, IDC_STARTRECORDINGHOTKEY), HKM_SETHOTKEY, startHotkey, 0);

	push	0
	mov	edx, DWORD PTR _startHotkey$5[ebp]
	push	edx
	push	1025					; 00000401H
	push	1172					; 00000494H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 175  : 
; 176  :         //--------------------------------------------
; 177  : 
; 178  :         stopHotkey = AppConfig->GetInt(TEXT("Publish"), TEXT("StopRecordingHotkey"));

	push	0
	push	OFFSET $SG4294741803
	push	OFFSET $SG4294741802
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _stopHotkey$4[ebp], eax

; 179  :         SendMessage(GetDlgItem(hwnd, IDC_STOPRECORDINGHOTKEY), HKM_SETHOTKEY, stopHotkey, 0);

	push	0
	mov	edx, DWORD PTR _stopHotkey$4[ebp]
	push	edx
	push	1025					; 00000401H
	push	1173					; 00000495H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 180  : 
; 181  :         //--------------------------------------------
; 182  : 
; 183  :         startHotkey = AppConfig->GetInt(L"Publish", L"StartReplayBufferHotkey");

	push	0
	push	OFFSET $SG4294741801
	push	OFFSET $SG4294741800
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _startHotkey$5[ebp], eax

; 184  :         SendMessage(GetDlgItem(hwnd, IDC_STARTREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, startHotkey, 0);

	push	0
	mov	edx, DWORD PTR _startHotkey$5[ebp]
	push	edx
	push	1025					; 00000401H
	push	1180					; 0000049cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 185  : 
; 186  :         //--------------------------------------------
; 187  : 
; 188  :         stopHotkey = AppConfig->GetInt(L"Publish", L"StopReplayBufferHotkey");

	push	0
	push	OFFSET $SG4294741799
	push	OFFSET $SG4294741798
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _stopHotkey$4[ebp], eax

; 189  :         SendMessage(GetDlgItem(hwnd, IDC_STOPREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, stopHotkey, 0);

	push	0
	mov	edx, DWORD PTR _stopHotkey$4[ebp]
	push	edx
	push	1025					; 00000401H
	push	1183					; 0000049fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 190  : 
; 191  :         //--------------------------------------------
; 192  : 
; 193  :         DWORD saveReplayBufferHotkey = AppConfig->GetInt(L"Publish", L"SaveReplayBufferHotkey");

	push	0
	push	OFFSET $SG4294741797
	push	OFFSET $SG4294741796
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _saveReplayBufferHotkey$2[ebp], eax

; 194  :         SendMessage(GetDlgItem(hwnd, IDC_SAVEREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, saveReplayBufferHotkey, 0);

	push	0
	mov	edx, DWORD PTR _saveReplayBufferHotkey$2[ebp]
	push	edx
	push	1025					; 00000401H
	push	1177					; 00000499H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 195  : 
; 196  :         //--------------------------------------------
; 197  : 
; 198  :         DWORD recordFromReplayBufferHotkey = AppConfig->GetInt(L"Publish", L"RecordFromReplayBufferHotkey");

	push	0
	push	OFFSET $SG4294741795
	push	OFFSET $SG4294741794
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _recordFromReplayBufferHotkey$1[ebp], eax

; 199  :         SendMessage(GetDlgItem(hwnd, IDC_RECORDFROMREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, recordFromReplayBufferHotkey, 0);

	push	0
	mov	edx, DWORD PTR _recordFromReplayBufferHotkey$1[ebp]
	push	edx
	push	1025					; 00000401H
	push	1186					; 000004a2H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 200  : 
; 201  :         //--------------------------------------------
; 202  : 
; 203  :         //need this as some of the dialog item sets above trigger the notifications
; 204  :         SetChangedSettings(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 205  :         return TRUE;

	mov	eax, 1
	jmp	$LN43@ProcMessag
$LN39@ProcMessag:

; 206  :     }
; 207  : 
; 208  :     case WM_COMMAND:
; 209  :         switch (LOWORD(wParam))

	movzx	edx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv338[ebp], edx
	mov	eax, DWORD PTR tv338[ebp]
	sub	eax, 1041				; 00000411H
	mov	DWORD PTR tv338[ebp], eax
	cmp	DWORD PTR tv338[ebp], 146		; 00000092H
	ja	$LN41@ProcMessag
	mov	ecx, DWORD PTR tv338[ebp]
	movzx	edx, BYTE PTR $LN49@ProcMessag[ecx]
	jmp	DWORD PTR $LN50@ProcMessag[edx*4]
$LN36@ProcMessag:

; 210  :         {
; 211  :         case IDC_PUSHTOTALK:
; 212  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN35@ProcMessag

; 213  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN35@ProcMessag:

; 214  :             break;

	jmp	$LN41@ProcMessag
$LN34@ProcMessag:

; 215  : 
; 216  :         case IDC_PUSHTOTALKHOTKEY:
; 217  :         case IDC_PUSHTOTALKHOTKEY2:
; 218  :         case IDC_MUTEMICHOTKEY:
; 219  :         case IDC_MUTEDESKTOPHOTKEY:
; 220  :         case IDC_STARTSTREAMHOTKEY:
; 221  :         case IDC_STOPSTREAMHOTKEY:
; 222  :         case IDC_STARTRECORDINGHOTKEY:
; 223  :         case IDC_STOPRECORDINGHOTKEY:
; 224  :         case IDC_STARTREPLAYBUFFERHOTKEY:
; 225  :         case IDC_STOPREPLAYBUFFERHOTKEY:
; 226  :         case IDC_SAVEREPLAYBUFFERHOTKEY:
; 227  :         case IDC_RECORDFROMREPLAYBUFFERHOTKEY:
; 228  :             if (HIWORD(wParam) == EN_CHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 768				; 00000300H
	jne	SHORT $LN33@ProcMessag

; 229  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN33@ProcMessag:

; 230  :             break;

	jmp	$LN41@ProcMessag
$LN32@ProcMessag:

; 231  : 
; 232  :         case IDC_CLEARPUSHTOTALK:
; 233  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	test	edx, edx
	jne	SHORT $LN31@ProcMessag

; 234  :             {
; 235  :                 SendMessage(GetDlgItem(hwnd, IDC_PUSHTOTALKHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1073					; 00000431H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 236  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN31@ProcMessag:

; 237  :             }
; 238  :             break;

	jmp	$LN41@ProcMessag
$LN30@ProcMessag:

; 239  : 
; 240  :         case IDC_CLEARPUSHTOTALK2:
; 241  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN29@ProcMessag

; 242  :             {
; 243  :                 SendMessage(GetDlgItem(hwnd, IDC_PUSHTOTALKHOTKEY2), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1156					; 00000484H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 244  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN29@ProcMessag:

; 245  :             }
; 246  :             break;

	jmp	$LN41@ProcMessag
$LN28@ProcMessag:

; 247  : 
; 248  :         case IDC_CLEARMUTEMIC:
; 249  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN27@ProcMessag

; 250  :             {
; 251  :                 SendMessage(GetDlgItem(hwnd, IDC_MUTEMICHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1074					; 00000432H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 252  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN27@ProcMessag:

; 253  :             }
; 254  :             break;

	jmp	$LN41@ProcMessag
$LN26@ProcMessag:

; 255  : 
; 256  :         case IDC_CLEARMUTEDESKTOP:
; 257  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	test	edx, edx
	jne	SHORT $LN25@ProcMessag

; 258  :             {
; 259  :                 SendMessage(GetDlgItem(hwnd, IDC_MUTEDESKTOPHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1075					; 00000433H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 260  :                 SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN25@ProcMessag:

; 261  :             }
; 262  :             break;

	jmp	$LN41@ProcMessag
$LN24@ProcMessag:

; 263  : 
; 264  :         case IDC_CLEARHOTKEY_STARTSTREAM:
; 265  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN23@ProcMessag

; 266  :             {
; 267  :                 if (SendMessage(GetDlgItem(hwnd, IDC_STARTSTREAMHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1097					; 00000449H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN23@ProcMessag

; 268  :                 {
; 269  :                     SendMessage(GetDlgItem(hwnd, IDC_STARTSTREAMHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1097					; 00000449H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 270  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN23@ProcMessag:

; 271  :                 }
; 272  :             }
; 273  :             break;

	jmp	$LN41@ProcMessag
$LN21@ProcMessag:

; 274  : 
; 275  :         case IDC_CLEARHOTKEY:
; 276  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN20@ProcMessag

; 277  :             {
; 278  :                 if (SendMessage(GetDlgItem(hwnd, IDC_STOPSTREAMHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1093					; 00000445H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN20@ProcMessag

; 279  :                 {
; 280  :                     SendMessage(GetDlgItem(hwnd, IDC_STOPSTREAMHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1093					; 00000445H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 281  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN20@ProcMessag:

; 282  :                 }
; 283  :             }
; 284  :             break;

	jmp	$LN41@ProcMessag
$LN18@ProcMessag:

; 285  : 
; 286  :         case IDC_CLEARHOTKEY_STARTRECORDING:
; 287  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN17@ProcMessag

; 288  :             {
; 289  :                 if (SendMessage(GetDlgItem(hwnd, IDC_STARTRECORDINGHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1172					; 00000494H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN17@ProcMessag

; 290  :                 {
; 291  :                     SendMessage(GetDlgItem(hwnd, IDC_STARTRECORDINGHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1172					; 00000494H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 292  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN17@ProcMessag:

; 293  :                 }
; 294  :             }
; 295  :             break;

	jmp	$LN41@ProcMessag
$LN15@ProcMessag:

; 296  : 
; 297  :         case IDC_CLEARHOTKEY_STOPRECORDING:
; 298  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN14@ProcMessag

; 299  :             {
; 300  :                 if (SendMessage(GetDlgItem(hwnd, IDC_STOPRECORDINGHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1173					; 00000495H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN14@ProcMessag

; 301  :                 {
; 302  :                     SendMessage(GetDlgItem(hwnd, IDC_STOPRECORDINGHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1173					; 00000495H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 303  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN14@ProcMessag:

; 304  :                 }
; 305  :             }
; 306  :             break;

	jmp	$LN41@ProcMessag
$LN12@ProcMessag:

; 307  : 
; 308  :         case IDC_CLEARHOTKEY_STARTREPLAYBUFFER:
; 309  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN11@ProcMessag

; 310  :             {
; 311  :                 if (SendMessage(GetDlgItem(hwnd, IDC_STARTREPLAYBUFFERHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1180					; 0000049cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN11@ProcMessag

; 312  :                 {
; 313  :                     SendMessage(GetDlgItem(hwnd, IDC_STARTREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1180					; 0000049cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 314  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN11@ProcMessag:

; 315  :                 }
; 316  :             }
; 317  :             break;

	jmp	$LN41@ProcMessag
$LN9@ProcMessag:

; 318  : 
; 319  :         case IDC_CLEARHOTKEY_STOPREPLAYBUFFER:
; 320  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN8@ProcMessag

; 321  :             {
; 322  :                 if (SendMessage(GetDlgItem(hwnd, IDC_STOPREPLAYBUFFERHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1183					; 0000049fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN8@ProcMessag

; 323  :                 {
; 324  :                     SendMessage(GetDlgItem(hwnd, IDC_STOPREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1183					; 0000049fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 325  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN8@ProcMessag:

; 326  :                 }
; 327  :             }
; 328  :             break;

	jmp	$LN41@ProcMessag
$LN6@ProcMessag:

; 329  : 
; 330  :         case IDC_CLEARHOTKEY_SAVEREPLAYBUFFER:
; 331  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN5@ProcMessag

; 332  :             {
; 333  :                 if (SendMessage(GetDlgItem(hwnd, IDC_SAVEREPLAYBUFFERHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1177					; 00000499H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN5@ProcMessag

; 334  :                 {
; 335  :                     SendMessage(GetDlgItem(hwnd, IDC_SAVEREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1177					; 00000499H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 336  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN5@ProcMessag:

; 337  :                 }
; 338  :             }
; 339  :             break;

	jmp	SHORT $LN41@ProcMessag
$LN3@ProcMessag:

; 340  : 
; 341  :         case IDC_CLEARHOTKEY_RECORDFROMREPLAYBUFFER:
; 342  :             if (HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN41@ProcMessag

; 343  :             {
; 344  :                 if (SendMessage(GetDlgItem(hwnd, IDC_RECORDFROMREPLAYBUFFERHOTKEY), HKM_GETHOTKEY, 0, 0))

	push	0
	push	0
	push	1026					; 00000402H
	push	1186					; 000004a2H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN41@ProcMessag

; 345  :                 {
; 346  :                     SendMessage(GetDlgItem(hwnd, IDC_RECORDFROMREPLAYBUFFERHOTKEY), HKM_SETHOTKEY, 0, 0);

	push	0
	push	0
	push	1025					; 00000401H
	push	1186					; 000004a2H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 347  :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN41@ProcMessag:

; 348  :                 }
; 349  :             }
; 350  :             break;
; 351  :         }
; 352  : 
; 353  :     }
; 354  :     return FALSE;

	xor	eax, eax
$LN43@ProcMessag:

; 355  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN50@ProcMessag:
	DD	$LN36@ProcMessag
	DD	$LN34@ProcMessag
	DD	$LN32@ProcMessag
	DD	$LN28@ProcMessag
	DD	$LN26@ProcMessag
	DD	$LN30@ProcMessag
	DD	$LN21@ProcMessag
	DD	$LN24@ProcMessag
	DD	$LN18@ProcMessag
	DD	$LN15@ProcMessag
	DD	$LN6@ProcMessag
	DD	$LN12@ProcMessag
	DD	$LN9@ProcMessag
	DD	$LN3@ProcMessag
	DD	$LN41@ProcMessag
$LN49@ProcMessag:
	DB	0
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	1
	DB	1
	DB	1
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	2
	DB	3
	DB	4
	DB	5
	DB	14					; 0000000eH
	DB	1
	DB	6
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	1
	DB	7
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	1
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	1
	DB	1
	DB	8
	DB	9
	DB	14					; 0000000eH
	DB	1
	DB	10					; 0000000aH
	DB	14					; 0000000eH
	DB	1
	DB	11					; 0000000bH
	DB	14					; 0000000eH
	DB	1
	DB	12					; 0000000cH
	DB	14					; 0000000eH
	DB	1
	DB	13					; 0000000dH
?ProcMessage@SettingsHotkeys@@UAEHIIJ@Z ENDP		; SettingsHotkeys::ProcMessage
_TEXT	ENDS
END

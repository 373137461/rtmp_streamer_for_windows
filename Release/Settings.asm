; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\Settings.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp__GetTextMetricsW@8:PROC
EXTRN	__imp__SetDCPenColor@8:PROC
EXTRN	__imp__MapWindowPoints@16:PROC
$SG4294763576 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'S', 00H, 'a', 00H, 'v', 00H, 'e'
	DB	00H, 'C', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	's', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H
$SG4294763575 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'S', 00H, 'a', 00H, 'v', 00H, 'e'
	DB	00H, 'C', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	's', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 't'
	DB	00H, 00H, 00H
PUBLIC	??$_Distance2@PAPAVSettingsPane@@H@std@@YAXPAPAVSettingsPane@@0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<SettingsPane * *,int>
PUBLIC	??$_Iter_cat@PAPAVSettingsPane@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVSettingsPane@@@Z ; std::_Iter_cat<SettingsPane * *>
PUBLIC	??$end@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z ; std::end<SettingsPane *,1>
PUBLIC	??$begin@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z ; std::begin<SettingsPane *,1>
PUBLIC	??$distance@PAPAVSettingsPane@@@std@@YAHPAPAVSettingsPane@@0@Z ; std::distance<SettingsPane * *>
PUBLIC	??$end@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z ; std::end<SettingsPane *,7>
PUBLIC	??$begin@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z ; std::begin<SettingsPane *,7>
PUBLIC	?Remove@?$List@PAVSettingsPane@@@@QAEXI@Z	; List<SettingsPane *>::Remove
PUBLIC	?RemoveItem@?$List@PAVSettingsPane@@@@QAEXABQAVSettingsPane@@@Z ; List<SettingsPane *>::RemoveItem
PUBLIC	?Add@?$List@PAVSettingsPane@@@@QAEIABQAVSettingsPane@@@Z ; List<SettingsPane *>::Add
PUBLIC	?SettingsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z	; OBS::SettingsDialogProc
PUBLIC	?OptimizeSettings@OBS@@AAEXXZ			; OBS::OptimizeSettings
PUBLIC	?ApplySettings@OBS@@AAEXXZ			; OBS::ApplySettings
PUBLIC	?CancelSettings@OBS@@AAEXXZ			; OBS::CancelSettings
PUBLIC	?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingComboString
PUBLIC	?LoadSettingComboInt@@YAHPAUHWND__@@PB_W1HH@Z	; LoadSettingComboInt
PUBLIC	?LoadSettingEditString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingEditString
PUBLIC	?LoadSettingEditInt@@YAHPAUHWND__@@PB_W1H@Z	; LoadSettingEditInt
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	?min@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::min
PUBLIC	?AddEncoderSettingsPanes@OBS@@AAEXXZ		; OBS::AddEncoderSettingsPanes
PUBLIC	?AddBuiltInSettingsPanes@OBS@@AAEXXZ		; OBS::AddBuiltInSettingsPanes
PUBLIC	?RemoveSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z ; OBS::RemoveSettingsPane
PUBLIC	?AddSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z	; OBS::AddSettingsPane
PUBLIC	?SetCanOptimizeSettings@OBS@@AAEX_N@Z		; OBS::SetCanOptimizeSettings
PUBLIC	?SetAbortApplySettings@OBS@@AAEX_N@Z		; OBS::SetAbortApplySettings
PUBLIC	?SetChangedSettings@OBS@@AAEX_N@Z		; OBS::SetChangedSettings
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?SetChangedSettings@OBS@@AAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bChanged$ = 8						; size = 1
?SetChangedSettings@OBS@@AAEX_N@Z PROC			; OBS::SetChangedSettings, COMDAT
; _this$ = ecx

; 168  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 169  :     if(hwndSettings == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+220], 0
	jne	SHORT $LN1@SetChanged

; 170  :         return;

	jmp	SHORT $LN2@SetChanged
$LN1@SetChanged:

; 171  :     EnableWindow(GetDlgItem(hwndSettings, IDC_APPLY), (bSettingsChanged = bChanged));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _bChanged$[ebp]
	mov	BYTE PTR [ecx+228], dl
	movzx	eax, BYTE PTR _bChanged$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
$LN2@SetChanged:

; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetChangedSettings@OBS@@AAEX_N@Z ENDP			; OBS::SetChangedSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?SetAbortApplySettings@OBS@@AAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_abort$ = 8						; size = 1
?SetAbortApplySettings@OBS@@AAEX_N@Z PROC		; OBS::SetAbortApplySettings, COMDAT
; _this$ = ecx

; 175  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  :     bApplySettingsAborted = abort;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _abort$[ebp]
	mov	BYTE PTR [eax+229], cl

; 177  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAbortApplySettings@OBS@@AAEX_N@Z ENDP		; OBS::SetAbortApplySettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?SetCanOptimizeSettings@OBS@@AAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_canOptimize$ = 8					; size = 1
?SetCanOptimizeSettings@OBS@@AAEX_N@Z PROC		; OBS::SetCanOptimizeSettings, COMDAT
; _this$ = ecx

; 198  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 199  :     if (hwndSettings == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+220], 0
	jne	SHORT $LN1@SetCanOpti

; 200  :         return;

	jmp	SHORT $LN2@SetCanOpti
$LN1@SetCanOpti:

; 201  :     ShowWindow(GetDlgItem(hwndSettings, IDC_OPTIMIZE), canOptimize);

	movzx	ecx, BYTE PTR _canOptimize$[ebp]
	push	ecx
	push	5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN2@SetCanOpti:

; 202  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetCanOptimizeSettings@OBS@@AAEX_N@Z ENDP		; OBS::SetCanOptimizeSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?AddSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pane$ = 8						; size = 4
?AddSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z PROC	; OBS::AddSettingsPane, COMDAT
; _this$ = ecx

; 119  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 120  :     settingsPanes.Add(pane);

	lea	eax, DWORD PTR _pane$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?Add@?$List@PAVSettingsPane@@@@QAEIABQAVSettingsPane@@@Z ; List<SettingsPane *>::Add

; 121  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z ENDP	; OBS::AddSettingsPane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?RemoveSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pane$ = 8						; size = 4
?RemoveSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z PROC	; OBS::RemoveSettingsPane, COMDAT
; _this$ = ecx

; 124  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 125  :     settingsPanes.RemoveItem(pane);

	lea	eax, DWORD PTR _pane$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?RemoveItem@?$List@PAVSettingsPane@@@@QAEXABQAVSettingsPane@@@Z ; List<SettingsPane *>::RemoveItem

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z ENDP	; OBS::RemoveSettingsPane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?AddBuiltInSettingsPanes@OBS@@AAEXXZ
_TEXT	SEGMENT
_pane$1 = -108						; size = 4
_$S3$2 = -104						; size = 4
tv92 = -100						; size = 4
tv72 = -96						; size = 4
tv144 = -92						; size = 4
tv134 = -88						; size = 4
_this$ = -84						; size = 4
tv82 = -80						; size = 4
_$S1$3 = -76						; size = 4
$T4 = -72						; size = 4
tv164 = -68						; size = 4
$T5 = -64						; size = 4
$T6 = -60						; size = 4
$T7 = -56						; size = 4
tv154 = -52						; size = 4
$T8 = -48						; size = 4
$T9 = -44						; size = 4
$T10 = -40						; size = 4
_$S2$11 = -36						; size = 4
_panes$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
?AddBuiltInSettingsPanes@OBS@@AAEXXZ PROC		; OBS::AddBuiltInSettingsPanes, COMDAT
; _this$ = ecx

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 141  :     SettingsPane *panes[] = {
; 142  :         new SettingsGeneral(),
; 143  :         new SettingsEncoding(),
; 144  :         new SettingsPublish(),
; 145  :         new SettingsVideo(),
; 146  :         new SettingsAudio(),
; 147  :         new SettingsHotkeys(),
; 148  :         new SettingsAdvanced(),
; 149  :     };

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@AddBuiltIn
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0SettingsGeneral@@QAE@XZ		; SettingsGeneral::SettingsGeneral
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN7@AddBuiltIn
$LN6@AddBuiltIn:
	mov	DWORD PTR tv72[ebp], 0
$LN7@AddBuiltIn:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR _panes$[ebp], eax
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN8@AddBuiltIn
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0SettingsEncoding@@QAE@XZ		; SettingsEncoding::SettingsEncoding
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN9@AddBuiltIn
$LN8@AddBuiltIn:
	mov	DWORD PTR tv82[ebp], 0
$LN9@AddBuiltIn:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR _panes$[ebp+4], ecx
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN10@AddBuiltIn
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0SettingsPublish@@QAE@XZ		; SettingsPublish::SettingsPublish
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN11@AddBuiltIn
$LN10@AddBuiltIn:
	mov	DWORD PTR tv92[ebp], 0
$LN11@AddBuiltIn:
	mov	edx, DWORD PTR tv92[ebp]
	mov	DWORD PTR _panes$[ebp+8], edx
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN12@AddBuiltIn
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0SettingsVideo@@QAE@XZ		; SettingsVideo::SettingsVideo
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN13@AddBuiltIn
$LN12@AddBuiltIn:
	mov	DWORD PTR tv134[ebp], 0
$LN13@AddBuiltIn:
	mov	eax, DWORD PTR tv134[ebp]
	mov	DWORD PTR _panes$[ebp+12], eax
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN14@AddBuiltIn
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0SettingsAudio@@QAE@XZ		; SettingsAudio::SettingsAudio
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN15@AddBuiltIn
$LN14@AddBuiltIn:
	mov	DWORD PTR tv144[ebp], 0
$LN15@AddBuiltIn:
	mov	ecx, DWORD PTR tv144[ebp]
	mov	DWORD PTR _panes$[ebp+16], ecx
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN16@AddBuiltIn
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0SettingsHotkeys@@QAE@XZ		; SettingsHotkeys::SettingsHotkeys
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN17@AddBuiltIn
$LN16@AddBuiltIn:
	mov	DWORD PTR tv154[ebp], 0
$LN17@AddBuiltIn:
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR _panes$[ebp+20], edx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN18@AddBuiltIn
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0SettingsAdvanced@@QAE@XZ		; SettingsAdvanced::SettingsAdvanced
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN19@AddBuiltIn
$LN18@AddBuiltIn:
	mov	DWORD PTR tv164[ebp], 0
$LN19@AddBuiltIn:
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR _panes$[ebp+24], eax

; 150  : 
; 151  :     for (auto pane : panes)

	lea	ecx, DWORD PTR _panes$[ebp]
	mov	DWORD PTR _$S1$3[ebp], ecx
	mov	edx, DWORD PTR _$S1$3[ebp]
	mov	DWORD PTR _$S2$11[ebp], edx
	mov	eax, DWORD PTR _$S1$3[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR _$S3$2[ebp], eax
	jmp	SHORT $LN3@AddBuiltIn
$LN2@AddBuiltIn:
	mov	ecx, DWORD PTR _$S2$11[ebp]
	add	ecx, 4
	mov	DWORD PTR _$S2$11[ebp], ecx
$LN3@AddBuiltIn:
	mov	edx, DWORD PTR _$S2$11[ebp]
	cmp	edx, DWORD PTR _$S3$2[ebp]
	je	SHORT $LN1@AddBuiltIn
	mov	eax, DWORD PTR _$S2$11[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pane$1[ebp], ecx

; 152  :         AddSettingsPane(pane);

	mov	edx, DWORD PTR _pane$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z ; OBS::AddSettingsPane
	jmp	SHORT $LN2@AddBuiltIn
$LN1@AddBuiltIn:

; 153  :     saturate(numberOfBuiltInSettingsPanes, std::distance(std::begin(panes), std::end(panes)));

	lea	eax, DWORD PTR _panes$[ebp]
	push	eax
	call	??$end@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z ; std::end<SettingsPane *,7>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _panes$[ebp]
	push	ecx
	call	??$begin@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z ; std::begin<SettingsPane *,7>
	add	esp, 4
	push	eax
	call	??$distance@PAPAVSettingsPane@@@std@@YAHPAPAVSettingsPane@@0@Z ; std::distance<SettingsPane * *>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 244				; 000000f4H
	push	edx
	call	??$saturate@HH@@YAXAAHH@Z		; saturate<int,int>
	add	esp, 8

; 154  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?AddBuiltInSettingsPanes@OBS@@AAEXXZ ENDP		; OBS::AddBuiltInSettingsPanes
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?AddEncoderSettingsPanes@OBS@@AAEXXZ
_TEXT	SEGMENT
_pane$1 = -32						; size = 4
_$S6$2 = -28						; size = 4
_this$ = -24						; size = 4
_$S4$3 = -20						; size = 4
tv72 = -16						; size = 4
$T4 = -12						; size = 4
_panes$ = -8						; size = 4
_$S5$5 = -4						; size = 4
?AddEncoderSettingsPanes@OBS@@AAEXXZ PROC		; OBS::AddEncoderSettingsPanes, COMDAT
; _this$ = ecx

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 158  :     SettingsPane *panes[] = {
; 159  :         new SettingsQSV(),
; 160  :     };

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@AddEncoder
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0SettingsQSV@@QAE@XZ			; SettingsQSV::SettingsQSV
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN7@AddEncoder
$LN6@AddEncoder:
	mov	DWORD PTR tv72[ebp], 0
$LN7@AddEncoder:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR _panes$[ebp], eax

; 161  : 
; 162  :     for (auto pane : panes)

	lea	ecx, DWORD PTR _panes$[ebp]
	mov	DWORD PTR _$S4$3[ebp], ecx
	mov	edx, DWORD PTR _$S4$3[ebp]
	mov	DWORD PTR _$S5$5[ebp], edx
	mov	eax, DWORD PTR _$S4$3[ebp]
	add	eax, 4
	mov	DWORD PTR _$S6$2[ebp], eax
	jmp	SHORT $LN3@AddEncoder
$LN2@AddEncoder:
	mov	ecx, DWORD PTR _$S5$5[ebp]
	add	ecx, 4
	mov	DWORD PTR _$S5$5[ebp], ecx
$LN3@AddEncoder:
	mov	edx, DWORD PTR _$S5$5[ebp]
	cmp	edx, DWORD PTR _$S6$2[ebp]
	je	SHORT $LN1@AddEncoder
	mov	eax, DWORD PTR _$S5$5[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pane$1[ebp], ecx

; 163  :         AddSettingsPane(pane);

	mov	edx, DWORD PTR _pane$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSettingsPane@OBS@@QAEXPAVSettingsPane@@@Z ; OBS::AddSettingsPane
	jmp	SHORT $LN2@AddEncoder
$LN1@AddEncoder:

; 164  :     saturate(numberOfEncoderSettingsPanes, std::distance(std::begin(panes), std::end(panes)));

	lea	eax, DWORD PTR _panes$[ebp]
	push	eax
	call	??$end@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z ; std::end<SettingsPane *,1>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _panes$[ebp]
	push	ecx
	call	??$begin@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z ; std::begin<SettingsPane *,1>
	add	esp, 4
	push	eax
	call	??$distance@PAPAVSettingsPane@@@std@@YAHPAPAVSettingsPane@@0@Z ; std::distance<SettingsPane * *>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 248				; 000000f8H
	push	edx
	call	??$saturate@HH@@YAXAAHH@Z		; saturate<int,int>
	add	esp, 8

; 165  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AddEncoderSettingsPanes@OBS@@AAEXXZ ENDP		; OBS::AddEncoderSettingsPanes
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\limits
;	COMDAT ?min@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?min@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::min, COMDAT

; 655  : 	static _Ty (min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 656  : 		{	// return minimum value
; 657  : 		return (INT_MIN);

	mov	eax, -2147483648			; 80000000H

; 658  : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::min
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 660  : 	static _Ty (max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 661  : 		{	// return maximum value
; 662  : 		return (INT_MAX);

	mov	eax, 2147483647				; 7fffffffH

; 663  : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?LoadSettingEditInt@@YAHPAUHWND__@@PB_W1H@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_iLoadVal$ = -4						; size = 4
_hwnd$ = 8						; size = 4
_lpConfigSection$ = 12					; size = 4
_lpConfigName$ = 16					; size = 4
_defVal$ = 20						; size = 4
?LoadSettingEditInt@@YAHPAUHWND__@@PB_W1H@Z PROC	; LoadSettingEditInt, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 28   :     int iLoadVal;
; 29   :     if(!AppConfig->HasKey(lpConfigSection, lpConfigName))

	mov	eax, DWORD PTR _lpConfigName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigSection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?HasKey@ConfigFile@@QAEHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN2@LoadSettin

; 30   :     {
; 31   :         AppConfig->SetInt(lpConfigSection, lpConfigName, defVal);

	mov	edx, DWORD PTR _defVal$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpConfigName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigSection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 32   :         iLoadVal = defVal;

	mov	edx, DWORD PTR _defVal$[ebp]
	mov	DWORD PTR _iLoadVal$[ebp], edx

; 33   :     }
; 34   :     else

	jmp	SHORT $LN1@LoadSettin
$LN2@LoadSettin:

; 35   :         iLoadVal = AppConfig->GetInt(lpConfigSection, lpConfigName, defVal);

	mov	eax, DWORD PTR _defVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpConfigSection$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _iLoadVal$[ebp], eax
$LN1@LoadSettin:

; 36   : 
; 37   :     SendMessage(hwnd, WM_SETTEXT, 0, (LPARAM)IntString(iLoadVal).Array());

	push	10					; 0000000aH
	mov	eax, DWORD PTR _iLoadVal$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?IntString@@YA?AVString@@HH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	12					; 0000000cH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 38   : 
; 39   :     return iLoadVal;

	mov	eax, DWORD PTR _iLoadVal$[ebp]

; 40   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadSettingEditInt@@YAHPAUHWND__@@PB_W1H@Z ENDP	; LoadSettingEditInt
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?LoadSettingEditString@@YA?AVString@@PAUHWND__@@PB_W11@Z
_TEXT	SEGMENT
$T1 = -16						; size = 8
_strLoadVal$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
_hwnd$ = 12						; size = 4
_lpConfigSection$ = 16					; size = 4
_lpConfigName$ = 20					; size = 4
_lpDefault$ = 24					; size = 4
?LoadSettingEditString@@YA?AVString@@PAUHWND__@@PB_W11@Z PROC ; LoadSettingEditString, COMDAT

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 44   :     String strLoadVal;

	lea	ecx, DWORD PTR _strLoadVal$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 45   :     if(!AppConfig->HasKey(lpConfigSection, lpConfigName))

	mov	eax, DWORD PTR _lpConfigName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigSection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?HasKey@ConfigFile@@QAEHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN3@LoadSettin

; 46   :     {
; 47   :         if(lpDefault)

	cmp	DWORD PTR _lpDefault$[ebp], 0
	je	SHORT $LN2@LoadSettin

; 48   :             AppConfig->SetString(lpConfigSection, lpConfigName, lpDefault);

	mov	edx, DWORD PTR _lpDefault$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpConfigName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigSection$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
$LN2@LoadSettin:

; 49   : 
; 50   :         strLoadVal = lpDefault;

	mov	edx, DWORD PTR _lpDefault$[ebp]
	push	edx
	lea	ecx, DWORD PTR _strLoadVal$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z

; 51   :     }
; 52   :     else

	jmp	SHORT $LN1@LoadSettin
$LN3@LoadSettin:

; 53   :         strLoadVal = AppConfig->GetString(lpConfigSection, lpConfigName, lpDefault);

	mov	eax, DWORD PTR _lpDefault$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpConfigSection$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z
	push	eax
	lea	ecx, DWORD PTR _strLoadVal$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN1@LoadSettin:

; 54   : 
; 55   :     SendMessage(hwnd, WM_SETTEXT, 0, (LPARAM)strLoadVal.Array());

	lea	ecx, DWORD PTR _strLoadVal$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 56   : 
; 57   :     return strLoadVal;

	lea	edx, DWORD PTR _strLoadVal$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _strLoadVal$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 58   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadSettingEditString@@YA?AVString@@PAUHWND__@@PB_W11@Z ENDP ; LoadSettingEditString
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?LoadSettingComboInt@@YAHPAUHWND__@@PB_W1HH@Z
_TEXT	SEGMENT
_id$ = -8						; size = 4
_curVal$ = -4						; size = 4
_hwnd$ = 8						; size = 4
_lpConfigSection$ = 12					; size = 4
_lpConfigName$ = 16					; size = 4
_defVal$ = 20						; size = 4
_maxVal$ = 24						; size = 4
?LoadSettingComboInt@@YAHPAUHWND__@@PB_W1HH@Z PROC	; LoadSettingComboInt, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 62   :     int curVal = AppConfig->GetInt(lpConfigSection, lpConfigName, defVal);

	mov	eax, DWORD PTR _defVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpConfigSection$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _curVal$[ebp], eax

; 63   :     int id = curVal;

	mov	eax, DWORD PTR _curVal$[ebp]
	mov	DWORD PTR _id$[ebp], eax

; 64   : 
; 65   :     if(!AppConfig->HasKey(lpConfigSection, lpConfigName) || curVal < 0 || (maxVal != 0 && curVal > maxVal))

	mov	ecx, DWORD PTR _lpConfigName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpConfigSection$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?HasKey@ConfigFile@@QAEHPB_W0@Z
	test	eax, eax
	je	SHORT $LN1@LoadSettin
	cmp	DWORD PTR _curVal$[ebp], 0
	jl	SHORT $LN1@LoadSettin
	cmp	DWORD PTR _maxVal$[ebp], 0
	je	SHORT $LN2@LoadSettin
	mov	eax, DWORD PTR _curVal$[ebp]
	cmp	eax, DWORD PTR _maxVal$[ebp]
	jle	SHORT $LN2@LoadSettin
$LN1@LoadSettin:

; 66   :     {
; 67   :         AppConfig->SetInt(lpConfigSection, lpConfigName, defVal);

	mov	ecx, DWORD PTR _defVal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpConfigName$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpConfigSection$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 68   :         curVal = defVal;

	mov	ecx, DWORD PTR _defVal$[ebp]
	mov	DWORD PTR _curVal$[ebp], ecx
$LN2@LoadSettin:

; 69   :     }
; 70   : 
; 71   :     SendMessage(hwnd, CB_SETCURSEL, (WPARAM)id, 0);

	push	0
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	push	334					; 0000014eH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 72   : 
; 73   :     return curVal;

	mov	eax, DWORD PTR _curVal$[ebp]

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadSettingComboInt@@YAHPAUHWND__@@PB_W1HH@Z ENDP	; LoadSettingComboInt
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z
_TEXT	SEGMENT
_strVal$ = -12						; size = 8
_id$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_hwnd$ = 12						; size = 4
_lpConfigSection$ = 16					; size = 4
_lpConfigName$ = 20					; size = 4
_lpDefault$ = 24					; size = 4
?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z PROC ; LoadSettingComboString, COMDAT

; 77   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 78   :     String strVal = AppConfig->GetString(lpConfigSection, lpConfigName, lpDefault);

	mov	eax, DWORD PTR _lpDefault$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpConfigName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpConfigSection$[ebp]
	push	edx
	lea	eax, DWORD PTR _strVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 79   :     int id = (int)SendMessage(hwnd, CB_FINDSTRINGEXACT, 0, (LPARAM)strVal.Array());

	lea	ecx, DWORD PTR _strVal$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	344					; 00000158H
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$[ebp], eax

; 80   :     if(!AppConfig->HasKey(lpConfigSection, lpConfigName) || id == CB_ERR)

	mov	edx, DWORD PTR _lpConfigName$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpConfigSection$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?HasKey@ConfigFile@@QAEHPB_W0@Z
	test	eax, eax
	je	SHORT $LN4@LoadSettin
	cmp	DWORD PTR _id$[ebp], -1
	jne	SHORT $LN5@LoadSettin
$LN4@LoadSettin:

; 81   :     {
; 82   :         if(lpDefault)

	cmp	DWORD PTR _lpDefault$[ebp], 0
	je	SHORT $LN3@LoadSettin

; 83   :         {
; 84   :             AppConfig->SetString(lpConfigSection, lpConfigName, lpDefault);

	mov	ecx, DWORD PTR _lpDefault$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpConfigName$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpConfigSection$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 85   : 
; 86   :             if(id == CB_ERR)

	cmp	DWORD PTR _id$[ebp], -1
	jne	SHORT $LN2@LoadSettin

; 87   :             {
; 88   :                 id = (int)SendMessage(hwnd, CB_FINDSTRINGEXACT, -1, (LPARAM)lpDefault);

	mov	ecx, DWORD PTR _lpDefault$[ebp]
	push	ecx
	push	-1
	push	344					; 00000158H
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$[ebp], eax

; 89   :                 strVal = lpDefault;

	mov	eax, DWORD PTR _lpDefault$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strVal$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@PB_W@Z
$LN2@LoadSettin:

; 90   :             }
; 91   :         }
; 92   :         else

	jmp	SHORT $LN5@LoadSettin
$LN3@LoadSettin:

; 93   :             id = 0;

	mov	DWORD PTR _id$[ebp], 0
$LN5@LoadSettin:

; 94   :     }
; 95   : 
; 96   :     SendMessage(hwnd, CB_SETCURSEL, (WPARAM)id, 0);

	push	0
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	334					; 0000014eH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 97   : 
; 98   :     return strVal;

	lea	eax, DWORD PTR _strVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _strVal$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 99   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ENDP ; LoadSettingComboString
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?CancelSettings@OBS@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelSettings@OBS@@AAEXXZ PROC			; OBS::CancelSettings, COMDAT
; _this$ = ecx

; 180  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 181  :     if(App->currentSettingsPane != NULL)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+240], 0
	je	SHORT $LN2@CancelSett

; 182  :         App->currentSettingsPane->CancelSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+240]
	mov	eax, DWORD PTR [edx+24]
	call	eax
$LN2@CancelSett:

; 183  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelSettings@OBS@@AAEXXZ ENDP			; OBS::CancelSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?ApplySettings@OBS@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ApplySettings@OBS@@AAEXXZ PROC				; OBS::ApplySettings, COMDAT
; _this$ = ecx

; 186  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 187  :     bApplySettingsAborted = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+229], 0

; 188  :     if(App->currentSettingsPane != NULL)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [ecx+240], 0
	je	SHORT $LN2@ApplySetti

; 189  :         App->currentSettingsPane->ApplySettings();

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+240]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR [edx+20]
	call	eax
$LN2@ApplySetti:

; 190  :     if (bApplySettingsAborted)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+229]
	test	edx, edx
	je	SHORT $LN1@ApplySetti

; 191  :         return;

	jmp	SHORT $LN3@ApplySetti
$LN1@ApplySetti:

; 192  : 
; 193  :     bSettingsChanged = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+228], 0

; 194  :     EnableWindow(GetDlgItem(hwndSettings, IDC_APPLY), FALSE);

	push	0
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
$LN3@ApplySetti:

; 195  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ApplySettings@OBS@@AAEXXZ ENDP				; OBS::ApplySettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?OptimizeSettings@OBS@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OptimizeSettings@OBS@@AAEXXZ PROC			; OBS::OptimizeSettings, COMDAT
; _this$ = ecx

; 205  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 206  :     if (!App->currentSettingsPane)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+240], 0
	jne	SHORT $LN1@OptimizeSe

; 207  :         return;

	jmp	SHORT $LN2@OptimizeSe
$LN1@OptimizeSe:

; 208  :     App->currentSettingsPane->OptimizeSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+240]
	mov	eax, DWORD PTR [edx+36]
	call	eax
$LN2@OptimizeSe:

; 209  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OptimizeSettings@OBS@@AAEXXZ ENDP			; OBS::OptimizeSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ?SettingsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_oldTextColor$1 = -668					; size = 4
_origPen$2 = -664					; size = 4
_bkMode$3 = -660					; size = 4
_cy$4 = -656						; size = 4
tv200 = -652						; size = 4
_builtinAndEncoderPanes$5 = -648			; size = 4
_id$6 = -644						; size = 4
tv64 = -640						; size = 4
_pane$7 = -636						; size = 4
_i$8 = -632						; size = 4
_sel$9 = -628						; size = 4
tv315 = -624						; size = 4
_pdis$10 = -620						; size = 4
_tm$11 = -616						; size = 60
_subDialogRect$12 = -556				; size = 16
_subDialogRect$13 = -540				; size = 16
_itemText$14 = -524					; size = 520
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?SettingsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z PROC	; OBS::SettingsDialogProc, COMDAT

; 212  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 668				; 0000029cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 213  :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 43			; 0000002bH
	je	$LN37@SettingsDi
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN45@SettingsDi
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN24@SettingsDi
	jmp	$LN46@SettingsDi
$LN45@SettingsDi:

; 214  :     {
; 215  :         case WM_INITDIALOG:
; 216  :             {
; 217  :                 App->hwndSettings = hwnd;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR [ecx+220], edx

; 218  : 
; 219  :                 LocalizeWindow(hwnd);

	push	0
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 220  : 
; 221  :                 // Add setting categories from the pane list
; 222  :                 for(unsigned int i = 0; i < App->settingsPanes.Num(); i++)

	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN44@SettingsDi
$LN43@SettingsDi:
	mov	ecx, DWORD PTR _i$8[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$8[ebp], ecx
$LN44@SettingsDi:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@PAVSettingsPane@@@@QBEIXZ	; List<SettingsPane *>::Num
	cmp	DWORD PTR _i$8[ebp], eax
	jae	SHORT $LN42@SettingsDi

; 223  :                 {
; 224  :                     SettingsPane *pane = App->settingsPanes[i];

	mov	edx, DWORD PTR _i$8[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	??A?$List@PAVSettingsPane@@@@QAEAAPAVSettingsPane@@I@Z ; List<SettingsPane *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _pane$7[ebp], eax

; 225  :                     if(pane == NULL)

	cmp	DWORD PTR _pane$7[ebp], 0
	jne	SHORT $LN41@SettingsDi

; 226  :                         continue;

	jmp	SHORT $LN43@SettingsDi
$LN41@SettingsDi:

; 227  :                     SendMessage(GetDlgItem(hwnd, IDC_SETTINGSLIST), LB_ADDSTRING, 0, (LPARAM)pane->GetCategory());

	mov	ecx, DWORD PTR _pane$7[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pane$7[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	push	eax
	push	0
	push	384					; 00000180H
	push	1006					; 000003eeH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 228  :                 }

	jmp	$LN43@SettingsDi
$LN42@SettingsDi:

; 229  : 
; 230  :                 RECT subDialogRect;
; 231  :                 GetWindowRect(GetDlgItem(hwnd, IDC_SUBDIALOG), &subDialogRect);

	lea	edx, DWORD PTR _subDialogRect$12[ebp]
	push	edx
	push	1007					; 000003efH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 232  :                 MapWindowPoints(HWND_DESKTOP, hwnd, (LPPOINT)&subDialogRect, 2);

	push	2
	lea	ecx, DWORD PTR _subDialogRect$12[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__MapWindowPoints@16

; 233  : 
; 234  :                 SendMessage(GetDlgItem(hwnd, IDC_SETTINGSLIST), LB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	390					; 00000186H
	push	1006					; 000003eeH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 235  : 
; 236  :                 // Load the first settings pane from the list
; 237  :                 App->curSettingsSelection = 0;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+216], 0

; 238  :                 App->hwndCurrentSettings = NULL;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+224], 0

; 239  :                 App->currentSettingsPane = NULL;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [eax+240], 0

; 240  : 
; 241  :                 if(App->settingsPanes.Num() >= 1)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@PAVSettingsPane@@@@QBEIXZ	; List<SettingsPane *>::Num
	cmp	eax, 1
	jb	SHORT $LN40@SettingsDi

; 242  :                     App->currentSettingsPane = App->settingsPanes[0];

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	??A?$List@PAVSettingsPane@@@@QAEAAPAVSettingsPane@@I@Z ; List<SettingsPane *>::operator[]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+240], edx
$LN40@SettingsDi:

; 243  : 
; 244  :                 if(App->currentSettingsPane != NULL)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+240], 0
	je	SHORT $LN39@SettingsDi

; 245  :                     App->hwndCurrentSettings = App->currentSettingsPane->CreatePane(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+240]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+224], eax
$LN39@SettingsDi:

; 246  : 
; 247  :                 if(App->hwndCurrentSettings != NULL)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+224], 0
	je	$LN38@SettingsDi

; 248  :                 {
; 249  :                     SetWindowPos(App->hwndCurrentSettings, NULL,
; 250  :                         subDialogRect.left, subDialogRect.top,
; 251  :                         subDialogRect.right - subDialogRect.left,
; 252  :                         subDialogRect.bottom - subDialogRect.top,
; 253  :                         SWP_NOZORDER);

	push	4
	mov	eax, DWORD PTR _subDialogRect$12[ebp+12]
	sub	eax, DWORD PTR _subDialogRect$12[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _subDialogRect$12[ebp+8]
	sub	ecx, DWORD PTR _subDialogRect$12[ebp]
	push	ecx
	mov	edx, DWORD PTR _subDialogRect$12[ebp+4]
	push	edx
	mov	eax, DWORD PTR _subDialogRect$12[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+224]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28

; 254  :                     ShowWindow(App->hwndCurrentSettings, SW_SHOW);

	push	5
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+224]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 255  :                     ShowWindow(GetDlgItem(hwnd, IDC_DEFAULTS), App->currentSettingsPane->HasDefaults());

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+240]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	movzx	ecx, al
	push	ecx
	push	3
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 256  :                     ShowWindow(GetDlgItem(hwnd, IDC_OPTIMIZE), false);

	push	0
	push	5
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN38@SettingsDi:

; 257  :                 }
; 258  : 
; 259  :                 return TRUE;

	mov	eax, 1
	jmp	$LN48@SettingsDi
$LN37@SettingsDi:

; 260  :             }
; 261  : 
; 262  :         case WM_DRAWITEM:
; 263  :             PDRAWITEMSTRUCT pdis;
; 264  :             pdis = (PDRAWITEMSTRUCT) lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _pdis$10[ebp], ecx

; 265  : 
; 266  :             if(pdis->CtlID != IDC_SETTINGSLIST || pdis->itemID == -1)

	mov	edx, DWORD PTR _pdis$10[ebp]
	cmp	DWORD PTR [edx+4], 1006			; 000003eeH
	jne	SHORT $LN35@SettingsDi
	mov	eax, DWORD PTR _pdis$10[ebp]
	cmp	DWORD PTR [eax+8], -1
	jne	SHORT $LN36@SettingsDi
$LN35@SettingsDi:

; 267  :                 break;

	jmp	$LN46@SettingsDi
$LN36@SettingsDi:

; 268  : 
; 269  :             switch(pdis->itemAction)

	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv200[ebp], edx
	cmp	DWORD PTR tv200[ebp], 0
	jbe	$LN33@SettingsDi
	cmp	DWORD PTR tv200[ebp], 2
	jbe	SHORT $LN32@SettingsDi
	jmp	$LN33@SettingsDi
$LN32@SettingsDi:

; 270  :             {
; 271  :                 case ODA_SELECT:
; 272  :                 case ODA_DRAWENTIRE:
; 273  :                     {
; 274  :                         int cy, bkMode;
; 275  :                         TEXTMETRIC tm;
; 276  :                         COLORREF oldTextColor;
; 277  :                         TCHAR itemText[MAX_PATH];
; 278  : 
; 279  :                         oldTextColor = GetTextColor(pdis->hDC);

	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__GetTextColor@4
	mov	DWORD PTR _oldTextColor$1[ebp], eax

; 280  : 
; 281  :                         if(pdis->itemState & ODS_SELECTED)

	mov	edx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [edx+16]
	and	eax, 1
	je	SHORT $LN31@SettingsDi

; 282  :                         {
; 283  :                             FillRect(pdis->hDC, &pdis->rcItem, (HBRUSH)(COLOR_HIGHLIGHT + 1));

	push	14					; 0000000eH
	mov	ecx, DWORD PTR _pdis$10[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	DWORD PTR __imp__FillRect@12

; 284  :                             SetTextColor(pdis->hDC, GetSysColor(COLOR_HIGHLIGHTTEXT));

	push	14					; 0000000eH
	call	DWORD PTR __imp__GetSysColor@4
	push	eax
	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__SetTextColor@8

; 285  :                         }
; 286  :                         else

	jmp	SHORT $LN30@SettingsDi
$LN31@SettingsDi:

; 287  :                         {
; 288  :                             FillRect(pdis->hDC, &pdis->rcItem, (HBRUSH)(COLOR_WINDOW + 1));

	push	6
	mov	eax, DWORD PTR _pdis$10[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__FillRect@12

; 289  :                             SetTextColor(pdis->hDC, GetSysColor(COLOR_WINDOWTEXT));

	push	8
	call	DWORD PTR __imp__GetSysColor@4
	push	eax
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8
$LN30@SettingsDi:

; 290  :                         }
; 291  : 
; 292  :                         SendMessage(pdis->hwndItem, LB_GETTEXT, pdis->itemID, (LPARAM)itemText);

	lea	edx, DWORD PTR _itemText$14[ebp]
	push	edx
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	393					; 00000189H
	mov	edx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 293  : 
; 294  :                         GetTextMetrics(pdis->hDC, &tm);

	lea	ecx, DWORD PTR _tm$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	DWORD PTR __imp__GetTextMetricsW@8

; 295  :                         cy = (pdis->rcItem.bottom + pdis->rcItem.top - tm.tmHeight) / 2;

	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _pdis$10[ebp]
	add	eax, DWORD PTR [edx+32]
	sub	eax, DWORD PTR _tm$11[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _cy$4[ebp], eax

; 296  : 
; 297  :                         bkMode = SetBkMode(pdis->hDC, TRANSPARENT);

	push	1
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__SetBkMode@8
	mov	DWORD PTR _bkMode$3[ebp], eax

; 298  : 
; 299  :                         if(slen(itemText) > 0)

	lea	edx, DWORD PTR _itemText$14[ebp]
	push	edx
	call	DWORD PTR __imp_?slen@@YGIPB_W@Z
	test	eax, eax
	jbe	SHORT $LN29@SettingsDi

; 300  :                             TextOut(pdis->hDC, 6, cy, itemText, slen(itemText));

	lea	eax, DWORD PTR _itemText$14[ebp]
	push	eax
	call	DWORD PTR __imp_?slen@@YGIPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _itemText$14[ebp]
	push	ecx
	mov	edx, DWORD PTR _cy$4[ebp]
	push	edx
	push	6
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__TextOutW@20
$LN29@SettingsDi:

; 301  : 
; 302  :                         SetBkMode(pdis->hDC, bkMode);

	mov	edx, DWORD PTR _bkMode$3[ebp]
	push	edx
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__SetBkMode@8

; 303  :                         SetTextColor(pdis->hDC, oldTextColor);

	mov	edx, DWORD PTR _oldTextColor$1[ebp]
	push	edx
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8

; 304  : 
; 305  :                         UINT builtinAndEncoderPanes = App->numberOfBuiltInSettingsPanes + App->numberOfEncoderSettingsPanes;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+244]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, DWORD PTR [ecx+248]
	mov	DWORD PTR _builtinAndEncoderPanes$5[ebp], eax

; 306  : 
; 307  :                         if ((App->settingsPanes.Num() > (UINT)App->numberOfBuiltInSettingsPanes && pdis->itemID == App->numberOfBuiltInSettingsPanes)
; 308  :                             || (App->settingsPanes.Num() > (UINT)builtinAndEncoderPanes && pdis->itemID == builtinAndEncoderPanes))

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@PAVSettingsPane@@@@QBEIXZ	; List<SettingsPane *>::Num
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	eax, DWORD PTR [edx+244]
	jbe	SHORT $LN26@SettingsDi
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+244]
	je	SHORT $LN27@SettingsDi
$LN26@SettingsDi:
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@PAVSettingsPane@@@@QBEIXZ	; List<SettingsPane *>::Num
	cmp	eax, DWORD PTR _builtinAndEncoderPanes$5[ebp]
	jbe	$LN33@SettingsDi
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _builtinAndEncoderPanes$5[ebp]
	jne	$LN33@SettingsDi
$LN27@SettingsDi:

; 309  :                         {
; 310  :                             HGDIOBJ origPen;
; 311  :                             origPen = SelectObject(pdis->hDC, GetStockObject(DC_PEN));

	push	19					; 00000013H
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	mov	edx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _origPen$2[ebp], eax

; 312  :                             SetDCPenColor(pdis->hDC, GetSysColor(COLOR_BTNSHADOW));

	push	16					; 00000010H
	call	DWORD PTR __imp__GetSysColor@4
	push	eax
	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__SetDCPenColor@8

; 313  : 
; 314  :                             MoveToEx(pdis->hDC, pdis->rcItem.left, pdis->rcItem.top, NULL);

	push	0
	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__MoveToEx@16

; 315  :                             LineTo(pdis->hDC, pdis->rcItem.right, pdis->rcItem.top);

	mov	eax, DWORD PTR _pdis$10[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _pdis$10[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__LineTo@12

; 316  : 
; 317  :                             SelectObject(pdis->hDC, origPen);

	mov	eax, DWORD PTR _origPen$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _pdis$10[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
$LN33@SettingsDi:

; 318  :                         }
; 319  : 
; 320  :                         break;
; 321  :                     }
; 322  : 
; 323  :                 case ODA_FOCUS:
; 324  :                     break;
; 325  :             }
; 326  : 
; 327  :             break;

	jmp	$LN46@SettingsDi
$LN24@SettingsDi:

; 328  : 
; 329  :         case WM_COMMAND:
; 330  :             switch(LOWORD(wParam))

	movzx	eax, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv315[ebp], eax
	cmp	DWORD PTR tv315[ebp], 1006		; 000003eeH
	jg	SHORT $LN50@SettingsDi
	cmp	DWORD PTR tv315[ebp], 1006		; 000003eeH
	je	SHORT $LN21@SettingsDi
	mov	ecx, DWORD PTR tv315[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv315[ebp], ecx
	cmp	DWORD PTR tv315[ebp], 4
	ja	$LN46@SettingsDi
	mov	edx, DWORD PTR tv315[ebp]
	jmp	DWORD PTR $LN51@SettingsDi[edx*4]
$LN50@SettingsDi:
	jmp	$LN46@SettingsDi
$LN21@SettingsDi:

; 331  :             {
; 332  :                 case IDC_SETTINGSLIST:
; 333  :                     {
; 334  :                         if(HIWORD(wParam) != LBN_SELCHANGE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 1
	je	SHORT $LN20@SettingsDi

; 335  :                             break;

	jmp	$LN46@SettingsDi
$LN20@SettingsDi:

; 336  : 
; 337  :                         int sel = (int)SendMessage((HWND)lParam, LB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	392					; 00000188H
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _sel$9[ebp], eax

; 338  : 
; 339  :                         // No need to continue if we're on the same panel
; 340  :                         if(sel == App->curSettingsSelection)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR _sel$9[ebp]
	cmp	ecx, DWORD PTR [eax+216]
	jne	SHORT $LN19@SettingsDi

; 341  :                             break;

	jmp	$LN46@SettingsDi
$LN19@SettingsDi:

; 342  : 
; 343  :                         if(App->bSettingsChanged)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+228]
	test	eax, eax
	je	$LN18@SettingsDi

; 344  :                         {
; 345  :                             int id = OBSMessageBox(hwnd, Str("Settings.SaveChangesPrompt"), Str("Settings.SaveChangesTitle"), MB_YESNOCANCEL);

	push	3
	push	OFFSET $SG4294763576
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET $SG4294763575
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR _id$6[ebp], eax

; 346  : 
; 347  :                             if (id == IDNO)

	cmp	DWORD PTR _id$6[ebp], 7
	jne	SHORT $LN17@SettingsDi

; 348  :                                 App->CancelSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CancelSettings@OBS@@AAEXXZ		; OBS::CancelSettings
$LN17@SettingsDi:

; 349  : 
; 350  :                             if(id == IDCANCEL)

	cmp	DWORD PTR _id$6[ebp], 2
	jne	SHORT $LN16@SettingsDi

; 351  :                             {
; 352  :                                 SendMessage((HWND)lParam, LB_SETCURSEL, App->curSettingsSelection, 0);

	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+216]
	push	edx
	push	390					; 00000186H
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 353  :                                 break;

	jmp	$LN46@SettingsDi
	jmp	SHORT $LN18@SettingsDi
$LN16@SettingsDi:

; 354  :                             }
; 355  :                             else if(id == IDYES)

	cmp	DWORD PTR _id$6[ebp], 6
	jne	SHORT $LN18@SettingsDi

; 356  :                                 App->ApplySettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ApplySettings@OBS@@AAEXXZ		; OBS::ApplySettings
$LN18@SettingsDi:

; 357  :                         }
; 358  : 
; 359  :                         App->curSettingsSelection = sel;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR _sel$9[ebp]
	mov	DWORD PTR [ecx+216], edx

; 360  : 
; 361  :                         if(App->currentSettingsPane != NULL)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+240], 0
	je	SHORT $LN13@SettingsDi

; 362  :                             App->currentSettingsPane->DestroyPane();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+240]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN13@SettingsDi:

; 363  :                         App->currentSettingsPane = NULL;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+240], 0

; 364  :                         App->hwndCurrentSettings = NULL;

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+224], 0

; 365  :                         ShowWindow(GetDlgItem(hwnd, IDC_OPTIMIZE), false);

	push	0
	push	5
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 366  : 
; 367  :                         RECT subDialogRect;
; 368  :                         GetWindowRect(GetDlgItem(hwnd, IDC_SUBDIALOG), &subDialogRect);

	lea	ecx, DWORD PTR _subDialogRect$13[ebp]
	push	ecx
	push	1007					; 000003efH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 369  :                         MapWindowPoints(HWND_DESKTOP, hwnd, (LPPOINT)&subDialogRect, 2);

	push	2
	lea	eax, DWORD PTR _subDialogRect$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__MapWindowPoints@16

; 370  : 
; 371  :                         if(sel >= 0 && sel < (int)App->settingsPanes.Num())

	cmp	DWORD PTR _sel$9[ebp], 0
	jl	SHORT $LN12@SettingsDi
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	?Num@?$List@PAVSettingsPane@@@@QBEIXZ	; List<SettingsPane *>::Num
	cmp	DWORD PTR _sel$9[ebp], eax
	jge	SHORT $LN12@SettingsDi

; 372  :                             App->currentSettingsPane = App->settingsPanes[sel];

	mov	edx, DWORD PTR _sel$9[ebp]
	push	edx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 232				; 000000e8H
	call	??A?$List@PAVSettingsPane@@@@QAEAAPAVSettingsPane@@I@Z ; List<SettingsPane *>::operator[]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+240], edx
$LN12@SettingsDi:

; 373  :                         if(App->currentSettingsPane != NULL)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [eax+240], 0
	je	SHORT $LN11@SettingsDi

; 374  :                             App->hwndCurrentSettings = App->currentSettingsPane->CreatePane(hwnd);

	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+240]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+224], eax
$LN11@SettingsDi:

; 375  :                         if(App->hwndCurrentSettings)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	cmp	DWORD PTR [edx+224], 0
	je	$LN10@SettingsDi

; 376  :                         {
; 377  :                             SetWindowPos(App->hwndCurrentSettings, NULL,
; 378  :                                 subDialogRect.left, subDialogRect.top,
; 379  :                                 subDialogRect.right - subDialogRect.left,
; 380  :                                 subDialogRect.bottom - subDialogRect.top,
; 381  :                                 SWP_NOZORDER);

	push	4
	mov	eax, DWORD PTR _subDialogRect$13[ebp+12]
	sub	eax, DWORD PTR _subDialogRect$13[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _subDialogRect$13[ebp+8]
	sub	ecx, DWORD PTR _subDialogRect$13[ebp]
	push	ecx
	mov	edx, DWORD PTR _subDialogRect$13[ebp+4]
	push	edx
	mov	eax, DWORD PTR _subDialogRect$13[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+224]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28

; 382  :                             ShowWindow(App->hwndCurrentSettings, SW_SHOW);

	push	5
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+224]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 383  : 
; 384  :                             ShowWindow(GetDlgItem(hwnd, IDC_DEFAULTS), App->currentSettingsPane->HasDefaults());

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+240]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	movzx	ecx, al
	push	ecx
	push	3
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 385  :                             SetFocus(GetDlgItem(hwnd, IDC_SETTINGSLIST));

	push	1006					; 000003eeH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetFocus@4
$LN10@SettingsDi:

; 386  :                         }
; 387  : 
; 388  :                         break;

	jmp	$LN46@SettingsDi
$LN9@SettingsDi:

; 389  :                     }
; 390  : 
; 391  :                 case IDC_DEFAULTS:
; 392  :                     App->currentSettingsPane->SetDefaults();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [ecx+240]
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+240]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 393  :                     break;

	jmp	$LN46@SettingsDi
$LN8@SettingsDi:

; 394  : 
; 395  :                 case IDOK:
; 396  :                     if(App->bSettingsChanged)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+228]
	test	edx, edx
	je	SHORT $LN7@SettingsDi

; 397  :                         App->ApplySettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ApplySettings@OBS@@AAEXXZ		; OBS::ApplySettings
$LN7@SettingsDi:

; 398  :                     if (App->bApplySettingsAborted)

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	ecx, BYTE PTR [eax+229]
	test	ecx, ecx
	je	SHORT $LN6@SettingsDi

; 399  :                         break;

	jmp	$LN46@SettingsDi
$LN6@SettingsDi:

; 400  :                     EndDialog(hwnd, IDOK);

	push	1
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8

; 401  :                     App->hwndSettings = NULL;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [eax+220], 0

; 402  :                     break;

	jmp	SHORT $LN46@SettingsDi
$LN5@SettingsDi:

; 403  : 
; 404  :                 case IDCANCEL:
; 405  :                     if(App->bSettingsChanged)

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+228]
	test	edx, edx
	je	SHORT $LN4@SettingsDi

; 406  :                         App->CancelSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?CancelSettings@OBS@@AAEXXZ		; OBS::CancelSettings
$LN4@SettingsDi:

; 407  :                     EndDialog(hwnd, IDCANCEL);

	push	2
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8

; 408  :                     App->hwndSettings = NULL;

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [ecx+220], 0

; 409  :                     break;

	jmp	SHORT $LN46@SettingsDi
$LN3@SettingsDi:

; 410  : 
; 411  :                 case IDC_APPLY:
; 412  :                     if(App->bSettingsChanged)

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+228]
	test	eax, eax
	je	SHORT $LN2@SettingsDi

; 413  :                         App->ApplySettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ApplySettings@OBS@@AAEXXZ		; OBS::ApplySettings
$LN2@SettingsDi:

; 414  :                     break;

	jmp	SHORT $LN46@SettingsDi
$LN1@SettingsDi:

; 415  : 
; 416  :                 case IDC_OPTIMIZE:
; 417  :                     App->OptimizeSettings();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?OptimizeSettings@OBS@@AAEXXZ		; OBS::OptimizeSettings
$LN46@SettingsDi:

; 418  :                     break;
; 419  :             }
; 420  :             break;
; 421  :     }
; 422  : 
; 423  :     return FALSE;

	xor	eax, eax
$LN48@SettingsDi:

; 424  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN51@SettingsDi:
	DD	$LN8@SettingsDi
	DD	$LN5@SettingsDi
	DD	$LN9@SettingsDi
	DD	$LN3@SettingsDi
	DD	$LN1@SettingsDi
?SettingsDialogProc@OBS@@CGHPAUHWND__@@IIJ@Z ENDP	; OBS::SettingsDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Add@?$List@PAVSettingsPane@@@@QAEIABQAVSettingsPane@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Add@?$List@PAVSettingsPane@@@@QAEIABQAVSettingsPane@@@Z PROC ; List<SettingsPane *>::Add, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         array = (T*)ReAllocate(array, sizeof(T)*++num);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR tv73[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 47   :         mcpy(&array[(num-1)], (void*)&val, sizeof(T));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax*4-4], ecx

; 48   :         return num-1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1

; 49   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$List@PAVSettingsPane@@@@QAEIABQAVSettingsPane@@@Z ENDP ; List<SettingsPane *>::Add
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?RemoveItem@?$List@PAVSettingsPane@@@@QAEXABQAVSettingsPane@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
_obj$ = 8						; size = 4
?RemoveItem@?$List@PAVSettingsPane@@@@QAEXABQAVSettingsPane@@@Z PROC ; List<SettingsPane *>::RemoveItem, COMDAT
; _this$ = ecx

; 100  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 101  :         for(UINT i=0; i<num; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@RemoveItem
$LN3@RemoveItem:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@RemoveItem:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$1[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN5@RemoveItem

; 102  :         {
; 103  :             if(array[i] == obj)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _obj$[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@RemoveItem

; 104  :             {
; 105  :                 Remove(i);

	mov	edx, DWORD PTR _i$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Remove@?$List@PAVSettingsPane@@@@QAEXI@Z ; List<SettingsPane *>::Remove

; 106  :                 break;

	jmp	SHORT $LN5@RemoveItem
$LN1@RemoveItem:

; 107  :             }
; 108  :         }

	jmp	SHORT $LN3@RemoveItem
$LN5@RemoveItem:

; 109  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveItem@?$List@PAVSettingsPane@@@@QAEXABQAVSettingsPane@@@Z ENDP ; List<SettingsPane *>::RemoveItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\template.h
;	COMDAT ?Remove@?$List@PAVSettingsPane@@@@QAEXI@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Remove@?$List@PAVSettingsPane@@@@QAEXI@Z PROC		; List<SettingsPane *>::Remove, COMDAT
; _this$ = ecx

; 88   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 89   :         assert(index < num);
; 90   :         if(index >= num) return;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN2@Remove
	jmp	$LN3@Remove
$LN2@Remove:

; 91   : 
; 92   :         if(!--num) {Free(array); array=NULL; return;}

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR [ecx+4], edx
	cmp	DWORD PTR tv68[ebp], 0
	jne	SHORT $LN1@Remove
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
	jmp	SHORT $LN3@Remove
$LN1@Remove:

; 93   : 
; 94   :         mcpy(&array[index], &array[index+1], sizeof(T)*(num-index));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _index$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 95   : 
; 96   :         array = (T*)ReAllocate(array, sizeof(T)*num);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __imp_?MainAllocator@@3PAVAlloc@@A
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@Remove:

; 97   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@?$List@PAVSettingsPane@@@@QAEXI@Z ENDP		; List<SettingsPane *>::Remove
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$begin@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$begin@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z PROC ; std::begin<SettingsPane *,7>, COMDAT

; 1214 : 	{	// get beginning of array

	push	ebp
	mov	ebp, esp

; 1215 : 	return (_Array);

	mov	eax, DWORD PTR __Array$[ebp]

; 1216 : 	}

	pop	ebp
	ret	0
??$begin@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z ENDP ; std::begin<SettingsPane *,7>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$end@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$end@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z PROC ; std::end<SettingsPane *,7>, COMDAT

; 1221 : 	{	// get end of array

	push	ebp
	mov	ebp, esp

; 1222 : 	return (_Array + _Size);

	mov	eax, DWORD PTR __Array$[ebp]
	add	eax, 28					; 0000001cH

; 1223 : 	}

	pop	ebp
	ret	0
??$end@PAVSettingsPane@@$06@std@@YAPAPAVSettingsPane@@AAY06PAV1@@Z ENDP ; std::end<SettingsPane *,7>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$distance@PAPAVSettingsPane@@@std@@YAHPAPAVSettingsPane@@0@Z
_TEXT	SEGMENT
__Off$ = -8						; size = 4
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@PAPAVSettingsPane@@@std@@YAHPAPAVSettingsPane@@0@Z PROC ; std::distance<SettingsPane * *>, COMDAT

; 756  : 	{	// return distance between iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 757  : 	typename iterator_traits<_InIt>::difference_type _Off = 0;

	mov	DWORD PTR __Off$[ebp], 0

; 758  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAPAVSettingsPane@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVSettingsPane@@@Z ; std::_Iter_cat<SettingsPane * *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Distance2@PAPAVSettingsPane@@H@std@@YAXPAPAVSettingsPane@@0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<SettingsPane * *,int>
	add	esp, 16					; 00000010H

; 759  : 	return (_Off);

	mov	eax, DWORD PTR __Off$[ebp]

; 760  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@PAPAVSettingsPane@@@std@@YAHPAPAVSettingsPane@@0@Z ENDP ; std::distance<SettingsPane * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settings.cpp
;	COMDAT ??$saturate@HH@@YAXAAHH@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_val$ = 12						; size = 4
??$saturate@HH@@YAXAAHH@Z PROC				; saturate<int,int>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp

; 131  :     if (val > std::numeric_limits<T>::max())

	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	cmp	DWORD PTR _val$[ebp], eax
	jle	SHORT $LN4@saturate

; 132  :         t = std::numeric_limits<T>::max();

	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN5@saturate
$LN4@saturate:

; 133  :     else if (val < std::numeric_limits<T>::min())

	call	?min@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::min
	cmp	DWORD PTR _val$[ebp], eax
	jge	SHORT $LN2@saturate

; 134  :         t = std::numeric_limits<T>::min();

	call	?min@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::min
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx], eax

; 135  :     else

	jmp	SHORT $LN5@saturate
$LN2@saturate:

; 136  :         t = static_cast<T>(val);

	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@saturate:

; 137  : }

	pop	ebp
	ret	0
??$saturate@HH@@YAXAAHH@Z ENDP				; saturate<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$begin@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$begin@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z PROC ; std::begin<SettingsPane *,1>, COMDAT

; 1214 : 	{	// get beginning of array

	push	ebp
	mov	ebp, esp

; 1215 : 	return (_Array);

	mov	eax, DWORD PTR __Array$[ebp]

; 1216 : 	}

	pop	ebp
	ret	0
??$begin@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z ENDP ; std::begin<SettingsPane *,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$end@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z
_TEXT	SEGMENT
__Array$ = 8						; size = 4
??$end@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z PROC ; std::end<SettingsPane *,1>, COMDAT

; 1221 : 	{	// get end of array

	push	ebp
	mov	ebp, esp

; 1222 : 	return (_Array + _Size);

	mov	eax, DWORD PTR __Array$[ebp]
	add	eax, 4

; 1223 : 	}

	pop	ebp
	ret	0
??$end@PAVSettingsPane@@$00@std@@YAPAPAVSettingsPane@@AAY00PAV1@@Z ENDP ; std::end<SettingsPane *,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAPAVSettingsPane@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVSettingsPane@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVSettingsPane@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVSettingsPane@@@Z PROC ; std::_Iter_cat<SettingsPane * *>, COMDAT

; 405  : 	{	// return category from iterator argument

	push	ebp
	mov	ebp, esp
	push	ecx

; 406  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 407  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 408  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAPAVSettingsPane@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVSettingsPane@@@Z ENDP ; std::_Iter_cat<SettingsPane * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Distance2@PAPAVSettingsPane@@H@std@@YAXPAPAVSettingsPane@@0AAHUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@PAPAVSettingsPane@@H@std@@YAXPAPAVSettingsPane@@0AAHUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<SettingsPane * *,int>, COMDAT

; 741  : 	{	// add to _Off distance between random-access iterators

	push	ebp
	mov	ebp, esp

; 742  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 743  : 	if (_First != _Last)
; 744  : 		{	// check for null pointers
; 745  : 		_DEBUG_POINTER(_First);
; 746  : 		_DEBUG_POINTER(_Last);
; 747  : 		}
; 748  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 749  : 
; 750  : 	_Off += _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	ecx, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [edx], eax

; 751  : 	}

	pop	ebp
	ret	0
??$_Distance2@PAPAVSettingsPane@@H@std@@YAXPAPAVSettingsPane@@0AAHUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<SettingsPane * *,int>
_TEXT	ENDS
END

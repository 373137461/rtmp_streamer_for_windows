; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\ReplayBuffer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_1FA@KMFJNEIK@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@ ; `string'
PUBLIC	??_C@_1NE@FJOGMPEN@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAU?$AAn?$AAa@ ; `string'
PUBLIC	??_C@_1JI@JCMGAMJO@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAs?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_1EC@NILNDINM@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@ ; `string'
PUBLIC	??_C@_1HO@LCDLOHIB@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAh@ ; `string'
PUBLIC	??_C@_1HG@DBFIJJCM@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAd?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1FE@OOKDDFFL@?$AAR?$AAe?$AAp?$AAl?$AAa?$AAy?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?4?$AAB?$AAu?$AAf@ ; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3RecordingHelper@@8				; RecordingHelper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Base Class Array'
PUBLIC	??_R3ReplayBuffer@@8				; ReplayBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`vftable'
PUBLIC	??_R0?AURecordingHelper@@@8			; RecordingHelper `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@8 ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@RecordingHelper@@8		; RecordingHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2RecordingHelper@@8				; RecordingHelper::`RTTI Base Class Array'
PUBLIC	??_R0?AV_Ref_count_base@std@@@8			; std::_Ref_count_base `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_del@XP6AXPAX@Z@std@@8		; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AUReplayBuffer@@@8			; ReplayBuffer `RTTI Type Descriptor'
PUBLIC	??_R4?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Complete Object Locator'
PUBLIC	??_R4_Ref_count_base@std@@6B@			; std::_Ref_count_base::`RTTI Complete Object Locator'
PUBLIC	??_7_Ref_count_base@std@@6B@			; std::_Ref_count_base::`vftable'
PUBLIC	??_R2_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplayBuffer@@8			; ReplayBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0P6AXPAX@Z@8				; void (__cdecl*)(void *) `RTTI Type Descriptor'
PUBLIC	??_R2?$_Ref_count_del@XP6AXPAX@Z@std@@8		; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Base Class Array'
PUBLIC	??_R2ReplayBuffer@@8				; ReplayBuffer::`RTTI Base Class Array'
PUBLIC	??_R4RecordingHelper@@6B@			; RecordingHelper::`RTTI Complete Object Locator'
PUBLIC	??_R3_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`vftable'
PUBLIC	??_R1A@?0A@EA@_Ref_count_base@std@@8		; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Base Class Array'
PUBLIC	??_R4?$_Ref_count_del@XP6AXPAX@Z@std@@6B@	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Complete Object Locator'
PUBLIC	??_7RecordingHelper@@6B@			; RecordingHelper::`vftable'
PUBLIC	??_R4?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Complete Object Locator'
PUBLIC	??_7ReplayBuffer@@6B@				; ReplayBuffer::`vftable'
PUBLIC	??_R0?AV?$_Ref_count_del@XP6AXPAX@Z@std@@@8	; std::_Ref_count_del<void,void (__cdecl*)(void *)> `RTTI Type Descriptor'
PUBLIC	??_R4ReplayBuffer@@6B@				; ReplayBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$_Ref_count_del@XP6AXPAX@Z@std@@6B@	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`vftable'
PUBLIC	??_R0?AV?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@8 ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_del@XP6AXPAX@Z@std@@8 ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_?OSTryEnterMutex@@YGHPAX@Z:PROC
EXTRN	?terminate@@YAXXZ:PROC				; terminate
EXTRN	__imp_?OSTerminateThread@@YGHPAXK@Z:PROC
EXTRN	__imp_?OSCloseEvent@@YAXPAX@Z:PROC
EXTRN	__imp_?OSCloseThread@@YGHPAX@Z:PROC
EXTRN	__imp_?OSCloseMutex@@YGXPAX@Z:PROC
EXTRN	__imp_?OSCreateMutex@@YGPAXXZ:PROC
EXTRN	__imp_?GetQPCTimeMS@@YA_KXZ:PROC
EXTRN	??8type_info@@QBE_NABV0@@Z:PROC			; type_info::operator==
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_del@XP6AXPAX@Z@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_del@XP6AXPAX@Z@std@@8 DD FLAT:??_R0?AV?$_Ref_count_del@XP6AXPAX@Z@std@@@8 ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_del@XP6AXPAX@Z@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@'
	DB	'@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_7?$_Ref_count_del@XP6AXPAX@Z@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_del@XP6AXPAX@Z@std@@6B@ DD FLAT:??_R4?$_Ref_count_del@XP6AXPAX@Z@std@@6B@ ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_del@XP6AXPAX@Z@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@?$_Ref_count_del@XP6AXPAX@Z@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8 DD FLAT:??_R0?AV?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@8 ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4ReplayBuffer@@6B@
rdata$r	SEGMENT
??_R4ReplayBuffer@@6B@ DD 00H				; ReplayBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUReplayBuffer@@@8
	DD	FLAT:??_R3ReplayBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_del@XP6AXPAX@Z@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_del@XP6AXPAX@Z@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_del<void,void (__cdecl*)(void *)> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_del@XP6AXPAX@Z@std@@', 00H
data$r	ENDS
;	COMDAT ??_7ReplayBuffer@@6B@
CONST	SEGMENT
??_7ReplayBuffer@@6B@ DD FLAT:??_R4ReplayBuffer@@6B@	; ReplayBuffer::`vftable'
	DD	FLAT:??_EReplayBuffer@@UAEPAXI@Z
	DD	FLAT:?AddPacket@ReplayBuffer@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
	DD	FLAT:?AddPacket@ReplayBuffer@@UAEXPBEIKKW4PacketType@@@Z
CONST	ENDS
;	COMDAT ??_R4?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@ DD 00H ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@8
	DD	FLAT:??_R3?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7RecordingHelper@@6B@
CONST	SEGMENT
??_7RecordingHelper@@6B@ DD FLAT:??_R4RecordingHelper@@6B@ ; RecordingHelper::`vftable'
	DD	FLAT:??_ERecordingHelper@@UAEPAXI@Z
	DD	FLAT:?AddPacket@RecordingHelper@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
	DD	FLAT:?AddPacket@RecordingHelper@@UAEXPBEIKKW4PacketType@@@Z
CONST	ENDS
;	COMDAT ??_R4?$_Ref_count_del@XP6AXPAX@Z@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_del@XP6AXPAX@Z@std@@6B@ DD 00H	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_del@XP6AXPAX@Z@std@@@8
	DD	FLAT:??_R3?$_Ref_count_del@XP6AXPAX@Z@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Ref_count_base@std@@8 DD FLAT:??_R0?AV_Ref_count_base@std@@@8 ; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@ DD FLAT:??_R4?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_R3?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8 DD 00H ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R3_Ref_count_base@std@@8 DD 00H			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4RecordingHelper@@6B@
rdata$r	SEGMENT
??_R4RecordingHelper@@6B@ DD 00H			; RecordingHelper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AURecordingHelper@@@8
	DD	FLAT:??_R3RecordingHelper@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplayBuffer@@8
rdata$r	SEGMENT
??_R2ReplayBuffer@@8 DD FLAT:??_R1A@?0A@EA@ReplayBuffer@@8 ; ReplayBuffer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VideoFileStream@@8
	DD	FLAT:??_R1A@?0A@EA@ClosableStream@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_del@XP6AXPAX@Z@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_del@XP6AXPAX@Z@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_del@XP6AXPAX@Z@std@@8 ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0P6AXPAX@Z@8
data$r	SEGMENT
??_R0P6AXPAX@Z@8 DD FLAT:??_7type_info@@6B@		; void (__cdecl*)(void *) `RTTI Type Descriptor'
	DD	00H
	DB	'.P6AXPAX@Z', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReplayBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplayBuffer@@8 DD FLAT:??_R0?AUReplayBuffer@@@8 ; ReplayBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplayBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R2_Ref_count_base@std@@8 DD FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8 ; std::_Ref_count_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_7_Ref_count_base@std@@6B@
CONST	SEGMENT
??_7_Ref_count_base@std@@6B@ DD FLAT:??_R4_Ref_count_base@std@@6B@ ; std::_Ref_count_base::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_E_Ref_count_base@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_R4_Ref_count_base@std@@6B@
rdata$r	SEGMENT
??_R4_Ref_count_base@std@@6B@ DD 00H			; std::_Ref_count_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Ref_count_base@std@@@8
	DD	FLAT:??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@ DD 00H ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@8
	DD	FLAT:??_R3?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUReplayBuffer@@@8
data$r	SEGMENT
??_R0?AUReplayBuffer@@@8 DD FLAT:??_7type_info@@6B@	; ReplayBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUReplayBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$_Ref_count_del@XP6AXPAX@Z@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_del@XP6AXPAX@Z@std@@8 DD 00H		; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_del@XP6AXPAX@Z@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Ref_count_base@std@@@8
data$r	SEGMENT
??_R0?AV_Ref_count_base@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Ref_count_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2RecordingHelper@@8
rdata$r	SEGMENT
??_R2RecordingHelper@@8 DD FLAT:??_R1A@?0A@EA@RecordingHelper@@8 ; RecordingHelper::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VideoFileStream@@8
	DD	FLAT:??_R1A@?0A@EA@ClosableStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RecordingHelper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RecordingHelper@@8 DD FLAT:??_R0?AURecordingHelper@@@8 ; RecordingHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RecordingHelper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$sha'
	DB	'red_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@'
	DB	'@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AURecordingHelper@@@8
data$r	SEGMENT
??_R0?AURecordingHelper@@@8 DD FLAT:??_7type_info@@6B@	; RecordingHelper `RTTI Type Descriptor'
	DD	00H
	DB	'.?AURecordingHelper@@', 00H
data$r	ENDS
;	COMDAT ??_7?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@ DD FLAT:??_R4?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_R3ReplayBuffer@@8
rdata$r	SEGMENT
??_R3ReplayBuffer@@8 DD 00H				; ReplayBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ReplayBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8 ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3RecordingHelper@@8
rdata$r	SEGMENT
??_R3RecordingHelper@@8 DD 00H				; RecordingHelper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2RecordingHelper@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8 DD 00H ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8 DD FLAT:??_R0?AV?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@8 ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@OOKDDFFL@?$AAR?$AAe?$AAp?$AAl?$AAa?$AAy?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?4?$AAB?$AAu?$AAf@
CONST	SEGMENT
??_C@_1FE@OOKDDFFL@?$AAR?$AAe?$AAp?$AAl?$AAa?$AAy?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?4?$AAB?$AAu?$AAf@ DB 'R'
	DB	00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, '.', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u'
	DB	00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@DBFIJJCM@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAd?$AAo?$AAn@
CONST	SEGMENT
??_C@_1HG@DBFIJJCM@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAd?$AAo?$AAn@ DB 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, ':', 00H, ':', 00H, 'S', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ':', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, 'e', 00H, 't', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HO@LCDLOHIB@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAh@
CONST	SEGMENT
??_C@_1HO@LCDLOHIB@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAh@ DB 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'h', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'b'
	DB	00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e'
	DB	00H, 't', 00H, 's', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'm', 00H
	DB	'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@NILNDINM@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@
CONST	SEGMENT
??_C@_1EC@NILNDINM@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@ DB 'C'
	DB	00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H
	DB	'.', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, '.'
	DB	00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, '.', 00H, 'W', 00H, 'a'
	DB	00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JI@JCMGAMJO@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAs?$AAt?$AAo@
CONST	SEGMENT
??_C@_1JI@JCMGAMJO@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAs?$AAt?$AAo@ DB 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, ':', 00H, ':', 00H, 'S', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ':', 00H, ' ', 00H, 's', 00H, 't', 00H, 'o', 00H, 'p', 00H
	DB	'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 's', 00H, 'a'
	DB	00H, 'v', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 't'
	DB	00H, 'h', 00H, ' ', 00H, '%', 00H, 'u', 00H, ' ', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 't', 00H, 's', 00H, ' '
	DB	00H, 'r', 00H, 'e', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FJOGMPEN@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAU?$AAn?$AAa@
CONST	SEGMENT
??_C@_1NE@FJOGMPEN@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAU?$AAn?$AAa@ DB 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 'H', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, ':', 00H, ':', 00H, 'S', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ':', 00H, ' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H
	DB	't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'm', 00H, '.', 00H, ' ', 00H, 'C', 00H, 'h', 00H, 'e'
	DB	00H, 'c', 00H, 'k', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 't', 00H, 'h', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'B', 00H, 'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, '.'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@KMFJNEIK@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@
CONST	SEGMENT
??_C@_1FA@KMFJNEIK@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@ DB 'C'
	DB	00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H
	DB	'.', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, '.'
	DB	00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, '.', 00H, 'W', 00H, 'a'
	DB	00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'C', 00H
	DB	'a', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H
	DB	00H						; `string'
	ORG $+2
$SG4294830812 DB 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ':'
	DB	00H, ' ', 00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'f', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' '
	DB	00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '''', 00H
	DB	'%', 00H, 's', 00H, '''', 00H, 00H, 00H
$SG4294830797 DB 'T', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'o', 00H, 'm', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y'
	DB	00H, ' ', 00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'a'
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'i', 00H, 's', 00H
	DB	' ', 00H, 'a', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, 'y', 00H, ' ', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294830796 DB 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'A', 00H, 'l', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, 'y', 00H, 'A', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, 00H, 00H
PUBLIC	??$forward@V?$_Ptr_base@X@std@@@std@@YA$$QAV?$_Ptr_base@X@0@AAV10@@Z ; std::forward<std::_Ptr_base<void> >
PUBLIC	??$forward@V?$shared_ptr@X@std@@@std@@YA$$QAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> >
PUBLIC	?_Assign_rv@?$_Ptr_base@X@std@@QAEX$$QAV12@@Z	; std::_Ptr_base<void>::_Assign_rv
PUBLIC	??0?$_Ptr_base@X@std@@QAE@$$QAV01@@Z		; std::_Ptr_base<void>::_Ptr_base<void>
PUBLIC	??0?$shared_ptr@X@std@@QAE@$$QAV01@@Z		; std::shared_ptr<void>::shared_ptr<void>
PUBLIC	??$?0V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAU01@@Z ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void>,void>
PUBLIC	??$_Uninit_copy@$$CBEE@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<unsigned char const ,unsigned char>
PUBLIC	??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBEPAE@Z ; std::_Ptr_cat<unsigned char,unsigned char>
PUBLIC	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$_Uninit_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninit_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$forward@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YA$$QAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAU10@@Z ; std::forward<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
PUBLIC	??$_Uninitialized_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
PUBLIC	??$forward@UThreadCloser@@@std@@YA$$QAUThreadCloser@@AAU1@@Z ; std::forward<ThreadCloser>
PUBLIC	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@$$$VPAPAX@?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
PUBLIC	??$_Ucopy@PBE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPBE0PAE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char const *>
PUBLIC	??$distance@PBE@std@@YAHPBE0@Z			; std::distance<unsigned char const *>
PUBLIC	??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAXUThreadCloser@@@Z ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>
PUBLIC	?base@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::base
PUBLIC	??0?$unique_ptr@XUThreadCloser@@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>
PUBLIC	??1?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@XZ ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::~pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >
PUBLIC	??_G?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAEPAXI@Z ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::`scalar deleting destructor'
PUBLIC	??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$_Val_type@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ; std::_Val_type<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
PUBLIC	??$_Uninit_move@KKK@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
PUBLIC	??$_Val_type@PAK@std@@YAPAKPAK@Z		; std::_Val_type<unsigned long *>
PUBLIC	??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$?0V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &,void>
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
PUBLIC	??$?0AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > ><unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &,void>
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$?0AAK@?$_Tuple_val@K@std@@QAE@AAK@Z		; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long &>
PUBLIC	??$?0AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
PUBLIC	??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>
PUBLIC	?construct@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct
PUBLIC	??$_Rechecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@@std@@YAAAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAPAU10@PAU10@@Z ; std::_Rechecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
PUBLIC	??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
PUBLIC	??$_Unchecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ; std::_Unchecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
PUBLIC	??$_Rechecked@PAKPAK@std@@YAAAPAKAAPAKPAK@Z	; std::_Rechecked<unsigned long *,unsigned long *>
PUBLIC	??$_Uninit_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ; std::_Uninit_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$_Unchecked@PAK@std@@YAPAKPAK@Z		; std::_Unchecked<unsigned long *>
PUBLIC	??$_Move@AAU?$ThreadDeleter@$0DOI@@@@std@@YA$$QAU?$ThreadDeleter@$0DOI@@@AAU1@@Z ; std::_Move<ThreadDeleter<1000> &>
PUBLIC	??$_Fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@IABQAV10@@Z ; std::_Fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$_Uninit_copy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$_Fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@IABQAU10@@Z ; std::_Fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$_Uninit_copy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
PUBLIC	??$?0UReplayBuffer@@X@?$default_delete@VVideoFileStream@@@std@@QAE@ABU?$default_delete@UReplayBuffer@@@1@@Z ; std::default_delete<VideoFileStream>::default_delete<VideoFileStream><ReplayBuffer,void>
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$construct@KAAK@?$allocator@K@std@@QAEXPAKAAK@Z ; std::allocator<unsigned long>::construct<unsigned long,unsigned long &>
PUBLIC	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
PUBLIC	??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
PUBLIC	??$_Resetp0@X@?$shared_ptr@X@std@@QAEXPAXPAV_Ref_count_base@1@@Z ; std::shared_ptr<void>::_Resetp0<void>
PUBLIC	??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$?0AAW4PacketType@@@?$_Tuple_val@W4PacketType@@@std@@QAE@AAW4PacketType@@@Z ; std::_Tuple_val<enum PacketType>::_Tuple_val<enum PacketType><enum PacketType &>
PUBLIC	??$?0AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAK0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
PUBLIC	??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>
PUBLIC	??1?$_Ref_count_del@XP6AXPAX@Z@std@@UAE@XZ	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::~_Ref_count_del<void,void (__cdecl*)(void *)>
PUBLIC	??_G?$_Ref_count_del@XP6AXPAX@Z@std@@UAEPAXI@Z	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`scalar deleting destructor'
PUBLIC	?_Delete_this@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Delete_this
PUBLIC	?_Destroy@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Destroy
PUBLIC	?_Get_deleter@?$_Ref_count_del@XP6AXPAX@Z@std@@UBEPAXABVtype_info@@@Z ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Get_deleter
PUBLIC	??0?$_Ref_count_del@XP6AXPAX@Z@std@@QAE@PAXP6AX0@Z@Z ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Ref_count_del<void,void (__cdecl*)(void *)>
PUBLIC	?base@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::base
PUBLIC	??_G?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEPAXI@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`scalar deleting destructor'
PUBLIC	??$move@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
PUBLIC	??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$forward@K@std@@YA$$QAKAAK@Z			; std::forward<unsigned long>
PUBLIC	??$_Move@AAPBV?$vector@EV?$allocator@E@std@@@std@@@std@@YA$$QAPBV?$vector@EV?$allocator@E@std@@@0@AAPBV10@@Z ; std::_Move<std::vector<unsigned char,std::allocator<unsigned char> > const * &>
PUBLIC	??$_Move@AAPAX@std@@YA$$QAPAXAAPAX@Z		; std::_Move<void * &>
PUBLIC	??$_Uninitialized_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
PUBLIC	??$_Uninitialized_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$swap@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z ; std::swap<ThreadDeleter<1000> >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
PUBLIC	??$_Uninit_def_fill_n@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$_Ptr_cat@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$_Val_type@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ; std::_Val_type<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
PUBLIC	??$_Rechecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@@std@@YAAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@PAPAV10@@Z ; std::_Rechecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
PUBLIC	??$_Uninit_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
PUBLIC	??$_Unchecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ; std::_Unchecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
PUBLIC	??$_Uninit_def_fill_n@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$_Ptr_cat@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$_Val_type@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ; std::_Val_type<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
PUBLIC	??$_Rechecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@@std@@YAAAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAPAPAU10@PAPAU10@@Z ; std::_Rechecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
PUBLIC	??$_Uninit_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
PUBLIC	??$_Unchecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ; std::_Unchecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
PUBLIC	??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
PUBLIC	??$_Move@AAPAU_Container_proxy@std@@@std@@YA$$QAPAU_Container_proxy@0@AAPAU10@@Z ; std::_Move<std::_Container_proxy * &>
PUBLIC	??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
PUBLIC	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
PUBLIC	??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$_Move@AAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@@Z ; std::_Move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * * &>
PUBLIC	??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$move@AAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAU10@@Z ; std::move<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > &>
PUBLIC	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
PUBLIC	??$forward@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
PUBLIC	??$?0PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@1@@Z ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1><ReplayBuffer *,std::default_delete<ReplayBuffer> >
PUBLIC	??$forward@U?$default_delete@UReplayBuffer@@@std@@@std@@YA$$QAU?$default_delete@UReplayBuffer@@@0@AAU10@@Z ; std::forward<std::default_delete<ReplayBuffer> >
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
PUBLIC	??$construct@KAAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKAAK@Z ; std::allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>
PUBLIC	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
PUBLIC	??$emplace_back@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
PUBLIC	??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z ; std::shared_ptr<void>::_Resetp<void,void (__cdecl*)(void *)>
PUBLIC	??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
PUBLIC	??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Buynode<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
PUBLIC	??$?0PBEX@?$vector@EV?$allocator@E@std@@@std@@QAE@PBE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> ><unsigned char const *,void>
PUBLIC	?max_size@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size
PUBLIC	??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
PUBLIC	??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator==
PUBLIC	??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--
PUBLIC	??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++
PUBLIC	?_Reset0@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z ; std::_Ptr_base<void>::_Reset0
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
PUBLIC	?max_size@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
PUBLIC	??E?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
PUBLIC	??D?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator*
PUBLIC	?release@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAEPAUReplayBuffer@@XZ ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::release
PUBLIC	??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator!=
PUBLIC	??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--
PUBLIC	??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++
PUBLIC	?_Reset@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z ; std::_Ptr_base<void>::_Reset
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
PUBLIC	??4?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator=
PUBLIC	?_Incsize@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Incsize
PUBLIC	??1?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAE@XZ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	??1?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAE@XZ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::~_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??_G?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAEPAXI@Z ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`scalar deleting destructor'
PUBLIC	??_G?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAEPAXI@Z ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`scalar deleting destructor'
PUBLIC	??$_Allocate@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@IPAU10@@Z ; std::_Allocate<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$_Allocate@K@std@@YAPAKIPAK@Z			; std::_Allocate<unsigned long>
PUBLIC	??$swap@PBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAXAAPBV?$vector@EV?$allocator@E@std@@@0@0@Z ; std::swap<std::vector<unsigned char,std::allocator<unsigned char> > const *>
PUBLIC	??$_Allocate@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAPAV10@@Z ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$_Allocate@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAPAU10@@Z ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$forward@V?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$swap@PAX@std@@YAXAAPAX0@Z			; std::swap<void *>
PUBLIC	??$_Umove@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PAU21@00@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Umove<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
PUBLIC	??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
PUBLIC	??$_Allocate@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
PUBLIC	??$_Allocate@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$forward@V?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??$_Swap_adl@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z ; std::_Swap_adl<ThreadDeleter<1000> >
PUBLIC	??$_Swap_adl@PAX@std@@YAXAAPAX0@Z		; std::_Swap_adl<void *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
PUBLIC	??$_Uninitialized_default_fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
PUBLIC	??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
PUBLIC	??$_Reset@X@?$_Ptr_base@X@std@@QAEXABV01@@Z	; std::_Ptr_base<void>::_Reset<void>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
PUBLIC	??$_Uninitialized_default_fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
PUBLIC	??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
PUBLIC	??$forward@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
PUBLIC	??$forward@AAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
PUBLIC	??$forward@AB_N@std@@YAAB_NAB_N@Z		; std::forward<bool const &>
PUBLIC	??$swap@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z ; std::swap<std::_Container_proxy *>
PUBLIC	??$forward@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YAABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@ABV10@@Z ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>
PUBLIC	??$_Move@AAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YA$$QAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@AAPBV10@@Z ; std::_Move<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const * &>
PUBLIC	??$_Move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::_Move<std::_Ref_count_base * &>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
PUBLIC	??$_Ptr_cat@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0@Z ; std::_Ptr_cat<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
PUBLIC	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
PUBLIC	??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$?0V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *><std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$_Move@AAI@std@@YA$$QAIAAI@Z			; std::_Move<unsigned int &>
PUBLIC	??$swap@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::swap<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
PUBLIC	??$?8V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$forward@ABV?$shared_ptr@X@std@@@std@@YAABV?$shared_ptr@X@0@ABV10@@Z ; std::forward<std::shared_ptr<void> const &>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$?0U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *><std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
PUBLIC	??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
PUBLIC	??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
PUBLIC	??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
PUBLIC	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
PUBLIC	??$emplace_back@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
PUBLIC	??$forward@ABK@std@@YAABKABK@Z			; std::forward<unsigned long const &>
PUBLIC	??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
PUBLIC	??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ; std::_Ptr_cat<unsigned long,unsigned long>
PUBLIC	??$?0UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@X@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> ><ReplayBuffer,std::default_delete<ReplayBuffer>,void>
PUBLIC	??$forward@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z ; std::forward<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > >
PUBLIC	??$forward@PAUReplayBuffer@@@std@@YA$$QAPAUReplayBuffer@@AAPAU1@@Z ; std::forward<ReplayBuffer *>
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
PUBLIC	??$forward@$$T@std@@YA$$QA$$TAA$$T@Z		; std::forward<std::nullptr_t>
PUBLIC	??$forward@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV10@@Z ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$construct@KAAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKAAK@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>
PUBLIC	??$end@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::end<std::vector<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
PUBLIC	??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> &>
PUBLIC	??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ; std::forward<std::unique_ptr<void,ThreadCloser> >
PUBLIC	??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$?0XP6AXPAX@Z@?$shared_ptr@X@std@@QAE@PAXP6AX0@Z@Z ; std::shared_ptr<void>::shared_ptr<void><void,void (__cdecl*)(void *)>
PUBLIC	??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
PUBLIC	??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
PUBLIC	??$_Insert@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Insert<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$_Resetp0@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@PAV_Ref_count_base@1@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Resetp0<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
PUBLIC	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
PUBLIC	??$forward@AAK@std@@YAAAKAAK@Z			; std::forward<unsigned long &>
PUBLIC	??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z ; std::forward<enum PacketType &>
PUBLIC	??$_Resetp0@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@1@PAV_Ref_count_base@1@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Resetp0<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??$?0AAPBEPBE@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAPBE$$QAPBE@Z ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const ><unsigned char const * &,unsigned char const *>
PUBLIC	??$forward@PBE@std@@YA$$QAPBEAAPBE@Z		; std::forward<unsigned char const *>
PUBLIC	??$forward@AAPBE@std@@YAAAPBEAAPBE@Z		; std::forward<unsigned char const * &>
PUBLIC	?max_size@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QBEIXZ ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::max_size
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
PUBLIC	?max_size@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::max_size
PUBLIC	?max_size@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
PUBLIC	?allocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ; std::allocator_traits<std::allocator<unsigned long> >::max_size
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
PUBLIC	?_Swap@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Swap
PUBLIC	??0?$default_delete@UReplayBuffer@@@std@@QAE@XZ	; std::default_delete<ReplayBuffer>::default_delete<ReplayBuffer>
PUBLIC	??0?$default_delete@URecordingHelper@@@std@@QAE@XZ ; std::default_delete<RecordingHelper>::default_delete<RecordingHelper>
PUBLIC	??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
PUBLIC	?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Compat
PUBLIC	?allocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocate
PUBLIC	?_Assign_rv@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEX$$QAV12@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Assign_rv
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::allocate
PUBLIC	?capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::capacity
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::allocate
PUBLIC	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
PUBLIC	?allocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
PUBLIC	?_Assign_rv@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEX$$QAV12@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Assign_rv
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAE@PAUReplayBuffer@@@Z ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>
PUBLIC	??0?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAE@PAURecordingHelper@@@Z ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>
PUBLIC	??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
PUBLIC	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::allocate
PUBLIC	?_Xlen@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Xlen
PUBLIC	?max_size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
PUBLIC	?_Assign_rv@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Assign_rv
PUBLIC	?_Reset0@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset0
PUBLIC	??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	?_Swap@?$_Ptr_base@X@std@@QAEXAAV12@@Z		; std::_Ptr_base<void>::_Swap
PUBLIC	?_Xlen@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Xlen
PUBLIC	?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reallocate
PUBLIC	?_Grow_to@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Grow_to
PUBLIC	?max_size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
PUBLIC	?size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::size
PUBLIC	?_Unused_capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Unused_capacity
PUBLIC	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
PUBLIC	?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reallocate
PUBLIC	?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
PUBLIC	?_Unused_capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Unused_capacity
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::allocate
PUBLIC	?allocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocate
PUBLIC	?_Xlen@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Xlen
PUBLIC	?max_size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
PUBLIC	?allocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocate
PUBLIC	?_Reset0@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset0
PUBLIC	??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??1?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??1?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ; std::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??1?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ; std::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??1?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ; std::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??1?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??_G?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAEPAXI@Z ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::`scalar deleting destructor'
PUBLIC	??_G?$vector@EV?$allocator@E@std@@@std@@QAEPAXI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::`scalar deleting destructor'
PUBLIC	?_Delete_this@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Delete_this
PUBLIC	?_Destroy@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Destroy
PUBLIC	?_Getptr@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Getptr
PUBLIC	?_Delete_this@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Delete_this
PUBLIC	?_Destroy@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Destroy
PUBLIC	?_Getptr@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Getptr
PUBLIC	??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??0?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@PAUReplayBuffer@@@Z ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >
PUBLIC	??0?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@PAURecordingHelper@@@Z ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >
PUBLIC	?swap@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXAAV12@@Z ; std::unique_ptr<void,ThreadDeleter<1000> >::swap
PUBLIC	??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=
PUBLIC	??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
PUBLIC	?_Growmap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Growmap
PUBLIC	?rend@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rend
PUBLIC	?rbegin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rbegin
PUBLIC	??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	?_Reset@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset
PUBLIC	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	?swap@?$shared_ptr@X@std@@QAEXAAV12@@Z		; std::shared_ptr<void>::swap
PUBLIC	??0?$shared_ptr@X@std@@QAE@ABV01@@Z		; std::shared_ptr<void>::shared_ptr<void>
PUBLIC	?_Orphan_range@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Orphan_range
PUBLIC	?_Reserve@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reserve
PUBLIC	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
PUBLIC	?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::allocate
PUBLIC	?_Growmap@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Growmap
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::allocate
PUBLIC	?_Unchecked_end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unchecked_end
PUBLIC	??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$T@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
PUBLIC	?_Reset@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset
PUBLIC	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$_Allocate@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
PUBLIC	??$?0AB_N@?$_Tuple_val@_N@std@@QAE@AB_N@Z	; std::_Tuple_val<bool>::_Tuple_val<bool><bool const &>
PUBLIC	??$_Swap_adl@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z ; std::_Swap_adl<std::_Container_proxy *>
PUBLIC	??$?0ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@@Z ; std::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > ><std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>
PUBLIC	??$swap@PBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YAXAAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@0@Z ; std::swap<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const *>
PUBLIC	??$swap@PAV_Ref_count_base@std@@@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
PUBLIC	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$addressof@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
PUBLIC	??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
PUBLIC	??$addressof@URecordingHelper@@@std@@YAPAURecordingHelper@@AAU1@@Z ; std::addressof<RecordingHelper>
PUBLIC	??$addressof@VVideoFileStream@@@std@@YAPAVVideoFileStream@@AAV1@@Z ; std::addressof<VideoFileStream>
PUBLIC	??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??$swap@I@std@@YAXAAI0@Z			; std::swap<unsigned int>
PUBLIC	??$_Swap_adl@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::_Swap_adl<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
PUBLIC	??$?8V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	??$?0ABV?$shared_ptr@X@std@@@?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@ABV?$shared_ptr@X@1@@Z ; std::_Tuple_val<std::shared_ptr<void> >::_Tuple_val<std::shared_ptr<void> ><std::shared_ptr<void> const &>
PUBLIC	??$_Reset@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXABV01@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >
PUBLIC	??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> ><std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
PUBLIC	??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
PUBLIC	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$?0V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,void>
PUBLIC	??$make_move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::make_move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$?0ABK@?$_Tuple_val@K@std@@QAE@ABK@Z		; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long const &>
PUBLIC	??$_Move@PAKPAK@std@@YAPAKPAK00@Z		; std::_Move<unsigned long *,unsigned long *>
PUBLIC	??$_Reset@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXABV01@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??$?0PAUReplayBuffer@@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@X@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QAPAUReplayBuffer@@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><ReplayBuffer *,std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >,void>
PUBLIC	??$move@AAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z ; std::move<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > &>
PUBLIC	??$make_unique@UReplayBuffer@@AAH@std@@YA?AV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAH@Z ; std::make_unique<ReplayBuffer,int &>
PUBLIC	??$?0$$T$$TX@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QA$$T0@Z ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><std::nullptr_t,std::nullptr_t,void>
PUBLIC	??$make_unique@URecordingHelper@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@0@$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::make_unique<RecordingHelper,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$swap@XU?$ThreadDeleter@$0DOI@@@@std@@YAXAAV?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@0@0@Z ; std::swap<void,ThreadDeleter<1000> >
PUBLIC	??$get@$02W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<3,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??$max@K@std@@YAABKABK0@Z			; std::max<unsigned long>
PUBLIC	??$min@K@std@@YAABKABK0@Z			; std::min<unsigned long>
PUBLIC	??$get@$00W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<1,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??$get@$00KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$shared_ptr@X@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<1,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??$get@$0A@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABW4PacketType@@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<0,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
PUBLIC	??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??$rend@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::rend<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??$rbegin@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::rbegin<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??$get@$0A@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAKAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<0,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??$get@$01KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<2,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??$get@$02KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAA_NAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<3,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??$emplace_back@AAK@?$vector@KV?$allocator@K@std@@@std@@QAEXAAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long &>
PUBLIC	??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@AAV?$vector@KV?$allocator@K@std@@@0@@Z ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??$cend@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::cend<std::vector<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??$cbegin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::cbegin<std::vector<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??$emplace_back@V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@2@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAEX$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::emplace_back<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
PUBLIC	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,void>
PUBLIC	??$reset@XP6AXPAX@Z@?$shared_ptr@X@std@@QAEXPAXP6AX0@Z@Z ; std::shared_ptr<void>::reset<void,void (__cdecl*)(void *)>
PUBLIC	??$begin@V?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::begin<std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??$begin@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::begin<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??$emplace_back@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::emplace_back<unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
PUBLIC	??$end@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::end<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??$make_shared@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@2@@std@@YA?AV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@@Z ; std::make_shared<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ,enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
PUBLIC	??$make_shared@$$CBV?$vector@EV?$allocator@E@std@@@std@@AAPBEPBE@std@@YA?AV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAPBE$$QAPBE@Z ; std::make_shared<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned char const * &,unsigned char const *>
PUBLIC	?allocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocate
PUBLIC	??0?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::allocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=
PUBLIC	?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Setcont
PUBLIC	?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Compat
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>
PUBLIC	?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >
PUBLIC	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buynode0
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Setcont
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
PUBLIC	?deallocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::deallocate
PUBLIC	??0?$tuple@_N@std@@QAE@AB_N@Z			; std::tuple<bool>::tuple<bool>
PUBLIC	??G?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-
PUBLIC	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
PUBLIC	?deallocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_Mynode
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Getblock
PUBLIC	?deallocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
PUBLIC	?deallocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::deallocate
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Myval
PUBLIC	??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::deallocate
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
PUBLIC	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buyheadnode
PUBLIC	?deallocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::deallocate
PUBLIC	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	?select_on_container_copy_construction@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV12@XZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::select_on_container_copy_construction
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
PUBLIC	??E?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator++
PUBLIC	??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
PUBLIC	??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
PUBLIC	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QAE@XZ ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Compat
PUBLIC	??0?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::deallocate
PUBLIC	?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Free_proxy
PUBLIC	?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Alloc_proxy
PUBLIC	?_Swap_alloc@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXAAV12@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Swap_alloc
PUBLIC	?pop_back@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_back
PUBLIC	??0?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ; std::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??Y?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=
PUBLIC	??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
PUBLIC	??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-
PUBLIC	??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=
PUBLIC	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	?_Swap@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Swap
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Compat
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::deallocate
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
PUBLIC	?_Destroy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Destroy
PUBLIC	??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::deallocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deallocate
PUBLIC	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
PUBLIC	?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Free_proxy
PUBLIC	?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Alloc_proxy
PUBLIC	?pop_back@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_back
PUBLIC	?pop_front@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_front
PUBLIC	?empty@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::empty
PUBLIC	?_Make_iter@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Make_iter
PUBLIC	?end@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::end
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Freeheadnode
PUBLIC	??0?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	?_Freenode@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Freenode
PUBLIC	?_Unlinknode@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unlinknode
PUBLIC	??0?$default_delete@VVideoFileStream@@@std@@QAE@XZ ; std::default_delete<VideoFileStream>::default_delete<VideoFileStream>
PUBLIC	??1?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??_G?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAEPAXI@Z ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::`scalar deleting destructor'
PUBLIC	??1?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	??1?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::~_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
PUBLIC	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	?pointer_to@?$pointer_traits@PAURecordingHelper@@@std@@SAPAURecordingHelper@@AAU3@@Z ; std::pointer_traits<RecordingHelper *>::pointer_to
PUBLIC	?pointer_to@?$pointer_traits@PAVVideoFileStream@@@std@@SAPAVVideoFileStream@@AAV3@@Z ; std::pointer_traits<VideoFileStream *>::pointer_to
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEABEXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::operator*
PUBLIC	?get_deleter@?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAEAAU?$default_delete@UReplayBuffer@@@2@XZ ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::get_deleter
PUBLIC	??R?$default_delete@UReplayBuffer@@@std@@QBEXPAUReplayBuffer@@@Z ; std::default_delete<ReplayBuffer>::operator()
PUBLIC	?get_deleter@?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAEAAU?$default_delete@URecordingHelper@@@2@XZ ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::get_deleter
PUBLIC	??R?$default_delete@URecordingHelper@@@std@@QBEXPAURecordingHelper@@@Z ; std::default_delete<RecordingHelper>::operator()
PUBLIC	??D?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEAAURecordingHelper@@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator*
PUBLIC	?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::_Unique_ptr_base<void,ThreadDeleter<1000>,1>
PUBLIC	??R?$ThreadDeleter@$0DOI@@@QBEXPAX@Z		; ThreadDeleter<1000>::operator()
PUBLIC	??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
PUBLIC	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
PUBLIC	??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
PUBLIC	?get_deleter@?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>
PUBLIC	??R?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QBEXPAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::operator()
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator==
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
PUBLIC	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
PUBLIC	??1?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy
PUBLIC	?swap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV12@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::swap
PUBLIC	?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
PUBLIC	?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
PUBLIC	?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
PUBLIC	?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
PUBLIC	??0?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ; std::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+
PUBLIC	??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+
PUBLIC	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
PUBLIC	?_Decref@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Decref
PUBLIC	?_Get@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Get
PUBLIC	??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	?swap@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::swap
PUBLIC	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	?_Decref@?$_Ptr_base@X@std@@QAEXXZ		; std::_Ptr_base<void>::_Decref
PUBLIC	?_Get@?$_Ptr_base@X@std@@QBEPAXXZ		; std::_Ptr_base<void>::_Get
PUBLIC	??0?$_Ptr_base@X@std@@QAE@XZ			; std::_Ptr_base<void>::_Ptr_base<void>
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAEAAUThreadCloser@@XZ ; std::_Unique_ptr_base<void,ThreadCloser,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator==
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEABU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
PUBLIC	??0?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
PUBLIC	?_Tidy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Tidy
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
PUBLIC	?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::clear
PUBLIC	?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
PUBLIC	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
PUBLIC	??1?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??0?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??0?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
PUBLIC	?_Tidy@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Tidy
PUBLIC	?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase
PUBLIC	?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction
PUBLIC	??1?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
PUBLIC	??0?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	?_Tidy@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy
PUBLIC	?clear@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear
PUBLIC	?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase
PUBLIC	?_Make_iter@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Make_iter
PUBLIC	?end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
PUBLIC	?begin@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
PUBLIC	?get_deleter@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAEAAU?$default_delete@VVideoFileStream@@@2@XZ ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAVVideoFileStream@@@Z ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>
PUBLIC	??R?$default_delete@VVideoFileStream@@@std@@QBEXPAVVideoFileStream@@@Z ; std::default_delete<VideoFileStream>::operator()
PUBLIC	??D?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEAAVVideoFileStream@@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator*
PUBLIC	?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
PUBLIC	??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAEAAUEventDeleter@@XZ ; std::_Unique_ptr_base<void,EventDeleter,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,EventDeleter,1>::_Unique_ptr_base<void,EventDeleter,1>
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAEAAUMutexDeleter@@XZ ; std::_Unique_ptr_base<void,MutexDeleter,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,MutexDeleter,1>::_Unique_ptr_base<void,MutexDeleter,1>
PUBLIC	??1?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@ABV01@@Z ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
PUBLIC	??1?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@XZ ; std::_Tuple_val<std::shared_ptr<void> >::~_Tuple_val<std::shared_ptr<void> >
PUBLIC	??1?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@XZ ; std::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::~move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??1?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ ; std::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??1?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	?get@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QBEPAUReplayBuffer@@XZ ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::get
PUBLIC	??1?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@XZ ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::~unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >
PUBLIC	?release@?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAEPAURecordingHelper@@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::release
PUBLIC	??C?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEPAURecordingHelper@@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator->
PUBLIC	??1?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::~unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >
PUBLIC	?reset@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXPAX@Z ; std::unique_ptr<void,ThreadDeleter<1000> >::reset
PUBLIC	??B?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBE_NXZ ; std::unique_ptr<void,ThreadDeleter<1000> >::operator bool
PUBLIC	?get@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBEPAXXZ ; std::unique_ptr<void,ThreadDeleter<1000> >::get
PUBLIC	??1?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadDeleter<1000> >::~unique_ptr<void,ThreadDeleter<1000> >
PUBLIC	??0?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadDeleter<1000> >::unique_ptr<void,ThreadDeleter<1000> >
PUBLIC	??D?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator*
PUBLIC	??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
PUBLIC	??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::operator*
PUBLIC	??1?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::~unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >
PUBLIC	??0?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator!=
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
PUBLIC	?clear@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear
PUBLIC	?pop_front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_front
PUBLIC	?front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::front
PUBLIC	?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty
PUBLIC	?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
PUBLIC	?shrink_to_fit@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::shrink_to_fit
PUBLIC	??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV01@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	??0?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABKABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
PUBLIC	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
PUBLIC	??4?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator=
PUBLIC	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
PUBLIC	?get@?$shared_ptr@X@std@@QBEPAXXZ		; std::shared_ptr<void>::get
PUBLIC	??1?$shared_ptr@X@std@@QAE@XZ			; std::shared_ptr<void>::~shared_ptr<void>
PUBLIC	??0?$shared_ptr@X@std@@QAE@XZ			; std::shared_ptr<void>::shared_ptr<void>
PUBLIC	?release@?$unique_ptr@XUThreadCloser@@@std@@QAEPAXXZ ; std::unique_ptr<void,ThreadCloser>::release
PUBLIC	??1?$unique_ptr@XUThreadCloser@@@std@@QAE@XZ	; std::unique_ptr<void,ThreadCloser>::~unique_ptr<void,ThreadCloser>
PUBLIC	??0?$unique_ptr@XUThreadCloser@@@std@@QAE@PAX@Z	; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator!=
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*
PUBLIC	?end@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::end
PUBLIC	?begin@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::begin
PUBLIC	??1?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::~vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
PUBLIC	??0?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
PUBLIC	?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
PUBLIC	?back@?$vector@KV?$allocator@K@std@@@std@@QAEAAKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::back
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
PUBLIC	??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
PUBLIC	?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase
PUBLIC	??A?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@I@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::operator[]
PUBLIC	?size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::size
PUBLIC	??1?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::~deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
PUBLIC	??0?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
PUBLIC	?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase
PUBLIC	??1?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	??0?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
PUBLIC	?reset@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAEXPAVVideoFileStream@@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::reset
PUBLIC	??B?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBE_NXZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator bool
PUBLIC	??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator->
PUBLIC	??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::~unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
PUBLIC	??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@PAVVideoFileStream@@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
PUBLIC	??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
PUBLIC	?front@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::front
PUBLIC	??A?$vector@EV?$allocator@E@std@@@std@@QBEABEI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
PUBLIC	??D?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEABV?$vector@EV?$allocator@E@std@@@1@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator*
PUBLIC	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ ; std::unique_ptr<void,EventDeleter>::get
PUBLIC	??1?$unique_ptr@XUEventDeleter@@@std@@QAE@XZ	; std::unique_ptr<void,EventDeleter>::~unique_ptr<void,EventDeleter>
PUBLIC	??0?$unique_ptr@XUEventDeleter@@@std@@QAE@PAX@Z	; std::unique_ptr<void,EventDeleter>::unique_ptr<void,EventDeleter>
PUBLIC	?get@?$unique_ptr@XUMutexDeleter@@@std@@QBEPAXXZ ; std::unique_ptr<void,MutexDeleter>::get
PUBLIC	??1?$unique_ptr@XUMutexDeleter@@@std@@QAE@XZ	; std::unique_ptr<void,MutexDeleter>::~unique_ptr<void,MutexDeleter>
PUBLIC	??0?$unique_ptr@XUMutexDeleter@@@std@@QAE@PAX@Z	; std::unique_ptr<void,MutexDeleter>::unique_ptr<void,MutexDeleter>
PUBLIC	?StartRecordingFromReplayBuffer@@YAXPAUReplayBuffer@@@Z ; StartRecordingFromReplayBuffer
PUBLIC	??1?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@XZ ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::~pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >
PUBLIC	?CreateReplayBuffer@@YA?AU?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@H@Z ; CreateReplayBuffer
PUBLIC	?CreateRecordingHelper@@YAXAAV?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@@Z ; CreateRecordingHelper
PUBLIC	??_GRecordingHelper@@UAEPAXI@Z			; RecordingHelper::`scalar deleting destructor'
PUBLIC	?AddPacket@RecordingHelper@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z ; RecordingHelper::AddPacket
PUBLIC	?AddPacket@RecordingHelper@@UAEXPBEIKKW4PacketType@@@Z ; RecordingHelper::AddPacket
PUBLIC	?SaveThread@RecordingHelper@@QAEXXZ		; RecordingHelper::SaveThread
PUBLIC	?StartRecording@RecordingHelper@@QAE_NXZ	; RecordingHelper::StartRecording
PUBLIC	??1RecordingHelper@@UAE@XZ			; RecordingHelper::~RecordingHelper
PUBLIC	??0RecordingHelper@@QAE@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@Z ; RecordingHelper::RecordingHelper
PUBLIC	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
PUBLIC	??1?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::~_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
PUBLIC	??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::~reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
PUBLIC	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
PUBLIC	??_GReplayBuffer@@UAEPAXI@Z			; ReplayBuffer::`scalar deleting destructor'
PUBLIC	?SetRecording@ReplayBuffer@@SAX_N@Z		; ReplayBuffer::SetRecording
PUBLIC	?SaveComplete@ReplayBuffer@@SAXVString@@K@Z	; ReplayBuffer::SaveComplete
PUBLIC	?SaveReplayBuffer@ReplayBuffer@@QAEXK@Z		; ReplayBuffer::SaveReplayBuffer
PUBLIC	?HandleSaveTimes@ReplayBuffer@@QAEXK@Z		; ReplayBuffer::HandleSaveTimes
PUBLIC	?StartSaveThread@ReplayBuffer@@QAEXK_N@Z	; ReplayBuffer::StartSaveThread
PUBLIC	?AddPacket@ReplayBuffer@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z ; ReplayBuffer::AddPacket
PUBLIC	?AddPacket@ReplayBuffer@@UAEXPBEIKKW4PacketType@@@Z ; ReplayBuffer::AddPacket
PUBLIC	??1ReplayBuffer@@UAE@XZ				; ReplayBuffer::~ReplayBuffer
PUBLIC	??0ReplayBuffer@@QAE@H@Z			; ReplayBuffer::ReplayBuffer
PUBLIC	??0?$tuple@$$$V@std@@QAE@XZ			; std::tuple<>::tuple<>
PUBLIC	??1ScopedLock@@QAE@XZ				; ScopedLock::~ScopedLock
PUBLIC	??0ScopedLock@@QAE@PAX_N1@Z			; ScopedLock::ScopedLock
PUBLIC	??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z ; ScopedLock::ScopedLock
PUBLIC	??RThreadCloser@@QBEXPAX@Z			; ThreadCloser::operator()
PUBLIC	??RMutexDeleter@@QBEXPAX@Z			; MutexDeleter::operator()
PUBLIC	??REventDeleter@@QBEXPAX@Z			; EventDeleter::operator()
PUBLIC	?_Enable_shared@std@@YAXPDX0@Z			; std::_Enable_shared
PUBLIC	??_G_Ref_count_base@std@@UAEPAXI@Z		; std::_Ref_count_base::`scalar deleting destructor'
PUBLIC	?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z ; std::_Ref_count_base::_Get_deleter
PUBLIC	?_Incref@_Ref_count_base@std@@QAEXXZ		; std::_Ref_count_base::_Incref
PUBLIC	??1_Ref_count_base@std@@UAE@XZ			; std::_Ref_count_base::~_Ref_count_base
PUBLIC	??0_Ref_count_base@std@@IAE@XZ			; std::_Ref_count_base::_Ref_count_base
PUBLIC	?_Init_atomic_counter@std@@YAXAAKK@Z		; std::_Init_atomic_counter
PUBLIC	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z	; std::_Container_base12::_Swap_all
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?SaveReplayBuffer@@YAXPAUReplayBuffer@@K@Z	; SaveReplayBuffer
EXTRN	??_E?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAEPAXI@Z:PROC ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAEPAXI@Z:PROC ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`vector deleting destructor'
EXTRN	??_E_Ref_count_base@std@@UAEPAXI@Z:PROC		; std::_Ref_count_base::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_del@XP6AXPAX@Z@std@@UAEPAXI@Z:PROC ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`vector deleting destructor'
EXTRN	??_EReplayBuffer@@UAEPAXI@Z:PROC		; ReplayBuffer::`vector deleting destructor'
EXTRN	??_ERecordingHelper@@UAEPAXI@Z:PROC		; RecordingHelper::`vector deleting destructor'
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z$2
__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$2
__catchsym$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$2
__catchsym$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$2
__catchsym$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$2
__catchsym$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z$2
__catchsym$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z$2
__catchsym$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__catchsym$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?SaveReplayBuffer@@YAXPAUReplayBuffer@@K@Z
_TEXT	SEGMENT
_out$ = 8						; size = 4
_timestamp$ = 12					; size = 4
?SaveReplayBuffer@@YAXPAUReplayBuffer@@K@Z PROC		; SaveReplayBuffer, COMDAT

; 399  : {

	push	ebp
	mov	ebp, esp

; 400  :     if (!out) return;

	cmp	DWORD PTR _out$[ebp], 0
	jne	SHORT $LN1@SaveReplay
	jmp	SHORT $LN2@SaveReplay
$LN1@SaveReplay:

; 401  :     out->SaveReplayBuffer(timestamp);

	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	?SaveReplayBuffer@ReplayBuffer@@QAEXK@Z	; ReplayBuffer::SaveReplayBuffer
$LN2@SaveReplay:

; 402  : }

	pop	ebp
	ret	0
?SaveReplayBuffer@@YAXPAUReplayBuffer@@K@Z ENDP		; SaveReplayBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 68   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 69   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 80   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 94   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 96   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 114  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 115  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 119  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 120  : 		*this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 121  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 124  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:

; 126  : 			;
; 127  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator

; 128  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
$LN3@operator:

; 129  : 		else
; 130  : 			{	// becoming invalid, disown current parent
; 131  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 132  : 			_Lockit _Lock(_LOCK_DEBUG);
; 133  : 			_Orphan_me();
; 134  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 135  : 			}
; 136  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 137  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 140  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 141  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 142  : 		_Lockit _Lock(_LOCK_DEBUG);
; 143  : 		_Orphan_me();
; 144  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 145  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Parent_proxy$1 = -8					; size = 4
_this$ = -4						; size = 4
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 148  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 149  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN2@Adopt

; 150  : 			{	// no future parent, just disown current parent
; 151  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 152  : 			_Lockit _Lock(_LOCK_DEBUG);
; 153  : 			_Orphan_me();
; 154  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 155  : 			}
; 156  : 		else

	jmp	SHORT $LN3@Adopt
$LN2@Adopt:

; 157  : 			{	// have a parent, do adoption
; 158  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$1[ebp], ecx

; 159  : 
; 160  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 161  : 			if (_Myproxy != _Parent_proxy)
; 162  : 				{	// change parentage
; 163  : 				_Lockit _Lock(_LOCK_DEBUG);
; 164  : 				_Orphan_me();
; 165  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 166  : 				_Parent_proxy->_Myfirstiter = this;
; 167  : 				_Myproxy = _Parent_proxy;
; 168  : 				}
; 169  : 
; 170  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 171  : 			_Myproxy = _Parent_proxy;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Parent_proxy$1[ebp]
	mov	DWORD PTR [edx], eax
$LN3@Adopt:

; 172  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 173  : 			}
; 174  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 182  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]

; 184  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 214  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 215  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 216  : 	if (_Myproxy != 0)
; 217  : 		{	// proxy allocated, drain it
; 218  : 		_Lockit _Lock(_LOCK_DEBUG);
; 219  : 
; 220  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;
; 221  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)
; 222  : 			(*_Pnext)->_Myproxy = 0;
; 223  : 		_Myproxy->_Myfirstiter = 0;
; 224  : 		}
; 225  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 226  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z PROC	; std::_Container_base12::_Swap_all, COMDAT
; _this$ = ecx

; 229  : 	{	// swap all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 230  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 231  : 	_Lockit _Lock(_LOCK_DEBUG);
; 232  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 233  : 
; 234  : 	_Container_proxy *_Temp = _Myproxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx

; 235  : 	_Myproxy = _Right._Myproxy;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 236  : 	_Right._Myproxy = _Temp;

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [edx], eax

; 237  : 
; 238  : 	if (_Myproxy != 0)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@Swap_all

; 239  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@Swap_all:

; 240  : 	if (_Right._Myproxy != 0)

	mov	edx, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN3@Swap_all

; 241  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN3@Swap_all:

; 242  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ENDP	; std::_Container_base12::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xatomic0.h
;	COMDAT ?_Init_atomic_counter@std@@YAXAAKK@Z
_TEXT	SEGMENT
__Counter$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Init_atomic_counter@std@@YAXAAKK@Z PROC		; std::_Init_atomic_counter, COMDAT

; 96   : 	{	// non-atomically initialize counter

	push	ebp
	mov	ebp, esp

; 97   : 	_Counter = _Value;

	mov	eax, DWORD PTR __Counter$[ebp]
	mov	ecx, DWORD PTR __Value$[ebp]
	mov	DWORD PTR [eax], ecx

; 98   : 	}

	pop	ebp
	ret	0
?_Init_atomic_counter@std@@YAXAAKK@Z ENDP		; std::_Init_atomic_counter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0_Ref_count_base@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ref_count_base@std@@IAE@XZ PROC			; std::_Ref_count_base::_Ref_count_base, COMDAT
; _this$ = ecx

; 59   : 	_Ref_count_base()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Ref_count_base@std@@6B@

; 60   : 		{	// construct
; 61   : 		_Init_atomic_counter(_Uses, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	?_Init_atomic_counter@std@@YAXAAKK@Z	; std::_Init_atomic_counter
	add	esp, 8

; 62   : 		_Init_atomic_counter(_Weaks, 1);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	?_Init_atomic_counter@std@@YAXAAKK@Z	; std::_Init_atomic_counter
	add	esp, 8

; 63   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Ref_count_base@std@@IAE@XZ ENDP			; std::_Ref_count_base::_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1_Ref_count_base@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Ref_count_base@std@@UAE@XZ PROC			; std::_Ref_count_base::~_Ref_count_base, COMDAT
; _this$ = ecx

; 67   : 		{	// ensure that derived classes can be destroyed properly

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Ref_count_base@std@@6B@

; 68   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1_Ref_count_base@std@@UAE@XZ ENDP			; std::_Ref_count_base::~_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Incref@_Ref_count_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Incref@_Ref_count_base@std@@QAEXXZ PROC		; std::_Ref_count_base::_Incref, COMDAT
; _this$ = ecx

; 105  : 		{	// increment use count

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  : 		_MT_INCR(_Mtx, _Uses);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx

; 107  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Incref@_Ref_count_base@std@@QAEXXZ ENDP		; std::_Ref_count_base::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z PROC ; std::_Ref_count_base::_Get_deleter, COMDAT
; _this$ = ecx

; 140  : 		{	// return address of deleter object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 141  : 		return (0);

	xor	eax, eax

; 142  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Get_deleter@_Ref_count_base@std@@UBEPAXABVtype_info@@@Z ENDP ; std::_Ref_count_base::_Get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Ref_count_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Ref_count_base@std@@UAEPAXI@Z PROC			; std::_Ref_count_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Ref_count_base@std@@UAEPAXI@Z ENDP			; std::_Ref_count_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Enable_shared@std@@YAXPDX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Enable_shared@std@@YAXPDX0@Z PROC			; std::_Enable_shared, COMDAT

; 266  : 	{	// not derived from enable_shared_from_this; do nothing

	push	ebp
	mov	ebp, esp

; 267  : 	}

	pop	ebp
	ret	0
?_Enable_shared@std@@YAXPDX0@Z ENDP			; std::_Enable_shared
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??REventDeleter@@QBEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??REventDeleter@@QBEXPAX@Z PROC				; EventDeleter::operator(), COMDAT
; _this$ = ecx

; 28   :     void operator()(HANDLE h) const { if (!h) return; OSCloseEvent(h); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _h$[ebp], 0
	jne	SHORT $LN1@operator
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp_?OSCloseEvent@@YAXPAX@Z
	add	esp, 4
$LN2@operator:
	mov	esp, ebp
	pop	ebp
	ret	4
??REventDeleter@@QBEXPAX@Z ENDP				; EventDeleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??RMutexDeleter@@QBEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??RMutexDeleter@@QBEXPAX@Z PROC				; MutexDeleter::operator(), COMDAT
; _this$ = ecx

; 33   :     void operator()(HANDLE h) const { if (!h) return; OSCloseMutex(h); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _h$[ebp], 0
	jne	SHORT $LN1@operator
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp_?OSCloseMutex@@YGXPAX@Z
$LN2@operator:
	mov	esp, ebp
	pop	ebp
	ret	4
??RMutexDeleter@@QBEXPAX@Z ENDP				; MutexDeleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??RThreadCloser@@QBEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??RThreadCloser@@QBEXPAX@Z PROC				; ThreadCloser::operator(), COMDAT
; _this$ = ecx

; 38   :     void operator()(HANDLE h) const { if (!h) return; OSCloseThread(h); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _h$[ebp], 0
	jne	SHORT $LN1@operator
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp_?OSCloseThread@@YGHPAX@Z
$LN2@operator:
	mov	esp, ebp
	pop	ebp
	ret	4
??RThreadCloser@@QBEXPAX@Z ENDP				; ThreadCloser::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mutex$ = 8						; size = 4
_tryLock$ = 12						; size = 1
_autounlock$ = 16					; size = 1
??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z PROC ; ScopedLock::ScopedLock, COMDAT
; _this$ = ecx

; 59   :     {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _autounlock$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _tryLock$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _mutex$[ebp]
	call	?get@?$unique_ptr@XUMutexDeleter@@@std@@QBEPAXXZ ; std::unique_ptr<void,MutexDeleter>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScopedLock@@QAE@PAX_N1@Z		; ScopedLock::ScopedLock
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z ENDP ; ScopedLock::ScopedLock
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??0ScopedLock@@QAE@PAX_N1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mutex$ = 8						; size = 4
_tryLock$ = 12						; size = 1
_autounlock$ = 16					; size = 1
??0ScopedLock@@QAE@PAX_N1@Z PROC			; ScopedLock::ScopedLock, COMDAT
; _this$ = ecx

; 61   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _autounlock$[ebp]
	mov	BYTE PTR [ecx+1], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mutex$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 62   :         if (!h) return;

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN3@ScopedLock
	jmp	SHORT $LN4@ScopedLock
$LN3@ScopedLock:

; 63   :         if (tryLock && !OSTryEnterMutex(h)) return;

	movzx	eax, BYTE PTR _tryLock$[ebp]
	test	eax, eax
	je	SHORT $LN2@ScopedLock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?OSTryEnterMutex@@YGHPAX@Z
	test	eax, eax
	jne	SHORT $LN2@ScopedLock
	jmp	SHORT $LN4@ScopedLock
$LN2@ScopedLock:

; 64   :         if (!tryLock) OSEnterMutex(h);

	movzx	eax, BYTE PTR _tryLock$[ebp]
	test	eax, eax
	jne	SHORT $LN1@ScopedLock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?OSEnterMutex@@YGXPAX@Z
$LN1@ScopedLock:

; 65   :         locked = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 1
$LN4@ScopedLock:

; 66   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0ScopedLock@@QAE@PAX_N1@Z ENDP			; ScopedLock::ScopedLock
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??1ScopedLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ScopedLock@@QAE@XZ PROC				; ScopedLock::~ScopedLock, COMDAT
; _this$ = ecx

; 67   :     ~ScopedLock() { if (locked && unlock) OSLeaveMutex(h); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@ScopedLock
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	test	eax, eax
	je	SHORT $LN2@ScopedLock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?OSLeaveMutex@@YGXPAX@Z
$LN2@ScopedLock:
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScopedLock@@QAE@XZ ENDP				; ScopedLock::~ScopedLock
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??0?$tuple@$$$V@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$tuple@$$$V@std@@QAE@XZ PROC			; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 135  : 	tuple()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 136  : 		{	// default construct
; 137  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$tuple@$$$V@std@@QAE@XZ ENDP			; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??0ReplayBuffer@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_seconds$ = 8						; size = 4
??0ReplayBuffer@@QAE@H@Z PROC				; ReplayBuffer::ReplayBuffer, COMDAT
; _this$ = ecx

; 54   :     ReplayBuffer(int seconds) : seconds(seconds), save_times_lock(OSCreateMutex()) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VideoFileStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplayBuffer@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
	call	DWORD PTR __imp_?OSCreateMutex@@YGPAXXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$unique_ptr@XUMutexDeleter@@@std@@QAE@PAX@Z ; std::unique_ptr<void,MutexDeleter>::unique_ptr<void,MutexDeleter>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _seconds$[ebp]
	mov	DWORD PTR [ecx+48], edx

; 55   : 
; 56   :     bool start_recording = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+52], 0

; 54   :     ReplayBuffer(int seconds) : seconds(seconds), save_times_lock(OSCreateMutex()) {}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0ReplayBuffer@@QAE@H@Z ENDP				; ReplayBuffer::ReplayBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??1ReplayBuffer@@UAE@XZ
_TEXT	SEGMENT
_$S3$1 = -20						; size = 4
_$S1$2 = -16						; size = 4
_thread$3 = -12						; size = 4
_$S2$4 = -8						; size = 4
_this$ = -4						; size = 4
??1ReplayBuffer@@UAE@XZ PROC				; ReplayBuffer::~ReplayBuffer, COMDAT
; _this$ = ecx

; 59   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplayBuffer@@6B@

; 60   :         if (save_times.size())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
	test	eax, eax
	je	SHORT $LN7@ReplayBuff

; 61   :             StartSaveThread(save_times.back());

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?back@?$vector@KV?$allocator@K@std@@@std@@QAEAAKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::back
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StartSaveThread@ReplayBuffer@@QAEXK_N@Z ; ReplayBuffer::StartSaveThread
$LN7@ReplayBuff:

; 62   : 
; 63   :         if (start_recording)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+52]
	test	eax, eax
	je	SHORT $LN6@ReplayBuff

; 64   :             StartSaveThread(-1, true);

	push	1
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StartSaveThread@ReplayBuffer@@QAEXK_N@Z ; ReplayBuffer::StartSaveThread
$LN6@ReplayBuff:

; 65   : 
; 66   :         for (auto &thread : threads)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	mov	DWORD PTR _$S1$2[ebp], ecx
	lea	edx, DWORD PTR _$S2$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _$S1$2[ebp]
	call	?begin@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::begin
	lea	eax, DWORD PTR _$S3$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _$S1$2[ebp]
	call	?end@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::end
	jmp	SHORT $LN5@ReplayBuff
$LN4@ReplayBuff:
	lea	ecx, DWORD PTR _$S2$4[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++
$LN5@ReplayBuff:
	lea	ecx, DWORD PTR _$S3$1[ebp]
	push	ecx
	lea	ecx, DWORD PTR _$S2$4[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@ReplayBuff
	lea	ecx, DWORD PTR _$S2$4[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*
	mov	DWORD PTR _thread$3[ebp], eax

; 67   :             if (WaitForSingleObject(thread.second.get(), seconds * 100) != WAIT_OBJECT_0)

	mov	eax, DWORD PTR _this$[ebp]
	imul	ecx, DWORD PTR [eax+48], 100
	push	ecx
	mov	ecx, DWORD PTR _thread$3[ebp]
	add	ecx, 4
	call	?get@?$shared_ptr@X@std@@QBEPAXXZ	; std::shared_ptr<void>::get
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	test	eax, eax
	je	SHORT $LN2@ReplayBuff

; 68   :                 OSTerminateThread(thread.first.release(), 0);

	push	0
	mov	ecx, DWORD PTR _thread$3[ebp]
	call	?release@?$unique_ptr@XUThreadCloser@@@std@@QAEPAXXZ ; std::unique_ptr<void,ThreadCloser>::release
	push	eax
	call	DWORD PTR __imp_?OSTerminateThread@@YGHPAXK@Z

; 69   :             else

	jmp	SHORT $LN1@ReplayBuff
$LN2@ReplayBuff:

; 70   :                 App->AddPendingStreamThread(thread.first.release());

	mov	ecx, DWORD PTR _thread$3[ebp]
	call	?release@?$unique_ptr@XUThreadCloser@@@std@@QAEPAXXZ ; std::unique_ptr<void,ThreadCloser>::release
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddPendingStreamThread@OBS@@QAEXPAX@Z	; OBS::AddPendingStreamThread
$LN1@ReplayBuff:

; 65   : 
; 66   :         for (auto &thread : threads)

	jmp	SHORT $LN4@ReplayBuff
$LN8@ReplayBuff:

; 71   :     }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::~vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$unique_ptr@XUMutexDeleter@@@std@@QAE@XZ ; std::unique_ptr<void,MutexDeleter>::~unique_ptr<void,MutexDeleter>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::~deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VideoFileStream@@UAE@XZ		; VideoFileStream::~VideoFileStream
	mov	esp, ebp
	pop	ebp
	ret	0
??1ReplayBuffer@@UAE@XZ ENDP				; ReplayBuffer::~ReplayBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?AddPacket@ReplayBuffer@@UAEXPBEIKKW4PacketType@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_timestamp$ = 16					; size = 4
_pts$ = 20						; size = 4
_type$ = 24						; size = 4
?AddPacket@ReplayBuffer@@UAEXPBEIKKW4PacketType@@@Z PROC ; ReplayBuffer::AddPacket, COMDAT
; _this$ = ecx

; 74   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 75   :         AddPacket(make_shared<const vector<BYTE>>(data, data + size), timestamp, pts, type);

	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pts$[ebp]
	push	edx
	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	push	ecx
	call	??$make_shared@$$CBV?$vector@EV?$allocator@E@std@@@std@@AAPBEPBE@std@@YA?AV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAPBE$$QAPBE@Z ; std::make_shared<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned char const * &,unsigned char const *>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 76   :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddPacket@ReplayBuffer@@UAEXPBEIKKW4PacketType@@@Z ENDP ; ReplayBuffer::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?AddPacket@ReplayBuffer@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
_TEXT	SEGMENT
$T1 = -88						; size = 12
$T2 = -76						; size = 12
$T3 = -64						; size = 8
tv282 = -56						; size = 8
tv279 = -48						; size = 8
tv256 = -40						; size = 8
tv253 = -32						; size = 8
$T4 = -24						; size = 4
$T5 = -20						; size = 4
$T6 = -16						; size = 4
$T7 = -12						; size = 4
$T8 = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 8
_timestamp$ = 16					; size = 4
_pts$ = 20						; size = 4
_type$ = 24						; size = 4
?AddPacket@ReplayBuffer@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z PROC ; ReplayBuffer::AddPacket, COMDAT
; _this$ = ecx

; 79   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 80   :         packets.emplace_back(make_shared<const packet_t>(type, timestamp, pts, data));

	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pts$[ebp]
	push	ecx
	lea	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	lea	eax, DWORD PTR _type$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??$make_shared@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@2@@std@@YA?AV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@@Z ; std::make_shared<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ,enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 81   : 
; 82   :         if (start_recording)

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+52]
	test	eax, eax
	je	SHORT $LN6@AddPacket

; 83   :         {
; 84   :             start_recording = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+52], 0

; 85   :             CreateRecordingHelper(App->fileStream, packets);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	eax, 1028				; 00000404H
	push	eax
	call	?CreateRecordingHelper@@YAXAAV?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@@Z ; CreateRecordingHelper
	add	esp, 8
$LN6@AddPacket:

; 86   :         }
; 87   : 
; 88   :         if ((*data)[0] != 0x17)

	push	0
	lea	ecx, DWORD PTR _data$[ebp]
	call	??D?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEABV?$vector@EV?$allocator@E@std@@@1@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator*
	mov	ecx, eax
	call	??A?$vector@EV?$allocator@E@std@@@std@@QBEABEI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 23					; 00000017H
	je	SHORT $LN5@AddPacket

; 89   :             return;

	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	jmp	$LN7@AddPacket
$LN5@AddPacket:

; 90   : 
; 91   :         HandleSaveTimes(pts);

	mov	edx, DWORD PTR _pts$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HandleSaveTimes@ReplayBuffer@@QAEXK@Z	; ReplayBuffer::HandleSaveTimes

; 92   : 
; 93   :         keyframes.emplace_back(timestamp, --end(packets));

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	??$end@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::end<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	mov	ecx, eax
	call	??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
	push	eax
	lea	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$emplace_back@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::emplace_back<unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
$LN4@AddPacket:

; 94   : 
; 95   :         while (keyframes.size() > 2)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::size
	cmp	eax, 2
	jbe	$LN3@AddPacket

; 96   :         {
; 97   :             if (((long long)timestamp - keyframes[0].first) < (seconds * 1000) || ((long long)timestamp - keyframes[1].first) < (seconds * 1000))

	mov	esi, DWORD PTR _timestamp$[ebp]
	xor	edi, edi
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@I@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::operator[]
	mov	eax, DWORD PTR [eax]
	xor	ecx, ecx
	sub	esi, eax
	sbb	edi, ecx
	mov	edx, DWORD PTR _this$[ebp]
	imul	eax, DWORD PTR [edx+48], 1000
	cdq
	mov	DWORD PTR tv253[ebp], esi
	mov	DWORD PTR tv253[ebp+4], edi
	mov	DWORD PTR tv256[ebp], eax
	mov	DWORD PTR tv256[ebp+4], edx
	mov	eax, DWORD PTR tv253[ebp+4]
	cmp	eax, DWORD PTR tv256[ebp+4]
	jl	SHORT $LN1@AddPacket
	jg	SHORT $LN9@AddPacket
	mov	ecx, DWORD PTR tv253[ebp]
	cmp	ecx, DWORD PTR tv256[ebp]
	jb	SHORT $LN1@AddPacket
$LN9@AddPacket:
	mov	esi, DWORD PTR _timestamp$[ebp]
	xor	edi, edi
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@I@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::operator[]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	sub	esi, edx
	sbb	edi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	imul	eax, DWORD PTR [ecx+48], 1000
	cdq
	mov	DWORD PTR tv279[ebp], esi
	mov	DWORD PTR tv279[ebp+4], edi
	mov	DWORD PTR tv282[ebp], eax
	mov	DWORD PTR tv282[ebp+4], edx
	mov	edx, DWORD PTR tv279[ebp+4]
	cmp	edx, DWORD PTR tv282[ebp+4]
	jg	SHORT $LN2@AddPacket
	jl	SHORT $LN1@AddPacket
	mov	eax, DWORD PTR tv279[ebp]
	cmp	eax, DWORD PTR tv282[ebp]
	jae	SHORT $LN2@AddPacket
$LN1@AddPacket:

; 98   :                 break;

	jmp	$LN3@AddPacket
$LN2@AddPacket:

; 99   : 
; 100  :             packets.erase(begin(packets), keyframes[1].second);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@I@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::operator[]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T8[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??$begin@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::begin<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase

; 101  :             keyframes.erase(begin(keyframes));

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$begin@V?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::begin<std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 102  :         }

	jmp	$LN4@AddPacket
$LN3@AddPacket:

; 103  :     }

	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
$LN7@AddPacket:
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddPacket@ReplayBuffer@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z ENDP ; ReplayBuffer::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?StartSaveThread@ReplayBuffer@@QAEXK_N@Z
_TEXT	SEGMENT
$T1 = -56						; size = 20
_init_done$ = -36					; size = 8
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
tv135 = -16						; size = 4
$T5 = -12						; size = 4
_this$ = -8						; size = 4
$T6 = -4						; size = 4
_save_time$ = 8						; size = 4
_last_minute_recording$ = 12				; size = 1
?StartSaveThread@ReplayBuffer@@QAEXK_N@Z PROC		; ReplayBuffer::StartSaveThread, COMDAT
; _this$ = ecx

; 107  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T6[ebp], 0

; 108  :         shared_ptr<void> init_done;

	lea	ecx, DWORD PTR _init_done$[ebp]
	call	??0?$shared_ptr@X@std@@QAE@XZ		; std::shared_ptr<void>::shared_ptr<void>

; 109  :         init_done.reset(CreateEvent(nullptr, true, false, nullptr), OSCloseEvent);

	mov	eax, DWORD PTR __imp_?OSCloseEvent@@YAXPAX@Z
	push	eax
	push	0
	push	0
	push	1
	push	0
	call	DWORD PTR __imp__CreateEventW@16
	push	eax
	lea	ecx, DWORD PTR _init_done$[ebp]
	call	??$reset@XP6AXPAX@Z@?$shared_ptr@X@std@@QAEXPAXP6AX0@Z@Z ; std::shared_ptr<void>::reset<void,void (__cdecl*)(void *)>

; 110  :         threads.emplace_back(
; 111  :             unique_ptr<void, ThreadCloser>(OSCreateThread(SaveReplayBufferThread, new thread_param_t(save_time, init_done, { begin(packets), end(packets) }, last_minute_recording))),
; 112  :             init_done);

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN3@StartSaveT
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$end@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::end<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$begin@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::begin<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,void>
	or	DWORD PTR $T6[ebp], 1
	lea	ecx, DWORD PTR _last_minute_recording$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	lea	eax, DWORD PTR _init_done$[ebp]
	push	eax
	lea	ecx, DWORD PTR _save_time$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABKABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN4@StartSaveT
$LN3@StartSaveT:
	mov	DWORD PTR tv135[ebp], 0
$LN4@StartSaveT:
	lea	edx, DWORD PTR _init_done$[ebp]
	push	edx
	mov	eax, DWORD PTR tv135[ebp]
	push	eax
	push	OFFSET ?SaveReplayBufferThread@@YGKPAX@Z ; SaveReplayBufferThread
	call	DWORD PTR __imp_?OSCreateThread@@YGPAXP6GKPAX@Z0@Z
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0?$unique_ptr@XUThreadCloser@@@std@@QAE@PAX@Z ; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??$emplace_back@V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@2@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAEX$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::emplace_back<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$unique_ptr@XUThreadCloser@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadCloser>::~unique_ptr<void,ThreadCloser>
	mov	ecx, DWORD PTR $T6[ebp]
	and	ecx, 1
	je	SHORT $LN5@StartSaveT
	and	DWORD PTR $T6[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
$LN5@StartSaveT:

; 113  :     }

	lea	ecx, DWORD PTR _init_done$[ebp]
	call	??1?$shared_ptr@X@std@@QAE@XZ		; std::shared_ptr<void>::~shared_ptr<void>
	mov	esp, ebp
	pop	ebp
	ret	8
?StartSaveThread@ReplayBuffer@@QAEXK_N@Z ENDP		; ReplayBuffer::StartSaveThread
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?HandleSaveTimes@ReplayBuffer@@QAEXK@Z
_TEXT	SEGMENT
_st$1 = -44						; size = 8
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -28						; size = 4
$T5 = -24						; size = 4
$T6 = -20						; size = 4
_save_time$ = -16					; size = 4
_iter$7 = -12						; size = 4
_this$ = -8						; size = 4
_save$8 = -1						; size = 1
_timestamp$ = 8						; size = 4
?HandleSaveTimes@ReplayBuffer@@QAEXK@Z PROC		; ReplayBuffer::HandleSaveTimes, COMDAT
; _this$ = ecx

; 116  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 117  :         DWORD save_time = 0;

	mov	DWORD PTR _save_time$[ebp], 0

; 118  :         {
; 119  :             bool save = false;

	mov	BYTE PTR _save$8[ebp], 0

; 120  : 
; 121  :             ScopedLock st(save_times_lock);

	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	lea	ecx, DWORD PTR _st$1[ebp]
	call	??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z ; ScopedLock::ScopedLock

; 122  :             auto iter = cbegin(save_times);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR _iter$7[ebp]
	push	edx
	call	??$cbegin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::cbegin<std::vector<unsigned long,std::allocator<unsigned long> > >
	add	esp, 8
	jmp	SHORT $LN5@HandleSave
$LN4@HandleSave:

; 123  :             for (; iter != cend(save_times); iter++)

	push	0
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$7[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
$LN5@HandleSave:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??$cend@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::cend<std::vector<unsigned long,std::allocator<unsigned long> > >
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _iter$7[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@HandleSave

; 124  :             {
; 125  :                 if (*iter > timestamp)

	lea	ecx, DWORD PTR _iter$7[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _timestamp$[ebp]
	jbe	SHORT $LN2@HandleSave

; 126  :                     break;

	jmp	SHORT $LN3@HandleSave
$LN2@HandleSave:

; 127  : 
; 128  :                 save = true;

	mov	BYTE PTR _save$8[ebp], 1

; 129  :                 save_time = *iter;

	lea	ecx, DWORD PTR _iter$7[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _save_time$[ebp], edx

; 130  :             }

	jmp	SHORT $LN4@HandleSave
$LN3@HandleSave:

; 131  : 
; 132  :             if (!save)

	movzx	eax, BYTE PTR _save$8[ebp]
	test	eax, eax
	jne	SHORT $LN1@HandleSave

; 133  :                 return;

	lea	ecx, DWORD PTR _st$1[ebp]
	call	??1ScopedLock@@QAE@XZ			; ScopedLock::~ScopedLock
	jmp	SHORT $LN6@HandleSave
$LN1@HandleSave:

; 134  : 
; 135  :             save_times.erase(begin(save_times), iter);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@AAV?$vector@KV?$allocator@K@std@@@0@@Z ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR _iter$7[ebp]
	push	ecx
	mov	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::erase

; 136  :         }

	lea	ecx, DWORD PTR _st$1[ebp]
	call	??1ScopedLock@@QAE@XZ			; ScopedLock::~ScopedLock

; 137  : 
; 138  :         StartSaveThread(save_time);

	push	0
	mov	ecx, DWORD PTR _save_time$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StartSaveThread@ReplayBuffer@@QAEXK_N@Z ; ReplayBuffer::StartSaveThread
$LN6@HandleSave:

; 139  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?HandleSaveTimes@ReplayBuffer@@QAEXK@Z ENDP		; ReplayBuffer::HandleSaveTimes
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?SaveReplayBuffer@ReplayBuffer@@QAEXK@Z
_TEXT	SEGMENT
_st$ = -12						; size = 8
_this$ = -4						; size = 4
_timestamp$ = 8						; size = 4
?SaveReplayBuffer@ReplayBuffer@@QAEXK@Z PROC		; ReplayBuffer::SaveReplayBuffer, COMDAT
; _this$ = ecx

; 142  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 143  :         ScopedLock st(save_times_lock);

	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	lea	ecx, DWORD PTR _st$[ebp]
	call	??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z ; ScopedLock::ScopedLock

; 144  :         save_times.emplace_back(timestamp);

	lea	ecx, DWORD PTR _timestamp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$emplace_back@AAK@?$vector@KV?$allocator@K@std@@@std@@QAEXAAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long &>

; 145  :     }

	lea	ecx, DWORD PTR _st$[ebp]
	call	??1ScopedLock@@QAE@XZ			; ScopedLock::~ScopedLock
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveReplayBuffer@ReplayBuffer@@QAEXK@Z ENDP		; ReplayBuffer::SaveReplayBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?SaveComplete@ReplayBuffer@@SAXVString@@K@Z
_TEXT	SEGMENT
_name$ = 8						; size = 8
_recordingLengthMS$ = 16				; size = 4
?SaveComplete@ReplayBuffer@@SAXVString@@K@Z PROC	; ReplayBuffer::SaveComplete, COMDAT

; 148  :     {

	push	ebp
	mov	ebp, esp

; 149  :         App->lastOutputFile = name;

	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	add	ecx, 1336				; 00000538H
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 150  :         App->ReportReplayBufferSavedTrigger(name, recordingLengthMS);

	mov	ecx, DWORD PTR _recordingLengthMS$[ebp]
	push	ecx
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 151  :     }

	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	pop	ebp
	ret	0
?SaveComplete@ReplayBuffer@@SAXVString@@K@Z ENDP	; ReplayBuffer::SaveComplete
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?SetRecording@ReplayBuffer@@SAX_N@Z
_TEXT	SEGMENT
_recording$ = 8						; size = 1
?SetRecording@ReplayBuffer@@SAX_N@Z PROC		; ReplayBuffer::SetRecording, COMDAT

; 154  :     {

	push	ebp
	mov	ebp, esp

; 155  :         App->bRecording = recording;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	cl, BYTE PTR _recording$[ebp]
	mov	BYTE PTR [eax+623], cl

; 156  :         App->ConfigureStreamButtons();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ConfigureStreamButtons@OBS@@AAEXXZ	; OBS::ConfigureStreamButtons

; 157  :         if (recording)

	movzx	edx, BYTE PTR _recording$[ebp]
	test	edx, edx
	je	SHORT $LN2@SetRecordi

; 158  :             App->ReportStartRecordingTrigger();

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	eax, DWORD PTR [edx+84]
	call	eax
$LN2@SetRecordi:

; 159  :     }

	pop	ebp
	ret	0
?SetRecording@ReplayBuffer@@SAX_N@Z ENDP		; ReplayBuffer::SetRecording
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GReplayBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GReplayBuffer@@UAEPAXI@Z PROC			; ReplayBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ReplayBuffer@@UAE@XZ			; ReplayBuffer::~ReplayBuffer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplayBuffer@@UAEPAXI@Z ENDP			; ReplayBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?SaveReplayBufferThread@@YGKPAX@Z
_TEXT	SEGMENT
$T1 = -116						; size = 12
$T2 = -104						; size = 12
_it$3 = -92						; size = 12
_signal$ = -80						; size = 8
_name$ = -72						; size = 8
$T4 = -64						; size = 4
_target_ts$ = -60					; size = 4
$T5 = -56						; size = 4
tv254 = -52						; size = 4
_buf$6 = -48						; size = 4
tv215 = -44						; size = 4
_stop_ts$ = -40						; size = 4
_ts$7 = -36						; size = 4
_timestamp$8 = -32					; size = 4
_lowest_timestamp$ = -28				; size = 4
_highest_timestamp$ = -24				; size = 4
_out$ = -20						; size = 4
_packets$ = -16						; size = 4
_packet$9 = -12						; size = 4
_param$ = -8						; size = 4
_signalled$ = -3					; size = 1
$T10 = -2						; size = 1
tv75 = -1						; size = 1
_arg$ = 8						; size = 4
?SaveReplayBufferThread@@YGKPAX@Z PROC			; SaveReplayBufferThread, COMDAT

; 163  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H

; 164  :     unique_ptr<ReplayBuffer::thread_param_t> param((ReplayBuffer::thread_param_t*)arg);

	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _param$[ebp]
	call	??0?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >

; 165  : 
; 166  :     String name = GetOutputFilename(!get<3>(*param));

	lea	ecx, DWORD PTR _param$[ebp]
	call	??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::operator*
	push	eax
	call	??$get@$02KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAA_NAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<3,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
	add	esp, 4
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN13@SaveReplay
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN14@SaveReplay
$LN13@SaveReplay:
	mov	BYTE PTR tv75[ebp], 0
$LN14@SaveReplay:
	movzx	edx, BYTE PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?GetOutputFilename@@YA?AVString@@_N@Z	; GetOutputFilename
	add	esp, 8

; 167  :     unique_ptr<VideoFileStream> out(CreateFileStream(name));

	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?CreateFileStream@@YAPAVVideoFileStream@@VString@@@Z ; CreateFileStream
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@PAVVideoFileStream@@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >

; 168  :     if (!out)

	lea	ecx, DWORD PTR _out$[ebp]
	call	??B?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBE_NXZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN10@SaveReplay

; 169  :     {
; 170  :         Log(L"ReplayBuffer: Failed to create file stream for file name '%s'", name.Array());

	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294830812
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 8

; 171  :         return 1;

	mov	DWORD PTR $T5[ebp], 1
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::~unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _param$[ebp]
	call	??1?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::~unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN11@SaveReplay
$LN10@SaveReplay:

; 172  :     }
; 173  : 
; 174  :     auto &packets = get<2>(*param);

	lea	ecx, DWORD PTR _param$[ebp]
	call	??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::operator*
	push	eax
	call	??$get@$01KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<2,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
	add	esp, 4
	mov	DWORD PTR _packets$[ebp], eax

; 175  :     DWORD target_ts = get<0>(*param);

	lea	ecx, DWORD PTR _param$[ebp]
	call	??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::operator*
	push	eax
	call	??$get@$0A@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAKAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<0,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _target_ts$[ebp], ecx

; 176  : 
; 177  :     DWORD stop_ts = -1;

	mov	DWORD PTR _stop_ts$[ebp], -1

; 178  :     for (auto it = rbegin(packets); it != rend(packets); it++)

	mov	edx, DWORD PTR _packets$[ebp]
	push	edx
	lea	eax, DWORD PTR _it$3[ebp]
	push	eax
	call	??$rbegin@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::rbegin<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	jmp	SHORT $LN9@SaveReplay
$LN8@SaveReplay:
	push	0
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$3[ebp]
	call	??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@SaveReplay:
	mov	edx, DWORD PTR _packets$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$rend@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::rend<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _it$3[ebp]
	push	ecx
	call	??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	add	esp, 8
	mov	BYTE PTR $T10[ebp], al
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T10[ebp]
	test	edx, edx
	je	SHORT $LN7@SaveReplay

; 179  :     {
; 180  :         if (get<0>(**it) == PacketType_Audio)

	lea	ecx, DWORD PTR _it$3[ebp]
	call	??D?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$0A@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABW4PacketType@@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<0,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN6@SaveReplay

; 181  :             continue;

	jmp	SHORT $LN8@SaveReplay
$LN6@SaveReplay:

; 182  : 
; 183  :         DWORD ts = get<2>(**it);

	lea	ecx, DWORD PTR _it$3[ebp]
	call	??D?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator*
	mov	ecx, eax
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _ts$7[ebp], eax

; 184  :         if (ts <= target_ts)

	mov	ecx, DWORD PTR _ts$7[ebp]
	cmp	ecx, DWORD PTR _target_ts$[ebp]
	ja	SHORT $LN5@SaveReplay

; 185  :             break;

	jmp	SHORT $LN7@SaveReplay
$LN5@SaveReplay:

; 186  : 
; 187  :         stop_ts = ts;

	mov	edx, DWORD PTR _ts$7[ebp]
	mov	DWORD PTR _stop_ts$[ebp], edx
	jmp	$LN8@SaveReplay
$LN7@SaveReplay:

; 188  :     }

	lea	ecx, DWORD PTR _it$3[ebp]
	call	??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 189  : 
; 190  :     bool signalled = false;

	mov	BYTE PTR _signalled$[ebp], 0

; 191  :     auto signal = [&]()
; 192  :     {
; 193  :         if (signalled)
; 194  :             return;
; 195  : 
; 196  :         SetEvent(get<1>(*param).get());
; 197  :         signalled = true;
; 198  :     };

	lea	eax, DWORD PTR _param$[ebp]
	push	eax
	lea	ecx, DWORD PTR _signalled$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _signal$[ebp]
	call	??0<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QAE@AA_NAAV?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@@Z ; <lambda_e69452cdd60796713941bdb1c79e9ef0>::<lambda_e69452cdd60796713941bdb1c79e9ef0>

; 199  : 
; 200  :     DWORD lowest_timestamp = MAXDWORD;

	mov	DWORD PTR _lowest_timestamp$[ebp], -1

; 201  :     DWORD highest_timestamp = 0;

	mov	DWORD PTR _highest_timestamp$[ebp], 0
$LN4@SaveReplay:

; 202  : 
; 203  :     while (packets.size())

	mov	ecx, DWORD PTR _packets$[ebp]
	call	?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
	test	eax, eax
	je	$LN3@SaveReplay

; 204  :     {
; 205  :         auto &packet = packets.front();

	mov	ecx, DWORD PTR _packets$[ebp]
	call	?front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::front
	mov	DWORD PTR _packet$9[ebp], eax

; 206  :         if (get<2>(*packet) == stop_ts)

	mov	ecx, DWORD PTR _packet$9[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR _stop_ts$[ebp]
	jne	SHORT $LN2@SaveReplay

; 207  :             break;

	jmp	$LN3@SaveReplay
$LN2@SaveReplay:

; 208  : 
; 209  :         auto timestamp = get<1>(*packet);

	mov	ecx, DWORD PTR _packet$9[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$00W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<1,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _timestamp$8[ebp], eax

; 210  :         lowest_timestamp = min(timestamp, lowest_timestamp);

	lea	ecx, DWORD PTR _lowest_timestamp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _timestamp$8[ebp]
	push	edx
	call	??$min@K@std@@YAABKABK0@Z		; std::min<unsigned long>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _lowest_timestamp$[ebp], eax

; 211  :         highest_timestamp = max(timestamp, highest_timestamp);

	lea	ecx, DWORD PTR _highest_timestamp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _timestamp$8[ebp]
	push	edx
	call	??$max@K@std@@YAABKABK0@Z		; std::max<unsigned long>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _highest_timestamp$[ebp], eax

; 212  : 
; 213  :         auto &buf = get<3>(*packet);

	mov	ecx, DWORD PTR _packet$9[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$02W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<3,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	DWORD PTR _buf$6[ebp], eax

; 214  :         out->AddPacket(buf, timestamp, get<2>(*packet), get<0>(*packet));

	lea	ecx, DWORD PTR _out$[ebp]
	call	??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator->
	mov	DWORD PTR tv215[ebp], eax
	mov	ecx, DWORD PTR _packet$9[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$0A@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABW4PacketType@@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<0,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _packet$9[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _timestamp$8[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _buf$6[ebp]
	push	edx
	call	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	mov	eax, DWORD PTR tv215[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv215[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 215  : 
; 216  :         if (buf->front() == 0x17)

	mov	ecx, DWORD PTR _buf$6[ebp]
	call	??C?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@1@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator->
	mov	ecx, eax
	call	?front@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::front
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 23					; 00000017H
	jne	SHORT $LN1@SaveReplay

; 217  :             signal();

	lea	ecx, DWORD PTR _signal$[ebp]
	call	??R<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QBEXXZ ; <lambda_e69452cdd60796713941bdb1c79e9ef0>::operator()
$LN1@SaveReplay:

; 218  : 
; 219  :         packets.pop_front();

	mov	ecx, DWORD PTR _packets$[ebp]
	call	?pop_front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_front

; 220  :     }

	jmp	$LN4@SaveReplay
$LN3@SaveReplay:

; 221  :     signal();

	lea	ecx, DWORD PTR _signal$[ebp]
	call	??R<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QBEXXZ ; <lambda_e69452cdd60796713941bdb1c79e9ef0>::operator()

; 222  : 
; 223  :     out.reset();

	push	0
	lea	ecx, DWORD PTR _out$[ebp]
	call	?reset@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAEXPAVVideoFileStream@@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::reset

; 224  :     ReplayBuffer::SaveComplete(name, highest_timestamp > lowest_timestamp ? (highest_timestamp - lowest_timestamp) : 0);

	mov	edx, DWORD PTR _highest_timestamp$[ebp]
	cmp	edx, DWORD PTR _lowest_timestamp$[ebp]
	jbe	SHORT $LN15@SaveReplay
	mov	eax, DWORD PTR _highest_timestamp$[ebp]
	sub	eax, DWORD PTR _lowest_timestamp$[ebp]
	mov	DWORD PTR tv254[ebp], eax
	jmp	SHORT $LN16@SaveReplay
$LN15@SaveReplay:
	mov	DWORD PTR tv254[ebp], 0
$LN16@SaveReplay:
	mov	ecx, DWORD PTR tv254[ebp]
	push	ecx
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?SaveComplete@ReplayBuffer@@SAXVString@@K@Z ; ReplayBuffer::SaveComplete
	add	esp, 12					; 0000000cH

; 225  : 
; 226  :     return 0;

	mov	DWORD PTR $T4[ebp], 0
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::~unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _param$[ebp]
	call	??1?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::~unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >
	mov	eax, DWORD PTR $T4[ebp]
$LN11@SaveReplay:

; 227  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SaveReplayBufferThread@@YGKPAX@Z ENDP			; SaveReplayBufferThread
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??0<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QAE@AA_NAAV?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___signalled$ = 8					; size = 4
___param$ = 12						; size = 4
??0<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QAE@AA_NAAV?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@@Z PROC ; <lambda_e69452cdd60796713941bdb1c79e9ef0>::<lambda_e69452cdd60796713941bdb1c79e9ef0>, COMDAT
; _this$ = ecx

; 198  :     };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___signalled$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___param$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QAE@AA_NAAV?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@@Z ENDP ; <lambda_e69452cdd60796713941bdb1c79e9ef0>::<lambda_e69452cdd60796713941bdb1c79e9ef0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??R<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QBEXXZ PROC ; <lambda_e69452cdd60796713941bdb1c79e9ef0>::operator(), COMDAT
; _this$ = ecx

; 192  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 193  :         if (signalled)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN1@operator

; 194  :             return;

	jmp	SHORT $LN2@operator
$LN1@operator:

; 195  : 
; 196  :         SetEvent(get<1>(*param).get());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::operator*
	push	eax
	call	??$get@$00KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$shared_ptr@X@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ; std::get<1,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
	add	esp, 4
	mov	ecx, eax
	call	?get@?$shared_ptr@X@std@@QBEPAXXZ	; std::shared_ptr<void>::get
	push	eax
	call	DWORD PTR __imp__SetEvent@4

; 197  :         signalled = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 1
$LN2@operator:

; 198  :     };

	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_e69452cdd60796713941bdb1c79e9ef0>@@QBEXXZ ENDP ; <lambda_e69452cdd60796713941bdb1c79e9ef0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::~reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::~reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@XZ PROC ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::~_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@XZ ENDP ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::~_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??0RecordingHelper@@QAE@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_packets$ = 8						; size = 20
??0RecordingHelper@@QAE@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@Z PROC ; RecordingHelper::RecordingHelper, COMDAT
; _this$ = ecx

; 244  :     {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VideoFileStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RecordingHelper@@6B@
	lea	ecx, DWORD PTR _packets$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV01@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	call	DWORD PTR __imp_?OSCreateMutex@@YGPAXXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$unique_ptr@XUMutexDeleter@@@std@@QAE@PAX@Z ; std::unique_ptr<void,MutexDeleter>::unique_ptr<void,MutexDeleter>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
	push	0
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__CreateEventW@16
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$unique_ptr@XUEventDeleter@@@std@@QAE@PAX@Z ; std::unique_ptr<void,EventDeleter>::unique_ptr<void,EventDeleter>
	push	0
	push	0
	push	1
	push	0
	call	DWORD PTR __imp__CreateEventW@16
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0?$unique_ptr@XUEventDeleter@@@std@@QAE@PAX@Z ; std::unique_ptr<void,EventDeleter>::unique_ptr<void,EventDeleter>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadDeleter<1000> >::unique_ptr<void,ThreadDeleter<1000> >

; 239  :     QWORD next_status_time = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], 0
	mov	DWORD PTR [edx+52], 0

; 240  :     UINT status_id = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], -1

; 244  :     {}

	lea	ecx, DWORD PTR _packets$[ebp]
	call	??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0RecordingHelper@@QAE@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@Z ENDP ; RecordingHelper::RecordingHelper
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??1RecordingHelper@@UAE@XZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
??1RecordingHelper@@UAE@XZ PROC				; RecordingHelper::~RecordingHelper, COMDAT
; _this$ = ecx

; 247  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RecordingHelper@@6B@

; 248  :         if (status_id != -1)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], -1
	je	SHORT $LN2@RecordingH

; 249  :             App->RemoveStreamInfo(status_id);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveStreamInfo@OBS@@QAEXI@Z		; OBS::RemoveStreamInfo
$LN2@RecordingH:

; 250  : 
; 251  :         if (WaitForSingleObject(save_thread.get(), min((DWORD)buffered_packets.size()*5, (DWORD)10000)) != WAIT_OBJECT_0)

	mov	DWORD PTR $T2[ebp], 10000		; 00002710H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
	imul	ecx, eax, 5
	mov	DWORD PTR $T1[ebp], ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??$min@K@std@@YAABKABK0@Z		; std::min<unsigned long>
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?get@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBEPAXXZ ; std::unique_ptr<void,ThreadDeleter<1000> >::get
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	test	eax, eax
	je	SHORT $LN3@RecordingH

; 252  :             SetEvent(stop_event.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ ; std::unique_ptr<void,EventDeleter>::get
	push	eax
	call	DWORD PTR __imp__SetEvent@4
$LN3@RecordingH:

; 253  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadDeleter<1000> >::~unique_ptr<void,ThreadDeleter<1000> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1?$unique_ptr@XUEventDeleter@@@std@@QAE@XZ ; std::unique_ptr<void,EventDeleter>::~unique_ptr<void,EventDeleter>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$unique_ptr@XUEventDeleter@@@std@@QAE@XZ ; std::unique_ptr<void,EventDeleter>::~unique_ptr<void,EventDeleter>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::~unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1?$unique_ptr@XUMutexDeleter@@@std@@QAE@XZ ; std::unique_ptr<void,MutexDeleter>::~unique_ptr<void,MutexDeleter>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VideoFileStream@@UAE@XZ		; VideoFileStream::~VideoFileStream
	mov	esp, ebp
	pop	ebp
	ret	0
??1RecordingHelper@@UAE@XZ ENDP				; RecordingHelper::~RecordingHelper
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?StartRecording@RecordingHelper@@QAE_NXZ
_TEXT	SEGMENT
_name$ = -16						; size = 8
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
?StartRecording@RecordingHelper@@QAE_NXZ PROC		; RecordingHelper::StartRecording, COMDAT
; _this$ = ecx

; 256  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 257  :         String name = GetOutputFilename();

	push	0
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?GetOutputFilename@@YA?AVString@@_N@Z	; GetOutputFilename
	add	esp, 8

; 258  :         file_stream.reset(CreateFileStream(name));

	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?CreateFileStream@@YAPAVVideoFileStream@@VString@@@Z ; CreateFileStream
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?reset@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAEXPAVVideoFileStream@@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::reset

; 259  :         if (!file_stream)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??B?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBE_NXZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@StartRecor

; 260  :         {
; 261  :             using ::locale;
; 262  :             AppWarning(L"RecordingHelper::SaveThread: Unable to create the file stream. Check the file path in Broadcast Settings.");

	push	OFFSET ??_C@_1NE@FJOGMPEN@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAU?$AAn?$AAa@
	call	DWORD PTR __imp_?AppWarning@@YAXPB_WZZ
	add	esp, 4

; 263  :             OBSMessageBox(hwndMain, Str("Capture.Start.FileStream.Warning"), Str("Capture.Start.FileStream.WarningCaption"), MB_OK | MB_ICONWARNING);

	push	48					; 00000030H
	push	OFFSET ??_C@_1FA@KMFJNEIK@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	OFFSET ??_C@_1EC@NILNDINM@?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AA?4?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?4?$AAF?$AAi?$AAl?$AAe?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?4?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	eax, DWORD PTR ?hwndMain@@3PAUHWND__@@A	; hwndMain
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H

; 264  :             return false;

	mov	BYTE PTR $T3[ebp], 0
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN2@StartRecor
$LN1@StartRecor:

; 265  :         }
; 266  : 
; 267  :         ReplayBuffer::SetRecording(true);

	push	1
	call	?SetRecording@ReplayBuffer@@SAX_N@Z	; ReplayBuffer::SetRecording
	add	esp, 4

; 268  :         save_thread.reset(OSCreateThread([](void *arg) -> DWORD { static_cast<RecordingHelper*>(arg)->SaveThread(); return 0; }, this));

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??B<lambda_1d0a52683256169683a75b10bd0d867a>@@QBEP6GKPAX@ZXZ ; <lambda_1d0a52683256169683a75b10bd0d867a>::operator unsigned long (__stdcall*)(void *)
	push	eax
	call	DWORD PTR __imp_?OSCreateThread@@YGPAXP6GKPAX@Z0@Z
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?reset@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXPAX@Z ; std::unique_ptr<void,ThreadDeleter<1000> >::reset

; 269  :         return true;

	mov	BYTE PTR $T2[ebp], 1
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
$LN2@StartRecor:

; 270  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?StartRecording@RecordingHelper@@QAE_NXZ ENDP		; RecordingHelper::StartRecording
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?SaveThread@RecordingHelper@@QAEXXZ
_TEXT	SEGMENT
_l$1 = -28						; size = 8
_packet$ = -20						; size = 8
_buf$2 = -12						; size = 4
tv139 = -8						; size = 4
_this$ = -4						; size = 4
?SaveThread@RecordingHelper@@QAEXXZ PROC		; RecordingHelper::SaveThread, COMDAT
; _this$ = ecx

; 273  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 274  :         shared_ptr<const packet_t> packet;

	lea	ecx, DWORD PTR _packet$[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
$LN5@SaveThread:

; 275  :         for (;;)
; 276  :         {
; 277  :             if (WaitForSingleObject(stop_event.get(), 0) == WAIT_OBJECT_0)

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ ; std::unique_ptr<void,EventDeleter>::get
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	test	eax, eax
	jne	SHORT $LN3@SaveThread

; 278  :             {
; 279  :                 Log(L"RecordingHelper::SaveThread: stopping save thread with %u packets remaining", buffered_packets.size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
	push	eax
	push	OFFSET ??_C@_1JI@JCMGAMJO@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAs?$AAt?$AAo@
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 8

; 280  :                 return;

	lea	ecx, DWORD PTR _packet$[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	jmp	$LN6@SaveThread
$LN3@SaveThread:

; 281  :             }
; 282  : 
; 283  :             {
; 284  :                 ScopedLock l(packets_mutex);

	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _l$1[ebp]
	call	??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z ; ScopedLock::ScopedLock

; 285  :                 if (buffered_packets.empty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@SaveThread

; 286  :                 {
; 287  :                     Log(L"RecordingHelper::SaveThread: done writing buffered packets");

	push	OFFSET ??_C@_1HG@DBFIJJCM@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?3?$AA?3?$AAS?$AAa?$AAv?$AAe?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAd?$AAo?$AAn@
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 4

; 288  :                     return;

	lea	ecx, DWORD PTR _l$1[ebp]
	call	??1ScopedLock@@QAE@XZ			; ScopedLock::~ScopedLock
	lea	ecx, DWORD PTR _packet$[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	jmp	$LN6@SaveThread
$LN2@SaveThread:

; 289  :                 }
; 290  : 
; 291  :                 packet = buffered_packets.front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::front
	push	eax
	lea	ecx, DWORD PTR _packet$[ebp]
	call	??4?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator=

; 292  :                 buffered_packets.pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?pop_front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_front

; 293  :             }

	lea	ecx, DWORD PTR _l$1[ebp]
	call	??1ScopedLock@@QAE@XZ			; ScopedLock::~ScopedLock

; 294  : 
; 295  :             auto &buf = get<3>(*packet);

	lea	ecx, DWORD PTR _packet$[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$02W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<3,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	DWORD PTR _buf$2[ebp], eax

; 296  :             file_stream->AddPacket(buf, get<1>(*packet), get<2>(*packet), get<0>(*packet));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator->
	mov	DWORD PTR tv139[ebp], eax
	lea	ecx, DWORD PTR _packet$[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$0A@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABW4PacketType@@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<0,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _packet$[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR _packet$[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$00W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<1,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	sub	esp, 8
	mov	ecx, esp
	mov	edx, DWORD PTR _buf$2[ebp]
	push	edx
	call	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	mov	eax, DWORD PTR tv139[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv139[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 297  :             if (get<2>(*packet) != PacketType_Audio)

	lea	ecx, DWORD PTR _packet$[ebp]
	call	??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
	push	eax
	call	??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	cmp	DWORD PTR [eax], 4
	je	SHORT $LN1@SaveThread

; 298  :                 SetEvent(video_packet_written_event.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ ; std::unique_ptr<void,EventDeleter>::get
	push	eax
	call	DWORD PTR __imp__SetEvent@4
$LN1@SaveThread:

; 299  :         }

	jmp	$LN5@SaveThread

; 300  :     }

	lea	ecx, DWORD PTR _packet$[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
$LN6@SaveThread:
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveThread@RecordingHelper@@QAEXXZ ENDP		; RecordingHelper::SaveThread
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?AddPacket@RecordingHelper@@UAEXPBEIKKW4PacketType@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_timestamp$ = 16					; size = 4
_pts$ = 20						; size = 4
_type$ = 24						; size = 4
?AddPacket@RecordingHelper@@UAEXPBEIKKW4PacketType@@@Z PROC ; RecordingHelper::AddPacket, COMDAT
; _this$ = ecx

; 303  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 304  :         AddPacket(make_shared<const vector<BYTE>>(data, data + size), timestamp, pts, type);

	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pts$[ebp]
	push	edx
	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	push	ecx
	call	??$make_shared@$$CBV?$vector@EV?$allocator@E@std@@@std@@AAPBEPBE@std@@YA?AV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAPBE$$QAPBE@Z ; std::make_shared<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned char const * &,unsigned char const *>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 305  :     }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddPacket@RecordingHelper@@UAEXPBEIKKW4PacketType@@@Z ENDP ; RecordingHelper::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?AddPacket@RecordingHelper@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 8
$T2 = -68						; size = 8
_l$3 = -60						; size = 8
_wait_objects$4 = -52					; size = 8
tv314 = -44						; size = 8
_status$5 = -36						; size = 8
tv242 = -28						; size = 4
_buffer_size$6 = -24					; size = 4
tv313 = -20						; size = 4
_null_thread$7 = -16					; size = 4
tv149 = -12						; size = 4
_wait$8 = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 8
_timestamp$ = 16					; size = 4
_pts$ = 20						; size = 4
_type$ = 24						; size = 4
?AddPacket@RecordingHelper@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z PROC ; RecordingHelper::AddPacket, COMDAT
; _this$ = ecx

; 308  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 309  :         if (save_thread)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??B?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBE_NXZ ; std::unique_ptr<void,ThreadDeleter<1000> >::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN13@AddPacket

; 310  :         {
; 311  :             if (type != PacketType_Audio)

	cmp	DWORD PTR _type$[ebp], 4
	je	SHORT $LN12@AddPacket

; 312  :             {
; 313  :                 const HANDLE wait_objects[] = { save_thread.get(), video_packet_written_event.get() };

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?get@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBEPAXXZ ; std::unique_ptr<void,ThreadDeleter<1000> >::get
	mov	DWORD PTR _wait_objects$4[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ ; std::unique_ptr<void,EventDeleter>::get
	mov	DWORD PTR _wait_objects$4[ebp+4], eax

; 314  :                 auto wait = [&]() { return WaitForMultipleObjects(2, wait_objects, false, 500); };

	lea	ecx, DWORD PTR _wait_objects$4[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wait$8[ebp]
	call	??0<lambda_259a4d74b3d619831bf1f5f035703221>@@QAE@AAY01QAX@Z ; <lambda_259a4d74b3d619831bf1f5f035703221>::<lambda_259a4d74b3d619831bf1f5f035703221>

; 315  : 
; 316  :                 if (wait() == WAIT_OBJECT_0 + 1)

	lea	ecx, DWORD PTR _wait$8[ebp]
	call	??R<lambda_259a4d74b3d619831bf1f5f035703221>@@QBEKXZ ; <lambda_259a4d74b3d619831bf1f5f035703221>::operator()
	cmp	eax, 1
	jne	SHORT $LN12@AddPacket
$LN10@AddPacket:

; 317  :                     while (wait() == WAIT_TIMEOUT);

	lea	ecx, DWORD PTR _wait$8[ebp]
	call	??R<lambda_259a4d74b3d619831bf1f5f035703221>@@QBEKXZ ; <lambda_259a4d74b3d619831bf1f5f035703221>::operator()
	cmp	eax, 258				; 00000102H
	jne	SHORT $LN12@AddPacket
	jmp	SHORT $LN10@AddPacket
$LN12@AddPacket:

; 318  :             }
; 319  : 
; 320  :             size_t buffer_size = 0;

	mov	DWORD PTR _buffer_size$6[ebp], 0

; 321  :             {
; 322  :                 ScopedLock l(packets_mutex);

	push	1
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	lea	ecx, DWORD PTR _l$3[ebp]
	call	??0ScopedLock@@QAE@ABV?$unique_ptr@XUMutexDeleter@@@std@@_N1@Z ; ScopedLock::ScopedLock

; 323  :                 if (WaitForSingleObject(save_thread.get(), 0) == WAIT_OBJECT_0)

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?get@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBEPAXXZ ; std::unique_ptr<void,ThreadDeleter<1000> >::get
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	test	eax, eax
	jne	$LN8@AddPacket

; 324  :                 {
; 325  :                     if (!buffered_packets.empty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@AddPacket

; 326  :                         AppWarning(L"RecordingHelper thread exited while %d buffered packets remain", buffered_packets.size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
	push	eax
	push	OFFSET ??_C@_1HO@LCDLOHIB@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAe?$AAd?$AA?5?$AAw?$AAh@
	call	DWORD PTR __imp_?AppWarning@@YAXPB_WZZ
	add	esp, 8
$LN7@AddPacket:

; 327  : 
; 328  :                     buffered_packets.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?clear@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear

; 329  :                     buffered_packets.shrink_to_fit();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?shrink_to_fit@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::shrink_to_fit

; 330  : 
; 331  :                     file_stream->AddPacket(data, timestamp, pts, type);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator->
	mov	DWORD PTR tv149[ebp], eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pts$[ebp]
	push	edx
	mov	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	call	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	mov	eax, DWORD PTR tv149[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv149[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 332  : 
; 333  :                     if (status_id)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN6@AddPacket

; 334  :                     {
; 335  :                         App->RemoveStreamInfo(status_id);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveStreamInfo@OBS@@QAEXI@Z		; OBS::RemoveStreamInfo

; 336  :                         status_id = -1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], -1
$LN6@AddPacket:

; 337  :                     }
; 338  : 
; 339  :                     decltype(save_thread) null_thread;

	lea	ecx, DWORD PTR _null_thread$7[ebp]
	call	??0?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadDeleter<1000> >::unique_ptr<void,ThreadDeleter<1000> >

; 340  :                     swap(null_thread, save_thread);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 40					; 00000028H
	push	edx
	lea	eax, DWORD PTR _null_thread$7[ebp]
	push	eax
	call	??$swap@XU?$ThreadDeleter@$0DOI@@@@std@@YAXAAV?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@0@0@Z ; std::swap<void,ThreadDeleter<1000> >
	add	esp, 8

; 341  :                     return;

	lea	ecx, DWORD PTR _null_thread$7[ebp]
	call	??1?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadDeleter<1000> >::~unique_ptr<void,ThreadDeleter<1000> >
	lea	ecx, DWORD PTR _l$3[ebp]
	call	??1ScopedLock@@QAE@XZ			; ScopedLock::~ScopedLock
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	jmp	$LN14@AddPacket

; 342  :                 }
; 343  :                 else

	jmp	SHORT $LN5@AddPacket
$LN8@AddPacket:

; 344  :                 {
; 345  :                     buffered_packets.emplace_back(make_shared<const packet_t>(type, timestamp, pts, data));

	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pts$[ebp]
	push	edx
	lea	eax, DWORD PTR _timestamp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _type$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$make_shared@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@2@@std@@YA?AV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@@Z ; std::make_shared<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ,enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 346  :                     buffer_size = buffered_packets.size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
	mov	DWORD PTR _buffer_size$6[ebp], eax
$LN5@AddPacket:

; 347  :                 }
; 348  :             }

	lea	ecx, DWORD PTR _l$3[ebp]
	call	??1ScopedLock@@QAE@XZ			; ScopedLock::~ScopedLock

; 349  : 
; 350  :             if (next_status_time < GetQPCTimeMS())

	call	DWORD PTR __imp_?GetQPCTimeMS@@YA_KXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv313[ebp], ecx
	mov	DWORD PTR tv314[ebp], eax
	mov	DWORD PTR tv314[ebp+4], edx
	mov	edx, DWORD PTR tv313[ebp]
	mov	eax, DWORD PTR [edx+52]
	cmp	eax, DWORD PTR tv314[ebp+4]
	ja	$LN4@AddPacket
	jb	SHORT $LN16@AddPacket
	mov	ecx, DWORD PTR tv313[ebp]
	mov	edx, DWORD PTR [ecx+48]
	cmp	edx, DWORD PTR tv314[ebp]
	jae	$LN4@AddPacket
$LN16@AddPacket:

; 351  :             {
; 352  :                 using ::locale;
; 353  :                 String status = Str("ReplayBuffer.RecordingHelper.BufferStatus");

	push	OFFSET ??_C@_1FE@OOKDDFFL@?$AAR?$AAe?$AAp?$AAl?$AAa?$AAy?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AAH?$AAe?$AAl?$AAp?$AAe?$AAr?$AA?4?$AAB?$AAu?$AAf@
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _status$5[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 354  :                 status.FindReplace(L"$1", UIntString((UINT)buffer_size));

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _buffer_size$6[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET ??_C@_15JKJHIGLI@?$AA$?$AA1?$AA?$AA@
	lea	ecx, DWORD PTR _status$5[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 355  :                 if (status_id == -1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], -1
	jne	SHORT $LN3@AddPacket

; 356  :                     status_id = App->AddStreamInfo(status, StreamInfoPriority_Medium);

	push	1
	lea	ecx, DWORD PTR _status$5[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddStreamInfo@OBS@@QAEIPB_WW4StreamInfoPriority@@@Z ; OBS::AddStreamInfo
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax

; 357  :                 else

	jmp	SHORT $LN2@AddPacket
$LN3@AddPacket:

; 358  :                     App->SetStreamInfo(status_id, status);

	lea	ecx, DWORD PTR _status$5[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?SetStreamInfo@OBS@@QAEXIPB_W@Z		; OBS::SetStreamInfo
$LN2@AddPacket:

; 359  :                 next_status_time = GetQPCTimeMS() + 1000;

	call	DWORD PTR __imp_?GetQPCTimeMS@@YA_KXZ
	add	eax, 1000				; 000003e8H
	adc	edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax
	mov	DWORD PTR [ecx+52], edx

; 360  :             }

	lea	ecx, DWORD PTR _status$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN4@AddPacket:

; 361  :             return;

	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	jmp	SHORT $LN14@AddPacket
$LN13@AddPacket:

; 362  :         }
; 363  : 
; 364  :         if (status_id != -1)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], -1
	je	SHORT $LN1@AddPacket

; 365  :         {
; 366  :             App->RemoveStreamInfo(status_id);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveStreamInfo@OBS@@QAEXI@Z		; OBS::RemoveStreamInfo

; 367  :             status_id = -1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], -1
$LN1@AddPacket:

; 368  :         }
; 369  : 
; 370  :         file_stream->AddPacket(data, timestamp, pts, type);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator->
	mov	DWORD PTR tv242[ebp], eax
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pts$[ebp]
	push	ecx
	mov	edx, DWORD PTR _timestamp$[ebp]
	push	edx
	sub	esp, 8
	mov	ecx, esp
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	mov	ecx, DWORD PTR tv242[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv242[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 371  :     }

	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
$LN14@AddPacket:
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?AddPacket@RecordingHelper@@UAEXV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@KKW4PacketType@@@Z ENDP ; RecordingHelper::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_cdecl>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CAKPAX@Z
_TEXT	SEGMENT
_arg$ = 8						; size = 4
?<helper_func_cdecl>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CAKPAX@Z PROC ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_cdecl>, COMDAT

; 268  :         save_thread.reset(OSCreateThread([](void *arg) -> DWORD { static_cast<RecordingHelper*>(arg)->SaveThread(); return 0; }, this));

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _arg$[ebp]
	call	?SaveThread@RecordingHelper@@QAEXXZ	; RecordingHelper::SaveThread
	xor	eax, eax
	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CAKPAX@Z ENDP ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_stdcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CGKPAX@Z
_TEXT	SEGMENT
_arg$ = 8						; size = 4
?<helper_func_stdcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CGKPAX@Z PROC ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_stdcall>, COMDAT

; 268  :         save_thread.reset(OSCreateThread([](void *arg) -> DWORD { static_cast<RecordingHelper*>(arg)->SaveThread(); return 0; }, this));

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _arg$[ebp]
	call	?SaveThread@RecordingHelper@@QAEXXZ	; RecordingHelper::SaveThread
	xor	eax, eax
	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CGKPAX@Z ENDP ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??B<lambda_1d0a52683256169683a75b10bd0d867a>@@QBEP6GKPAX@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B<lambda_1d0a52683256169683a75b10bd0d867a>@@QBEP6GKPAX@ZXZ PROC ; <lambda_1d0a52683256169683a75b10bd0d867a>::operator unsigned long (__stdcall*)(void *), COMDAT
; _this$ = ecx

; 268  :         save_thread.reset(OSCreateThread([](void *arg) -> DWORD { static_cast<RecordingHelper*>(arg)->SaveThread(); return 0; }, this));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ?<helper_func_stdcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CGKPAX@Z ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_stdcall>
	mov	esp, ebp
	pop	ebp
	ret	0
??B<lambda_1d0a52683256169683a75b10bd0d867a>@@QBEP6GKPAX@ZXZ ENDP ; <lambda_1d0a52683256169683a75b10bd0d867a>::operator unsigned long (__stdcall*)(void *)
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_fastcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CIKPAX@Z
_TEXT	SEGMENT
_arg$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CIKPAX@Z PROC ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_fastcall>, COMDAT
; _arg$ = ecx

; 268  :         save_thread.reset(OSCreateThread([](void *arg) -> DWORD { static_cast<RecordingHelper*>(arg)->SaveThread(); return 0; }, this));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _arg$[ebp], ecx
	mov	ecx, DWORD PTR _arg$[ebp]
	call	?SaveThread@RecordingHelper@@QAEXXZ	; RecordingHelper::SaveThread
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CIKPAX@Z ENDP ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_vectorcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CQKPAX@Z
_TEXT	SEGMENT
_arg$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CQKPAX@Z PROC ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_vectorcall>, COMDAT
; _arg$ = ecx

; 268  :         save_thread.reset(OSCreateThread([](void *arg) -> DWORD { static_cast<RecordingHelper*>(arg)->SaveThread(); return 0; }, this));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _arg$[ebp], ecx
	mov	ecx, DWORD PTR _arg$[ebp]
	call	?SaveThread@RecordingHelper@@QAEXXZ	; RecordingHelper::SaveThread
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_1d0a52683256169683a75b10bd0d867a>@@CQKPAX@Z ENDP ; <lambda_1d0a52683256169683a75b10bd0d867a>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??0<lambda_259a4d74b3d619831bf1f5f035703221>@@QAE@AAY01QAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___wait_objects$ = 8					; size = 4
??0<lambda_259a4d74b3d619831bf1f5f035703221>@@QAE@AAY01QAX@Z PROC ; <lambda_259a4d74b3d619831bf1f5f035703221>::<lambda_259a4d74b3d619831bf1f5f035703221>, COMDAT
; _this$ = ecx

; 314  :                 auto wait = [&]() { return WaitForMultipleObjects(2, wait_objects, false, 500); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___wait_objects$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_259a4d74b3d619831bf1f5f035703221>@@QAE@AAY01QAX@Z ENDP ; <lambda_259a4d74b3d619831bf1f5f035703221>::<lambda_259a4d74b3d619831bf1f5f035703221>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??R<lambda_259a4d74b3d619831bf1f5f035703221>@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_259a4d74b3d619831bf1f5f035703221>@@QBEKXZ PROC ; <lambda_259a4d74b3d619831bf1f5f035703221>::operator(), COMDAT
; _this$ = ecx

; 314  :                 auto wait = [&]() { return WaitForMultipleObjects(2, wait_objects, false, 500); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	500					; 000001f4H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	2
	call	DWORD PTR __imp__WaitForMultipleObjects@16
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_259a4d74b3d619831bf1f5f035703221>@@QBEKXZ ENDP ; <lambda_259a4d74b3d619831bf1f5f035703221>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRecordingHelper@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRecordingHelper@@UAEPAXI@Z PROC			; RecordingHelper::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RecordingHelper@@UAE@XZ		; RecordingHelper::~RecordingHelper
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRecordingHelper@@UAEPAXI@Z ENDP			; RecordingHelper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?CreateRecordingHelper@@YAXAAV?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@@Z
_TEXT	SEGMENT
$T1 = -40						; size = 20
$T2 = -20						; size = 4
$T3 = -16						; size = 4
_id$4 = -12						; size = 4
_helper$ = -8						; size = 4
$T5 = -1						; size = 1
_stream$ = 8						; size = 4
_packets$ = 12						; size = 4
?CreateRecordingHelper@@YAXAAV?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@@Z PROC ; CreateRecordingHelper, COMDAT

; 375  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 376  :     if (stream)

	mov	ecx, DWORD PTR _stream$[ebp]
	call	??B?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBE_NXZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@CreateReco

; 377  :     {
; 378  :         using ::locale;
; 379  :         Log(L"Tried to create a recording from replay buffer but another recording is already active");

	push	OFFSET $SG4294830797
	call	DWORD PTR __imp_?Log@@YAXPB_WZZ
	add	esp, 4

; 380  :         UINT id = App->AddStreamInfo(Str("ReplayBuffer.RecordingAlreadyActive"), StreamInfoPriority_High);

	push	2
	push	OFFSET $SG4294830796
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?AddStreamInfo@OBS@@QAEIPB_WW4StreamInfoPriority@@@Z ; OBS::AddStreamInfo
	mov	DWORD PTR _id$4[ebp], eax

; 381  :         OSCloseThread(OSCreateThread([](void *arg) -> DWORD { Sleep(10000); if (App) App->RemoveStreamInfo((UINT)arg); return 0; }, (void*)id));

	mov	edx, DWORD PTR _id$4[ebp]
	push	edx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??B<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@QBEP6GKPAX@ZXZ ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::operator unsigned long (__stdcall*)(void *)
	push	eax
	call	DWORD PTR __imp_?OSCreateThread@@YGPAXP6GKPAX@Z0@Z
	push	eax
	call	DWORD PTR __imp_?OSCloseThread@@YGHPAX@Z

; 382  :         return;

	jmp	SHORT $LN3@CreateReco
$LN2@CreateReco:

; 383  :     }
; 384  : 
; 385  :     auto helper = make_unique<RecordingHelper>(packet_vec_t{begin(packets), end(packets)});

	mov	eax, DWORD PTR _packets$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??$end@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::end<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _packets$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??$begin@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::begin<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,void>
	push	eax
	lea	eax, DWORD PTR _helper$[ebp]
	push	eax
	call	??$make_unique@URecordingHelper@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@0@$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ; std::make_unique<RecordingHelper,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 8
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >

; 386  :     if (helper->StartRecording())

	lea	ecx, DWORD PTR _helper$[ebp]
	call	??C?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEPAURecordingHelper@@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator->
	mov	ecx, eax
	call	?StartRecording@RecordingHelper@@QAE_NXZ ; RecordingHelper::StartRecording
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@CreateReco

; 387  :         stream.reset(helper.release());

	lea	ecx, DWORD PTR _helper$[ebp]
	call	?release@?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAEPAURecordingHelper@@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::release
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?reset@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAEXPAVVideoFileStream@@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::reset
$LN1@CreateReco:

; 388  : }

	lea	ecx, DWORD PTR _helper$[ebp]
	call	??1?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::~unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >
$LN3@CreateReco:
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateRecordingHelper@@YAXAAV?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@@Z ENDP ; CreateRecordingHelper
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_cdecl>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CAKPAX@Z
_TEXT	SEGMENT
_arg$ = 8						; size = 4
?<helper_func_cdecl>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CAKPAX@Z PROC ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_cdecl>, COMDAT

; 381  :         OSCloseThread(OSCreateThread([](void *arg) -> DWORD { Sleep(10000); if (App) App->RemoveStreamInfo((UINT)arg); return 0; }, (void*)id));

	push	ebp
	mov	ebp, esp
	push	10000					; 00002710H
	call	DWORD PTR __imp__Sleep@4
	cmp	DWORD PTR ?App@@3PAVOBS@@A, 0		; App
	je	SHORT $LN1@
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveStreamInfo@OBS@@QAEXI@Z		; OBS::RemoveStreamInfo
$LN1@:
	xor	eax, eax
	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CAKPAX@Z ENDP ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_stdcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CGKPAX@Z
_TEXT	SEGMENT
_arg$ = 8						; size = 4
?<helper_func_stdcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CGKPAX@Z PROC ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_stdcall>, COMDAT

; 381  :         OSCloseThread(OSCreateThread([](void *arg) -> DWORD { Sleep(10000); if (App) App->RemoveStreamInfo((UINT)arg); return 0; }, (void*)id));

	push	ebp
	mov	ebp, esp
	push	10000					; 00002710H
	call	DWORD PTR __imp__Sleep@4
	cmp	DWORD PTR ?App@@3PAVOBS@@A, 0		; App
	je	SHORT $LN1@
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveStreamInfo@OBS@@QAEXI@Z		; OBS::RemoveStreamInfo
$LN1@:
	xor	eax, eax
	pop	ebp
	ret	4
?<helper_func_stdcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CGKPAX@Z ENDP ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ??B<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@QBEP6GKPAX@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@QBEP6GKPAX@ZXZ PROC ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::operator unsigned long (__stdcall*)(void *), COMDAT
; _this$ = ecx

; 381  :         OSCloseThread(OSCreateThread([](void *arg) -> DWORD { Sleep(10000); if (App) App->RemoveStreamInfo((UINT)arg); return 0; }, (void*)id));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ?<helper_func_stdcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CGKPAX@Z ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_stdcall>
	mov	esp, ebp
	pop	ebp
	ret	0
??B<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@QBEP6GKPAX@ZXZ ENDP ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::operator unsigned long (__stdcall*)(void *)
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_fastcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CIKPAX@Z
_TEXT	SEGMENT
_arg$ = -4						; size = 4
?<helper_func_fastcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CIKPAX@Z PROC ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_fastcall>, COMDAT
; _arg$ = ecx

; 381  :         OSCloseThread(OSCreateThread([](void *arg) -> DWORD { Sleep(10000); if (App) App->RemoveStreamInfo((UINT)arg); return 0; }, (void*)id));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _arg$[ebp], ecx
	push	10000					; 00002710H
	call	DWORD PTR __imp__Sleep@4
	cmp	DWORD PTR ?App@@3PAVOBS@@A, 0		; App
	je	SHORT $LN1@
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveStreamInfo@OBS@@QAEXI@Z		; OBS::RemoveStreamInfo
$LN1@:
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CIKPAX@Z ENDP ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?<helper_func_vectorcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CQKPAX@Z
_TEXT	SEGMENT
_arg$ = -4						; size = 4
?<helper_func_vectorcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CQKPAX@Z PROC ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_vectorcall>, COMDAT
; _arg$ = ecx

; 381  :         OSCloseThread(OSCreateThread([](void *arg) -> DWORD { Sleep(10000); if (App) App->RemoveStreamInfo((UINT)arg); return 0; }, (void*)id));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _arg$[ebp], ecx
	push	10000					; 00002710H
	call	DWORD PTR __imp__Sleep@4
	cmp	DWORD PTR ?App@@3PAVOBS@@A, 0		; App
	je	SHORT $LN1@
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?RemoveStreamInfo@OBS@@QAEXI@Z		; OBS::RemoveStreamInfo
$LN1@:
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_9c5eb1109af6ceb78b085c49b3ef9677>@@CQKPAX@Z ENDP ; <lambda_9c5eb1109af6ceb78b085c49b3ef9677>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?CreateReplayBuffer@@YA?AU?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@H@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_out$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_seconds$ = 12						; size = 4
?CreateReplayBuffer@@YA?AU?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@H@Z PROC ; CreateReplayBuffer, COMDAT

; 391  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 392  :     if (seconds <= 0) return {nullptr, nullptr};

	cmp	DWORD PTR _seconds$[ebp], 0
	jg	SHORT $LN1@CreateRepl
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0$$T$$TX@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QA$$T0@Z ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><std::nullptr_t,std::nullptr_t,void>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@CreateRepl
$LN1@CreateRepl:

; 393  : 
; 394  :     auto out = make_unique<ReplayBuffer>(seconds);

	lea	edx, DWORD PTR _seconds$[ebp]
	push	edx
	lea	eax, DWORD PTR _out$[ebp]
	push	eax
	call	??$make_unique@UReplayBuffer@@AAH@std@@YA?AV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAH@Z ; std::make_unique<ReplayBuffer,int &>
	add	esp, 8

; 395  :     return {out.get(), move(out)};

	lea	ecx, DWORD PTR _out$[ebp]
	call	?get@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QBEPAUReplayBuffer@@XZ ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::get
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	??$move@AAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z ; std::move<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > &>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAUReplayBuffer@@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@X@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QAPAUReplayBuffer@@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><ReplayBuffer *,std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >,void>
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@XZ ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::~unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@CreateRepl:

; 396  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CreateReplayBuffer@@YA?AU?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@H@Z ENDP ; CreateReplayBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@XZ PROC ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::~pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::~unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@XZ ENDP ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::~pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\replaybuffer.cpp
;	COMDAT ?StartRecordingFromReplayBuffer@@YAXPAUReplayBuffer@@@Z
_TEXT	SEGMENT
_rb$ = 8						; size = 4
?StartRecordingFromReplayBuffer@@YAXPAUReplayBuffer@@@Z PROC ; StartRecordingFromReplayBuffer, COMDAT

; 405  : {

	push	ebp
	mov	ebp, esp

; 406  :     if (!rb) return;

	cmp	DWORD PTR _rb$[ebp], 0
	jne	SHORT $LN1@StartRecor
	jmp	SHORT $LN2@StartRecor
$LN1@StartRecor:

; 407  :     rb->start_recording = true;

	mov	eax, DWORD PTR _rb$[ebp]
	mov	BYTE PTR [eax+52], 1
$LN2@StartRecor:

; 408  : }

	pop	ebp
	ret	0
?StartRecordingFromReplayBuffer@@YAXPAUReplayBuffer@@@Z ENDP ; StartRecordingFromReplayBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XUMutexDeleter@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUMutexDeleter@@@std@@QAE@PAX@Z PROC	; std::unique_ptr<void,MutexDeleter>::unique_ptr<void,MutexDeleter>, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,MutexDeleter,1>::_Unique_ptr_base<void,MutexDeleter,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUMutexDeleter@@@std@@QAE@PAX@Z ENDP	; std::unique_ptr<void,MutexDeleter>::unique_ptr<void,MutexDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@XUMutexDeleter@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUMutexDeleter@@@std@@QAE@XZ PROC	; std::unique_ptr<void,MutexDeleter>::~unique_ptr<void,MutexDeleter>, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAEAAUMutexDeleter@@XZ ; std::_Unique_ptr_base<void,MutexDeleter,1>::get_deleter
	mov	ecx, eax
	call	??RMutexDeleter@@QBEXPAX@Z		; MutexDeleter::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XUMutexDeleter@@@std@@QAE@XZ ENDP	; std::unique_ptr<void,MutexDeleter>::~unique_ptr<void,MutexDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$unique_ptr@XUMutexDeleter@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XUMutexDeleter@@@std@@QBEPAXXZ PROC	; std::unique_ptr<void,MutexDeleter>::get, COMDAT
; _this$ = ecx

; 1462 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1463 : 		return (this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@XUMutexDeleter@@@std@@QBEPAXXZ ENDP	; std::unique_ptr<void,MutexDeleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XUEventDeleter@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUEventDeleter@@@std@@QAE@PAX@Z PROC	; std::unique_ptr<void,EventDeleter>::unique_ptr<void,EventDeleter>, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,EventDeleter,1>::_Unique_ptr_base<void,EventDeleter,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUEventDeleter@@@std@@QAE@PAX@Z ENDP	; std::unique_ptr<void,EventDeleter>::unique_ptr<void,EventDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@XUEventDeleter@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUEventDeleter@@@std@@QAE@XZ PROC	; std::unique_ptr<void,EventDeleter>::~unique_ptr<void,EventDeleter>, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAEAAUEventDeleter@@XZ ; std::_Unique_ptr_base<void,EventDeleter,1>::get_deleter
	mov	ecx, eax
	call	??REventDeleter@@QBEXPAX@Z		; EventDeleter::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XUEventDeleter@@@std@@QAE@XZ ENDP	; std::unique_ptr<void,EventDeleter>::~unique_ptr<void,EventDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ PROC	; std::unique_ptr<void,EventDeleter>::get, COMDAT
; _this$ = ecx

; 1462 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1463 : 		return (this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@XUEventDeleter@@@std@@QBEPAXXZ ENDP	; std::unique_ptr<void,EventDeleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 523  : 	shared_ptr(const _Myt& _Other) _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >

; 524  : 		{	// construct shared_ptr object that owns same resource as _Other
; 525  : 		this->_Reset(_Other);

	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXABV01@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset<std::vector<unsigned char,std::allocator<unsigned char> > const >

; 526  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??D?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEABV?$vector@EV?$allocator@E@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEABV?$vector@EV?$allocator@E@std@@@1@XZ PROC ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator*, COMDAT
; _this$ = ecx

; 670  : 		{	// return reference to resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 671  : 		return (*this->_Get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Get

; 672  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEABV?$vector@EV?$allocator@E@std@@@1@XZ ENDP ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??A?$vector@EV?$allocator@E@std@@@std@@QBEABEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@EV?$allocator@E@std@@@std@@QBEABEI@Z PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::operator[], COMDAT
; _this$ = ecx

; 1181 : 		{	// subscript nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1182 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1183 : 		if (size() <= _Pos)
; 1184 : 			{	// report error
; 1185 : 			_DEBUG_ERROR("vector subscript out of range");
; 1186 : 			_SCL_SECURE_OUT_OF_RANGE;
; 1187 : 			}
; 1188 : 
; 1189 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1190 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1191 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1192 : 
; 1193 : 		return (*(this->_Myfirst + _Pos));

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Pos$[ebp]

; 1194 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@EV?$allocator@E@std@@@std@@QBEABEI@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?front@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?front@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::front, COMDAT
; _this$ = ecx

; 1228 : 		{	// return first element of nonmutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1229 : 		return (*begin());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
	mov	ecx, eax
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEABEXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::operator*

; 1230 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::front
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >, COMDAT
; _this$ = ecx

; 1345 : 		{	// default construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAVVideoFileStream@@@Z ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>

; 1346 : 		static_assert(!is_pointer<_Dx>::value,
; 1347 : 			"unique_ptr constructed with null deleter pointer");
; 1348 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@PAVVideoFileStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@PAVVideoFileStream@@@Z PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAVVideoFileStream@@@Z ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@PAVVideoFileStream@@@Z ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::~unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAEAAU?$default_delete@VVideoFileStream@@@2@XZ ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@VVideoFileStream@@@std@@QBEXPAVVideoFileStream@@@Z ; std::default_delete<VideoFileStream>::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::~unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator->, COMDAT
; _this$ = ecx

; 1457 : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1458 : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEAAVVideoFileStream@@XZ ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAVVideoFileStream@@@std@@SAPAVVideoFileStream@@AAV3@@Z ; std::pointer_traits<VideoFileStream *>::pointer_to
	add	esp, 4

; 1459 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEPAVVideoFileStream@@XZ ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??B?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
??B?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBE_NXZ PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator bool, COMDAT
; _this$ = ecx

; 1467 : 		{	// test for non-null pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1468 : 		return (this->_Myptr != pointer());

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]

; 1469 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBE_NXZ ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?reset@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAEXPAVVideoFileStream@@@Z
_TEXT	SEGMENT
__Old$ = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?reset@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAEXPAVVideoFileStream@@@Z PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::reset, COMDAT
; _this$ = ecx

; 1479 : 		{	// establish new pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1480 : 		pointer _Old = this->_Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old$[ebp], ecx

; 1481 : 		this->_Myptr = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx], eax

; 1482 : 		if (_Old != pointer())

	cmp	DWORD PTR __Old$[ebp], 0
	je	SHORT $LN2@reset

; 1483 : 			this->get_deleter()(_Old);

	mov	ecx, DWORD PTR __Old$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAEAAU?$default_delete@VVideoFileStream@@@2@XZ ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@VVideoFileStream@@@std@@QBEXPAVVideoFileStream@@@Z ; std::default_delete<VideoFileStream>::operator()
$LN2@reset:

; 1484 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAEXPAVVideoFileStream@@@Z ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 891  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >

; 892  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??1?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 1094 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1095 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy

; 1096 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase, COMDAT
; _this$ = ecx

; 1476 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1477 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@erase
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@erase

; 1478 : 			{	// erase all and return fresh iterator
; 1479 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear

; 1480 : 			return (end());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase

; 1481 : 			}
; 1482 : 		else

	jmp	SHORT $LN5@erase
$LN2@erase:

; 1483 : 			{	// erase subrange
; 1484 : 			while (_First != _Last)

	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase

; 1485 : 				_First = erase(_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LN2@erase
$LN1@erase:

; 1486 : 			return (_Make_iter(_Last));

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:

; 1487 : 			}
; 1488 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >, COMDAT
; _this$ = ecx

; 951  : 		{	// construct empty deque

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >

; 952  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??1?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::~deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >, COMDAT
; _this$ = ecx

; 1214 : 		{	// destroy the deque

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1215 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Tidy

; 1216 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::~deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::size, COMDAT
; _this$ = ecx

; 1351 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1352 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1353 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??A?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@I@Z
_TEXT	SEGMENT
$T1 = -32						; size = 12
$T2 = -20						; size = 12
$T3 = -8						; size = 4
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@I@Z PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::operator[], COMDAT
; _this$ = ecx

; 1395 : 		{	// subscript mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1396 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1397 : 		if (this->_Mysize <= _Pos)
; 1398 : 			_DEBUG_ERROR("deque subscript out of range");
; 1399 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1400 : 
; 1401 : 		return (*(begin() + _Pos));

	mov	eax, DWORD PTR __Pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin
	mov	ecx, eax
	call	??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+
	mov	ecx, eax
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
	mov	DWORD PTR $T3[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]

; 1402 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@I@Z ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase, COMDAT
; _this$ = ecx

; 1595 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1596 : 		return (erase(_Where, _Where + 1));

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	push	1
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1597 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--, COMDAT
; _this$ = ecx

; 385  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 386  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--

; 387  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 388  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 680  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@K@std@@QAE@XZ		; std::allocator<unsigned long>::allocator<unsigned long>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >

; 681  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 944  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy

; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 1147 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?back@?$vector@KV?$allocator@K@std@@@std@@QAEAAKXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?back@?$vector@KV?$allocator@K@std@@@std@@QAEAAKXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::back, COMDAT
; _this$ = ecx

; 1233 : 		{	// return last element of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1234 : 		return (*(end() - 1));

	push	1
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
	mov	ecx, eax
	call	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-
	mov	ecx, eax
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*

; 1235 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?back@?$vector@KV?$allocator@K@std@@@std@@QAEAAKXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::back
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T1 = -24						; size = 4
$T2 = -20						; size = 4
__Ptr$3 = -16						; size = 4
__Last$4 = -12						; size = 4
__First$5 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::erase, COMDAT
; _this$ = ecx

; 1463 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1464 : 		if (_First_arg == begin() && _Last_arg == end())

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
	push	eax
	lea	ecx, DWORD PTR __First_arg$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@erase
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
	push	eax
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@erase

; 1465 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::clear

; 1466 : 		else if (_First_arg != _Last_arg)

	jmp	SHORT $LN3@erase
$LN4@erase:
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First_arg$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@erase

; 1467 : 			{	// clear partial
; 1468 : 			iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter

; 1469 : 			iterator _Last = _Make_iter(_Last_arg);

	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter

; 1470 : 
; 1471 : 			if (_First != _Last)

	lea	ecx, DWORD PTR __Last$4[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$5[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@erase

; 1472 : 				{	// worth doing, copy down over hole
; 1473 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1474 : 				if (_Last < _First || _VICONT(_First) != this
; 1475 : 					|| _VIPTR(_First) < this->_Myfirst
; 1476 : 					|| this->_Mylast < _VIPTR(_Last))
; 1477 : 					_DEBUG_ERROR("vector erase iterator outside range");
; 1478 : 				pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1479 : 					_VIPTR(_First));
; 1480 : 				_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1481 : 
; 1482 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1483 : 				pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1484 : 					_VIPTR(_First));

	mov	eax, DWORD PTR __First$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Last$4[ebp]
	push	eax
	call	??$_Move@PAKPAK@std@@YAPAKPAK00@Z	; std::_Move<unsigned long *,unsigned long *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$3[ebp], eax

; 1485 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1486 : 
; 1487 : 				_Destroy(_Ptr, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy

; 1488 : 				this->_Mylast = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$3[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN3@erase:

; 1489 : 				}
; 1490 : 			}
; 1491 : 		return (_Make_iter(_First_arg));

	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1492 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >, COMDAT
; _this$ = ecx

; 680  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >

; 681  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??1?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::~vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >, COMDAT
; _this$ = ecx

; 944  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Tidy

; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::~vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?begin@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::begin, COMDAT
; _this$ = ecx

; 1024 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1025 : 		return (iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1026 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?end@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::end, COMDAT
; _this$ = ecx

; 1034 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1035 : 		return (iterator(this->_Mylast, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1036 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*, COMDAT
; _this$ = ecx

; 323  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEABU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*

; 325  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++, COMDAT
; _this$ = ecx

; 333  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++

; 335  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 336  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator!=, COMDAT
; _this$ = ecx

; 209  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XUThreadCloser@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUThreadCloser@@@std@@QAE@PAX@Z PROC	; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUThreadCloser@@@std@@QAE@PAX@Z ENDP	; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@XUThreadCloser@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUThreadCloser@@@std@@QAE@XZ PROC	; std::unique_ptr<void,ThreadCloser>::~unique_ptr<void,ThreadCloser>, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAEAAUThreadCloser@@XZ ; std::_Unique_ptr_base<void,ThreadCloser,1>::get_deleter
	mov	ecx, eax
	call	??RThreadCloser@@QBEXPAX@Z		; ThreadCloser::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XUThreadCloser@@@std@@QAE@XZ ENDP	; std::unique_ptr<void,ThreadCloser>::~unique_ptr<void,ThreadCloser>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?release@?$unique_ptr@XUThreadCloser@@@std@@QAEPAXXZ
_TEXT	SEGMENT
__Ans$ = -8						; size = 4
_this$ = -4						; size = 4
?release@?$unique_ptr@XUThreadCloser@@@std@@QAEPAXXZ PROC ; std::unique_ptr<void,ThreadCloser>::release, COMDAT
; _this$ = ecx

; 1472 : 		{	// yield ownership of pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1473 : 		pointer _Ans = this->_Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ans$[ebp], ecx

; 1474 : 		this->_Myptr = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1475 : 		return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]

; 1476 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$unique_ptr@XUThreadCloser@@@std@@QAEPAXXZ ENDP ; std::unique_ptr<void,ThreadCloser>::release
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@X@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$shared_ptr@X@std@@QAE@XZ PROC			; std::shared_ptr<void>::shared_ptr<void>, COMDAT
; _this$ = ecx

; 475  : 	shared_ptr() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@X@std@@QAE@XZ		; std::_Ptr_base<void>::_Ptr_base<void>

; 476  : 		{	// construct empty shared_ptr
; 477  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@X@std@@QAE@XZ ENDP			; std::shared_ptr<void>::shared_ptr<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$shared_ptr@X@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$shared_ptr@X@std@@QAE@XZ PROC			; std::shared_ptr<void>::~shared_ptr<void>, COMDAT
; _this$ = ecx

; 609  : 		{	// release resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 610  : 		this->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@X@std@@QAEXXZ	; std::_Ptr_base<void>::_Decref

; 611  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$shared_ptr@X@std@@QAE@XZ ENDP			; std::shared_ptr<void>::~shared_ptr<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$shared_ptr@X@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$shared_ptr@X@std@@QBEPAXXZ PROC			; std::shared_ptr<void>::get, COMDAT
; _this$ = ecx

; 665  : 		{	// return pointer to resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 666  : 		return (this->_Get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@X@std@@QBEPAXXZ	; std::_Ptr_base<void>::_Get

; 667  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$shared_ptr@X@std@@QBEPAXXZ ENDP			; std::shared_ptr<void>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 475  : 	shared_ptr() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 476  : 		{	// construct empty shared_ptr
; 477  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 609  : 		{	// release resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 610  : 		this->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Decref

; 611  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??4?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator=, COMDAT
; _this$ = ecx

; 614  : 		{	// assign shared ownership of resource owned by _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 615  : 		shared_ptr(_Right).swap(*this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	mov	ecx, eax
	call	?swap@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::swap
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 616  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 617  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??4?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*, COMDAT
; _this$ = ecx

; 670  : 		{	// return reference to resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 671  : 		return (*this->_Get());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Get

; 672  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@XZ ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??0?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABKABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
_<_Rest_arg_1>$ = 16					; size = 4
_<_Rest_arg_2>$ = 20					; size = 4
??0?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABKABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z PROC ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT
; _this$ = ecx

; 215  : 		{	// construct from one or more copied elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _<_Rest_arg_2>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Rest_arg_1>$[ebp]
	push	ecx
	mov	edx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ; std::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??$?0ABK@?$_Tuple_val@K@std@@QAE@ABK@Z	; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long const &>

; 216  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABKABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ENDP ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Right$ = 8						; size = 4
??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 982  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 983  : 		_Construct(_Right.begin(), _Right.end());

	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >

; 984  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 1214 : 		{	// destroy the deque

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1215 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy

; 1216 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?shrink_to_fit@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Tmp$1 = -32						; size = 20
__Oldcapacity$ = -12					; size = 4
__Newcapacity$ = -8					; size = 4
_this$ = -4						; size = 4
?shrink_to_fit@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::shrink_to_fit, COMDAT
; _this$ = ecx

; 1315 : 		{	// reduce capacity

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1316 : 		size_type _Oldcapacity = _DEQUESIZ * this->_Mapsize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 1
	mov	DWORD PTR __Oldcapacity$[ebp], ecx

; 1317 : 		size_type _Newcapacity = _Oldcapacity / 2;

	mov	edx, DWORD PTR __Oldcapacity$[ebp]
	shr	edx, 1
	mov	DWORD PTR __Newcapacity$[ebp], edx

; 1318 : 
; 1319 : 		if (_Newcapacity < _DEQUESIZ * _DEQUEMAPSIZ)

	cmp	DWORD PTR __Newcapacity$[ebp], 16	; 00000010H
	jae	SHORT $LN4@shrink_to_

; 1320 : 			_Newcapacity = _DEQUESIZ * _DEQUEMAPSIZ;

	mov	DWORD PTR __Newcapacity$[ebp], 16	; 00000010H
$LN4@shrink_to_:

; 1321 : 
; 1322 : 		if ((empty() && 0 < this->_Mapsize)
; 1323 : 			|| (!empty()
; 1324 : 				&& size() <= _Newcapacity
; 1325 : 				&& _Newcapacity < _Oldcapacity))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@shrink_to_
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	ja	SHORT $LN2@shrink_to_
$LN1@shrink_to_:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@shrink_to_
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
	cmp	eax, DWORD PTR __Newcapacity$[ebp]
	ja	SHORT $LN5@shrink_to_
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	cmp	eax, DWORD PTR __Oldcapacity$[ebp]
	jae	SHORT $LN5@shrink_to_
$LN2@shrink_to_:

; 1326 : 			{	// worth shrinking, do it
; 1327 : 			_Myt _Tmp(_STD make_move_iterator(begin()),
; 1328 : 				_STD make_move_iterator(end()));

	sub	esp, 12					; 0000000cH
	mov	esi, esp
	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
	push	esi
	call	??$make_move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::make_move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	add	esp, 4
	mov	esi, esp
	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
	push	esi
	call	??$make_move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::make_move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	add	esp, 16					; 00000010H
	lea	ecx, DWORD PTR __Tmp$1[ebp]
	call	??$?0V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,void>

; 1329 : 			swap(_Tmp);

	lea	ecx, DWORD PTR __Tmp$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV12@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::swap

; 1330 : 			}

	lea	ecx, DWORD PTR __Tmp$1[ebp]
	call	??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
$LN5@shrink_to_:

; 1331 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?shrink_to_fit@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::shrink_to_fit
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size, COMDAT
; _this$ = ecx

; 1351 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1352 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1353 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty, COMDAT
; _this$ = ecx

; 1361 : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1362 : 		return (this->_Mysize == 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv70[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv70[ebp]

; 1363 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 12
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::front, COMDAT
; _this$ = ecx

; 1405 : 		{	// return first element of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1406 : 		return (*begin());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
	mov	ecx, eax
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 1407 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::front
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?pop_front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Block$ = -16						; size = 4
tv138 = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?pop_front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_front, COMDAT
; _this$ = ecx

; 1434 : 		{	// erase element at beginning

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1435 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1436 : 		if (empty())
; 1437 : 			_DEBUG_ERROR("deque empty before pop");
; 1438 : 		else
; 1439 : 			{	// something to erase, do it
; 1440 : 			_Orphan_off(this->_Myoff);
; 1441 : 			size_type _Block = this->_Getblock(this->_Myoff);
; 1442 : 			this->_Getal().destroy(
; 1443 : 				this->_Map[_Block] + this->_Myoff % _DEQUESIZ);
; 1444 : 			if (--this->_Mysize == 0)
; 1445 : 				this->_Myoff = 0;
; 1446 : 			else
; 1447 : 				++this->_Myoff;
; 1448 : 			}
; 1449 : 
; 1450 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1451 : 		size_type _Block = this->_Getblock(this->_Myoff);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 1452 : 		this->_Getal().destroy(
; 1453 : 			this->_Map[_Block] + this->_Myoff % _DEQUESIZ);

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 1454 : 		if (--this->_Mysize == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR [eax+16], ecx
	cmp	DWORD PTR tv138[ebp], 0
	jne	SHORT $LN2@pop_front

; 1455 : 			this->_Myoff = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1456 : 		else

	jmp	SHORT $LN3@pop_front
$LN2@pop_front:

; 1457 : 			++this->_Myoff;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN3@pop_front:

; 1458 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1459 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_front
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?clear@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear, COMDAT
; _this$ = ecx

; 1642 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1643 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy

; 1644 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| this->_Ptr == 0
; 69   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			this->_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 81   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(this->_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++, COMDAT
; _this$ = ecx

; 117  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 119  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++

; 120  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 121  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator!=, COMDAT
; _this$ = ecx

; 209  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z PROC ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ENDP ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@XZ PROC ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::~unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QBEXPAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QAE@XZ ENDP ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::~unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ PROC ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::operator*, COMDAT
; _this$ = ecx

; 1452 : 		{	// return reference to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1453 : 		return (*this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1454 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$unique_ptr@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@@std@@QBEAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@XZ ENDP ; std::unique_ptr<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++, COMDAT
; _this$ = ecx

; 1069 : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1070 : 		_Myt _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 1071 : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++

; 1072 : 		return (_Tmp);

	lea	ecx, DWORD PTR __Tmp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1073 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??D?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
__Tmp$ = -20						; size = 12
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ PROC ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator*, COMDAT
; _this$ = ecx

; 834  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 835  : 		_RanIt _Tmp = current;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 836  : 		return (*--_Tmp);

	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
	mov	ecx, eax
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T1[ebp]

; 837  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ PROC ; std::unique_ptr<void,ThreadDeleter<1000> >::unique_ptr<void,ThreadDeleter<1000> >, COMDAT
; _this$ = ecx

; 1345 : 		{	// default construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::_Unique_ptr_base<void,ThreadDeleter<1000>,1>

; 1346 : 		static_assert(!is_pointer<_Dx>::value,
; 1347 : 			"unique_ptr constructed with null deleter pointer");
; 1348 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ENDP ; std::unique_ptr<void,ThreadDeleter<1000> >::unique_ptr<void,ThreadDeleter<1000> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ PROC ; std::unique_ptr<void,ThreadDeleter<1000> >::~unique_ptr<void,ThreadDeleter<1000> >, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::get_deleter
	mov	ecx, eax
	call	??R?$ThreadDeleter@$0DOI@@@QBEXPAX@Z	; ThreadDeleter<1000>::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAE@XZ ENDP ; std::unique_ptr<void,ThreadDeleter<1000> >::~unique_ptr<void,ThreadDeleter<1000> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBEPAXXZ PROC ; std::unique_ptr<void,ThreadDeleter<1000> >::get, COMDAT
; _this$ = ecx

; 1462 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1463 : 		return (this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBEPAXXZ ENDP ; std::unique_ptr<void,ThreadDeleter<1000> >::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??B?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
??B?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBE_NXZ PROC ; std::unique_ptr<void,ThreadDeleter<1000> >::operator bool, COMDAT
; _this$ = ecx

; 1467 : 		{	// test for non-null pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1468 : 		return (this->_Myptr != pointer());

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]

; 1469 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QBE_NXZ ENDP ; std::unique_ptr<void,ThreadDeleter<1000> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?reset@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXPAX@Z
_TEXT	SEGMENT
__Old$ = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?reset@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXPAX@Z PROC ; std::unique_ptr<void,ThreadDeleter<1000> >::reset, COMDAT
; _this$ = ecx

; 1479 : 		{	// establish new pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1480 : 		pointer _Old = this->_Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old$[ebp], ecx

; 1481 : 		this->_Myptr = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx], eax

; 1482 : 		if (_Old != pointer())

	cmp	DWORD PTR __Old$[ebp], 0
	je	SHORT $LN2@reset

; 1483 : 			this->get_deleter()(_Old);

	mov	ecx, DWORD PTR __Old$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::get_deleter
	mov	ecx, eax
	call	??R?$ThreadDeleter@$0DOI@@@QBEXPAX@Z	; ThreadDeleter<1000>::operator()
$LN2@reset:

; 1484 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXPAX@Z ENDP ; std::unique_ptr<void,ThreadDeleter<1000> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@XZ PROC ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::~unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAEAAU?$default_delete@URecordingHelper@@@2@XZ ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@URecordingHelper@@@std@@QBEXPAURecordingHelper@@@Z ; std::default_delete<RecordingHelper>::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::~unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??C?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEPAURecordingHelper@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEPAURecordingHelper@@XZ PROC ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator->, COMDAT
; _this$ = ecx

; 1457 : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1458 : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEAAURecordingHelper@@XZ ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAURecordingHelper@@@std@@SAPAURecordingHelper@@AAU3@@Z ; std::pointer_traits<RecordingHelper *>::pointer_to
	add	esp, 4

; 1459 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEPAURecordingHelper@@XZ ENDP ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?release@?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAEPAURecordingHelper@@XZ
_TEXT	SEGMENT
__Ans$ = -8						; size = 4
_this$ = -4						; size = 4
?release@?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAEPAURecordingHelper@@XZ PROC ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::release, COMDAT
; _this$ = ecx

; 1472 : 		{	// yield ownership of pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1473 : 		pointer _Ans = this->_Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ans$[ebp], ecx

; 1474 : 		this->_Myptr = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1475 : 		return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]

; 1476 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAEPAURecordingHelper@@XZ ENDP ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::release
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@XZ PROC ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::~unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAEAAU?$default_delete@UReplayBuffer@@@2@XZ ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::get_deleter
	mov	ecx, eax
	call	??R?$default_delete@UReplayBuffer@@@std@@QBEXPAUReplayBuffer@@@Z ; std::default_delete<ReplayBuffer>::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@XZ ENDP ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::~unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QBEPAUReplayBuffer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QBEPAUReplayBuffer@@XZ PROC ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::get, COMDAT
; _this$ = ecx

; 1462 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1463 : 		return (this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QBEPAUReplayBuffer@@XZ ENDP ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::get
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ PROC ; std::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ ENDP ; std::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::~move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::~move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@XZ PROC ; std::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@XZ ENDP ; std::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@XZ PROC	; std::_Tuple_val<std::shared_ptr<void> >::~_Tuple_val<std::shared_ptr<void> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$shared_ptr@X@std@@QAE@XZ		; std::shared_ptr<void>::~shared_ptr<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@XZ ENDP	; std::_Tuple_val<std::shared_ptr<void> >::~_Tuple_val<std::shared_ptr<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@ABV01@@Z PROC ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@ABV01@@Z ENDP ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,MutexDeleter,1>::_Unique_ptr_base<void,MutexDeleter,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,MutexDeleter,1>::_Unique_ptr_base<void,MutexDeleter,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAEAAUMutexDeleter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAEAAUMutexDeleter@@XZ PROC ; std::_Unique_ptr_base<void,MutexDeleter,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XUMutexDeleter@@$00@std@@QAEAAUMutexDeleter@@XZ ENDP ; std::_Unique_ptr_base<void,MutexDeleter,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,EventDeleter,1>::_Unique_ptr_base<void,EventDeleter,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,EventDeleter,1>::_Unique_ptr_base<void,EventDeleter,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAEAAUEventDeleter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAEAAUEventDeleter@@XZ PROC ; std::_Unique_ptr_base<void,EventDeleter,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XUEventDeleter@@$00@std@@QAEAAUEventDeleter@@XZ ENDP ; std::_Unique_ptr_base<void,EventDeleter,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 279  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 280  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::begin, COMDAT
; _this$ = ecx

; 1029 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1030 : 		return (const_iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1031 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@EV?$allocator@E@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@2@XZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??D?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEAAVVideoFileStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEAAVVideoFileStream@@XZ PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator*, COMDAT
; _this$ = ecx

; 1452 : 		{	// return reference to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1453 : 		return (*this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1454 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QBEAAVVideoFileStream@@XZ ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??R?$default_delete@VVideoFileStream@@@std@@QBEXPAVVideoFileStream@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv74 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@VVideoFileStream@@@std@@QBEXPAVVideoFileStream@@@Z PROC ; std::default_delete<VideoFileStream>::operator(), COMDAT
; _this$ = ecx

; 1197 : 		{	// delete a pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 		static_assert(0 < sizeof (_Ty),
; 1199 : 			"can't delete an incomplete type");
; 1200 : 		delete _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@operator
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@operator
$LN3@operator:
	mov	DWORD PTR tv74[ebp], 0
$LN1@operator:

; 1201 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@VVideoFileStream@@@std@@QBEXPAVVideoFileStream@@@Z ENDP ; std::default_delete<VideoFileStream>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAVVideoFileStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAVVideoFileStream@@@Z PROC ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$default_delete@VVideoFileStream@@@std@@QAE@XZ ; std::default_delete<VideoFileStream>::default_delete<VideoFileStream>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAVVideoFileStream@@@Z ENDP ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAEAAU?$default_delete@VVideoFileStream@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAEAAU?$default_delete@VVideoFileStream@@@2@XZ PROC ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAEAAU?$default_delete@VVideoFileStream@@@2@XZ ENDP ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?begin@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin, COMDAT
; _this$ = ecx

; 1115 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1116 : 		return (iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1117 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end, COMDAT
; _this$ = ecx

; 1125 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1126 : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1127 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Make_iter@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Make_iter, COMDAT
; _this$ = ecx

; 1157 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1158 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1159 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase, COMDAT
; _this$ = ecx

; 1457 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1458 : 		_Nodeptr _Pnode = _Unlinknode(_Where++);

	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unlinknode@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unlinknode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1459 : 		this->_Freenode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Freenode

; 1460 : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1461 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?clear@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear, COMDAT
; _this$ = ecx

; 1491 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1492 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1493 : 		this->_Orphan_ptr(*this, nullptr);
; 1494 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1495 : 
; 1496 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1497 : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 1498 : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1499 : 		this->_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1500 : 
; 1501 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN4@clear

; 1502 : 			{	// delete an element
; 1503 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], edx

; 1504 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Freenode

; 1505 : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 1506 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Tidy@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy, COMDAT
; _this$ = ecx

; 1882 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1883 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::clear

; 1884 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 823  : 		{	// construct from allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 824  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??1?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 706  : 		{	// destroy head node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 707  : 		_Freeheadnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Freeheadnode

; 708  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 778  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 779  : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 780  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin, COMDAT
; _this$ = ecx

; 1250 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1251 : 		return (iterator(this->_Myoff, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1252 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T1 = -104						; size = 12
$T2 = -92						; size = 12
$T3 = -80						; size = 12
$T4 = -68						; size = 12
$T5 = -56						; size = 12
__First$ = -44						; size = 12
__Last$ = -32						; size = 12
__Off$ = -20						; size = 4
tv162 = -16						; size = 4
__Count$ = -12						; size = 4
_this$ = -8						; size = 4
$T6 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 12
__Last_arg$ = 24					; size = 12
?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase, COMDAT
; _this$ = ecx

; 1601 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	mov	DWORD PTR _this$[ebp], ecx

; 1602 : 		iterator _First = _Make_iter(_First_arg);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Make_iter

; 1603 : 		iterator _Last = _Make_iter(_Last_arg);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Make_iter

; 1604 : 
; 1605 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1606 : 		if (_Last < _First
; 1607 : 			|| _First < begin() || end() < _Last)
; 1608 : 			_DEBUG_ERROR("deque erase iterator outside range");
; 1609 : 		_DEBUG_RANGE(_First, _Last);
; 1610 : 
; 1611 : 		size_type _Off = _First - begin();
; 1612 : 		size_type _Count = _Last - _First;
; 1613 : 		bool _Moved = 0 < _Off && _Off + _Count < this->_Mysize;
; 1614 : 
; 1615 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1616 : 		size_type _Off = _First - begin();

	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-
	mov	DWORD PTR __Off$[ebp], eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 1617 : 		size_type _Count = _Last - _First;

	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-
	mov	DWORD PTR __Count$[ebp], eax

; 1618 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1619 : 
; 1620 : 		if (_Off < (size_type)(end() - _Last))

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::end
	mov	ecx, eax
	call	??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-
	cmp	DWORD PTR __Off$[ebp], eax
	jae	SHORT $LN11@erase
	mov	DWORD PTR tv162[ebp], 1
	jmp	SHORT $LN12@erase
$LN11@erase:
	mov	DWORD PTR tv162[ebp], 0
$LN12@erase:
	mov	dl, BYTE PTR tv162[ebp]
	mov	BYTE PTR $T6[ebp], dl
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T6[ebp]
	test	eax, eax
	je	SHORT $LN8@erase

; 1621 : 			{	// closer to front
; 1622 : 			_Move_backward(begin(), _First, _Last);	// copy over hole

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
	add	esp, 40					; 00000028H
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 1623 : 			for (; 0 < _Count; --_Count)

	jmp	SHORT $LN7@erase
$LN6@erase:
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, 1
	mov	DWORD PTR __Count$[ebp], edx
$LN7@erase:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN5@erase

; 1624 : 				pop_front();	// pop copied elements

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_front@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_front
	jmp	SHORT $LN6@erase
$LN5@erase:

; 1625 : 			}
; 1626 : 		else

	jmp	SHORT $LN4@erase
$LN8@erase:

; 1627 : 			{	// closer to back
; 1628 : 			_Move(_Last, end(), _First);	// copy over hole

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::end
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
	add	esp, 40					; 00000028H
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ

; 1629 : 			for (; 0 < _Count; --_Count)

	jmp	SHORT $LN3@erase
$LN2@erase:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
$LN3@erase:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@erase

; 1630 : 				pop_back();	// pop copied elements

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_back@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_back
	jmp	SHORT $LN2@erase
$LN4@erase:

; 1631 : 			}
; 1632 : 
; 1633 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1634 : 		if (_Moved)
; 1635 : 			this->_Orphan_all();
; 1636 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1637 : 
; 1638 : 		return (begin() + _Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin
	mov	ecx, eax
	call	??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __First_arg$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last_arg$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1639 : 		}

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?erase@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@0@Z ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Tidy@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Block$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -4						; size = 1
$T3 = -3						; size = 1
$T4 = -2						; size = 1
__Almap$ = -1						; size = 1
?_Tidy@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Tidy, COMDAT
; _this$ = ecx

; 1827 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1828 : 		_Alpty _Almap(this->_Getal());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> ><std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
$LN6@Tidy:

; 1829 : 		while (!empty())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@Tidy

; 1830 : 			pop_back();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_back@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_back
	jmp	SHORT $LN6@Tidy
$LN5@Tidy:

; 1831 : 		for (size_type _Block = this->_Mapsize; 0 < _Block; )

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Block$1[ebp], eax
$LN4@Tidy:
	cmp	DWORD PTR __Block$1[ebp], 0
	jbe	SHORT $LN3@Tidy

; 1832 : 			{	// free storage for a block and destroy pointer
; 1833 : 			if (this->_Map[--_Block] != pointer())

	mov	ecx, DWORD PTR __Block$1[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Block$1[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$1[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	je	SHORT $LN2@Tidy

; 1834 : 				{	// free block and destroy its pointer
; 1835 : 				this->_Getal().deallocate(this->_Map[_Block], _DEQUESIZ);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$1[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deallocate

; 1836 : 				this->_Getal().destroy(&this->_Map[_Block]);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Block$1[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
$LN2@Tidy:

; 1837 : 				}
; 1838 : 			}

	jmp	SHORT $LN4@Tidy
$LN3@Tidy:

; 1839 : 
; 1840 : 		if (this->_Map != _Mapptr())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy

; 1841 : 			_Almap.deallocate(this->_Map,
; 1842 : 				this->_Mapsize);	// free storage for map

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::deallocate
$LN1@Tidy:

; 1843 : 		this->_Mapsize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1844 : 		this->_Map = _Mapptr();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1845 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx

; 872  : 	_Deque_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >

; 873  : 		{	// construct allocators from _Al
; 874  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Alloc_proxy

; 875  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??1?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx

; 878  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 879  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Free_proxy

; 880  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--, COMDAT
; _this$ = ecx

; 252  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 253  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 254  : 		if (this->_Getcont() == 0
; 255  : 			|| this->_Ptr == 0
; 256  : 			|| (this->_Ptr = _Mylist::_Prevnode(this->_Ptr))
; 257  : 				== ((_Mylist *)this->_Getcont())->_Myhead)
; 258  : 			{	// report error
; 259  : 			_DEBUG_ERROR("list iterator not decrementable");
; 260  : 			_SCL_SECURE_OUT_OF_RANGE;
; 261  : 			}
; 262  : 
; 263  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 264  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 265  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);
; 266  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 267  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 268  : 
; 269  :  #else /* _ITERATOR_DEBUG_LEVEL */
; 270  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 271  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 272  : 
; 273  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 274  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv75 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==, COMDAT
; _this$ = ecx

; 284  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 285  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 286  : 		if (this->_Getcont() == 0
; 287  : 			|| this->_Getcont() != _Right._Getcont())
; 288  : 			{	// report error
; 289  : 			_DEBUG_ERROR("list iterators incompatible");
; 290  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 295  : 			&& this->_Getcont() == _Right._Getcont());
; 296  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 297  : 
; 298  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv75[ebp]

; 299  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=, COMDAT
; _this$ = ecx

; 302  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 303  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 304  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 1024 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1025 : 		return (iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1026 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 1034 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1035 : 		return (iterator(this->_Mylast, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1036 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter, COMDAT
; _this$ = ecx

; 1044 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1045 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1046 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::clear, COMDAT
; _this$ = ecx

; 1507 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1508 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1509 : 		_Destroy(this->_Myfirst, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy

; 1510 : 		this->_Mylast = this->_Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax

; 1511 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 1565 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1566 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal

; 1567 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >
	add	esp, 12					; 0000000cH

; 1568 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1622 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1623 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1624 : 			{	// something to free, destroy and deallocate it
; 1625 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1626 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy

; 1627 : 			this->_Getal().deallocate(this->_Myfirst,
; 1628 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate

; 1629 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1630 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1631 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1632 : 			}
; 1633 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@K@std@@QAE@XZ PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@ABV?$allocator@K@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >, COMDAT
; _this$ = ecx

; 588  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >

; 589  : 		{	// construct allocator from _Al
; 590  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QAE@ABV?$allocator@K@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1622 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1623 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1624 : 			{	// something to free, destroy and deallocate it
; 1625 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1626 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Destroy

; 1627 : 			this->_Getal().deallocate(this->_Myfirst,
; 1628 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::deallocate

; 1629 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1630 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1631 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1632 : 			}
; 1633 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >, COMDAT
; _this$ = ecx

; 588  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >

; 589  : 		{	// construct allocator from _Al
; 590  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >, COMDAT
; _this$ = ecx

; 306  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >

; 307  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEABU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEABU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| this->_Ptr == 0
; 69   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			this->_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 81   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(this->_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEABU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		if (this->_Getcont() == 0
; 98   : 			|| this->_Ptr == 0
; 99   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 100  : 			{	// report error
; 101  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 102  : 			_SCL_SECURE_OUT_OF_RANGE;
; 103  : 			}
; 104  : 
; 105  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 106  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 107  : 		_SCL_SECURE_VALIDATE_RANGE(
; 108  : 			this->_Ptr != _Tptr()
; 109  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 110  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 111  : 
; 112  : 		++this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 113  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 114  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Compat

; 205  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 206  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAEAAUThreadCloser@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAEAAUThreadCloser@@XZ PROC ; std::_Unique_ptr_base<void,ThreadCloser,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAEAAUThreadCloser@@XZ ENDP ; std::_Unique_ptr_base<void,ThreadCloser,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Ptr_base@X@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Ptr_base@X@std@@QAE@XZ PROC			; std::_Ptr_base<void>::_Ptr_base<void>, COMDAT
; _this$ = ecx

; 279  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 280  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@X@std@@QAE@XZ ENDP			; std::_Ptr_base<void>::_Ptr_base<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Get@?$_Ptr_base@X@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Ptr_base@X@std@@QBEPAXXZ PROC			; std::_Ptr_base<void>::_Get, COMDAT
; _this$ = ecx

; 331  : 		{	// return pointer to resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 332  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 333  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Ptr_base@X@std@@QBEPAXXZ ENDP			; std::_Ptr_base<void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@X@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Decref@?$_Ptr_base@X@std@@QAEXXZ PROC			; std::_Ptr_base<void>::_Decref, COMDAT
; _this$ = ecx

; 341  : 		{	// decrement reference count

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 342  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Decref

; 343  : 			_Rep->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN2@Decref:

; 344  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@X@std@@QAEXXZ ENDP			; std::_Ptr_base<void>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 523  : 	shared_ptr(const _Myt& _Other) _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 524  : 		{	// construct shared_ptr object that owns same resource as _Other
; 525  : 		this->_Reset(_Other);

	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXABV01@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 526  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?swap@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
?swap@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::swap, COMDAT
; _this$ = ecx

; 660  : 		{	// swap pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 661  : 		this->_Swap(_Other);

	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Swap

; 662  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 279  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 280  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Get@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Get, COMDAT
; _this$ = ecx

; 331  : 		{	// return pointer to resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 332  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 333  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Decref@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Decref, COMDAT
; _this$ = ecx

; 341  : 		{	// decrement reference count

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 342  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Decref

; 343  : 			_Rep->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN2@Decref:

; 344  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*, COMDAT
; _this$ = ecx

; 602  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 603  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*

; 604  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+, COMDAT
; _this$ = ecx

; 644  : 		{	// return this + integer

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 645  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 646  : 		return (_Tmp += _Off);

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 647  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+, COMDAT
; _this$ = ecx

; 433  : 		{	// return this + integer

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 434  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 435  : 		return (_Tmp += _Off);

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 436  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??0?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
_<_Rest_arg_1>$ = 16					; size = 4
??0?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z PROC ; std::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT
; _this$ = ecx

; 215  : 		{	// construct from one or more copied elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _<_Rest_arg_1>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ; std::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
	mov	edx, DWORD PTR __This_arg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??$?0ABV?$shared_ptr@X@std@@@?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@ABV?$shared_ptr@X@1@@Z ; std::_Tuple_val<std::shared_ptr<void> >::_Tuple_val<std::shared_ptr<void> ><std::shared_ptr<void> const &>

; 216  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@ABV?$shared_ptr@X@1@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ENDP ; std::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin, COMDAT
; _this$ = ecx

; 1250 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1251 : 		return (iterator(this->_Myoff, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1252 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin, COMDAT
; _this$ = ecx

; 1255 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1256 : 		return (const_iterator(this->_Myoff, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1257 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end, COMDAT
; _this$ = ecx

; 1260 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1261 : 		return (iterator(this->_Myoff + this->_Mysize, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1262 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end, COMDAT
; _this$ = ecx

; 1265 : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1266 : 		return (const_iterator(this->_Myoff + this->_Mysize, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?swap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Right$ = 8						; size = 4
?swap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV12@@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::swap, COMDAT
; _this$ = ecx

; 1647 : 		{	// exchange contents with _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1648 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@swap

; 1649 : 			;	// same object, do nothing
; 1650 : 		else if (this->_Getal() == _Right._Getal())

	jmp	$LN8@swap
$LN6@swap:
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	push	eax
	call	??$?8V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@swap

; 1651 : 			{	// same allocator, swap control information
; 1652 : 			this->_Swap_all(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_all

; 1653 : 			_Swap_adl(this->_Map, _Right._Map);

	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$_Swap_adl@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::_Swap_adl<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 8

; 1654 : 			_STD swap(this->_Mapsize, _Right._Mapsize);

	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8

; 1655 : 			_STD swap(this->_Myoff, _Right._Myoff);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8

; 1656 : 			_STD swap(this->_Mysize, _Right._Mysize);

	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8
	jmp	SHORT $LN8@swap
$LN4@swap:

; 1657 : 			}
; 1658 : 
; 1659 : 		else if (_Alty::propagate_on_container_swap::value)

	xor	ecx, ecx
	je	SHORT $LN2@swap

; 1660 : 			{	// swap allocators and control information
; 1661 : 			this->_Swap_alloc(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_alloc@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXAAV12@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Swap_alloc

; 1662 : 			_Swap_adl(this->_Map, _Right._Map);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Swap_adl@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::_Swap_adl<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 8

; 1663 : 			_STD swap(this->_Mapsize, _Right._Mapsize);

	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8

; 1664 : 			_STD swap(this->_Myoff, _Right._Myoff);

	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8

; 1665 : 			_STD swap(this->_Mysize, _Right._Mysize);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8

; 1666 : 			}
; 1667 : 		else

	jmp	SHORT $LN8@swap
$LN2@swap:

; 1668 : 			{	// containers are incompatible
; 1669 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 : 			_DEBUG_ERROR("deque containers incompatible for swap");
; 1671 : 
; 1672 :  #else /* ITERATOR_DEBUG_LEVEL == 2 */
; 1673 : 			_XSTD terminate();

	call	?terminate@@YAXXZ			; terminate
$LN8@swap:

; 1674 :  #endif /* ITERATOR_DEBUG_LEVEL == 2 */
; 1675 : 			}
; 1676 : 
; 1677 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV12@@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Block$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -4						; size = 1
$T3 = -3						; size = 1
$T4 = -2						; size = 1
__Almap$ = -1						; size = 1
?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy, COMDAT
; _this$ = ecx

; 1827 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1828 : 		_Alpty _Almap(this->_Getal());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
$LN6@Tidy:

; 1829 : 		while (!empty())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@Tidy

; 1830 : 			pop_back();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_back@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_back
	jmp	SHORT $LN6@Tidy
$LN5@Tidy:

; 1831 : 		for (size_type _Block = this->_Mapsize; 0 < _Block; )

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Block$1[ebp], eax
$LN4@Tidy:
	cmp	DWORD PTR __Block$1[ebp], 0
	jbe	SHORT $LN3@Tidy

; 1832 : 			{	// free storage for a block and destroy pointer
; 1833 : 			if (this->_Map[--_Block] != pointer())

	mov	ecx, DWORD PTR __Block$1[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Block$1[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$1[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	je	SHORT $LN2@Tidy

; 1834 : 				{	// free block and destroy its pointer
; 1835 : 				this->_Getal().deallocate(this->_Map[_Block], _DEQUESIZ);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$1[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deallocate

; 1836 : 				this->_Getal().destroy(&this->_Map[_Block]);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Block$1[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
$LN2@Tidy:

; 1837 : 				}
; 1838 : 			}

	jmp	SHORT $LN4@Tidy
$LN3@Tidy:

; 1839 : 
; 1840 : 		if (this->_Map != _Mapptr())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy

; 1841 : 			_Almap.deallocate(this->_Map,
; 1842 : 				this->_Mapsize);	// free storage for map

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::deallocate
$LN1@Tidy:

; 1843 : 		this->_Mapsize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1844 : 		this->_Map = _Mapptr();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1845 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 872  : 	_Deque_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >

; 873  : 		{	// construct allocators from _Al
; 874  : 		_Alloc_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Alloc_proxy

; 875  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??1?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 878  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 879  : 		_Free_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Free_proxy

; 880  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::~_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal, COMDAT
; _this$ = ecx

; 911  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 912  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 913  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z PROC ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock, COMDAT
; _this$ = ecx

; 780  : 		{	// determine block from offset

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 781  : 			// NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 782  : 		return ((_Off / _DEQUESIZ) & (this->_Mapsize - 1));

	mov	eax, DWORD PTR __Off$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 1
	and	eax, edx

; 783  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		if (this->_Getcont() == 0
; 98   : 			|| this->_Ptr == 0
; 99   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 100  : 			{	// report error
; 101  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 102  : 			_SCL_SECURE_OUT_OF_RANGE;
; 103  : 			}
; 104  : 
; 105  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 106  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 107  : 		_SCL_SECURE_VALIDATE_RANGE(
; 108  : 			this->_Ptr != _Tptr()
; 109  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 110  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 111  : 
; 112  : 		++this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 113  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 114  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Compat

; 205  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 206  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*, COMDAT
; _this$ = ecx

; 323  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*

; 325  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-, COMDAT
; _this$ = ecx

; 376  : 		{	// return this - integer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 378  : 		return (_Tmp -= _Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-=
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 379  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QBEXPAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv68 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QBEXPAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z PROC ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::operator(), COMDAT
; _this$ = ecx

; 1197 : 		{	// delete a pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 		static_assert(0 < sizeof (_Ty),
; 1199 : 			"can't delete an incomplete type");
; 1200 : 		delete _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@operator
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_G?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN1@operator:

; 1201 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QBEXPAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ENDP ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z PROC ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QAE@XZ ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAE@PAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@1@@Z ENDP ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@U?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@$00@std@@QAEAAU?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>,std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++, COMDAT
; _this$ = ecx

; 1063 : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1064 : 		++*((_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator++

; 1065 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1066 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*, COMDAT
; _this$ = ecx

; 602  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 603  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*

; 604  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--, COMDAT
; _this$ = ecx

; 625  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 626  : 		--*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--

; 627  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 628  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??R?$ThreadDeleter@$0DOI@@@QBEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??R?$ThreadDeleter@$0DOI@@@QBEXPAX@Z PROC		; ThreadDeleter<1000>::operator(), COMDAT
; _this$ = ecx

; 45   :     void operator()(HANDLE h) const { if (!h) return; OSTerminateThread(h, args ...); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _h$[ebp], 0
	jne	SHORT $LN1@operator
	jmp	SHORT $LN2@operator
$LN1@operator:
	push	1000					; 000003e8H
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp_?OSTerminateThread@@YGHPAXK@Z
$LN2@operator:
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$ThreadDeleter@$0DOI@@@QBEXPAX@Z ENDP		; ThreadDeleter<1000>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::_Unique_ptr_base<void,ThreadDeleter<1000>,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::_Unique_ptr_base<void,ThreadDeleter<1000>,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ PROC ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ ENDP ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??D?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEAAURecordingHelper@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEAAURecordingHelper@@XZ PROC ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator*, COMDAT
; _this$ = ecx

; 1452 : 		{	// return reference to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1453 : 		return (*this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1454 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QBEAAURecordingHelper@@XZ ENDP ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??R?$default_delete@URecordingHelper@@@std@@QBEXPAURecordingHelper@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv74 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@URecordingHelper@@@std@@QBEXPAURecordingHelper@@@Z PROC ; std::default_delete<RecordingHelper>::operator(), COMDAT
; _this$ = ecx

; 1197 : 		{	// delete a pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 		static_assert(0 < sizeof (_Ty),
; 1199 : 			"can't delete an incomplete type");
; 1200 : 		delete _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@operator
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@operator
$LN3@operator:
	mov	DWORD PTR tv74[ebp], 0
$LN1@operator:

; 1201 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@URecordingHelper@@@std@@QBEXPAURecordingHelper@@@Z ENDP ; std::default_delete<RecordingHelper>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAEAAU?$default_delete@URecordingHelper@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAEAAU?$default_delete@URecordingHelper@@@2@XZ PROC ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAEAAU?$default_delete@URecordingHelper@@@2@XZ ENDP ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??R?$default_delete@UReplayBuffer@@@std@@QBEXPAUReplayBuffer@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv74 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
__Ptr$ = 8						; size = 4
??R?$default_delete@UReplayBuffer@@@std@@QBEXPAUReplayBuffer@@@Z PROC ; std::default_delete<ReplayBuffer>::operator(), COMDAT
; _this$ = ecx

; 1197 : 		{	// delete a pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 		static_assert(0 < sizeof (_Ty),
; 1199 : 			"can't delete an incomplete type");
; 1200 : 		delete _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@operator
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@operator
$LN3@operator:
	mov	DWORD PTR tv74[ebp], 0
$LN1@operator:

; 1201 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_delete@UReplayBuffer@@@std@@QBEXPAUReplayBuffer@@@Z ENDP ; std::default_delete<ReplayBuffer>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAEAAU?$default_delete@UReplayBuffer@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAEAAU?$default_delete@UReplayBuffer@@@2@XZ PROC ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAEAAU?$default_delete@UReplayBuffer@@@2@XZ ENDP ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEABEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEABEXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| this->_Ptr == 0
; 69   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			this->_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 81   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(this->_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QBEABEXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAVVideoFileStream@@@std@@SAPAVVideoFileStream@@AAV3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAVVideoFileStream@@@std@@SAPAVVideoFileStream@@AAV3@@Z PROC ; std::pointer_traits<VideoFileStream *>::pointer_to, COMDAT

; 233  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 234  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@VVideoFileStream@@@std@@YAPAVVideoFileStream@@AAV1@@Z ; std::addressof<VideoFileStream>
	add	esp, 4

; 235  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAVVideoFileStream@@@std@@SAPAVVideoFileStream@@AAV3@@Z ENDP ; std::pointer_traits<VideoFileStream *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAURecordingHelper@@@std@@SAPAURecordingHelper@@AAU3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAURecordingHelper@@@std@@SAPAURecordingHelper@@AAU3@@Z PROC ; std::pointer_traits<RecordingHelper *>::pointer_to, COMDAT

; 233  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 234  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@URecordingHelper@@@std@@YAPAURecordingHelper@@AAU1@@Z ; std::addressof<RecordingHelper>
	add	esp, 4

; 235  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAURecordingHelper@@@std@@SAPAURecordingHelper@@AAU3@@Z ENDP ; std::pointer_traits<RecordingHelper *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::~_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::~_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::~_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAEPAXI@Z PROC ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAEPAXI@Z ENDP ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ PROC ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@V?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@QAE@XZ ENDP ; std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::~tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$default_delete@VVideoFileStream@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@VVideoFileStream@@@std@@QAE@XZ PROC	; std::default_delete<VideoFileStream>::default_delete<VideoFileStream>, COMDAT
; _this$ = ecx

; 1185 : 	default_delete() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1186 : 		{	// default construct
; 1187 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$default_delete@VVideoFileStream@@@std@@QAE@XZ ENDP	; std::default_delete<VideoFileStream>::default_delete<VideoFileStream>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Unlinknode@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Unlinknode@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unlinknode, COMDAT
; _this$ = ecx

; 1436 : 		{	// unlink node at _Where from the list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1437 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1438 : 		if (_Where._Getcont() != this || _Where._Ptr == this->_Myhead)
; 1439 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1440 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1441 : 		_Orphan_ptr(*this, _Pnode);
; 1442 : 
; 1443 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1444 : 		_Nodeptr _Pnode = (_Where)._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1445 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1446 : 
; 1447 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =
; 1448 : 			this->_Nextnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1449 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =
; 1450 : 			this->_Prevnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1451 : 
; 1452 : 		--this->_Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1453 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 1454 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unlinknode@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unlinknode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Freenode@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z PROC ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Freenode, COMDAT
; _this$ = ecx

; 846  : 		{	// give node back

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		this->_Getal().destroy(
; 848  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>

; 849  : 		this->_Getal().destroy(
; 850  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>

; 851  : 		this->_Getal().destroy(
; 852  : 			_STD addressof(this->_Myval(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 853  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::deallocate

; 854  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 700  : 	_List_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >

; 701  : 		{	// construct head node, allocator from _Al
; 702  : 		this->_Myhead = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buyheadnode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 703  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 771  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 772  : 		this->_Getal().destroy(
; 773  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>

; 774  : 		this->_Getal().destroy(
; 775  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>

; 776  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::deallocate

; 777  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 806  : 		{	// construct by copying base

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 807  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction, COMDAT

; 740  : 		{	// get allocator to use

	push	ebp
	mov	ebp, esp

; 741  : 		return (_Al.select_on_container_copy_construction());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?select_on_container_copy_construction@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV12@XZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::select_on_container_copy_construction
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 742  : 		}

	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode, COMDAT

; 532  : 		{	// return reference to successor pointer in node

	push	ebp
	mov	ebp, esp

; 533  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 534  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode, COMDAT

; 537  : 		{	// return reference to predecessor pointer in node

	push	ebp
	mov	ebp, esp

; 538  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 539  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?end@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::end, COMDAT
; _this$ = ecx

; 1260 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1261 : 		return (iterator(this->_Myoff + this->_Mysize, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1262 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Make_iter@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Make_iter, COMDAT
; _this$ = ecx

; 1270 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1271 : 		return (iterator(_Where._Myoff, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Make_iter@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?empty@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
?empty@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::empty, COMDAT
; _this$ = ecx

; 1361 : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1362 : 		return (this->_Mysize == 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv70[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv70[ebp]

; 1363 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBE_NXZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::empty
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?pop_front@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Block$ = -16						; size = 4
tv138 = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?pop_front@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_front, COMDAT
; _this$ = ecx

; 1434 : 		{	// erase element at beginning

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1435 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1436 : 		if (empty())
; 1437 : 			_DEBUG_ERROR("deque empty before pop");
; 1438 : 		else
; 1439 : 			{	// something to erase, do it
; 1440 : 			_Orphan_off(this->_Myoff);
; 1441 : 			size_type _Block = this->_Getblock(this->_Myoff);
; 1442 : 			this->_Getal().destroy(
; 1443 : 				this->_Map[_Block] + this->_Myoff % _DEQUESIZ);
; 1444 : 			if (--this->_Mysize == 0)
; 1445 : 				this->_Myoff = 0;
; 1446 : 			else
; 1447 : 				++this->_Myoff;
; 1448 : 			}
; 1449 : 
; 1450 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1451 : 		size_type _Block = this->_Getblock(this->_Myoff);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 1452 : 		this->_Getal().destroy(
; 1453 : 			this->_Map[_Block] + this->_Myoff % _DEQUESIZ);

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >

; 1454 : 		if (--this->_Mysize == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR [eax+16], ecx
	cmp	DWORD PTR tv138[ebp], 0
	jne	SHORT $LN2@pop_front

; 1455 : 			this->_Myoff = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1456 : 		else

	jmp	SHORT $LN3@pop_front
$LN2@pop_front:

; 1457 : 			++this->_Myoff;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN3@pop_front:

; 1458 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1459 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_front
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?pop_back@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Block$ = -20						; size = 4
tv140 = -16						; size = 4
__Newoff$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?pop_back@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_back, COMDAT
; _this$ = ecx

; 1471 : 		{	// erase element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1472 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1473 : 		if (empty())
; 1474 : 			_DEBUG_ERROR("deque empty before pop");
; 1475 : 		else
; 1476 : 			{	// something to erase, do it
; 1477 : 			size_type _Newoff = this->_Myoff + this->_Mysize - 1;
; 1478 : 			_Orphan_off(_Newoff);
; 1479 : 			size_type _Block = this->_Getblock(_Newoff);
; 1480 : 			this->_Getal().destroy(
; 1481 : 				this->_Map[_Block] + _Newoff % _DEQUESIZ);
; 1482 : 			if (--this->_Mysize == 0)
; 1483 : 				this->_Myoff = 0;
; 1484 : 			}
; 1485 : 
; 1486 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1487 : 		size_type _Newoff = this->_Myoff + this->_Mysize - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	lea	ecx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR __Newoff$[ebp], ecx

; 1488 : 		size_type _Block = this->_Getblock(_Newoff);

	mov	edx, DWORD PTR __Newoff$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 1489 : 		this->_Getal().destroy(
; 1490 : 			this->_Map[_Block] + _Newoff % _DEQUESIZ);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >

; 1491 : 		if (--this->_Mysize == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, 1
	mov	DWORD PTR tv140[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR [eax+16], ecx
	cmp	DWORD PTR tv140[ebp], 0
	jne	SHORT $LN2@pop_back

; 1492 : 			this->_Myoff = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
$LN2@pop_back:

; 1493 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1494 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_back@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 892  : 		{	// construct proxy from _Alval

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 893  : 		typename _Alty::template rebind<_Container_proxy>::other
; 894  : 			_Alproxy;

	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >

; 895  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 896  : 		_Alproxy.construct(this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 897  : 		this->_Myproxy->_Mycont = this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 898  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Free_proxy, COMDAT
; _this$ = ecx

; 901  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 902  : 		typename _Alty::template rebind<_Container_proxy>::other
; 903  : 			_Alproxy;

	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >

; 904  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 905  : 		_Alproxy.destroy(this->_Myproxy);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 906  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 907  : 		this->_Myproxy = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0

; 908  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal, COMDAT
; _this$ = ecx

; 911  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 912  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 913  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >, COMDAT
; _this$ = ecx

; 771  : 	_Deque_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 772  : 		{	// initialize values
; 773  : 		_Map = _Mapptr();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 774  : 		_Mapsize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 775  : 		_Myoff = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 776  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 777  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 345  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++, COMDAT
; _this$ = ecx

; 245  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 247  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++

; 248  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 249  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal, COMDAT
; _this$ = ecx

; 641  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 643  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@K@std@@QAEXPAKI@Z ; std::allocator<unsigned long>::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >, COMDAT
; _this$ = ecx

; 480  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 481  : 		{	// initialize values
; 482  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 483  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 484  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 485  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Destroy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1565 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1566 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal

; 1567 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
	add	esp, 12					; 0000000cH

; 1568 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal, COMDAT
; _this$ = ecx

; 641  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 643  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >, COMDAT
; _this$ = ecx

; 480  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 481  : 		{	// initialize values
; 482  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 483  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 484  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 485  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Compat, COMDAT
; _this$ = ecx

; 254  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Swap, COMDAT
; _this$ = ecx

; 314  : 		{	// swap pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		_STD swap(_Rep, _Right._Rep);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$swap@PAV_Ref_count_base@std@@@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *>
	add	esp, 8

; 316  : 		_STD swap(_Ptr, _Right._Ptr);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$swap@PBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YAXAAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@0@Z ; std::swap<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const *>
	add	esp, 8

; 317  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx

; 585  : 		{	// construct with offset _Off in *_Pdeque

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >

; 586  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=, COMDAT
; _this$ = ecx

; 638  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 639  : 		this->_Myoff += _Off;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 640  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 641  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-, COMDAT
; _this$ = ecx

; 661  : 		{	// return difference of iterators

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 662  : 		return (*(_Mybase *)this - _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??G?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-

; 663  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
__Off$ = -16						; size = 4
__Block$ = -12						; size = 4
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 324  : 
; 325  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 326  : 		if (_Mycont == 0
; 327  : 			|| this->_Myoff < _Mycont->_Myoff
; 328  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 329  : 		{	// report error
; 330  : 		_DEBUG_ERROR("deque iterator not dereferencable");
; 331  : 		_SCL_SECURE_OUT_OF_RANGE;
; 332  : 		}
; 333  : 
; 334  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 335  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 336  : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myoff <= this->_Myoff
; 337  : 			&& this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 338  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 339  : 
; 340  : 		_Analysis_assume_(_Mycont != 0);
; 341  : 
; 342  : 		size_type _Block = _Mycont->_Getblock(_Myoff);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR __Mycont$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 343  : 		size_type _Off = _Myoff % _DEQUESIZ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR __Off$[ebp], edx

; 344  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	edx, DWORD PTR __Mycont$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [edx+eax*8]

; 345  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??Y?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=, COMDAT
; _this$ = ecx

; 410  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 411  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 412  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 413  : 		if (_Mycont == 0
; 414  : 			|| this->_Myoff + _Off < _Mycont->_Myoff
; 415  : 			|| _Mycont->_Myoff + _Mycont->_Mysize < this->_Myoff + _Off)
; 416  : 			{	// report error
; 417  : 			_DEBUG_ERROR("deque iterator + offset out of range");
; 418  : 			_SCL_SECURE_OUT_OF_RANGE;
; 419  : 			}
; 420  : 
; 421  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 422  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 423  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 424  : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myoff <= this->_Myoff + _Off
; 425  : 			&& this->_Myoff + _Off <= _Mycont->_Myoff + _Mycont->_Mysize);
; 426  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 427  : 
; 428  : 		_Myoff += _Off;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 429  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 430  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??0?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
??0?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z PROC ; std::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT
; _this$ = ecx

; 215  : 		{	// construct from one or more copied elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@_N@std@@QAE@AB_N@Z		; std::tuple<bool>::tuple<bool>
	mov	ecx, DWORD PTR __This_arg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@@Z ; std::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > ><std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>

; 216  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tuple@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@AB_N@Z ENDP ; std::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>::tuple<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?pop_back@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Block$ = -20						; size = 4
tv140 = -16						; size = 4
__Newoff$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?pop_back@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_back, COMDAT
; _this$ = ecx

; 1471 : 		{	// erase element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1472 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1473 : 		if (empty())
; 1474 : 			_DEBUG_ERROR("deque empty before pop");
; 1475 : 		else
; 1476 : 			{	// something to erase, do it
; 1477 : 			size_type _Newoff = this->_Myoff + this->_Mysize - 1;
; 1478 : 			_Orphan_off(_Newoff);
; 1479 : 			size_type _Block = this->_Getblock(_Newoff);
; 1480 : 			this->_Getal().destroy(
; 1481 : 				this->_Map[_Block] + _Newoff % _DEQUESIZ);
; 1482 : 			if (--this->_Mysize == 0)
; 1483 : 				this->_Myoff = 0;
; 1484 : 			}
; 1485 : 
; 1486 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1487 : 		size_type _Newoff = this->_Myoff + this->_Mysize - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	lea	ecx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR __Newoff$[ebp], ecx

; 1488 : 		size_type _Block = this->_Getblock(_Newoff);

	mov	edx, DWORD PTR __Newoff$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 1489 : 		this->_Getal().destroy(
; 1490 : 			this->_Map[_Block] + _Newoff % _DEQUESIZ);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 1491 : 		if (--this->_Mysize == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, 1
	mov	DWORD PTR tv140[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR [eax+16], ecx
	cmp	DWORD PTR tv140[ebp], 0
	jne	SHORT $LN2@pop_back

; 1492 : 			this->_Myoff = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
$LN2@pop_back:

; 1493 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1494 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_back@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Swap_alloc@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_alloc@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Swap_alloc, COMDAT
; _this$ = ecx

; 887  : 		{	// swap allocators

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 888  : 		_Swap_adl(this->_Myproxy, _Right._Myproxy);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$_Swap_adl@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z ; std::_Swap_adl<std::_Container_proxy *>
	add	esp, 8

; 889  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_alloc@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Swap_alloc
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 892  : 		{	// construct proxy from _Alval

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 893  : 		typename _Alty::template rebind<_Container_proxy>::other
; 894  : 			_Alproxy;

	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >

; 895  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 896  : 		_Alproxy.construct(this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 897  : 		this->_Myproxy->_Mycont = this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 898  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Free_proxy, COMDAT
; _this$ = ecx

; 901  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 902  : 		typename _Alty::template rebind<_Container_proxy>::other
; 903  : 			_Alproxy;

	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >

; 904  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 905  : 		_Alproxy.destroy(this->_Myproxy);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 906  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 907  : 		this->_Myproxy = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0

; 908  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 771  : 	_Deque_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 772  : 		{	// initialize values
; 773  : 		_Map = _Mapptr();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 774  : 		_Mapsize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 775  : 		_Myoff = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 776  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 777  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Compat, COMDAT
; _this$ = ecx

; 254  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >, COMDAT
; _this$ = ecx

; 306  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >

; 307  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-=, COMDAT
; _this$ = ecx

; 371  : 		{	// decrement by integer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 372  : 		return (*this += -_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=

; 373  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QAE@XZ PROC ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >, COMDAT
; _this$ = ecx

; 1185 : 	default_delete() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1186 : 		{	// default construct
; 1187 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$default_delete@V?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@@std@@QAE@XZ ENDP ; std::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >::default_delete<std::tuple<unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 585  : 		{	// construct with offset _Off in *_Pdeque

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 586  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 302  : 	_Deque_const_iterator(size_type _Off, const _Container_base12 *_Pdeque)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12

; 303  : 		{	// construct with offset _Off in *_Pdeque
; 304  : 		_Setcont((_Mydeque *)_Pdeque);

	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Setcont

; 305  : 		_Myoff = _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 306  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
__Off$ = -16						; size = 4
__Block$ = -12						; size = 4
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*, COMDAT
; _this$ = ecx

; 322  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax

; 324  : 
; 325  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 326  : 		if (_Mycont == 0
; 327  : 			|| this->_Myoff < _Mycont->_Myoff
; 328  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 329  : 		{	// report error
; 330  : 		_DEBUG_ERROR("deque iterator not dereferencable");
; 331  : 		_SCL_SECURE_OUT_OF_RANGE;
; 332  : 		}
; 333  : 
; 334  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 335  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 336  : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myoff <= this->_Myoff
; 337  : 			&& this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 338  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 339  : 
; 340  : 		_Analysis_assume_(_Mycont != 0);
; 341  : 
; 342  : 		size_type _Block = _Mycont->_Getblock(_Myoff);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR __Mycont$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 343  : 		size_type _Off = _Myoff % _DEQUESIZ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR __Off$[ebp], edx

; 344  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	edx, DWORD PTR __Mycont$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [edx+eax*8]

; 345  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--, COMDAT
; _this$ = ecx

; 382  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 383  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 384  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 385  : 		if (_Mycont == 0
; 386  : 			|| this->_Myoff <= _Mycont->_Myoff)
; 387  : 		{	// report error
; 388  : 		_DEBUG_ERROR("deque iterator not decrementable");
; 389  : 		_SCL_SECURE_OUT_OF_RANGE;
; 390  : 		}
; 391  : 
; 392  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 393  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 394  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 395  : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myoff < this->_Myoff);
; 396  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 397  : 
; 398  : 		--_Myoff;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 399  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 400  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??E?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ PROC ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator++, COMDAT
; _this$ = ecx

; 845  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 846  : 		--current;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator--

; 847  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAEAAV01@XZ ENDP ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@E@std@@@std@@@std@@QAE@PAEPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV12@XZ PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::select_on_container_copy_construction, COMDAT
; _this$ = ecx

; 532  : 		{	// return this allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 533  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 534  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV12@XZ ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 766  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 767  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buynode0

; 768  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal, COMDAT
; _this$ = ecx

; 803  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 804  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 805  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 525  : 	_List_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 526  : 		{	// initialize data
; 527  : 		this->_Myhead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 528  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 529  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Myval, COMDAT

; 542  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 543  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 544  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z PROC ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Getblock, COMDAT
; _this$ = ecx

; 780  : 		{	// determine block from offset

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 781  : 			// NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 782  : 		return ((_Off / _DEQUESIZ) & (this->_Mapsize - 1));

	mov	eax, DWORD PTR __Off$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 1
	and	eax, edx

; 783  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>

; 188  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++, COMDAT
; _this$ = ecx

; 224  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 225  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 226  : 		if (this->_Getcont() == 0
; 227  : 			|| this->_Ptr == 0
; 228  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 229  : 			{	// report error
; 230  : 			_DEBUG_ERROR("list iterator not incrementable");
; 231  : 			_SCL_SECURE_OUT_OF_RANGE;
; 232  : 			}
; 233  : 
; 234  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 235  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 236  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 237  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 238  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 239  : 
; 240  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 241  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 242  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 95   : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 97   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC		; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@K@std@@QAE@XZ		; std::allocator<unsigned long>::allocator<unsigned long>

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<unsigned long> >::_Wrap_alloc<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z PROC ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ENDP ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx

; 302  : 	_Deque_const_iterator(size_type _Off, const _Container_base12 *_Pdeque)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12

; 303  : 		{	// construct with offset _Off in *_Pdeque
; 304  : 		_Setcont((_Mydeque *)_Pdeque);

	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Setcont

; 305  : 		_Myoff = _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 306  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??G?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-, COMDAT
; _this$ = ecx

; 450  : 		{	// return difference of iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 451  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Compat

; 452  : 		return (_Right._Myoff <= this->_Myoff
; 453  : 			? this->_Myoff - _Right._Myoff
; 454  : 			: -(difference_type)(_Right._Myoff - this->_Myoff));

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	ja	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+8]
	neg	eax
	mov	DWORD PTR tv76[ebp], eax
$LN4@operator:
	mov	eax, DWORD PTR tv76[ebp]

; 455  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??0?$tuple@_N@std@@QAE@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
??0?$tuple@_N@std@@QAE@AB_N@Z PROC			; std::tuple<bool>::tuple<bool>, COMDAT
; _this$ = ecx

; 215  : 		{	// construct from one or more copied elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$$V@std@@QAE@XZ		; std::tuple<>::tuple<>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AB_N@?$_Tuple_val@_N@std@@QAE@AB_N@Z ; std::_Tuple_val<bool>::_Tuple_val<bool><bool const &>

; 216  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tuple@_N@std@@QAE@AB_N@Z ENDP			; std::tuple<bool>::tuple<bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=, COMDAT
; _this$ = ecx

; 359  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 360  : 		*(_Mybase *)this += _Off;

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=

; 361  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 362  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pdeque$ = 8						; size = 4
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Setcont, COMDAT
; _this$ = ecx

; 530  : 		{	// set container pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 531  : 		this->_Adopt(_Pdeque);

	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 532  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Setcont
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -20						; size = 1
$T3 = -19						; size = 1
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buynode0, COMDAT
; _this$ = ecx

; 781  : 		{	// allocate a node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 782  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 783  : 
; 784  : 		if (_Next == _Nodeptr())

	cmp	DWORD PTR __Next$[ebp], 0
	jne	SHORT $LN2@Buynode0

; 785  : 			{	// point at self
; 786  : 			_Next = _Pnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx

; 787  : 			_Prev = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Prev$[ebp], edx
$LN2@Buynode0:

; 788  : 			}
; 789  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 790  : 		this->_Getal().construct(
; 791  : 			_STD addressof(this->_Nextnode(_Pnode)), _Next);

	lea	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>

; 792  : 		this->_Getal().construct(
; 793  : 			_STD addressof(this->_Prevnode(_Pnode)), _Prev);

	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
	jmp	SHORT $LN5@Buynode0
__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z$0:

; 794  : 		_CATCH_ALL
; 795  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::deallocate

; 796  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 797  : 		_CATCH_END

	mov	eax, $LN8@Buynode0
	ret	0
$LN5@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z$1
$LN8@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z$1:

; 798  : 
; 799  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode0:

; 800  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buynode0
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 46   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Compat, COMDAT
; _this$ = ecx

; 526  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 527  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pdeque$ = 8						; size = 4
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Setcont, COMDAT
; _this$ = ecx

; 530  : 		{	// set container pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 531  : 		this->_Adopt(_Pdeque);

	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 532  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Setcont
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=, COMDAT
; _this$ = ecx

; 153  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 154  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 155  : 		if (this->_Getcont() == 0
; 156  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 157  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 158  : 			{	// report error
; 159  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 160  : 			_SCL_SECURE_OUT_OF_RANGE;
; 161  : 			}
; 162  : 
; 163  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 164  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 165  : 		_SCL_SECURE_VALIDATE_RANGE(
; 166  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 167  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 168  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 169  : 
; 170  : 		_Ptr += _Off;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 171  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 172  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$make_shared@$$CBV?$vector@EV?$allocator@E@std@@@std@@AAPBEPBE@std@@YA?AV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAPBE$$QAPBE@Z
_TEXT	SEGMENT
__Ret$ = -20						; size = 8
__Rx$ = -12						; size = 4
tv75 = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$make_shared@$$CBV?$vector@EV?$allocator@E@std@@@std@@AAPBEPBE@std@@YA?AV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAPBE$$QAPBE@Z PROC ; std::make_shared<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned char const * &,unsigned char const *>, COMDAT

; 1001 : 	{	// make a shared_ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1002 : 	_Ref_count_obj<_Ty> *_Rx =
; 1003 : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@make_share
	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@PBE@std@@YA$$QAPBEAAPBE@Z	; std::forward<unsigned char const *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPBE@std@@YAAAPBEAAPBE@Z	; std::forward<unsigned char const * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0AAPBEPBE@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAPBE$$QAPBE@Z ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const ><unsigned char const * &,unsigned char const *>
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@make_share
$LN3@make_share:
	mov	DWORD PTR tv75[ebp], 0
$LN4@make_share:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR __Rx$[ebp], edx

; 1004 : 
; 1005 : 	shared_ptr<_Ty> _Ret;

	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >

; 1006 : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Rx$[ebp]
	call	?_Getptr@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Getptr
	push	eax
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??$_Resetp0@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@1@PAV_Ref_count_base@1@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Resetp0<std::vector<unsigned char,std::allocator<unsigned char> > const >

; 1007 : 	return (_Ret);

	lea	ecx, DWORD PTR __Ret$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1008 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$make_shared@$$CBV?$vector@EV?$allocator@E@std@@@std@@AAPBEPBE@std@@YA?AV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAPBE$$QAPBE@Z ENDP ; std::make_shared<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned char const * &,unsigned char const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$make_shared@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@2@@std@@YA?AV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Ret$ = -20						; size = 8
__Rx$ = -12						; size = 4
tv81 = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
_<_Args_3>$ = 24					; size = 4
??$make_shared@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@2@@std@@YA?AV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@@Z PROC ; std::make_shared<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ,enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>, COMDAT

; 1001 : 	{	// make a shared_ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1002 : 	_Ref_count_obj<_Ty> *_Rx =
; 1003 : 		new _Ref_count_obj<_Ty>(_STD forward<_Types>(_Args)...);

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@make_share
	mov	eax, DWORD PTR _<_Args_3>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_2>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_1>$[ebp]
	push	edx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z ; std::forward<enum PacketType &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN4@make_share
$LN3@make_share:
	mov	DWORD PTR tv81[ebp], 0
$LN4@make_share:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR __Rx$[ebp], ecx

; 1004 : 
; 1005 : 	shared_ptr<_Ty> _Ret;

	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 1006 : 	_Ret._Resetp0(_Rx->_Getptr(), _Rx);

	mov	edx, DWORD PTR __Rx$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Rx$[ebp]
	call	?_Getptr@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Getptr
	push	eax
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??$_Resetp0@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@PAV_Ref_count_base@1@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Resetp0<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 1007 : 	return (_Ret);

	lea	eax, DWORD PTR __Ret$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	lea	ecx, DWORD PTR __Ret$[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1008 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$make_shared@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@2@@std@@YA?AV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@@Z ENDP ; std::make_shared<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ,enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 1038 : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1039 : 		{	// insert element at end
; 1040 : 		_Insert(_Unchecked_end(), _STD forward<_Valty>(_Val)...);

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unchecked_end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Insert<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 1041 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$end@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$end@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z PROC ; std::end<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT

; 1201 : 	{	// get end of sequence

	push	ebp
	mov	ebp, esp

; 1202 : 	return (_Cont.end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1203 : 	}

	pop	ebp
	ret	0
??$end@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ENDP ; std::end<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$emplace_back@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Newoff$ = -16						; size = 4
__Block$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
??$emplace_back@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::emplace_back<unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>, COMDAT
; _this$ = ecx

; 1155 : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1156 : 		{	// insert element at end
; 1157 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1158 : 		_PUSH_BACK_BEGIN;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	SHORT $LN2@emplace_ba
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 2
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	ja	SHORT $LN2@emplace_ba
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Growmap@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Growmap
$LN2@emplace_ba:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+eax-1]
	mov	edx, DWORD PTR _this$[ebp]
	and	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	DWORD PTR __Newoff$[ebp], edx
	mov	ecx, DWORD PTR __Newoff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	jne	SHORT $LN1@emplace_ba
	push	2
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN1@emplace_ba:

; 1159 : 		this->_Getal().construct(
; 1160 : 			this->_Map[_Block] + _Newoff % _DEQUESIZ,
; 1161 : 			_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_1>$[ebp]
	push	edx
	call	??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>

; 1162 : 		_PUSH_BACK_END;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 1163 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
??$emplace_back@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::emplace_back<unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$begin@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$begin@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z PROC ; std::begin<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT

; 1189 : 	{	// get beginning of sequence

	push	ebp
	mov	ebp, esp

; 1190 : 	return (_Cont.begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?begin@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1191 : 	}

	pop	ebp
	ret	0
??$begin@V?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ENDP ; std::begin<std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$begin@V?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$begin@V?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@0@@Z PROC ; std::begin<std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT

; 1189 : 	{	// get beginning of sequence

	push	ebp
	mov	ebp, esp

; 1190 : 	return (_Cont.begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?begin@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1191 : 	}

	pop	ebp
	ret	0
??$begin@V?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ENDP ; std::begin<std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$reset@XP6AXPAX@Z@?$shared_ptr@X@std@@QAEXPAXP6AX0@Z@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 4
??$reset@XP6AXPAX@Z@?$shared_ptr@X@std@@QAEXPAXP6AX0@Z@Z PROC ; std::shared_ptr<void>::reset<void,void (__cdecl*)(void *)>, COMDAT
; _this$ = ecx

; 646  : 		void reset(_Ux *_Px, _Dx _Dt)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 647  : 		{	// release, take ownership of _Px, with deleter _Dt
; 648  : 		shared_ptr(_Px, _Dt).swap(*this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dt$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Px$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0XP6AXPAX@Z@?$shared_ptr@X@std@@QAE@PAXP6AX0@Z@Z ; std::shared_ptr<void>::shared_ptr<void><void,void (__cdecl*)(void *)>
	mov	ecx, eax
	call	?swap@?$shared_ptr@X@std@@QAEXAAV12@@Z	; std::shared_ptr<void>::swap
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$shared_ptr@X@std@@QAE@XZ		; std::shared_ptr<void>::~shared_ptr<void>

; 649  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$reset@XP6AXPAX@Z@?$shared_ptr@X@std@@QAEXPAXP6AX0@Z@Z ENDP ; std::shared_ptr<void>::reset<void,void (__cdecl*)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,void>, COMDAT
; _this$ = ecx

; 997  : 		{	// construct from [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 998  : 		_Construct(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >

; 999  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$emplace_back@V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@2@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAEX$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
??$emplace_back@V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@2@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAEX$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::emplace_back<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>, COMDAT
; _this$ = ecx

; 893  : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 894  : 		{	// insert by moving into element at end
; 895  : 		if (this->_Mylast == this->_Myend)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN1@emplace_ba

; 896  : 			_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reserve
$LN1@emplace_ba:

; 897  : 		_Orphan_range(this->_Mylast, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Orphan_range

; 898  : 		this->_Getal().construct(this->_Mylast,
; 899  : 			_STD forward<_Valty>(_Val)...);

	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	push	ecx
	call	??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ; std::forward<std::unique_ptr<void,ThreadCloser> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>

; 900  : 		++this->_Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$emplace_back@V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@2@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QAEX$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::emplace_back<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$cbegin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$cbegin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z PROC ; std::cbegin<std::vector<unsigned long,std::allocator<unsigned long> > >, COMDAT

; 1228 : 	{	// get beginning of sequence

	push	ebp
	mov	ebp, esp

; 1229 : 	return (_STD begin(_Cont));

	mov	eax, DWORD PTR __Cont$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >
	add	esp, 8
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1230 : 	}

	pop	ebp
	ret	0
??$cbegin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ENDP ; std::cbegin<std::vector<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$cend@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$cend@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z PROC ; std::cend<std::vector<unsigned long,std::allocator<unsigned long> > >, COMDAT

; 1234 : 	{	// get end of sequence

	push	ebp
	mov	ebp, esp

; 1235 : 	return (_STD end(_Cont));

	mov	eax, DWORD PTR __Cont$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$end@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ; std::end<std::vector<unsigned long,std::allocator<unsigned long> > >
	add	esp, 8
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1236 : 	}

	pop	ebp
	ret	0
??$cend@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ENDP ; std::cend<std::vector<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@AAV?$vector@KV?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@AAV?$vector@KV?$allocator@K@std@@@0@@Z PROC ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >, COMDAT

; 1189 : 	{	// get beginning of sequence

	push	ebp
	mov	ebp, esp

; 1190 : 	return (_Cont.begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1191 : 	}

	pop	ebp
	ret	0
??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@AAV?$vector@KV?$allocator@K@std@@@0@@Z ENDP ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$emplace_back@AAK@?$vector@KV?$allocator@K@std@@@std@@QAEXAAK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
_<_Val_0>$ = 8						; size = 4
??$emplace_back@AAK@?$vector@KV?$allocator@K@std@@@std@@QAEXAAK@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long &>, COMDAT
; _this$ = ecx

; 893  : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 894  : 		{	// insert by moving into element at end
; 895  : 		if (this->_Mylast == this->_Myend)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN1@emplace_ba

; 896  : 			_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
$LN1@emplace_ba:

; 897  : 		_Orphan_range(this->_Mylast, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range

; 898  : 		this->_Getal().construct(this->_Mylast,
; 899  : 			_STD forward<_Valty>(_Val)...);

	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
	mov	ecx, eax
	call	??$construct@KAAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKAAK@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>

; 900  : 		++this->_Mylast;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@AAK@?$vector@KV?$allocator@K@std@@@std@@QAEXAAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::emplace_back<unsigned long &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$02KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAA_NAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$02KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAA_NAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z PROC ; std::get<3,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT

; 576  : 	{	// get reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 577  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 578  : 		_Ttype;
; 579  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]

; 580  : 	}

	pop	ebp
	ret	0
??$get@$02KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAA_NAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ENDP ; std::get<3,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$01KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$01KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z PROC ; std::get<2,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT

; 576  : 	{	// get reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 577  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 578  : 		_Ttype;
; 579  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 4

; 580  : 	}

	pop	ebp
	ret	0
??$get@$01KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ENDP ; std::get<2,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$0A@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAKAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAKAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z PROC ; std::get<0,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT

; 576  : 	{	// get reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 577  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 578  : 		_Ttype;
; 579  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 32					; 00000020H

; 580  : 	}

	pop	ebp
	ret	0
??$get@$0A@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAKAAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ENDP ; std::get<0,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$rbegin@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$rbegin@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z PROC ; std::rbegin<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT

; 1241 : 	{	// get beginning of reversed sequence

	push	ebp
	mov	ebp, esp

; 1242 : 	return (_Cont.rbegin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?rbegin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rbegin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1243 : 	}

	pop	ebp
	ret	0
??$rbegin@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ENDP ; std::rbegin<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$rend@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$rend@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z PROC ; std::rend<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT

; 1253 : 	{	// get end of reversed sequence

	push	ebp
	mov	ebp, esp

; 1254 : 	return (_Cont.rend());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?rend@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rend
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1255 : 	}

	pop	ebp
	ret	0
??$rend@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ENDP ; std::rend<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT

; 1149 : 	{	// test for reverse_iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx

; 1150 : 	return (!(_Left == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 1151 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$0A@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABW4PacketType@@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABW4PacketType@@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z PROC ; std::get<0,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT

; 586  : 	{	// get const reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 587  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 588  : 		_Ttype;
; 589  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 16					; 00000010H

; 590  : 	}

	pop	ebp
	ret	0
??$get@$0A@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABW4PacketType@@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ENDP ; std::get<0,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z PROC ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT

; 586  : 	{	// get const reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 587  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 588  : 		_Ttype;
; 589  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 8

; 590  : 	}

	pop	ebp
	ret	0
??$get@$01W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ENDP ; std::get<2,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$00KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$shared_ptr@X@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$00KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$shared_ptr@X@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z PROC ; std::get<1,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>, COMDAT

; 576  : 	{	// get reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 577  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 578  : 		_Ttype;
; 579  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 24					; 00000018H

; 580  : 	}

	pop	ebp
	ret	0
??$get@$00KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@std@@YAAAV?$shared_ptr@X@0@AAV?$tuple@KV?$shared_ptr@X@std@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@2@_N@0@@Z ENDP ; std::get<1,unsigned long,std::shared_ptr<void>,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$00W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$00W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z PROC ; std::get<1,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT

; 586  : 	{	// get const reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 587  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 588  : 		_Ttype;
; 589  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]
	add	eax, 12					; 0000000cH

; 590  : 	}

	pop	ebp
	ret	0
??$get@$00W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABKABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ENDP ; std::get<1,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\algorithm
;	COMDAT ??$min@K@std@@YAABKABK0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@K@std@@YAABKABK0@Z PROC				; std::min<unsigned long>, COMDAT

; 4120 : 	{	// return smaller of _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4121 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@min
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@min:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 4122 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$min@K@std@@YAABKABK0@Z ENDP				; std::min<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\algorithm
;	COMDAT ??$max@K@std@@YAABKABK0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@K@std@@YAABKABK0@Z PROC				; std::max<unsigned long>, COMDAT

; 4087 : 	{	// return larger of _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4088 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 4089 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$max@K@std@@YAABKABK0@Z ENDP				; std::max<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$02W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$02W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z PROC ; std::get<3,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT

; 586  : 	{	// get const reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 587  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 588  : 		_Ttype;
; 589  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

	mov	eax, DWORD PTR __Tuple$[ebp]

; 590  : 	}

	pop	ebp
	ret	0
??$get@$02W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@ABV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@@Z ENDP ; std::get<3,enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$swap@XU?$ThreadDeleter@$0DOI@@@@std@@YAXAAV?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@XU?$ThreadDeleter@$0DOI@@@@std@@YAXAAV?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@0@0@Z PROC ; std::swap<void,ThreadDeleter<1000> >, COMDAT

; 1660 : 	{	// swap _Left with _Right

	push	ebp
	mov	ebp, esp

; 1661 : 	_Left.swap(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?swap@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXAAV12@@Z ; std::unique_ptr<void,ThreadDeleter<1000> >::swap

; 1662 : 	}

	pop	ebp
	ret	0
??$swap@XU?$ThreadDeleter@$0DOI@@@@std@@YAXAAV?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@0@0@Z ENDP ; std::swap<void,ThreadDeleter<1000> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Newoff$ = -16						; size = 4
__Block$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_<_Val_0>$ = 8						; size = 4
??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 1155 : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1156 : 		{	// insert element at end
; 1157 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1158 : 		_PUSH_BACK_BEGIN;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	SHORT $LN2@emplace_ba
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 2
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	ja	SHORT $LN2@emplace_ba
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Growmap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Growmap
$LN2@emplace_ba:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+eax-1]
	mov	edx, DWORD PTR _this$[ebp]
	and	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	DWORD PTR __Newoff$[ebp], edx
	mov	ecx, DWORD PTR __Newoff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	jne	SHORT $LN1@emplace_ba
	push	2
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN1@emplace_ba:

; 1159 : 		this->_Getal().construct(
; 1160 : 			this->_Map[_Block] + _Newoff % _DEQUESIZ,
; 1161 : 			_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 1162 : 		_PUSH_BACK_END;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 1163 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$make_unique@URecordingHelper@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@0@$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$make_unique@URecordingHelper@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@0@$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z PROC ; std::make_unique<RecordingHelper,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT

; 1638 : 	{	// make a unique_ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1639 : 	return (unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...)));

	push	64					; 00000040H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@make_uniqu
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV10@@Z ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, -16				; fffffff0H
	mov	ecx, esp
	push	eax
	call	??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RecordingHelper@@QAE@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@Z ; RecordingHelper::RecordingHelper
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@make_uniqu
$LN3@make_uniqu:
	mov	DWORD PTR tv74[ebp], 0
$LN4@make_uniqu:
	mov	ecx, DWORD PTR tv74[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@PAURecordingHelper@@@Z ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1640 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$make_unique@URecordingHelper@@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@0@$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@@Z ENDP ; std::make_unique<RecordingHelper,std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0$$T$$TX@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QA$$T0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0$$T$$TX@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QA$$T0@Z PROC ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><std::nullptr_t,std::nullptr_t,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@$$T@std@@YA$$QA$$TAA$$T@Z	; std::forward<std::nullptr_t>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@$$T@std@@YA$$QA$$TAA$$T@Z	; std::forward<std::nullptr_t>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$T@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0$$T$$TX@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QA$$T0@Z ENDP ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><std::nullptr_t,std::nullptr_t,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$make_unique@UReplayBuffer@@AAH@std@@YA?AV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAH@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$make_unique@UReplayBuffer@@AAH@std@@YA?AV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAH@Z PROC ; std::make_unique<ReplayBuffer,int &>, COMDAT

; 1638 : 	{	// make a unique_ptr

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1639 : 	return (unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...)));

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@make_uniqu
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAH@std@@YAAAHAAH@Z		; std::forward<int &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0ReplayBuffer@@QAE@H@Z		; ReplayBuffer::ReplayBuffer
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@make_uniqu
$LN3@make_uniqu:
	mov	DWORD PTR tv74[ebp], 0
$LN4@make_uniqu:
	mov	edx, DWORD PTR tv74[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@PAUReplayBuffer@@@Z ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1640 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$make_unique@UReplayBuffer@@AAH@std@@YA?AV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAH@Z ENDP ; std::make_unique<ReplayBuffer,int &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z PROC ; std::move<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z ENDP ; std::move<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0PAUReplayBuffer@@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@X@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QAPAUReplayBuffer@@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PAUReplayBuffer@@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@X@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QAPAUReplayBuffer@@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z PROC ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><ReplayBuffer *,std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@PAUReplayBuffer@@@std@@YA$$QAPAUReplayBuffer@@AAPAU1@@Z ; std::forward<ReplayBuffer *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z ; std::forward<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@X@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> ><ReplayBuffer,std::default_delete<ReplayBuffer>,void>

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PAUReplayBuffer@@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@X@?$pair@PAUReplayBuffer@@V?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@@std@@QAE@$$QAPAUReplayBuffer@@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z ENDP ; std::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > >::pair<ReplayBuffer *,std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> > ><ReplayBuffer *,std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$_Reset@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??$_Reset@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXABV01@@Z PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 352  : 		void _Reset(const _Ptr_base<_Ty2>& _Other)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 353  : 		{	// release resource and take ownership of _Other._Ptr
; 354  : 		_Reset(_Other._Ptr, _Other._Rep);

	mov	eax, DWORD PTR __Other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Other$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset

; 355  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXABV01@@Z ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Move@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAKPAK@std@@YAPAKPAK00@Z PROC			; std::_Move<unsigned long *,unsigned long *>, COMDAT

; 2439 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

	push	ebp
	mov	ebp, esp
	push	ecx

; 2440 : 	return (_Move(_First, _Last,
; 2441 : 		_Dest, _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ; std::_Ptr_cat<unsigned long,unsigned long>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Move<unsigned long *,unsigned long *>
	add	esp, 16					; 00000010H

; 2442 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAKPAK@std@@YAPAKPAK00@Z ENDP			; std::_Move<unsigned long *,unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0ABK@?$_Tuple_val@K@std@@QAE@ABK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0ABK@?$_Tuple_val@K@std@@QAE@ABK@Z PROC		; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long const &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@ABK@std@@YAABKABK@Z		; std::forward<unsigned long const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABK@?$_Tuple_val@K@std@@QAE@ABK@Z ENDP		; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx

; 1011 : 		void _Construct(_Iter _First, _Iter _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1012 : 		{	// initialize from [_First, _Last), input iterators
; 1013 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1014 : 
; 1015 : 		for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Construct
$LN2@Construct:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
$LN3@Construct:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Construct

; 1016 : 			emplace_back(*_First);

	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_back@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
	jmp	SHORT $LN2@Construct
$LN1@Construct:
	jmp	SHORT $LN7@Construct
__catch$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$0:

; 1017 : 
; 1018 : 		_CATCH_ALL
; 1019 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy

; 1020 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1021 : 		_CATCH_END

	mov	eax, $LN10@Construct
	ret	0
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$1
$LN10@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$1:

; 1022 : 		}

	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN6@Construct:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$make_move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Iter$ = 12						; size = 12
??$make_move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::make_move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT

; 2034 : 	{	// make move_iterator from iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2035 : 	return (move_iterator<_RanIt>(_Iter));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __Iter$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2036 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$make_move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::make_move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$?0V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$?0V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,void>, COMDAT
; _this$ = ecx

; 997  : 		{	// construct from [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 998  : 		_Construct(_First, _Last);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >

; 999  : 		}

	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??$?0V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > ><std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Dest$ = 36						; size = 12
??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z PROC ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >, COMDAT

; 2546 : 	{	// move [_First, _Last) backwards to [..., _Dest), unchecked

	push	ebp
	mov	ebp, esp
	push	ecx

; 2547 : 	return (_Move_backward(_First, _Last,
; 2548 : 		_Dest, _Ptr_cat(_First, _Dest)));

	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
	add	esp, 44					; 0000002cH
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2549 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z ENDP ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Dest$ = 36						; size = 12
??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z PROC ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >, COMDAT

; 2439 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

	push	ebp
	mov	ebp, esp
	push	ecx

; 2440 : 	return (_Move(_First, _Last,
; 2441 : 		_Dest, _Ptr_cat(_First, _Dest)));

	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
	add	esp, 44					; 0000002cH
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2442 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00@Z ENDP ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> ><std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >, COMDAT
; _this$ = ecx

; 817  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *><std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >

; 818  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> ><std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ; std::_Ptr_cat<unsigned long,unsigned long>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$_Reset@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??$_Reset@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXABV01@@Z PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 352  : 		void _Reset(const _Ptr_base<_Ty2>& _Other)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 353  : 		{	// release resource and take ownership of _Other._Ptr
; 354  : 		_Reset(_Other._Ptr, _Other._Rep);

	mov	eax, DWORD PTR __Other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Other$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset

; 355  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXABV01@@Z ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0ABV?$shared_ptr@X@std@@@?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@ABV?$shared_ptr@X@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0ABV?$shared_ptr@X@std@@@?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@ABV?$shared_ptr@X@1@@Z PROC ; std::_Tuple_val<std::shared_ptr<void> >::_Tuple_val<std::shared_ptr<void> ><std::shared_ptr<void> const &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@ABV?$shared_ptr@X@std@@@std@@YAABV?$shared_ptr@X@0@ABV10@@Z ; std::forward<std::shared_ptr<void> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$shared_ptr@X@std@@QAE@ABV01@@Z	; std::shared_ptr<void>::shared_ptr<void>

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$shared_ptr@X@std@@@?$_Tuple_val@V?$shared_ptr@X@std@@@std@@QAE@ABV?$shared_ptr@X@1@@Z ENDP ; std::_Tuple_val<std::shared_ptr<void> >::_Tuple_val<std::shared_ptr<void> ><std::shared_ptr<void> const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?8V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT

; 892  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp
	push	ecx

; 893  : 	return (static_cast<_Ty>(_Left) == static_cast<_Other>(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	push	eax
	call	??$?8V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 8

; 894  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$_Swap_adl@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Swap_adl<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>, COMDAT

; 60   : 	{	// exchange values stored at _Left and _Right, using ADL

	push	ebp
	mov	ebp, esp

; 61   : 	swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::swap<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 8

; 62   : 	}

	pop	ebp
	ret	0
??$_Swap_adl@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Swap_adl<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@I@std@@YAXAAI0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@I@std@@YAXAAI0@Z PROC				; std::swap<unsigned int>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAI@std@@YA$$QAIAAI@Z		; std::_Move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAI@std@@YA$$QAIAAI@Z		; std::_Move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAI@std@@YA$$QAIAAI@Z		; std::_Move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@I@std@@YAXAAI0@Z ENDP				; std::swap<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 817  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *><std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 818  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@VVideoFileStream@@@std@@YAPAVVideoFileStream@@AAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@VVideoFileStream@@@std@@YAPAVVideoFileStream@@AAV1@@Z PROC ; std::addressof<VideoFileStream>, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@VVideoFileStream@@@std@@YAPAVVideoFileStream@@AAV1@@Z ENDP ; std::addressof<VideoFileStream>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@URecordingHelper@@@std@@YAPAURecordingHelper@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@URecordingHelper@@@std@@YAPAURecordingHelper@@AAU1@@Z PROC ; std::addressof<RecordingHelper>, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@URecordingHelper@@@std@@YAPAURecordingHelper@@AAU1@@Z ENDP ; std::addressof<RecordingHelper>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0@Z ; std::_Ptr_cat<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@PAV_Ref_count_base@std@@@std@@YAXAAPAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAV_Ref_count_base@std@@@std@@YAXAAPAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::_Move<std::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::_Move<std::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ; std::_Move<std::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAV_Ref_count_base@std@@@std@@YAXAAPAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@PBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YAXAAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YAXAAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@0@Z PROC ; std::swap<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const *>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YA$$QAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@AAPBV10@@Z ; std::_Move<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YA$$QAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@AAPBV10@@Z ; std::_Move<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YA$$QAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@AAPBV10@@Z ; std::_Move<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YAXAAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@0@Z ENDP ; std::swap<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@@Z PROC ; std::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > ><std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YAABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@ABV10@@Z ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABV01@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@?$_Tuple_val@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@1@@Z ENDP ; std::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Tuple_val<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > ><std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$_Swap_adl@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z PROC ; std::_Swap_adl<std::_Container_proxy *>, COMDAT

; 60   : 	{	// exchange values stored at _Left and _Right, using ADL

	push	ebp
	mov	ebp, esp

; 61   : 	swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z ; std::swap<std::_Container_proxy *>
	add	esp, 8

; 62   : 	}

	pop	ebp
	ret	0
??$_Swap_adl@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z ENDP ; std::_Swap_adl<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AB_N@?$_Tuple_val@_N@std@@QAE@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0AB_N@?$_Tuple_val@_N@std@@QAE@AB_N@Z PROC		; std::_Tuple_val<bool>::_Tuple_val<bool><bool const &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@AB_N@std@@YAAB_NAB_N@Z	; std::forward<bool const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AB_N@?$_Tuple_val@_N@std@@QAE@AB_N@Z ENDP		; std::_Tuple_val<bool>::_Tuple_val<bool><bool const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@IPAU10@@Z PROC ; std::_Allocate<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@IPAU10@@Z ENDP ; std::_Allocate<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ PROC ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 475  : 	shared_ptr() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >

; 476  : 		{	// construct empty shared_ptr
; 477  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ENDP ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 569  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >

; 570  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Reset@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset, COMDAT
; _this$ = ecx

; 401  : 		{	// release resource and take _Other_ptr through _Other_rep

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		if (_Other_rep)

	cmp	DWORD PTR __Other_rep$[ebp], 0
	je	SHORT $LN1@Reset

; 403  : 			_Other_rep->_Incref();

	mov	ecx, DWORD PTR __Other_rep$[ebp]
	call	?_Incref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Incref
$LN1@Reset:

; 404  : 		_Reset0(_Other_ptr, _Other_rep);

	mov	eax, DWORD PTR __Other_rep$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset0

; 405  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$T@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$T@Z PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >, COMDAT
; _this$ = ecx

; 1352 : 		{	// null pointer construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAVVideoFileStream@@@Z ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>

; 1353 : 		static_assert(!is_pointer<_Dx>::value,
; 1354 : 			"unique_ptr constructed with null deleter pointer");
; 1355 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$T@Z ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Unchecked_end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1147 : 		{	// return unchecked iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (_Unchecked_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Growmap@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
tv84 = -28						; size = 4
__Newmap$ = -24						; size = 4
__Newsize$ = -20					; size = 4
__Myboff$ = -16						; size = 4
__Myptr$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -2						; size = 1
__Almap$ = -1						; size = 1
__Count$ = 8						; size = 4
?_Growmap@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Growmap, COMDAT
; _this$ = ecx

; 1772 : 		{	// grow map by at least _Count pointers, _Mapsize a power of 2

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1773 : 		static_assert(1 < _DEQUEMAPSIZ,
; 1774 : 			"The _Xlen() test should always be performed.");
; 1775 : 
; 1776 : 		typedef typename _Alpty::pointer _Blockptr;
; 1777 : 		_Alpty _Almap(this->_Getal());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> ><std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >

; 1778 : 		size_type _Newsize = 0 < this->_Mapsize ? this->_Mapsize : 1;

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jbe	SHORT $LN10@Growmap
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN11@Growmap
$LN10@Growmap:
	mov	DWORD PTR tv84[ebp], 1
$LN11@Growmap:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Newsize$[ebp], ecx
$LN7@Growmap:

; 1779 : 		while (_Newsize - this->_Mapsize < _Count || _Newsize < _DEQUEMAPSIZ)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newsize$[ebp]
	sub	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __Count$[ebp]
	jb	SHORT $LN5@Growmap
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN6@Growmap
$LN5@Growmap:

; 1780 : 			{	// scale _Newsize to 2^N >= _Mapsize + _Count
; 1781 : 			if (max_size() / _DEQUESIZ - _Newsize < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
	shr	eax, 1
	sub	eax, DWORD PTR __Newsize$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN4@Growmap

; 1782 : 				_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Xlen
$LN4@Growmap:

; 1783 : 			_Newsize *= 2;

	mov	ecx, DWORD PTR __Newsize$[ebp]
	shl	ecx, 1
	mov	DWORD PTR __Newsize$[ebp], ecx

; 1784 : 			}

	jmp	SHORT $LN7@Growmap
$LN6@Growmap:

; 1785 : 		_Count = _Newsize - this->_Mapsize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newsize$[ebp]
	sub	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Count$[ebp], eax

; 1786 : 
; 1787 : 		size_type _Myboff = this->_Myoff / _DEQUESIZ;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	mov	DWORD PTR __Myboff$[ebp], edx

; 1788 : 		_Mapptr _Newmap = _Almap.allocate(this->_Mapsize + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::allocate
	mov	DWORD PTR __Newmap$[ebp], eax

; 1789 : 		_Mapptr _Myptr = _Newmap + _Myboff;

	mov	edx, DWORD PTR __Myboff$[ebp]
	mov	eax, DWORD PTR __Newmap$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR __Myptr$[ebp], ecx

; 1790 : 
; 1791 : 		_Myptr = _Uninitialized_copy(this->_Map + _Myboff,
; 1792 : 			this->_Map + this->_Mapsize,
; 1793 : 			_Myptr, _Almap);	// copy initial to end

	lea	edx, DWORD PTR __Almap$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [ecx+edx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Myboff$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Myptr$[ebp], eax

; 1794 : 		if (_Myboff <= _Count)

	mov	ecx, DWORD PTR __Myboff$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@Growmap

; 1795 : 			{	// increment greater than offset of initial block
; 1796 : 			_Myptr = _Uninitialized_copy(this->_Map,
; 1797 : 				this->_Map + _Myboff,
; 1798 : 				_Myptr, _Almap);	// copy rest of old

	lea	edx, DWORD PTR __Almap$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Myboff$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Myptr$[ebp], eax

; 1799 : 			_Uninitialized_default_fill_n(_Myptr, _Count - _Myboff,
; 1800 : 				_Almap);	// clear suffix of new

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, DWORD PTR __Myboff$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 12					; 0000000cH

; 1801 : 			_Uninitialized_default_fill_n(_Newmap, _Myboff,
; 1802 : 				_Almap);	// clear prefix of new

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Myboff$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newmap$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 12					; 0000000cH

; 1803 : 			}
; 1804 : 		else

	jmp	SHORT $LN2@Growmap
$LN3@Growmap:

; 1805 : 			{	// increment not greater than offset of initial block
; 1806 : 			_Uninitialized_copy(this->_Map,
; 1807 : 				this->_Map + _Count,
; 1808 : 				_Myptr, _Almap);	// copy more old

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Myptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 16					; 00000010H

; 1809 : 			_Myptr = _Uninitialized_copy(this->_Map + _Count,
; 1810 : 				this->_Map + _Myboff,
; 1811 : 				_Newmap, _Almap);	// copy rest of old

	lea	eax, DWORD PTR __Almap$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newmap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Myboff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Myptr$[ebp], eax

; 1812 : 			_Uninitialized_default_fill_n(_Myptr, _Count,
; 1813 : 				_Almap);	// clear rest to initial block

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 12					; 0000000cH
$LN2@Growmap:

; 1814 : 			}
; 1815 : 
; 1816 : 		_Destroy_range(this->_Map + _Myboff, this->_Map + this->_Mapsize,
; 1817 : 			_Almap);

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Myboff$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 12					; 0000000cH

; 1818 : 		if (this->_Map != _Mapptr())

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN1@Growmap

; 1819 : 			_Almap.deallocate(this->_Map,
; 1820 : 				this->_Mapsize);	// free storage for old

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::deallocate
$LN1@Growmap:

; 1821 : 
; 1822 : 		this->_Map = _Newmap;	// point at new

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newmap$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 1823 : 		this->_Mapsize += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN9@Growmap:

; 1824 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Growmap@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Growmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve, COMDAT
; _this$ = ecx

; 1612 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1613 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1614 : 			{	// need more room, try to get it
; 1615 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve

; 1616 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
$LN1@Reserve:

; 1617 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reallocate
$LN4@Reserve:

; 1618 : 			}
; 1619 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1780 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1781 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@IBEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reserve@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reserve, COMDAT
; _this$ = ecx

; 1612 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1613 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1614 : 			{	// need more room, try to get it
; 1615 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve

; 1616 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Xlen
$LN1@Reserve:

; 1617 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reallocate
$LN4@Reserve:

; 1618 : 			}
; 1619 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1780 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1781 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@X@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0?$shared_ptr@X@std@@QAE@ABV01@@Z PROC		; std::shared_ptr<void>::shared_ptr<void>, COMDAT
; _this$ = ecx

; 523  : 	shared_ptr(const _Myt& _Other) _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@X@std@@QAE@XZ		; std::_Ptr_base<void>::_Ptr_base<void>

; 524  : 		{	// construct shared_ptr object that owns same resource as _Other
; 525  : 		this->_Reset(_Other);

	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@X@?$_Ptr_base@X@std@@QAEXABV01@@Z ; std::_Ptr_base<void>::_Reset<void>

; 526  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$shared_ptr@X@std@@QAE@ABV01@@Z ENDP		; std::shared_ptr<void>::shared_ptr<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?swap@?$shared_ptr@X@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
?swap@?$shared_ptr@X@std@@QAEXAAV12@@Z PROC		; std::shared_ptr<void>::swap, COMDAT
; _this$ = ecx

; 660  : 		{	// swap pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 661  : 		this->_Swap(_Other);

	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@X@std@@QAEXAAV12@@Z	; std::_Ptr_base<void>::_Swap

; 662  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$shared_ptr@X@std@@QAEXAAV12@@Z ENDP		; std::shared_ptr<void>::swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 569  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >

; 570  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Reset@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset, COMDAT
; _this$ = ecx

; 401  : 		{	// release resource and take _Other_ptr through _Other_rep

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		if (_Other_rep)

	cmp	DWORD PTR __Other_rep$[ebp], 0
	je	SHORT $LN1@Reset

; 403  : 			_Other_rep->_Incref();

	mov	ecx, DWORD PTR __Other_rep$[ebp]
	call	?_Incref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Incref
$LN1@Reset:

; 404  : 		_Reset0(_Other_ptr, _Other_rep);

	mov	eax, DWORD PTR __Other_rep$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset0

; 405  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Right$ = 8						; size = 4
??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >, COMDAT
; _this$ = ecx

; 1065 : 		{	// construct by moving _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 1066 : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());

	xor	ecx, ecx
	mov	BYTE PTR $T2[ebp], cl
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV10@@Z ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Assign_rv

; 1067 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?rbegin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?rbegin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rbegin, COMDAT
; _this$ = ecx

; 1275 : 		{	// return iterator for beginning of reversed mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1276 : 		return (reverse_iterator(end()));

	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::end
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?rbegin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rbegin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?rend@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?rend@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rend, COMDAT
; _this$ = ecx

; 1285 : 		{	// return iterator for end of reversed mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1286 : 		return (reverse_iterator(begin()));

	sub	esp, 12					; 0000000cH
	push	esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::begin
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1287 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?rend@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::rend
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Growmap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
tv84 = -28						; size = 4
__Newmap$ = -24						; size = 4
__Newsize$ = -20					; size = 4
__Myboff$ = -16						; size = 4
__Myptr$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -2						; size = 1
__Almap$ = -1						; size = 1
__Count$ = 8						; size = 4
?_Growmap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Growmap, COMDAT
; _this$ = ecx

; 1772 : 		{	// grow map by at least _Count pointers, _Mapsize a power of 2

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1773 : 		static_assert(1 < _DEQUEMAPSIZ,
; 1774 : 			"The _Xlen() test should always be performed.");
; 1775 : 
; 1776 : 		typedef typename _Alpty::pointer _Blockptr;
; 1777 : 		_Alpty _Almap(this->_Getal());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> ><std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >

; 1778 : 		size_type _Newsize = 0 < this->_Mapsize ? this->_Mapsize : 1;

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jbe	SHORT $LN10@Growmap
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN11@Growmap
$LN10@Growmap:
	mov	DWORD PTR tv84[ebp], 1
$LN11@Growmap:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Newsize$[ebp], ecx
$LN7@Growmap:

; 1779 : 		while (_Newsize - this->_Mapsize < _Count || _Newsize < _DEQUEMAPSIZ)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newsize$[ebp]
	sub	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __Count$[ebp]
	jb	SHORT $LN5@Growmap
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN6@Growmap
$LN5@Growmap:

; 1780 : 			{	// scale _Newsize to 2^N >= _Mapsize + _Count
; 1781 : 			if (max_size() / _DEQUESIZ - _Newsize < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
	shr	eax, 1
	sub	eax, DWORD PTR __Newsize$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN4@Growmap

; 1782 : 				_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Xlen
$LN4@Growmap:

; 1783 : 			_Newsize *= 2;

	mov	ecx, DWORD PTR __Newsize$[ebp]
	shl	ecx, 1
	mov	DWORD PTR __Newsize$[ebp], ecx

; 1784 : 			}

	jmp	SHORT $LN7@Growmap
$LN6@Growmap:

; 1785 : 		_Count = _Newsize - this->_Mapsize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newsize$[ebp]
	sub	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Count$[ebp], eax

; 1786 : 
; 1787 : 		size_type _Myboff = this->_Myoff / _DEQUESIZ;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 1
	mov	DWORD PTR __Myboff$[ebp], edx

; 1788 : 		_Mapptr _Newmap = _Almap.allocate(this->_Mapsize + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::allocate
	mov	DWORD PTR __Newmap$[ebp], eax

; 1789 : 		_Mapptr _Myptr = _Newmap + _Myboff;

	mov	edx, DWORD PTR __Myboff$[ebp]
	mov	eax, DWORD PTR __Newmap$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR __Myptr$[ebp], ecx

; 1790 : 
; 1791 : 		_Myptr = _Uninitialized_copy(this->_Map + _Myboff,
; 1792 : 			this->_Map + this->_Mapsize,
; 1793 : 			_Myptr, _Almap);	// copy initial to end

	lea	edx, DWORD PTR __Almap$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [ecx+edx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Myboff$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Myptr$[ebp], eax

; 1794 : 		if (_Myboff <= _Count)

	mov	ecx, DWORD PTR __Myboff$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@Growmap

; 1795 : 			{	// increment greater than offset of initial block
; 1796 : 			_Myptr = _Uninitialized_copy(this->_Map,
; 1797 : 				this->_Map + _Myboff,
; 1798 : 				_Myptr, _Almap);	// copy rest of old

	lea	edx, DWORD PTR __Almap$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Myboff$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Myptr$[ebp], eax

; 1799 : 			_Uninitialized_default_fill_n(_Myptr, _Count - _Myboff,
; 1800 : 				_Almap);	// clear suffix of new

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, DWORD PTR __Myboff$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 12					; 0000000cH

; 1801 : 			_Uninitialized_default_fill_n(_Newmap, _Myboff,
; 1802 : 				_Almap);	// clear prefix of new

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Myboff$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newmap$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 12					; 0000000cH

; 1803 : 			}
; 1804 : 		else

	jmp	SHORT $LN2@Growmap
$LN3@Growmap:

; 1805 : 			{	// increment not greater than offset of initial block
; 1806 : 			_Uninitialized_copy(this->_Map,
; 1807 : 				this->_Map + _Count,
; 1808 : 				_Myptr, _Almap);	// copy more old

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Myptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 16					; 00000010H

; 1809 : 			_Myptr = _Uninitialized_copy(this->_Map + _Count,
; 1810 : 				this->_Map + _Myboff,
; 1811 : 				_Newmap, _Almap);	// copy rest of old

	lea	eax, DWORD PTR __Almap$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newmap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Myboff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Myptr$[ebp], eax

; 1812 : 			_Uninitialized_default_fill_n(_Myptr, _Count,
; 1813 : 				_Almap);	// clear rest to initial block

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 12					; 0000000cH
$LN2@Growmap:

; 1814 : 			}
; 1815 : 
; 1816 : 		_Destroy_range(this->_Map + _Myboff, this->_Map + this->_Mapsize,
; 1817 : 			_Almap);

	lea	ecx, DWORD PTR __Almap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Myboff$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 12					; 0000000cH

; 1818 : 		if (this->_Map != _Mapptr())

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN1@Growmap

; 1819 : 			_Almap.deallocate(this->_Map,
; 1820 : 				this->_Mapsize);	// free storage for old

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::deallocate
$LN1@Growmap:

; 1821 : 
; 1822 : 		this->_Map = _Newmap;	// point at new

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newmap$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 1823 : 		this->_Mapsize += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN9@Growmap:

; 1824 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Growmap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Growmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++, COMDAT
; _this$ = ecx

; 353  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 355  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 356  : 		if (_Mycont == 0
; 357  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 358  : 		{	// report error
; 359  : 		_DEBUG_ERROR("deque iterator not incrementable");
; 360  : 		_SCL_SECURE_OUT_OF_RANGE;
; 361  : 		}
; 362  : 
; 363  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 364  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 365  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 366  : 		_SCL_SECURE_VALIDATE_RANGE(
; 367  : 			this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 368  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 369  : 
; 370  : 		++_Myoff;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 371  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 372  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=, COMDAT
; _this$ = ecx

; 469  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 470  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 471  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?swap@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?swap@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXAAV12@@Z PROC ; std::unique_ptr<void,ThreadDeleter<1000> >::swap, COMDAT
; _this$ = ecx

; 1439 : 		{	// swap elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1440 : 		_Swap_adl(this->_Myptr, _Right._Myptr);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$_Swap_adl@PAX@std@@YAXAAPAX0@Z	; std::_Swap_adl<void *>
	add	esp, 8

; 1441 : 		_Swap_adl(this->get_deleter(),
; 1442 : 			_Right.get_deleter());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::get_deleter
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XU?$ThreadDeleter@$0DOI@@@$00@std@@QAEAAU?$ThreadDeleter@$0DOI@@@XZ ; std::_Unique_ptr_base<void,ThreadDeleter<1000>,1>::get_deleter
	push	eax
	call	??$_Swap_adl@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z ; std::_Swap_adl<ThreadDeleter<1000> >
	add	esp, 8

; 1443 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$unique_ptr@XU?$ThreadDeleter@$0DOI@@@@std@@QAEXAAV12@@Z ENDP ; std::unique_ptr<void,ThreadDeleter<1000> >::swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@PAURecordingHelper@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@PAURecordingHelper@@@Z PROC ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAE@PAURecordingHelper@@@Z ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@@std@@QAE@PAURecordingHelper@@@Z ENDP ; std::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >::unique_ptr<RecordingHelper,std::default_delete<RecordingHelper> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@PAUReplayBuffer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@PAUReplayBuffer@@@Z PROC ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAE@PAUReplayBuffer@@@Z ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAE@PAUReplayBuffer@@@Z ENDP ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 12
??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx

; 1844 : 		{	// construct wrapped iterator from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 1845 : 		}

	lea	ecx, DWORD PTR __Right$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Getptr@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getptr@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ PROC ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Getptr, COMDAT
; _this$ = ecx

; 937  : 		{	// get pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 938  : 		return ((_Ty *)&_Storage);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH

; 939  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getptr@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ENDP ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Getptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Destroy@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Destroy, COMDAT
; _this$ = ecx

; 943  : 		{	// destroy managed resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 944  : 		_Getptr()->~_Ty();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getptr@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QBEPBV?$vector@EV?$allocator@E@std@@@2@XZ ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Getptr
	mov	ecx, eax
	call	??_G?$vector@EV?$allocator@E@std@@@std@@QAEPAXI@Z

; 945  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Destroy@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -4						; size = 4
?_Delete_this@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Delete_this, COMDAT
; _this$ = ecx

; 948  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 949  : 		delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Delete_thi
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@Delete_thi
$LN3@Delete_thi:
	mov	DWORD PTR tv74[ebp], 0
$LN1@Delete_thi:

; 950  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Getptr@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getptr@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ PROC ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Getptr, COMDAT
; _this$ = ecx

; 937  : 		{	// get pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 938  : 		return ((_Ty *)&_Storage);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH

; 939  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getptr@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ ENDP ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Getptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Destroy@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Destroy, COMDAT
; _this$ = ecx

; 943  : 		{	// destroy managed resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 944  : 		_Getptr()->~_Ty();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getptr@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QBEPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@XZ ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Getptr
	mov	ecx, eax
	call	??_G?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAEPAXI@Z

; 945  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Destroy@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -4						; size = 4
?_Delete_this@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ PROC ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Delete_this, COMDAT
; _this$ = ecx

; 948  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 949  : 		delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Delete_thi
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@Delete_thi
$LN3@Delete_thi:
	mov	DWORD PTR tv74[ebp], 0
$LN1@Delete_thi:

; 950  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@EAEXXZ ENDP ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$vector@EV?$allocator@E@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$vector@EV?$allocator@E@std@@@std@@QAEPAXI@Z PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$vector@EV?$allocator@E@std@@@std@@QAEPAXI@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAEPAXI@Z PROC ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAEPAXI@Z ENDP ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::~shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::~_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 284  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 285  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$forward@V?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEX$$QAV12@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Assign_rv

; 286  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset0, COMDAT
; _this$ = ecx

; 418  : 		{	// release resource and take new resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 419  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Reset0

; 420  : 			_Rep->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN1@Reset0:

; 421  : 		_Rep = _Other_rep;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [edx+4], eax

; 422  : 		_Ptr = _Other_ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [ecx], edx

; 423  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?max_size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size, COMDAT
; _this$ = ecx

; 1356 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1357 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size

; 1358 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Xlen@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ PROC ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Xlen, COMDAT
; _this$ = ecx

; 1762 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1763 : 		_Xlength_error("deque<T> too long");

	push	OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1764 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$deque@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::deque<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1014 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1015 : 		return (this->_Myend - this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 1016 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 1152 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1153 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<unsigned long> >::max_size

; 1154 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to, COMDAT
; _this$ = ecx

; 1571 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1573 : 
; 1574 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1575 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1576 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1577 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1578 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1579 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@KV?$allocator@K@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reallocate, COMDAT
; _this$ = ecx

; 1587 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1588 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1589 : 
; 1590 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1591 : 		_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z$0:

; 1592 : 		_CATCH_ALL
; 1593 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate

; 1594 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1595 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z$1:

; 1596 : 
; 1597 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1598 : 		if (this->_Myfirst != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Reallocate

; 1599 : 			{	// destroy and deallocate old array
; 1600 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy

; 1601 : 			this->_Getal().deallocate(this->_Myfirst,
; 1602 : 				this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKI@Z ; std::_Wrap_alloc<std::allocator<unsigned long> >::deallocate
$LN1@Reallocate:

; 1603 : 			}
; 1604 : 
; 1605 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1606 : 		this->_Myend = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 1607 : 		this->_Mylast = _Ptr + _Size;

	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1608 : 		this->_Myfirst = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx], eax
$LN4@Reallocate:

; 1609 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@KV?$allocator@K@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Reallocate
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1753 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1755 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1014 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1015 : 		return (this->_Myend - this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx

; 1016 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::size, COMDAT
; _this$ = ecx

; 1147 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size, COMDAT
; _this$ = ecx

; 1152 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1153 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size

; 1154 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Grow_to, COMDAT
; _this$ = ecx

; 1571 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1573 : 
; 1574 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1575 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1576 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1577 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1578 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1579 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reallocate, COMDAT
; _this$ = ecx

; 1587 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1588 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1589 : 
; 1590 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1591 : 		_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PAU21@00@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Umove<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z$0:

; 1592 : 		_CATCH_ALL
; 1593 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::deallocate

; 1594 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1595 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z$1:

; 1596 : 
; 1597 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1598 : 		if (this->_Myfirst != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Reallocate

; 1599 : 			{	// destroy and deallocate old array
; 1600 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@0@Z ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Destroy

; 1601 : 			this->_Getal().deallocate(this->_Myfirst,
; 1602 : 				this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::deallocate
$LN1@Reallocate:

; 1603 : 			}
; 1604 : 
; 1605 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1606 : 		this->_Myend = _Ptr + _Count;

	imul	edx, DWORD PTR __Count$[ebp], 12
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 1607 : 		this->_Mylast = _Ptr + _Size;

	imul	ecx, DWORD PTR __Size$[ebp], 12
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1608 : 		this->_Myfirst = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@Reallocate:

; 1609 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Reallocate
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Xlen@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Xlen, COMDAT
; _this$ = ecx

; 1753 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1755 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@X@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@X@std@@QAEXAAV12@@Z PROC		; std::_Ptr_base<void>::_Swap, COMDAT
; _this$ = ecx

; 314  : 		{	// swap pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		_STD swap(_Rep, _Right._Rep);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$swap@PAV_Ref_count_base@std@@@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *>
	add	esp, 8

; 316  : 		_STD swap(_Ptr, _Right._Ptr);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$swap@PAX@std@@YAXAAPAX0@Z		; std::swap<void *>
	add	esp, 8

; 317  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap@?$_Ptr_base@X@std@@QAEXAAV12@@Z ENDP		; std::_Ptr_base<void>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 284  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 285  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$forward@V?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEX$$QAV12@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Assign_rv

; 286  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset0, COMDAT
; _this$ = ecx

; 418  : 		{	// release resource and take new resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 419  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Reset0

; 420  : 			_Rep->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN1@Reset0:

; 421  : 		_Rep = _Other_rep;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [edx+4], eax

; 422  : 		_Ptr = _Other_ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [ecx], edx

; 423  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Assign_rv@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Assign_rv, COMDAT
; _this$ = ecx

; 1089 : 		{	// move from _Right, stealing its contents

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1090 : 		this->_Swap_all((_Myt&)_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_all

; 1091 : 		this->_Map = _Right._Map;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1092 : 		this->_Mapsize = _Right._Mapsize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 1093 : 		this->_Myoff = _Right._Myoff;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 1094 : 		this->_Mysize = _Right._Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax

; 1095 : 
; 1096 : 		_Right._Map = _Mapptr();

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 1097 : 		_Right._Mapsize = 0;

	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1098 : 		_Right._Myoff = 0;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+12], 0

; 1099 : 		_Right._Mysize = 0;

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 1100 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_rv@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?max_size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size, COMDAT
; _this$ = ecx

; 1356 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1357 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size

; 1358 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Xlen@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Xlen, COMDAT
; _this$ = ecx

; 1762 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1763 : 		_Xlength_error("deque<T> too long");

	push	OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1764 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 12
??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx

; 1041 : 		{	// construct wrapped iterator from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >

; 1042 : 		}

	lea	ecx, DWORD PTR __Right$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::reverse_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==, COMDAT
; _this$ = ecx

; 463  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 464  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Compat

; 465  : 		return (this->_Myoff == _Right._Myoff);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 466  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAE@PAURecordingHelper@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAE@PAURecordingHelper@@@Z PROC ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$default_delete@URecordingHelper@@@std@@QAE@XZ ; std::default_delete<RecordingHelper>::default_delete<RecordingHelper>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@URecordingHelper@@U?$default_delete@URecordingHelper@@@std@@$00@std@@QAE@PAURecordingHelper@@@Z ENDP ; std::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>::_Unique_ptr_base<RecordingHelper,std::default_delete<RecordingHelper>,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAE@PAUReplayBuffer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAE@PAUReplayBuffer@@@Z PROC ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$default_delete@UReplayBuffer@@@std@@QAE@XZ ; std::default_delete<ReplayBuffer>::default_delete<ReplayBuffer>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAE@PAUReplayBuffer@@@Z ENDP ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>

; 125  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Assign_rv@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Assign_rv, COMDAT
; _this$ = ecx

; 303  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@Assign_rv

; 305  : 			_Swap(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Swap
$LN2@Assign_rv:

; 306  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAPAU10@@Z ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity, COMDAT
; _this$ = ecx

; 1009 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1010 : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1011 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@K@std@@QAEPAKI@Z	; std::allocator<unsigned long>::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEPAKI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ; std::allocator_traits<std::allocator<unsigned long> >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::capacity, COMDAT
; _this$ = ecx

; 1009 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1010 : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx

; 1011 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Assign_rv@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Assign_rv, COMDAT
; _this$ = ecx

; 303  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@Assign_rv

; 305  : 			_Swap(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Swap
$LN2@Assign_rv:

; 306  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAPAV10@@Z ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Compat, COMDAT
; _this$ = ecx

; 526  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 527  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 12
??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >, COMDAT
; _this$ = ecx

; 818  : 		{	// construct wrapped iterator from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 819  : 		}

	lea	ecx, DWORD PTR __Right$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QAE@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$default_delete@URecordingHelper@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@URecordingHelper@@@std@@QAE@XZ PROC	; std::default_delete<RecordingHelper>::default_delete<RecordingHelper>, COMDAT
; _this$ = ecx

; 1185 : 	default_delete() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1186 : 		{	// default construct
; 1187 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$default_delete@URecordingHelper@@@std@@QAE@XZ ENDP	; std::default_delete<RecordingHelper>::default_delete<RecordingHelper>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$default_delete@UReplayBuffer@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$default_delete@UReplayBuffer@@@std@@QAE@XZ PROC	; std::default_delete<ReplayBuffer>::default_delete<ReplayBuffer>, COMDAT
; _this$ = ecx

; 1185 : 	default_delete() _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1186 : 		{	// default construct
; 1187 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$default_delete@UReplayBuffer@@@std@@QAE@XZ ENDP	; std::default_delete<ReplayBuffer>::default_delete<ReplayBuffer>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Swap, COMDAT
; _this$ = ecx

; 314  : 		{	// swap pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		_STD swap(_Rep, _Right._Rep);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$swap@PAV_Ref_count_base@std@@@std@@YAXAAPAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *>
	add	esp, 8

; 316  : 		_STD swap(_Ptr, _Right._Ptr);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$swap@PBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAXAAPBV?$vector@EV?$allocator@E@std@@@0@0@Z ; std::swap<std::vector<unsigned char,std::allocator<unsigned char> > const *>
	add	esp, 8

; 317  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC		; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@K@std@@YAPAKIPAK@Z		; std::_Allocate<unsigned long>
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@K@std@@QBEIXZ	; std::allocator<unsigned long>::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z PROC ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@IPAU10@@Z ; std::_Allocate<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@2@I@Z ENDP ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QBEIXZ ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 536870911				; 1fffffffH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 536870911				; 1fffffffH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@K@std@@QBEIXZ PROC		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 357913941				; 15555555H

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAPBE@std@@YAAAPBEAAPBE@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPBE@std@@YAAAPBEAAPBE@Z PROC		; std::forward<unsigned char const * &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAPBE@std@@YAAAPBEAAPBE@Z ENDP		; std::forward<unsigned char const * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@PBE@std@@YA$$QAPBEAAPBE@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PBE@std@@YA$$QAPBEAAPBE@Z PROC		; std::forward<unsigned char const *>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@PBE@std@@YA$$QAPBEAAPBE@Z ENDP		; std::forward<unsigned char const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$?0AAPBEPBE@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAPBE$$QAPBE@Z
_TEXT	SEGMENT
tv93 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
_<_Args_1>$ = 12					; size = 4
??$?0AAPBEPBE@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAPBE$$QAPBE@Z PROC ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const ><unsigned char const * &,unsigned char const *>, COMDAT
; _this$ = ecx

; 931  : 		{	// construct from argument list

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@std@@IAE@XZ		; std::_Ref_count_base::_Ref_count_base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@6B@

; 932  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@allocator
	mov	edx, DWORD PTR _<_Args_1>$[ebp]
	push	edx
	call	??$forward@PBE@std@@YA$$QAPBEAAPBE@Z	; std::forward<unsigned char const *>
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPBE@std@@YAAAPBEAAPBE@Z	; std::forward<unsigned char const * &>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0PBEX@?$vector@EV?$allocator@E@std@@@std@@QAE@PBE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> ><unsigned char const *,void>
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN1@allocator
$LN3@allocator:
	mov	DWORD PTR tv93[ebp], 0
$LN1@allocator:

; 933  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPBEPBE@?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@AAPBE$$QAPBE@Z ENDP ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const ><unsigned char const * &,unsigned char const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$_Resetp0@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@1@PAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@1@PAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Resetp0<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx

; 733  : 		void _Resetp0(_Ux *_Px, _Ref_count_base *_Rx)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 734  : 		{	// release resource and take ownership of _Px
; 735  : 		this->_Reset0(_Px, _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Reset0

; 736  : 		_Enable_shared(_Px, _Rx);

	mov	edx, DWORD PTR __Rx$[ebp]
	push	edx
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	call	?_Enable_shared@std@@YAXPDX0@Z		; std::_Enable_shared
	add	esp, 8

; 737  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@$$CBV?$vector@EV?$allocator@E@std@@@std@@@?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAEXPBV?$vector@EV?$allocator@E@std@@@1@PAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::_Resetp0<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z PROC ; std::forward<enum PacketType &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z ENDP ; std::forward<enum PacketType &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAK@std@@YAAAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAK@std@@YAAAKAAK@Z PROC			; std::forward<unsigned long &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAK@std@@YAAAKAAK@Z ENDP			; std::forward<unsigned long &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
tv131 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
_<_Args_1>$ = 12					; size = 4
_<_Args_2>$ = 16					; size = 4
_<_Args_3>$ = 20					; size = 4
??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>, COMDAT
; _this$ = ecx

; 931  : 		{	// construct from argument list

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@std@@IAE@XZ		; std::_Ref_count_base::_Ref_count_base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@6B@

; 932  : 		::new ((void *)&_Storage) _Ty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@allocator
	mov	edx, DWORD PTR _<_Args_3>$[ebp]
	push	edx
	call	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z ; std::forward<enum PacketType &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN1@allocator
$LN3@allocator:
	mov	DWORD PTR tv131[ebp], 0
$LN1@allocator:

; 933  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$_Resetp0@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@PAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@PAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Resetp0<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx

; 733  : 		void _Resetp0(_Ux *_Px, _Ref_count_base *_Rx)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 734  : 		{	// release resource and take ownership of _Px
; 735  : 		this->_Reset0(_Px, _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@2@PAV_Ref_count_base@2@@Z ; std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Reset0

; 736  : 		_Enable_shared(_Px, _Rx);

	mov	edx, DWORD PTR __Rx$[ebp]
	push	edx
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	call	?_Enable_shared@std@@YAXPDX0@Z		; std::_Enable_shared
	add	esp, 8

; 737  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEXPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@1@PAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::_Resetp0<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??$_Insert@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Newnode$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Insert@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Insert<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 1056 : 		void _Insert(_Unchecked_const_iterator _Where,

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1057 : 		_Valty&&... _Val)
; 1058 : 		{	// insert element at _Where
; 1059 : 		_Nodeptr _Pnode = _Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1060 : 		_Nodeptr _Newnode =
; 1061 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),
; 1062 : 				_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Buynode<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	mov	DWORD PTR __Newnode$[ebp], eax

; 1063 : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Incsize

; 1064 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1065 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1066 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Insert@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Insert<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
	add	esp, 16					; 00000010H

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$_Wrap_alloc@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$?0XP6AXPAX@Z@?$shared_ptr@X@std@@QAE@PAXP6AX0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 4
??$?0XP6AXPAX@Z@?$shared_ptr@X@std@@QAE@PAXP6AX0@Z@Z PROC ; std::shared_ptr<void>::shared_ptr<void><void,void (__cdecl*)(void *)>, COMDAT
; _this$ = ecx

; 487  : 		shared_ptr(_Ux *_Px, _Dx _Dt)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@X@std@@QAE@XZ		; std::_Ptr_base<void>::_Ptr_base<void>

; 488  : 		{	// construct with _Px, deleter
; 489  : 		_Resetp(_Px, _Dt);

	mov	eax, DWORD PTR __Dt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z ; std::shared_ptr<void>::_Resetp<void,void (__cdecl*)(void *)>

; 490  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0XP6AXPAX@Z@?$shared_ptr@X@std@@QAE@PAXP6AX0@Z@Z ENDP ; std::shared_ptr<void>::shared_ptr<void><void,void (__cdecl*)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx

; 1011 : 		void _Construct(_Iter _First, _Iter _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1012 : 		{	// initialize from [_First, _Last), input iterators
; 1013 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1014 : 
; 1015 : 		for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Construct
$LN2@Construct:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
$LN3@Construct:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Construct

; 1016 : 			emplace_back(*_First);

	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_back@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
	jmp	SHORT $LN2@Construct
$LN1@Construct:
	jmp	SHORT $LN7@Construct
__catch$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$0:

; 1017 : 
; 1018 : 		_CATCH_ALL
; 1019 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy

; 1020 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1021 : 		_CATCH_END

	mov	eax, $LN10@Construct
	ret	0
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN6@Construct
$LN10@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN6@Construct:

; 1022 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z PROC ; std::forward<std::unique_ptr<void,ThreadCloser> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ENDP ; std::forward<std::unique_ptr<void,ThreadCloser> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<void> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ; std::forward<std::unique_ptr<void,ThreadCloser> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
	add	esp, 16					; 00000010H

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z PROC ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >, COMDAT

; 1195 : 	{	// get beginning of sequence

	push	ebp
	mov	ebp, esp

; 1196 : 	return (_Cont.begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1197 : 	}

	pop	ebp
	ret	0
??$begin@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ENDP ; std::begin<std::vector<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$end@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$end@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z PROC ; std::end<std::vector<unsigned long,std::allocator<unsigned long> > >, COMDAT

; 1207 : 	{	// get end of sequence

	push	ebp
	mov	ebp, esp

; 1208 : 	return (_Cont.end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1209 : 	}

	pop	ebp
	ret	0
??$end@V?$vector@KV?$allocator@K@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@ABV?$vector@KV?$allocator@K@std@@@0@@Z ENDP ; std::end<std::vector<unsigned long,std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@KAAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKAAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@KAAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKAAK@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@KAAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKAAK@Z ; std::allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@KAAK@?$_Wrap_alloc@V?$allocator@K@std@@@std@@QAEXPAKAAK@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT

; 1141 : 	{	// test for reverse_iterator equality

	push	ebp
	mov	ebp, esp

; 1142 : 	return (_Left._Equal(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >

; 1143 : 	}

	pop	ebp
	ret	0
??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV10@@Z PROC ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YA$$QAV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@AAV10@@Z ENDP ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@$$T@std@@YA$$QA$$TAA$$T@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$T@std@@YA$$QA$$TAA$$T@Z PROC		; std::forward<std::nullptr_t>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@$$T@std@@YA$$QA$$TAA$$T@Z ENDP		; std::forward<std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@PAUReplayBuffer@@@std@@YA$$QAPAUReplayBuffer@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAUReplayBuffer@@@std@@YA$$QAPAUReplayBuffer@@AAPAU1@@Z PROC ; std::forward<ReplayBuffer *>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@PAUReplayBuffer@@@std@@YA$$QAPAUReplayBuffer@@AAPAU1@@Z ENDP ; std::forward<ReplayBuffer *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z PROC ; std::forward<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@@std@@YA$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$?0UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@X@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@X@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z PROC ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> ><ReplayBuffer,std::default_delete<ReplayBuffer>,void>, COMDAT
; _this$ = ecx

; 1403 : 		{	// construct by moving _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@$00@std@@QAEAAU?$default_delete@UReplayBuffer@@@2@XZ ; std::_Unique_ptr_base<ReplayBuffer,std::default_delete<ReplayBuffer>,1>::get_deleter
	push	eax
	call	??$forward@U?$default_delete@UReplayBuffer@@@std@@@std@@YA$$QAU?$default_delete@UReplayBuffer@@@0@AAU10@@Z ; std::forward<std::default_delete<ReplayBuffer> >
	add	esp, 4
	mov	al, BYTE PTR [eax]
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?release@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAEPAUReplayBuffer@@XZ ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::release
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@1@@Z ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1><ReplayBuffer *,std::default_delete<ReplayBuffer> >

; 1404 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@X@?$unique_ptr@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@@std@@QAE@$$QAV?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@1@@Z ENDP ; std::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> >::unique_ptr<VideoFileStream,std::default_delete<VideoFileStream> ><ReplayBuffer,std::default_delete<ReplayBuffer>,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z PROC ; std::_Ptr_cat<unsigned long,unsigned long>, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ENDP ; std::_Ptr_cat<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<unsigned long *,unsigned long *>, COMDAT

; 2428 : 	{	// move [_First, _Last) to [_Dest, ...), pointers to scalars

	push	ebp
	mov	ebp, esp
	push	ecx

; 2429 : 	ptrdiff_t _Count = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax

; 2430 : 	_CSTD memmove(&*_Dest, &*_First,
; 2431 : 		_Count * sizeof (*_First));

	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH

; 2432 : 	return (_Dest + _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]

; 2433 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAKPAK@std@@YAPAKPAK00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<unsigned long *,unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABK@std@@YAABKABK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABK@std@@YAABKABK@Z PROC			; std::forward<unsigned long const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABK@std@@YAABKABK@Z ENDP			; std::forward<unsigned long const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$emplace_back@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Newoff$ = -16						; size = 4
__Block$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_<_Val_0>$ = 8						; size = 4
??$emplace_back@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>, COMDAT
; _this$ = ecx

; 1155 : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1156 : 		{	// insert element at end
; 1157 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1158 : 		_PUSH_BACK_BEGIN;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	SHORT $LN2@emplace_ba
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 2
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	ja	SHORT $LN2@emplace_ba
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Growmap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Growmap
$LN2@emplace_ba:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+eax-1]
	mov	edx, DWORD PTR _this$[ebp]
	and	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	DWORD PTR __Newoff$[ebp], edx
	mov	ecx, DWORD PTR __Newoff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	jne	SHORT $LN1@emplace_ba
	push	2
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN1@emplace_ba:

; 1159 : 		this->_Getal().construct(
; 1160 : 			this->_Map[_Block] + _Newoff % _DEQUESIZ,
; 1161 : 			_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>

; 1162 : 		_PUSH_BACK_END;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 1163 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >, COMDAT
; _this$ = ecx

; 1011 : 		void _Construct(_Iter _First, _Iter _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1012 : 		{	// initialize from [_First, _Last), input iterators
; 1013 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1014 : 
; 1015 : 		for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Construct
$LN2@Construct:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
$LN3@Construct:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@Construct

; 1016 : 			emplace_back(*_First);

	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator*
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_back@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEX$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	jmp	SHORT $LN2@Construct
$LN1@Construct:
	jmp	SHORT $LN7@Construct
__catch$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$0:

; 1017 : 
; 1018 : 		_CATCH_ALL
; 1019 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Tidy

; 1020 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1021 : 		_CATCH_END

	mov	eax, $LN10@Construct
	ret	0
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$1
$LN10@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z$1:

; 1022 : 		}

	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
$LN6@Construct:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@0@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Construct<std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >, COMDAT

; 414  : 	{	// return pointer category from arbitrary arguments

	push	ebp
	mov	ebp, esp
	push	ecx

; 415  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 416  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Dest$ = 36						; size = 12
___formal$ = 48						; size = 1
??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >, COMDAT

; 2525 : 	{	// move [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	push	ebp
	mov	ebp, esp
$LN2@Move_backw:

; 2526 : 	while (_First != _Last)

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Move_backw

; 2527 : 		*--_Dest = _STD move(*--_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	call	??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--
	mov	ecx, eax
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
	push	eax
	call	??$move@AAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAU10@@Z ; std::move<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--
	mov	ecx, eax
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
	mov	ecx, eax
	call	??4?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator=
	jmp	SHORT $LN2@Move_backw
$LN1@Move_backw:

; 2528 : 	return (_Dest);

	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2529 : 	}

	pop	ebp
	ret	0
??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move_backward<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Dest$ = 36						; size = 12
___formal$ = 48						; size = 1
??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >, COMDAT

; 2418 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebp
	mov	ebp, esp

; 2419 : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN3@Move
$LN2@Move:
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++
$LN3@Move:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Move

; 2420 : 		*_Dest = _STD move(*_First);

	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
	push	eax
	call	??$move@AAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAU10@@Z ; std::move<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator*
	mov	ecx, eax
	call	??4?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAU01@$$QAU01@@Z ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator=
	jmp	SHORT $LN2@Move
$LN1@Move:

; 2421 : 	return (_Dest);

	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Dest$[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2422 : 	}

	pop	ebp
	ret	0
??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *><std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *><std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT

; 89   : 	{	// destroy [_First, _Last), scalar type (do nothing)

	push	ebp
	mov	ebp, esp

; 90   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAXPAK0AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABV?$shared_ptr@X@std@@@std@@YAABV?$shared_ptr@X@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$shared_ptr@X@std@@@std@@YAABV?$shared_ptr@X@0@ABV10@@Z PROC ; std::forward<std::shared_ptr<void> const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$shared_ptr@X@std@@@std@@YAABV?$shared_ptr@X@0@ABV10@@Z ENDP ; std::forward<std::shared_ptr<void> const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?8V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 660  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp

; 661  : 	return (true);

	mov	al, 1

; 662  : 	}

	pop	ebp
	ret	0
??$?8V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::swap<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@@Z ; std::_Move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@@Z ; std::_Move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@@Z ; std::_Move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAXAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::swap<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAI@std@@YA$$QAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAI@std@@YA$$QAIAAI@Z PROC			; std::_Move<unsigned int &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAI@std@@YA$$QAIAAI@Z ENDP			; std::_Move<unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *><std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *><std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0@Z PROC ; std::_Ptr_cat<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0@Z ENDP ; std::_Ptr_cat<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >, COMDAT

; 80   : 	{	// destroy [_First, _Last), arbitrary type

	push	ebp
	mov	ebp, esp

; 81   : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra

; 82   : 		_Al.destroy(_First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:

; 83   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z PROC ; std::_Move<std::_Ref_count_base * &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAPAV_Ref_count_base@std@@@std@@YA$$QAPAV_Ref_count_base@0@AAPAV10@@Z ENDP ; std::_Move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YA$$QAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@AAPBV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YA$$QAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@AAPBV10@@Z PROC ; std::_Move<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const * &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@YA$$QAPBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@0@AAPBV10@@Z ENDP ; std::_Move<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YAABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YAABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@ABV10@@Z PROC ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@YAABV?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@0@ABV10@@Z ENDP ; std::forward<std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z PROC ; std::swap<std::_Container_proxy *>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAU_Container_proxy@std@@@std@@YA$$QAPAU_Container_proxy@0@AAPAU10@@Z ; std::_Move<std::_Container_proxy * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPAU_Container_proxy@std@@@std@@YA$$QAPAU_Container_proxy@0@AAPAU10@@Z ; std::_Move<std::_Container_proxy * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAU_Container_proxy@std@@@std@@YA$$QAPAU_Container_proxy@0@AAPAU10@@Z ; std::_Move<std::_Container_proxy * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAU_Container_proxy@std@@@std@@YAXAAPAU_Container_proxy@0@0@Z ENDP ; std::swap<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AB_N@std@@YAAB_NAB_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AB_N@std@@YAAB_NAB_N@Z PROC			; std::forward<bool const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AB_N@std@@YAAB_NAB_N@Z ENDP			; std::forward<bool const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >, COMDAT

; 424  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 425  : 	return (_Rechecked(_Dest,
; 426  : 		_Uninit_copy(_Unchecked(_First), _Unchecked(_Last),
; 427  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ; std::_Unchecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ; std::_Unchecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ; std::_Unchecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@@std@@YAAAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAPAPAU10@PAPAU10@@Z ; std::_Rechecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 428  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >, COMDAT

; 690  : 	{	// copy _Count * _Val_type(_First)() to raw _First, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 691  : 	_Uninit_def_fill_n(_First, _Count, _Al,
; 692  : 		_Val_type(_First), _Ptr_cat(_First, _First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ; std::_Val_type<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_def_fill_n@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 20					; 00000014H

; 693  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$_Reset@X@?$_Ptr_base@X@std@@QAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??$_Reset@X@?$_Ptr_base@X@std@@QAEXABV01@@Z PROC	; std::_Ptr_base<void>::_Reset<void>, COMDAT
; _this$ = ecx

; 352  : 		void _Reset(const _Ptr_base<_Ty2>& _Other)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 353  : 		{	// release resource and take ownership of _Other._Ptr
; 354  : 		_Reset(_Other._Ptr, _Other._Rep);

	mov	eax, DWORD PTR __Other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Other$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z ; std::_Ptr_base<void>::_Reset

; 355  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@X@?$_Ptr_base@X@std@@QAEXABV01@@Z ENDP	; std::_Ptr_base<void>::_Reset<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >, COMDAT

; 424  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 425  : 	return (_Rechecked(_Dest,
; 426  : 		_Uninit_copy(_Unchecked(_First), _Unchecked(_Last),
; 427  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ; std::_Unchecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ; std::_Unchecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ; std::_Unchecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@@std@@YAAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@PAPAV10@@Z ; std::_Rechecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 428  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >, COMDAT

; 690  : 	{	// copy _Count * _Val_type(_First)() to raw _First, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 691  : 	_Uninit_def_fill_n(_First, _Count, _Al,
; 692  : 		_Val_type(_First), _Ptr_cat(_First, _First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ; std::_Val_type<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_def_fill_n@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 20					; 00000014H

; 693  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$_Swap_adl@PAX@std@@YAXAAPAX0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@PAX@std@@YAXAAPAX0@Z PROC			; std::_Swap_adl<void *>, COMDAT

; 60   : 	{	// exchange values stored at _Left and _Right, using ADL

	push	ebp
	mov	ebp, esp

; 61   : 	swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAX@std@@YAXAAPAX0@Z		; std::swap<void *>
	add	esp, 8

; 62   : 	}

	pop	ebp
	ret	0
??$_Swap_adl@PAX@std@@YAXAAPAX0@Z ENDP			; std::_Swap_adl<void *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$_Swap_adl@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z PROC ; std::_Swap_adl<ThreadDeleter<1000> >, COMDAT

; 60   : 	{	// exchange values stored at _Left and _Right, using ADL

	push	ebp
	mov	ebp, esp

; 61   : 	swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z ; std::swap<ThreadDeleter<1000> >
	add	esp, 8

; 62   : 	}

	pop	ebp
	ret	0
??$_Swap_adl@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z ENDP ; std::_Swap_adl<ThreadDeleter<1000> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Ptr_base<std::vector<unsigned char,std::allocator<unsigned char> > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAV10@@Z PROC ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAU10@@Z PROC ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAU10@@Z ENDP ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>, COMDAT
; _this$ = ecx

; 1644 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1645 : 		{	// move initializing [_First, _Last), using allocator
; 1646 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@KV?$allocator@K@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@K@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned long,std::allocator<unsigned long> > >::_Getal

; 1647 : 		return (_Uninitialized_move(_First, _Last,
; 1648 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >
	add	esp, 16					; 00000010H

; 1649 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAK@?$vector@KV?$allocator@K@std@@@std@@IAEPAKPAK00@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Umove<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Umove@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PAU21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PAU21@00@Z PROC ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Umove<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>, COMDAT
; _this$ = ecx

; 1644 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1645 : 		{	// move initializing [_First, _Last), using allocator
; 1646 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >::_Getal

; 1647 : 		return (_Uninitialized_move(_First, _Last,
; 1648 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
	add	esp, 16					; 00000010H

; 1649 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$vector@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@@std@@IAEPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@PAU21@00@Z ENDP ; std::vector<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::_Umove<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@PAX@std@@YAXAAPAX0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAX@std@@YAXAAPAX0@Z PROC			; std::swap<void *>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAX@std@@YA$$QAPAXAAPAX@Z	; std::_Move<void * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPAX@std@@YA$$QAPAXAAPAX@Z	; std::_Move<void * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAX@std@@YA$$QAPAXAAPAX@Z	; std::_Move<void * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAX@std@@YAXAAPAX0@Z ENDP			; std::swap<void *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Ptr_base@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Ptr_base<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAPAU10@@Z PROC ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IPAPAU10@@Z ENDP ; std::_Allocate<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAPAV10@@Z PROC ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IPAPAV10@@Z ENDP ; std::_Allocate<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@PBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAXAAPBV?$vector@EV?$allocator@E@std@@@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAXAAPBV?$vector@EV?$allocator@E@std@@@0@0@Z PROC ; std::swap<std::vector<unsigned char,std::allocator<unsigned char> > const *>, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPBV?$vector@EV?$allocator@E@std@@@std@@@std@@YA$$QAPBV?$vector@EV?$allocator@E@std@@@0@AAPBV10@@Z ; std::_Move<std::vector<unsigned char,std::allocator<unsigned char> > const * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 53   : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAPBV?$vector@EV?$allocator@E@std@@@std@@@std@@YA$$QAPBV?$vector@EV?$allocator@E@std@@@0@AAPBV10@@Z ; std::_Move<std::vector<unsigned char,std::allocator<unsigned char> > const * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 54   : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPBV?$vector@EV?$allocator@E@std@@@std@@@std@@YA$$QAPBV?$vector@EV?$allocator@E@std@@@0@AAPBV10@@Z ; std::_Move<std::vector<unsigned char,std::allocator<unsigned char> > const * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAXAAPBV?$vector@EV?$allocator@E@std@@@0@0@Z ENDP ; std::swap<std::vector<unsigned char,std::allocator<unsigned char> > const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@K@std@@YAPAKIPAK@Z PROC			; std::_Allocate<unsigned long>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@K@std@@YAPAKIPAK@Z ENDP			; std::_Allocate<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@IPAU10@@Z PROC ; std::_Allocate<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@IPAU10@@Z ENDP ; std::_Allocate<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAEPAXI@Z PROC ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAEPAXI@Z ENDP ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAEPAXI@Z PROC ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAEPAXI@Z ENDP ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAE@XZ PROC ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::~_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count_obj@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@UAE@XZ ENDP ; std::_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >::~_Ref_count_obj<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAE@XZ PROC ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count_obj@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@UAE@XZ ENDP ; std::_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~_Ref_count_obj<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Incsize@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Incsize, COMDAT
; _this$ = ecx

; 1905 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1906 : 		if (max_size() - this->_Mysize - 1 < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1907 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@Incsize:

; 1908 : 		this->_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Incsize:

; 1909 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXI@Z ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Incsize
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??4?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAU01@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAU01@$$QAU01@@Z PROC ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator=, COMDAT
; _this$ = ecx

; 174  : 		{	// assign from moved pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		first = _STD forward<_Ty1>(_Right.first);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@K@std@@YA$$QAKAAK@Z		; std::forward<unsigned long>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 176  : 		second = _STD forward<_Ty2>(_Right.second);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 177  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 178  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??4?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAU01@$$QAU01@@Z ENDP ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*, COMDAT
; _this$ = ecx

; 362  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*

; 364  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++, COMDAT
; _this$ = ecx

; 372  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 373  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++

; 374  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 375  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 1029 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1030 : 		return (const_iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1031 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 1039 : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1040 : 		return (const_iterator(this->_Mylast, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1041 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Reset@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<void>::_Reset, COMDAT
; _this$ = ecx

; 401  : 		{	// release resource and take _Other_ptr through _Other_rep

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 		if (_Other_rep)

	cmp	DWORD PTR __Other_rep$[ebp], 0
	je	SHORT $LN1@Reset

; 403  : 			_Other_rep->_Incref();

	mov	ecx, DWORD PTR __Other_rep$[ebp]
	call	?_Incref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Incref
$LN1@Reset:

; 404  : 		_Reset0(_Other_ptr, _Other_rep);

	mov	eax, DWORD PTR __Other_rep$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z ; std::_Ptr_base<void>::_Reset0

; 405  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<void>::_Reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++, COMDAT
; _this$ = ecx

; 612  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 613  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++

; 614  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 615  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--, COMDAT
; _this$ = ecx

; 625  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 626  : 		--*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--

; 627  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 628  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator!=, COMDAT
; _this$ = ecx

; 469  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 470  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 471  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?release@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAEPAUReplayBuffer@@XZ
_TEXT	SEGMENT
__Ans$ = -8						; size = 4
_this$ = -4						; size = 4
?release@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAEPAUReplayBuffer@@XZ PROC ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::release, COMDAT
; _this$ = ecx

; 1472 : 		{	// yield ownership of pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1473 : 		pointer _Ans = this->_Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ans$[ebp], ecx

; 1474 : 		this->_Myptr = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1475 : 		return (_Ans);

	mov	eax, DWORD PTR __Ans$[ebp]

; 1476 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$unique_ptr@UReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@std@@QAEPAUReplayBuffer@@XZ ENDP ; std::unique_ptr<ReplayBuffer,std::default_delete<ReplayBuffer> >::release
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??D?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ PROC ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator*, COMDAT
; _this$ = ecx

; 1866 : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1867 : 		return (_STD move(*current));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
	push	eax
	call	??$move@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
	add	esp, 4

; 1868 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??E?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++, COMDAT
; _this$ = ecx

; 1876 : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1877 : 		++current;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++

; 1878 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1879 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?max_size@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size, COMDAT
; _this$ = ecx

; 1240 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1241 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size

; 1242 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*, COMDAT
; _this$ = ecx

; 204  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		if (this->_Getcont() == 0
; 207  : 			|| this->_Ptr == 0
; 208  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 209  : 			{	// report error
; 210  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 211  : 			_SCL_SECURE_OUT_OF_RANGE;
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 216  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 217  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 218  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 219  : 
; 220  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Myval
	add	esp, 4

; 221  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Reset0@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z PROC ; std::_Ptr_base<void>::_Reset0, COMDAT
; _this$ = ecx

; 418  : 		{	// release resource and take new resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 419  : 		if (_Rep != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Reset0

; 420  : 			_Rep->_Decref();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?_Decref@_Ref_count_base@std@@QAEXXZ	; std::_Ref_count_base::_Decref
$LN1@Reset0:

; 421  : 		_Rep = _Other_rep;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [edx+4], eax

; 422  : 		_Ptr = _Other_ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [ecx], edx

; 423  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z ENDP ; std::_Ptr_base<void>::_Reset0
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++, COMDAT
; _this$ = ecx

; 353  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 355  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 356  : 		if (_Mycont == 0
; 357  : 			|| _Mycont->_Myoff + _Mycont->_Mysize <= this->_Myoff)
; 358  : 		{	// report error
; 359  : 		_DEBUG_ERROR("deque iterator not incrementable");
; 360  : 		_SCL_SECURE_OUT_OF_RANGE;
; 361  : 		}
; 362  : 
; 363  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 364  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 365  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 366  : 		_SCL_SECURE_VALIDATE_RANGE(
; 367  : 			this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize);
; 368  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 369  : 
; 370  : 		++_Myoff;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 371  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 372  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--, COMDAT
; _this$ = ecx

; 382  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 383  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 384  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 385  : 		if (_Mycont == 0
; 386  : 			|| this->_Myoff <= _Mycont->_Myoff)
; 387  : 		{	// report error
; 388  : 		_DEBUG_ERROR("deque iterator not decrementable");
; 389  : 		_SCL_SECURE_OUT_OF_RANGE;
; 390  : 		}
; 391  : 
; 392  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 393  : 		_Mydeque *_Mycont = ((_Mydeque *)this->_Getcont());
; 394  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 395  : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myoff < this->_Myoff);
; 396  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 397  : 
; 398  : 		--_Myoff;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 399  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 400  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator==, COMDAT
; _this$ = ecx

; 463  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 464  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::_Compat

; 465  : 		return (this->_Myoff == _Right._Myoff);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 466  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++, COMDAT
; _this$ = ecx

; 612  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 613  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++

; 614  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 615  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 268435455				; 0fffffffH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$?0PBEX@?$vector@EV?$allocator@E@std@@@std@@QAE@PBE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$?0PBEX@?$vector@EV?$allocator@E@std@@@std@@QAE@PBE0@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> ><unsigned char const *,void>, COMDAT
; _this$ = ecx

; 750  : 		{	// construct from [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@E@std@@QAE@XZ		; std::allocator<unsigned char>::allocator<unsigned char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@ABV?$allocator@E@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >

; 751  : 		_Construct(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>

; 752  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PBEX@?$vector@EV?$allocator@E@std@@@std@@QAE@PBE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> ><unsigned char const *,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
_<_Rest_arg_1>$ = 16					; size = 4
_<_Rest_arg_2>$ = 20					; size = 4
??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from one or more moved elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _<_Rest_arg_2>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Rest_arg_1>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	edx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAK0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z ; std::forward<enum PacketType &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$?0AAW4PacketType@@@?$_Tuple_val@W4PacketType@@@std@@QAE@AAW4PacketType@@@Z ; std::_Tuple_val<enum PacketType>::_Tuple_val<enum PacketType><enum PacketType &>

; 234  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$?0AAW4PacketType@@AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAW4PacketType@@AAK1AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><enum PacketType &,unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -18						; size = 1
$T3 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Buynode<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 827  : 		_Nodeptr _Buynode(_Nodeptr _Next, _Nodeptr _Prev,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 828  : 			_Valty&&... _Val)
; 829  : 		{	// allocate a node and set links and value
; 830  : 		_Nodeptr _Pnode = this->_Buynode0(_Next, _Prev);

	mov	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax

; 831  : 
; 832  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 833  : 		this->_Getal().construct(
; 834  : 			_STD addressof(this->_Myval(_Pnode)),
; 835  : 				_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$0:

; 836  : 		_CATCH_ALL
; 837  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::deallocate

; 838  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 839  : 		_CATCH_END

	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z$1:

; 840  : 
; 841  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 842  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$_List_buy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@PAU21@0$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_buy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Buynode<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator_traits@V?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
tv75 = -24						; size = 4
$T2 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 4
??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z PROC ; std::shared_ptr<void>::_Resetp<void,void (__cdecl*)(void *)>, COMDAT
; _this$ = ecx

; 703  : 		void _Resetp(_Ux *_Px, _Dx _Dt)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 704  : 		{	// release, take ownership of _Px, deleter _Dt
; 705  : 		_TRY_BEGIN	// allocate control block and reset

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 706  : 		_Resetp0(_Px, new _Ref_count_del<_Ux, _Dx>(_Px, _Dt));

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@Resetp
	mov	eax, DWORD PTR __Dt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Ref_count_del@XP6AXPAX@Z@std@@QAE@PAXP6AX0@Z@Z ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Ref_count_del<void,void (__cdecl*)(void *)>
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@Resetp
$LN4@Resetp:
	mov	DWORD PTR tv75[ebp], 0
$LN5@Resetp:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp0@X@?$shared_ptr@X@std@@QAEXPAXPAV_Ref_count_base@1@@Z ; std::shared_ptr<void>::_Resetp0<void>
	jmp	SHORT $LN6@Resetp
__catch$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z$0:

; 707  : 		_CATCH_ALL	// allocation failed, delete resource
; 708  : 		_Dt(_Px);

	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	call	DWORD PTR __Dt$[ebp]
	add	esp, 4

; 709  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 710  : 		_CATCH_END

	mov	eax, $LN9@Resetp
	ret	0
$LN6@Resetp:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN3@Resetp
$LN9@Resetp:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Resetp:

; 711  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Resetp@XP6AXPAX@Z@?$shared_ptr@X@std@@AAEXPAXP6AX0@Z@Z ENDP ; std::shared_ptr<void>::_Resetp<void,void (__cdecl*)(void *)>
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\deque
;	COMDAT ??$emplace_back@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Newoff$ = -16						; size = 4
__Block$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_<_Val_0>$ = 8						; size = 4
??$emplace_back@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>, COMDAT
; _this$ = ecx

; 1155 : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1156 : 		{	// insert element at end
; 1157 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1158 : 		_PUSH_BACK_BEGIN;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	SHORT $LN2@emplace_ba
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 2
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	ja	SHORT $LN2@emplace_ba
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Growmap@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXI@Z ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Growmap
$LN2@emplace_ba:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+eax-1]
	mov	edx, DWORD PTR _this$[ebp]
	and	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	DWORD PTR __Newoff$[ebp], edx
	mov	ecx, DWORD PTR __Newoff$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	jne	SHORT $LN1@emplace_ba
	push	2
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Block$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN1@emplace_ba:

; 1159 : 		this->_Getal().construct(
; 1160 : 			this->_Map[_Block] + _Newoff % _DEQUESIZ,
; 1161 : 			_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Deque_alloc<0,std::_Deque_base_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>

; 1162 : 		_PUSH_BACK_END;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 1163 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$deque@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::deque<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::emplace_back<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z PROC ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ; std::forward<std::unique_ptr<void,ThreadCloser> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@KAAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKAAK@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@KAAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKAAK@Z PROC ; std::allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@KAAK@?$allocator@K@std@@QAEXPAKAAK@Z ; std::allocator<unsigned long>::construct<unsigned long,unsigned long &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@KAAK@?$allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@PAKAAK@Z ENDP ; std::allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 12
_this$ = -8						; size = 4
$T2 = -1						; size = 1
__Right$ = 8						; size = 4
??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z PROC ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >, COMDAT
; _this$ = ecx

; 872  : 		bool _Equal(const _Revranit<_RanIt2, _Base2>& _Right) const

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 873  : 		{	// test for iterator equality
; 874  : 		return (current == _Right.base());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?base@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::base
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
	mov	BYTE PTR $T2[ebp], al
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]

; 875  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$default_delete@UReplayBuffer@@@std@@@std@@YA$$QAU?$default_delete@UReplayBuffer@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$default_delete@UReplayBuffer@@@std@@@std@@YA$$QAU?$default_delete@UReplayBuffer@@@0@AAU10@@Z PROC ; std::forward<std::default_delete<ReplayBuffer> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$default_delete@UReplayBuffer@@@std@@@std@@YA$$QAU?$default_delete@UReplayBuffer@@@0@AAU10@@Z ENDP ; std::forward<std::default_delete<ReplayBuffer> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$?0PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Dt$ = 12						; size = 1
??$?0PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@1@@Z PROC ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1><ReplayBuffer *,std::default_delete<ReplayBuffer> >, COMDAT
; _this$ = ecx

; 1302 : 		{	// construct with compatible pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Dt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0UReplayBuffer@@X@?$default_delete@VVideoFileStream@@@std@@QAE@ABU?$default_delete@UReplayBuffer@@@1@@Z ; std::default_delete<VideoFileStream>::default_delete<VideoFileStream><ReplayBuffer,void>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx], edx

; 1303 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@std@@@?$_Unique_ptr_base@VVideoFileStream@@U?$default_delete@VVideoFileStream@@@std@@$00@std@@QAE@PAUReplayBuffer@@U?$default_delete@UReplayBuffer@@@1@@Z ENDP ; std::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1>::_Unique_ptr_base<VideoFileStream,std::default_delete<VideoFileStream>,1><ReplayBuffer *,std::default_delete<ReplayBuffer> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT

; 1991 : 	{	// test for move_iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx

; 1992 : 	return (!(_Left == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 1993 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator!=<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEPAXI@Z

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAU10@@Z PROC ; std::move<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAU10@@Z ENDP ; std::move<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@@Z PROC ; std::_Move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * * &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@@Z ENDP ; std::_Move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEPAXI@Z

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::destroy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::destroy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv71[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAPAU_Container_proxy@std@@@std@@YA$$QAPAU_Container_proxy@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAU_Container_proxy@std@@@std@@YA$$QAPAU_Container_proxy@0@AAPAU10@@Z PROC ; std::_Move<std::_Container_proxy * &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAPAU_Container_proxy@std@@@std@@YA$$QAPAU_Container_proxy@0@AAPAU10@@Z ENDP ; std::_Move<std::_Container_proxy * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv70 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv70[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> *,std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z PROC ; std::_Unchecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ENDP ; std::_Unchecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >, COMDAT

; 414  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 415  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 416  : 		_Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 20					; 00000014H

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@@std@@YAAAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAPAPAU10@PAPAU10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@@std@@YAAAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAPAPAU10@PAPAU10@@Z PROC ; std::_Rechecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAPAU12@@std@@YAAAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAPAPAU10@PAPAU10@@Z ENDP ; std::_Rechecked<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z PROC ; std::_Val_type<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>, COMDAT

; 645  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 646  : 	return (0);

	xor	eax, eax

; 647  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@@Z ENDP ; std::_Val_type<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_def_fill_n@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_def_fill_n@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_def_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT

; 681  : 	{	// copy _Count * _Valty() to raw _First, using _Al, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 682  : 	_Fill_n(_First, _Count, (_Valty)0);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@IABQAU10@@Z ; std::_Fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
	add	esp, 12					; 0000000cH

; 683  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_def_fill_n@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_def_fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >, COMDAT

; 89   : 	{	// destroy [_First, _Last), scalar type (do nothing)

	push	ebp
	mov	ebp, esp

; 90   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z PROC ; std::_Unchecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ENDP ; std::_Unchecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >, COMDAT

; 414  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 415  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 416  : 		_Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 20					; 00000014H

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@@std@@YAAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@PAPAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@@std@@YAAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@PAPAV10@@Z PROC ; std::_Rechecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAPAV12@@std@@YAAAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAPAPAV10@PAPAV10@@Z ENDP ; std::_Rechecked<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z PROC ; std::_Val_type<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>, COMDAT

; 645  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 646  : 	return (0);

	xor	eax, eax

; 647  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@@Z ENDP ; std::_Val_type<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_def_fill_n@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_def_fill_n@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_def_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT

; 681  : 	{	// copy _Count * _Valty() to raw _First, using _Al, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 682  : 	_Fill_n(_First, _Count, (_Valty)0);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@IABQAV10@@Z ; std::_Fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
	add	esp, 12					; 0000000cH

; 683  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_def_fill_n@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_def_fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >, COMDAT

; 89   : 	{	// destroy [_First, _Last), scalar type (do nothing)

	push	ebp
	mov	ebp, esp

; 90   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$swap@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z
_TEXT	SEGMENT
__Tmp$ = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z PROC ; std::swap<ThreadDeleter<1000> >, COMDAT

; 51   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	push	ecx

; 52   : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAU?$ThreadDeleter@$0DOI@@@@std@@YA$$QAU?$ThreadDeleter@$0DOI@@@AAU1@@Z ; std::_Move<ThreadDeleter<1000> &>
	add	esp, 4

; 53   : 	_Left = _Move(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$_Move@AAU?$ThreadDeleter@$0DOI@@@@std@@YA$$QAU?$ThreadDeleter@$0DOI@@@AAU1@@Z ; std::_Move<ThreadDeleter<1000> &>
	add	esp, 4

; 54   : 	_Right = _Move(_Tmp);

	lea	edx, DWORD PTR __Tmp$[ebp]
	push	edx
	call	??$_Move@AAU?$ThreadDeleter@$0DOI@@@@std@@YA$$QAU?$ThreadDeleter@$0DOI@@@AAU1@@Z ; std::_Move<ThreadDeleter<1000> &>
	add	esp, 4

; 55   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@U?$ThreadDeleter@$0DOI@@@@std@@YAXAAU?$ThreadDeleter@$0DOI@@@0@Z ENDP ; std::swap<ThreadDeleter<1000> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z PROC ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT

; 492  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 493  : 	return (_Rechecked(_Dest,
; 494  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 495  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAK@std@@YAPAKPAK@Z	; std::_Unchecked<unsigned long *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAK@std@@YAPAKPAK@Z	; std::_Unchecked<unsigned long *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAK@std@@YAPAKPAK@Z	; std::_Unchecked<unsigned long *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ; std::_Uninit_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAKPAK@std@@YAAAPAKAAPAKPAK@Z ; std::_Rechecked<unsigned long *,unsigned long *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 496  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ENDP ; std::_Uninitialized_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >, COMDAT

; 492  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 493  : 	return (_Rechecked(_Dest,
; 494  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 495  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ; std::_Unchecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ; std::_Unchecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ; std::_Unchecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@@std@@YAAAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAPAU10@PAU10@@Z ; std::_Rechecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 496  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAPAX@std@@YA$$QAPAXAAPAX@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAX@std@@YA$$QAPAXAAPAX@Z PROC		; std::_Move<void * &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAPAX@std@@YA$$QAPAXAAPAX@Z ENDP		; std::_Move<void * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAPBV?$vector@EV?$allocator@E@std@@@std@@@std@@YA$$QAPBV?$vector@EV?$allocator@E@std@@@0@AAPBV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPBV?$vector@EV?$allocator@E@std@@@std@@@std@@YA$$QAPBV?$vector@EV?$allocator@E@std@@@0@AAPBV10@@Z PROC ; std::_Move<std::vector<unsigned char,std::allocator<unsigned char> > const * &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAPBV?$vector@EV?$allocator@E@std@@@std@@@std@@YA$$QAPBV?$vector@EV?$allocator@E@std@@@0@AAPBV10@@Z ENDP ; std::_Move<std::vector<unsigned char,std::allocator<unsigned char> > const * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@K@std@@YA$$QAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@K@std@@YA$$QAKAAK@Z PROC			; std::forward<unsigned long>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@K@std@@YA$$QAKAAK@Z ENDP			; std::forward<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEPAXI@Z PROC ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::~shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAEPAXI@Z ENDP ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ?base@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?base@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::base, COMDAT
; _this$ = ecx

; 829  : 		{	// return wrapped iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 830  : 		return (current);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 831  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?base@?$_Revranit@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@U?$iterator@Urandom_access_iterator_tag@std@@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@HPAV32@AAV32@@2@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Revranit<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::iterator<std::random_access_iterator_tag,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &> >::base
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Ref_count_del@XP6AXPAX@Z@std@@QAE@PAXP6AX0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 4
??0?$_Ref_count_del@XP6AXPAX@Z@std@@QAE@PAXP6AX0@Z@Z PROC ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Ref_count_del<void,void (__cdecl*)(void *)>, COMDAT
; _this$ = ecx

; 179  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@std@@IAE@XZ		; std::_Ref_count_base::_Ref_count_base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_del@XP6AXPAX@Z@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Px$[ebp]
	mov	DWORD PTR [ecx+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dt$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 180  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Ref_count_del@XP6AXPAX@Z@std@@QAE@PAXP6AX0@Z@Z ENDP ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Ref_count_del<void,void (__cdecl*)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Get_deleter@?$_Ref_count_del@XP6AXPAX@Z@std@@UBEPAXABVtype_info@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
__Typeid$ = 8						; size = 4
?_Get_deleter@?$_Ref_count_del@XP6AXPAX@Z@std@@UBEPAXABVtype_info@@@Z PROC ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Get_deleter, COMDAT
; _this$ = ecx

; 183  : 		{	// return address of deleter object

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 		return ((void *)(_Typeid == typeid(_Dx) ? &_Dtor : 0));

	push	OFFSET ??_R0P6AXPAX@Z@8
	mov	ecx, DWORD PTR __Typeid$[ebp]
	call	??8type_info@@QBE_NABV0@@Z		; type_info::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Get_delete
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN4@Get_delete
$LN3@Get_delete:
	mov	DWORD PTR tv70[ebp], 0
$LN4@Get_delete:
	mov	eax, DWORD PTR tv70[ebp]

; 185  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Get_deleter@?$_Ref_count_del@XP6AXPAX@Z@std@@UBEPAXABVtype_info@@@Z ENDP ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Destroy@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ PROC	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Destroy, COMDAT
; _this$ = ecx

; 189  : 		{	// destroy managed resource

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 190  : 		_Dtor(_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 4

; 191  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Destroy@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ ENDP	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -4						; size = 4
?_Delete_this@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ PROC ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Delete_this, COMDAT
; _this$ = ecx

; 194  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 		delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@Delete_thi
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@Delete_thi
$LN3@Delete_thi:
	mov	DWORD PTR tv74[ebp], 0
$LN1@Delete_thi:

; 196  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count_del@XP6AXPAX@Z@std@@EAEXXZ ENDP ; std::_Ref_count_del<void,void (__cdecl*)(void *)>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Ref_count_del@XP6AXPAX@Z@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_del@XP6AXPAX@Z@std@@UAEPAXI@Z PROC	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count_del@XP6AXPAX@Z@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count_del@XP6AXPAX@Z@std@@UAEPAXI@Z ENDP	; std::_Ref_count_del<void,void (__cdecl*)(void *)>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Ref_count_del@XP6AXPAX@Z@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Ref_count_del@XP6AXPAX@Z@std@@UAE@XZ PROC		; std::_Ref_count_del<void,void (__cdecl*)(void *)>::~_Ref_count_del<void,void (__cdecl*)(void *)>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@std@@UAE@XZ		; std::_Ref_count_base::~_Ref_count_base
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count_del@XP6AXPAX@Z@std@@UAE@XZ ENDP		; std::_Ref_count_del<void,void (__cdecl*)(void *)>::~_Ref_count_del<void,void (__cdecl*)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>, COMDAT
; _this$ = ecx

; 764  : 		void _Construct(_Iter _First, _Iter _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 765  : 		{	// initialize with [_First, _Last)
; 766  : 		_Construct(_First, _Last, _Iter_cat(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PBE@std@@YA?AUrandom_access_iterator_tag@0@ABQBE@Z ; std::_Iter_cat<unsigned char const *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR $T2[ebp], dl
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>

; 767  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAK0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
_<_Rest_arg_1>$ = 16					; size = 4
??$?0AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAK0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from one or more moved elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _<_Rest_arg_1>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
	mov	edx, DWORD PTR __This_arg$[ebp]
	push	edx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0AAK@?$_Tuple_val@K@std@@QAE@AAK@Z	; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long &>

; 234  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0AAKAAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAK0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AAW4PacketType@@@?$_Tuple_val@W4PacketType@@@std@@QAE@AAW4PacketType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0AAW4PacketType@@@?$_Tuple_val@W4PacketType@@@std@@QAE@AAW4PacketType@@@Z PROC ; std::_Tuple_val<enum PacketType>::_Tuple_val<enum PacketType><enum PacketType &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@AAW4PacketType@@@std@@YAAAW4PacketType@@AAW41@@Z ; std::forward<enum PacketType &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAW4PacketType@@@?$_Tuple_val@W4PacketType@@@std@@QAE@AAW4PacketType@@@Z ENDP ; std::_Tuple_val<enum PacketType>::_Tuple_val<enum PacketType><enum PacketType &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv76 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > ><unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@@?$allocator@U?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > >::construct<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >,unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$_Resetp0@X@?$shared_ptr@X@std@@QAEXPAXPAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@X@?$shared_ptr@X@std@@QAEXPAXPAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<void>::_Resetp0<void>, COMDAT
; _this$ = ecx

; 733  : 		void _Resetp0(_Ux *_Px, _Ref_count_base *_Rx)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 734  : 		{	// release resource and take ownership of _Px
; 735  : 		this->_Reset0(_Px, _Rx);

	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@X@std@@QAEXPAXPAV_Ref_count_base@2@@Z ; std::_Ptr_base<void>::_Reset0

; 736  : 		_Enable_shared(_Px, _Rx);

	mov	edx, DWORD PTR __Rx$[ebp]
	push	edx
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	call	?_Enable_shared@std@@YAXPDX0@Z		; std::_Enable_shared
	add	esp, 8

; 737  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@X@?$shared_ptr@X@std@@QAEXPAXPAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<void>::_Resetp0<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv76 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z PROC ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ; std::forward<std::unique_ptr<void,ThreadCloser> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@V?$unique_ptr@XUThreadCloser@@@2@AAV?$shared_ptr@X@2@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ENDP ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@KAAK@?$allocator@K@std@@QAEXPAKAAK@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv70 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@KAAK@?$allocator@K@std@@QAEXPAKAAK@Z PROC	; std::allocator<unsigned long>::construct<unsigned long,unsigned long &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv70[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@KAAK@?$allocator@K@std@@QAEXPAKAAK@Z ENDP	; std::allocator<unsigned long>::construct<unsigned long,unsigned long &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??$?0UReplayBuffer@@X@?$default_delete@VVideoFileStream@@@std@@QAE@ABU?$default_delete@UReplayBuffer@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UReplayBuffer@@X@?$default_delete@VVideoFileStream@@@std@@QAE@ABU?$default_delete@UReplayBuffer@@@1@@Z PROC ; std::default_delete<VideoFileStream>::default_delete<VideoFileStream><ReplayBuffer,void>, COMDAT
; _this$ = ecx

; 1192 : 		default_delete(const default_delete<_Ty2>&) _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1193 : 		{	// construct from another default_delete
; 1194 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UReplayBuffer@@X@?$default_delete@VVideoFileStream@@@std@@QAE@ABU?$default_delete@UReplayBuffer@@@1@@Z ENDP ; std::default_delete<VideoFileStream>::default_delete<VideoFileStream><ReplayBuffer,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAABV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT

; 1982 : 	{	// test for move_iterator equality

	push	ebp
	mov	ebp, esp

; 1983 : 	return (_Left._Equal(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >

; 1984 : 	}

	pop	ebp
	ret	0
??$?8V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >,std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z PROC ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT

; 401  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 402  : 	_DEBUG_RANGE(_First, _Last);
; 403  : 	_DEBUG_POINTER(_Dest);
; 404  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax

; 405  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 406  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]

; 407  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@PAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@00AAU?$_Wrap_alloc@V?$allocator@PAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@IABQAU10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@IABQAU10@@Z PROC ; std::_Fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>, COMDAT

; 2631 : 	{	// copy _Val _Count times through [_Dest, ...)

	push	ebp
	mov	ebp, esp

; 2632 : 	for (; 0 < _Count; --_Count, ++_Dest)

	jmp	SHORT $LN3@Fill_n
$LN2@Fill_n:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
$LN3@Fill_n:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@Fill_n

; 2633 : 		*_Dest = _Val;

	mov	edx, DWORD PTR __Dest$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Fill_n
$LN1@Fill_n:

; 2634 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 2635 : 	}

	pop	ebp
	ret	0
??$_Fill_n@PAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@IPAU12@@std@@YAPAPAU?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@PAPAU10@IABQAU10@@Z ENDP ; std::_Fill_n<std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > * *,unsigned int,std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT

; 401  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 402  : 	_DEBUG_RANGE(_First, _Last);
; 403  : 	_DEBUG_POINTER(_Dest);
; 404  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax

; 405  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 406  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]

; 407  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@IABQAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@IABQAV10@@Z PROC ; std::_Fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>, COMDAT

; 2631 : 	{	// copy _Val _Count times through [_Dest, ...)

	push	ebp
	mov	ebp, esp

; 2632 : 	for (; 0 < _Count; --_Count, ++_Dest)

	jmp	SHORT $LN3@Fill_n
$LN2@Fill_n:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
$LN3@Fill_n:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@Fill_n

; 2633 : 		*_Dest = _Val;

	mov	edx, DWORD PTR __Dest$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Fill_n
$LN1@Fill_n:

; 2634 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 2635 : 	}

	pop	ebp
	ret	0
??$_Fill_n@PAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@IPAV12@@std@@YAPAPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@PAPAV10@IABQAV10@@Z ENDP ; std::_Fill_n<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > * *,unsigned int,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$_Move@AAU?$ThreadDeleter@$0DOI@@@@std@@YA$$QAU?$ThreadDeleter@$0DOI@@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAU?$ThreadDeleter@$0DOI@@@@std@@YA$$QAU?$ThreadDeleter@$0DOI@@@AAU1@@Z PROC ; std::_Move<ThreadDeleter<1000> &>, COMDAT

; 1527 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1528 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1529 : 	}

	pop	ebp
	ret	0
??$_Move@AAU?$ThreadDeleter@$0DOI@@@@std@@YA$$QAU?$ThreadDeleter@$0DOI@@@AAU1@@Z ENDP ; std::_Move<ThreadDeleter<1000> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAK@std@@YAPAKPAK@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAK@std@@YAPAKPAK@Z PROC			; std::_Unchecked<unsigned long *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAK@std@@YAPAKPAK@Z ENDP			; std::_Unchecked<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z PROC ; std::_Uninit_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >, COMDAT

; 482  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 483  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 484  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@KK@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAK0@Z ; std::_Ptr_cat<unsigned long,unsigned long>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAK@std@@YAPAKPAK@Z	; std::_Val_type<unsigned long *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@KKK@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
	add	esp, 24					; 00000018H

; 485  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAKPAKU?$_Wrap_alloc@V?$allocator@K@std@@@std@@@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@@Z ENDP ; std::_Uninit_move<unsigned long *,unsigned long *,std::_Wrap_alloc<std::allocator<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAKPAK@std@@YAAAPAKAAPAKPAK@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAKPAK@std@@YAAAPAKAAPAKPAK@Z PROC	; std::_Rechecked<unsigned long *,unsigned long *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAKPAK@std@@YAAAPAKAAPAKPAK@Z ENDP	; std::_Rechecked<unsigned long *,unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z PROC ; std::_Unchecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ENDP ; std::_Unchecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >, COMDAT

; 482  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 483  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 484  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@0@Z ; std::_Ptr_cat<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ; std::_Val_type<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 24					; 00000018H

; 485  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@@std@@YAAAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAPAU10@PAU10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@@std@@YAAAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAPAU10@PAU10@@Z PROC ; std::_Rechecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@@std@@YAAAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAPAU10@PAU10@@Z ENDP ; std::_Rechecked<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?construct@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@ABV32@@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct, COMDAT
; _this$ = ecx

; 592  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 593  : 		::new ((void *)_Ptr) _Ty(_Val);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv71[ebp], 0
$LN1@construct:

; 594  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@2@ABV32@@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>, COMDAT
; _this$ = ecx

; 784  : 		void _Construct(_Iter _First, _Iter _Last, forward_iterator_tag)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 785  : 		{	// initialize with [_First, _Last), forward iterators
; 786  : 		if (_Buy(_STD distance(_First, _Last)))

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$distance@PBE@std@@YAHPBE0@Z		; std::distance<unsigned char const *>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Construct

; 787  : 			{	// nonzero, fill it
; 788  : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 789  : 			this->_Mylast = _Ucopy(_First, _Last, this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PBE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPBE0PAE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char const *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN5@Construct
__catch$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z$0:

; 790  : 			_CATCH_ALL
; 791  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy

; 792  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 793  : 			_CATCH_END

	mov	eax, $LN8@Construct
	ret	0
$LN5@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN4@Construct
$LN8@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN4@Construct:

; 794  : 			}
; 795  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PBE@?$vector@EV?$allocator@E@std@@@std@@QAEXPBE0Uforward_iterator_tag@1@@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Construct<unsigned char const *>
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
_<_Rest_arg_0>$ = 12					; size = 4
??$?0AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from one or more moved elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _<_Rest_arg_0>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@$$$VPAPAX@?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
	mov	ecx, DWORD PTR __This_arg$[ebp]
	push	ecx
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0AAK@?$_Tuple_val@K@std@@QAE@AAK@Z	; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long &>

; 234  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@PAPAX@?$tuple@KV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAKAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><unsigned long &,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AAK@?$_Tuple_val@K@std@@QAE@AAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0AAK@?$_Tuple_val@K@std@@QAE@AAK@Z PROC		; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAK@?$_Tuple_val@K@std@@QAE@AAK@Z ENDP		; std::_Tuple_val<unsigned long>::_Tuple_val<unsigned long><unsigned long &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > ><unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAK@std@@YAAAKAAK@Z		; std::forward<unsigned long &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@X@?$pair@KV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@AAKAAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::pair<unsigned long,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > ><unsigned long &,std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > &,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV31@@Z PROC ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@1@PAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z PROC ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ; std::forward<std::unique_ptr<void,ThreadCloser> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$unique_ptr@XUThreadCloser@@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@AAV?$shared_ptr@X@std@@@std@@YAAAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$shared_ptr@X@std@@QAE@ABV01@@Z	; std::shared_ptr<void>::shared_ptr<void>

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$unique_ptr@XUThreadCloser@@@std@@AAV?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAV?$unique_ptr@XUThreadCloser@@@1@AAV?$shared_ptr@X@1@@Z ENDP ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> &,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 12
_this$ = -8						; size = 4
$T2 = -1						; size = 1
__Right$ = 8						; size = 4
??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >, COMDAT
; _this$ = ecx

; 1902 : 		bool _Equal(const move_iterator<_RanIt2>& _Right) const

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1903 : 		{	// test for iterator equality
; 1904 : 		return (current == _Right.base());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?base@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::base
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > >::operator==
	mov	BYTE PTR $T2[ebp], al
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]

; 1905 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Equal@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::_Equal<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z PROC ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAEPAXI@Z

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ENDP ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Val_type@PAK@std@@YAPAKPAK@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAK@std@@YAPAKPAK@Z PROC			; std::_Val_type<unsigned long *>, COMDAT

; 645  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 646  : 	return (0);

	xor	eax, eax

; 647  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAK@std@@YAPAKPAK@Z ENDP			; std::_Val_type<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@KKK@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@KKK@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 470  : 	_DEBUG_RANGE(_First, _Last);
; 471  : 	_DEBUG_POINTER(_Dest);
; 472  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax

; 473  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 474  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]

; 475  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@KKK@std@@YAPAKPAK00AAU?$_Wrap_alloc@V?$allocator@K@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned long,unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Val_type@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z PROC ; std::_Val_type<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>, COMDAT

; 645  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 646  : 	return (0);

	xor	eax, eax

; 647  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@@Z ENDP ; std::_Val_type<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT

; 437  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 438  : 	_DEBUG_RANGE(_First, _Last);
; 439  : 	_DEBUG_POINTER(_Dest);
; 440  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 441  : 
; 442  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 443  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov

; 444  : 		_Al.construct(_Dest, (_Valty&&)*_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 445  : 	_CATCH_ALL
; 446  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov

; 447  : 		_Al.destroy(_Next);

	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::destroy<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:

; 448  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 449  : 	_CATCH_END

	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:

; 450  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:

; 451  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@PAU12@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > *,std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
; Function compile flags: /Odtp
;	COMDAT ??_G?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAEPAXI@Z PROC ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAEPAXI@Z ENDP ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@XZ PROC ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::~pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$shared_ptr@X@std@@QAE@XZ		; std::shared_ptr<void>::~shared_ptr<void>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$unique_ptr@XUThreadCloser@@@std@@QAE@XZ ; std::unique_ptr<void,ThreadCloser>::~unique_ptr<void,ThreadCloser>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@XZ ENDP ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::~pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XUThreadCloser@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$unique_ptr@XUThreadCloser@@@std@@QAE@$$QAV01@@Z PROC ; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>, COMDAT
; _this$ = ecx

; 1388 : 		{	// construct by moving _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAEAAUThreadCloser@@XZ ; std::_Unique_ptr_base<void,ThreadCloser,1>::get_deleter
	push	eax
	call	??$forward@UThreadCloser@@@std@@YA$$QAUThreadCloser@@AAU1@@Z ; std::forward<ThreadCloser>
	add	esp, 4
	mov	al, BYTE PTR [eax]
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?release@?$unique_ptr@XUThreadCloser@@@std@@QAEPAXXZ ; std::unique_ptr<void,ThreadCloser>::release
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAXUThreadCloser@@@Z ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>

; 1389 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUThreadCloser@@@std@@QAE@$$QAV01@@Z ENDP ; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ?base@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?base@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::base, COMDAT
; _this$ = ecx

; 1861 : 		{	// return wrapped iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1862 : 		return (current);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1863 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?base@?$move_iterator@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::move_iterator<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > > > > >::base
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAXUThreadCloser@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Dt$ = 12						; size = 1
??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAXUThreadCloser@@@Z PROC ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>, COMDAT
; _this$ = ecx

; 1290 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1291 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Unique_ptr_base@XUThreadCloser@@$00@std@@QAE@PAXUThreadCloser@@@Z ENDP ; std::_Unique_ptr_base<void,ThreadCloser,1>::_Unique_ptr_base<void,ThreadCloser,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$distance@PBE@std@@YAHPBE0@Z
_TEXT	SEGMENT
__Off$ = -8						; size = 4
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@PBE@std@@YAHPBE0@Z PROC			; std::distance<unsigned char const *>, COMDAT

; 756  : 	{	// return distance between iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 757  : 	typename iterator_traits<_InIt>::difference_type _Off = 0;

	mov	DWORD PTR __Off$[ebp], 0

; 758  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PBE@std@@YA?AUrandom_access_iterator_tag@0@ABQBE@Z ; std::_Iter_cat<unsigned char const *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Distance2@PBEH@std@@YAXPBE0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<unsigned char const *,int>
	add	esp, 16					; 00000010H

; 759  : 	return (_Off);

	mov	eax, DWORD PTR __Off$[ebp]

; 760  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$distance@PBE@std@@YAHPBE0@Z ENDP			; std::distance<unsigned char const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Ucopy@PBE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPBE0PAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PBE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPBE0PAE@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char const *>, COMDAT
; _this$ = ecx

; 1636 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1637 : 		{	// copy initializing [_First, _Last), using allocator
; 1638 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned char,std::allocator<unsigned char> > >::_Getal

; 1639 : 		return (_Uninitialized_copy(_First, _Last,
; 1640 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninitialized_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 16					; 00000010H

; 1641 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@PBE@?$vector@EV?$allocator@E@std@@@std@@IAEPAEPBE0PAE@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Ucopy<unsigned char const *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@$$$VPAPAX@?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@$$$VPAPAX@?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from one or more moved elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$$V@std@@QAE@XZ		; std::tuple<>::tuple<>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ; std::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>

; 234  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@$$$VPAPAX@?$tuple@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::tuple<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@V12@@?$allocator@U?$_List_node@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@PAX@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,void *> >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z PROC ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@AAV12@@?$allocator@V?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$shared_ptr@$$CBV?$tuple@W4PacketType@@KKV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@@1@AAV21@@Z ENDP ; std::allocator<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > >::construct<std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const >,std::shared_ptr<std::tuple<enum PacketType,unsigned long,unsigned long,std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YA$$QAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAU10@@Z ; std::forward<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@UThreadCloser@@@std@@YA$$QAUThreadCloser@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UThreadCloser@@@std@@YA$$QAUThreadCloser@@AAU1@@Z PROC ; std::forward<ThreadCloser>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@UThreadCloser@@@std@@YA$$QAUThreadCloser@@AAU1@@Z ENDP ; std::forward<ThreadCloser>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninitialized_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 424  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 425  : 	return (_Rechecked(_Dest,
; 426  : 		_Uninit_copy(_Unchecked(_First), _Unchecked(_Last),
; 427  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAE@std@@YAPAEPAE@Z	; std::_Unchecked<unsigned char *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PBE@std@@YAPBEPBE@Z	; std::_Unchecked<unsigned char const *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PBE@std@@YAPBEPBE@Z	; std::_Unchecked<unsigned char const *>
	add	esp, 4
	push	eax
	call	??$_Uninit_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ; std::_Uninit_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAEPAE@std@@YAAAPAEAAPAEPAE@Z ; std::_Rechecked<unsigned char *,unsigned char *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 428  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninitialized_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z PROC ; std::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@YAAAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@0@AAV10@@Z ; std::forward<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@QAE@ABV01@@Z ; std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const >

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@?$_Tuple_val@V?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@@std@@QAE@AAV?$shared_ptr@$$CBV?$vector@EV?$allocator@E@std@@@std@@@1@@Z ENDP ; std::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > >::_Tuple_val<std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > ><std::shared_ptr<std::vector<unsigned char,std::allocator<unsigned char> > const > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YA$$QAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YA$$QAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAU10@@Z PROC ; std::forward<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YA$$QAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAU10@@Z ENDP ; std::forward<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YA$$QAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAU10@@Z ; std::forward<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@1@PAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z PROC ; std::_Uninit_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >, COMDAT

; 414  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 415  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 416  : 		_Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBEPAE@Z ; std::_Ptr_cat<unsigned char,unsigned char>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@$$CBEE@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<unsigned char const ,unsigned char>
	add	esp, 20					; 00000014H

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PBEPAEU?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z ENDP ; std::_Uninit_copy<unsigned char const *,unsigned char *,std::_Wrap_alloc<std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z PROC ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@YA$$QAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@0@AAU10@@Z ; std::forward<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAU01@@Z ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void>,void>
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@U12@@?$allocator@U?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@@std@@QAEXPAU?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@1@$$QAU21@@Z ENDP ; std::allocator<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >::construct<std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >,std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBEPAE@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBEPAE@Z PROC ; std::_Ptr_cat<unsigned char,unsigned char>, COMDAT

; 453  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 454  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 455  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 456  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBEPAE@Z ENDP ; std::_Ptr_cat<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_copy@$$CBEE@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@$$CBEE@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<unsigned char const ,unsigned char>, COMDAT

; 401  : 	{	// copy [_First, _Last) to raw _Dest, scalar type

	push	ebp
	mov	ebp, esp
	push	ecx

; 402  : 	_DEBUG_RANGE(_First, _Last);
; 403  : 	_DEBUG_POINTER(_Dest);
; 404  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 405  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 406  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR __Count$[ebp]

; 407  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@$$CBEE@std@@YAPAEPBE0PAEAAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<unsigned char const ,unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAU01@@Z PROC ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void>,void>, COMDAT
; _this$ = ecx

; 157  : 		{	// construct from moved compatible pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$unique_ptr@XUThreadCloser@@@std@@@std@@YA$$QAV?$unique_ptr@XUThreadCloser@@@0@AAV10@@Z ; std::forward<std::unique_ptr<void,ThreadCloser> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$unique_ptr@XUThreadCloser@@@std@@QAE@$$QAV01@@Z ; std::unique_ptr<void,ThreadCloser>::unique_ptr<void,ThreadCloser>
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@V?$shared_ptr@X@std@@@std@@YA$$QAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$shared_ptr@X@std@@QAE@$$QAV01@@Z	; std::shared_ptr<void>::shared_ptr<void>

; 158  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@1@X@?$pair@V?$unique_ptr@XUThreadCloser@@@std@@V?$shared_ptr@X@2@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> >::pair<std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void> ><std::unique_ptr<void,ThreadCloser>,std::shared_ptr<void>,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$shared_ptr@X@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$shared_ptr@X@std@@QAE@$$QAV01@@Z PROC		; std::shared_ptr<void>::shared_ptr<void>, COMDAT
; _this$ = ecx

; 569  : 		{	// construct shared_ptr object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$shared_ptr@X@std@@@std@@YA$$QAV?$shared_ptr@X@0@AAV10@@Z ; std::forward<std::shared_ptr<void> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@X@std@@QAE@$$QAV01@@Z	; std::_Ptr_base<void>::_Ptr_base<void>

; 570  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$shared_ptr@X@std@@QAE@$$QAV01@@Z ENDP		; std::shared_ptr<void>::shared_ptr<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Ptr_base@X@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Ptr_base@X@std@@QAE@$$QAV01@@Z PROC		; std::_Ptr_base<void>::_Ptr_base<void>, COMDAT
; _this$ = ecx

; 284  : 		{	// construct _Ptr_base object that takes resource from _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 285  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$forward@V?$_Ptr_base@X@std@@@std@@YA$$QAV?$_Ptr_base@X@0@AAV10@@Z ; std::forward<std::_Ptr_base<void> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$_Ptr_base@X@std@@QAEX$$QAV12@@Z ; std::_Ptr_base<void>::_Assign_rv

; 286  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Ptr_base@X@std@@QAE@$$QAV01@@Z ENDP		; std::_Ptr_base<void>::_Ptr_base<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?_Assign_rv@?$_Ptr_base@X@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$_Ptr_base@X@std@@QAEX$$QAV12@@Z PROC	; std::_Ptr_base<void>::_Assign_rv, COMDAT
; _this$ = ecx

; 303  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@Assign_rv

; 305  : 			_Swap(_Right);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@X@std@@QAEXAAV12@@Z	; std::_Ptr_base<void>::_Swap
$LN2@Assign_rv:

; 306  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$_Ptr_base@X@std@@QAEX$$QAV12@@Z ENDP	; std::_Ptr_base<void>::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$shared_ptr@X@std@@@std@@YA$$QAV?$shared_ptr@X@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$shared_ptr@X@std@@@std@@YA$$QAV?$shared_ptr@X@0@AAV10@@Z PROC ; std::forward<std::shared_ptr<void> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$shared_ptr@X@std@@@std@@YA$$QAV?$shared_ptr@X@0@AAV10@@Z ENDP ; std::forward<std::shared_ptr<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_Ptr_base@X@std@@@std@@YA$$QAV?$_Ptr_base@X@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Ptr_base@X@std@@@std@@YA$$QAV?$_Ptr_base@X@0@AAV10@@Z PROC ; std::forward<std::_Ptr_base<void> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_Ptr_base@X@std@@@std@@YA$$QAV?$_Ptr_base@X@0@AAV10@@Z ENDP ; std::forward<std::_Ptr_base<void> >
_TEXT	ENDS
END

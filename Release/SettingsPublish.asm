; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\SettingsPublish.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BB@DIADEFJJ@GetSaveFileNameW?$AA@	; `string'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@8 ; <lambda_da5f0f708578e290fee5fc13ec57d23a> `RTTI Type Descriptor'
PUBLIC	??_R0?AV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@8 ; <lambda_8499d2186312c49ebbd56f30c74af45d> `RTTI Type Descriptor'
PUBLIC	??_R0?AVSettingsPublish@@@8			; SettingsPublish `RTTI Type Descriptor'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
PUBLIC	??_7SettingsPublish@@6B@			; SettingsPublish::`vftable'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
PUBLIC	?s_pfn@?1??IsolationAwareGetSaveFileNameW@@9@4@4P6GHPAUtagOFNW@@@ZA ; `IsolationAwareGetSaveFileNameW'::`2'::s_pfn
PUBLIC	??_R3SettingsPublish@@8				; SettingsPublish::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@8 ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> `RTTI Type Descriptor'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
PUBLIC	??_R2?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SettingsPublish@@6B@			; SettingsPublish::`RTTI Complete Object Locator'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
PUBLIC	??_R4?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV<lambda_07b41efe5098b34c18964d3f394ff711>@@@8 ; <lambda_07b41efe5098b34c18964d3f394ff711> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SettingsPublish@@8				; SettingsPublish::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> `RTTI Type Descriptor'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV<lambda_5b58d388793fe563bc112a2536ab3933>@@@8 ; <lambda_5b58d388793fe563bc112a2536ab3933> `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
PUBLIC	??_R0?AV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@@8 ; std::_Func_base<bool,ServiceIdentifier,XElement *> `RTTI Type Descriptor'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`vftable'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
PUBLIC	??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@8 ; <lambda_c4599be8aa20546a4c0f056de45f81e0> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV<lambda_424e07199e07f172c211b579b41a0f6b>@@@8 ; <lambda_424e07199e07f172c211b579b41a0f6b> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@8 ; <lambda_624bb9d9f3cde644ba29e7729588d586> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
PUBLIC	??_R1A@?0A@EA@SettingsPublish@@8		; SettingsPublish::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`vftable'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Base Class Array'
PUBLIC	??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
PUBLIC	??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
EXTRN	__imp_?ToFloat@String@@QBEMXZ:PROC
EXTRN	__imp_?HasItem@XElement@@QBE_NPB_W@Z:PROC
EXTRN	__imp_?FindValueIndex@?$List@VString@@@@QBEIABVString@@@Z:PROC
EXTRN	__imp__ScreenToClient@8:PROC
EXTRN	__imp__SetBkColor@8:PROC
EXTRN	__imp_?SetCanOptimizeSettings@SettingsPane@@IAEX_N@Z:PROC
EXTRN	__imp__SetDlgItemTextW@12:PROC
;	COMDAT ?s_pfn@?1??IsolationAwareGetSaveFileNameW@@9@4@4P6GHPAUtagOFNW@@@ZA
_BSS	SEGMENT
?s_pfn@?1??IsolationAwareGetSaveFileNameW@@9@4@4P6GHPAUtagOFNW@@@ZA DD 01H DUP (?) ; `IsolationAwareGetSaveFileNameW'::`2'::s_pfn
_BSS	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa205'
	DB	'46a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'$$$V@std@@@2@X$$$V@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ DD FLAT:??_R4?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_E?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SettingsPublish@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SettingsPublish@@8 DD FLAT:??_R0?AVSettingsPublish@@@8 ; SettingsPublish::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SettingsPublish@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@8
data$r	SEGMENT
??_R0?AV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_624bb9d9f3cde644ba29e7729588d586> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_624bb9d9f3cde644ba29e7729588d586>@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_424e07199e07f172c211b579b41a0f6b>@@@8
data$r	SEGMENT
??_R0?AV<lambda_424e07199e07f172c211b579b41a0f6b>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_424e07199e07f172c211b579b41a0f6b> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_424e07199e07f172c211b579b41a0f6b>@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@8
data$r	SEGMENT
??_R0?AV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_c4599be8aa20546a4c0f056de45f81e0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_base<bool,ServiceIdentifier,XElement *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std'
	DB	'@@', 00H
data$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b'
	DB	'34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'$$$V@std@@@2@X$$$V@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV<lambda_5b58d388793fe563bc112a2536ab3933>@@@8
data$r	SEGMENT
??_R0?AV<lambda_5b58d388793fe563bc112a2536ab3933>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_5b58d388793fe563bc112a2536ab3933> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_5b58d388793fe563bc112a2536ab3933>@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e'
	DB	'290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_'
	DB	'NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifi'
	DB	'er@@PAVXElement@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8 DD 00H ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42'
	DB	'e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'$$$V@std@@@2@X$$$V@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8 DD FLAT:??_R0?AV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@@8 ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2SettingsPublish@@8
rdata$r	SEGMENT
??_R2SettingsPublish@@8 DD FLAT:??_R1A@?0A@EA@SettingsPublish@@8 ; SettingsPublish::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SettingsPane@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_07b41efe5098b34c18964d3f394ff711>@@@8
data$r	SEGMENT
??_R0?AV<lambda_07b41efe5098b34c18964d3f394ff711>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_07b41efe5098b34c18964d3f394ff711> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_07b41efe5098b34c18964d3f394ff711>@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ DD 00H ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@@8
	DD	FLAT:??_R3?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f'
	DB	'172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'$$$V@std@@@2@X$$$V@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R4SettingsPublish@@6B@
rdata$r	SEGMENT
??_R4SettingsPublish@@6B@ DD 00H			; SettingsPublish::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSettingsPublish@@@8
	DD	FLAT:??_R3SettingsPublish@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@8 ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@8
data$r	SEGMENT
??_R0?AV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe'
	DB	'563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'$$$V@std@@@2@X$$$V@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3SettingsPublish@@8
rdata$r	SEGMENT
??_R3SettingsPublish@@8 DD 00H				; SettingsPublish::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SettingsPublish@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde'
	DB	'644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'$$$V@std@@@2@X$$$V@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_7SettingsPublish@@6B@
CONST	SEGMENT
??_7SettingsPublish@@6B@ DD FLAT:??_R4SettingsPublish@@6B@ ; SettingsPublish::`vftable'
	DD	FLAT:??_ESettingsPublish@@UAEPAXI@Z
	DD	FLAT:?GetCategory@SettingsPublish@@UBEPB_WXZ
	DD	FLAT:?CreatePane@SettingsPublish@@UAEPAUHWND__@@PAU2@@Z
	DD	FLAT:?DestroyPane@SettingsPublish@@UAEXXZ
	DD	FLAT:?ProcMessage@SettingsPublish@@UAEHIIJ@Z
	DD	FLAT:?ApplySettings@SettingsPublish@@UAEXXZ
	DD	FLAT:?CancelSettings@SettingsPublish@@UAEXXZ
	DD	FLAT:?HasDefaults@SettingsPublish@@UBE_NXZ
	DD	FLAT:?SetDefaults@SettingsPane@@UAEXXZ
	DD	FLAT:?OptimizeSettings@SettingsPublish@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c'
	DB	'49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X'
	DB	'$$$V@std@@@2@X$$$V@std@@', 00H
data$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8 ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD FLAT:??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
	DD	FLAT:?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
	DD	FLAT:??_E?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
	DD	FLAT:?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSettingsPublish@@@8
data$r	SEGMENT
??_R0?AVSettingsPublish@@@8 DD FLAT:??_7type_info@@6B@	; SettingsPublish `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSettingsPublish@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@8
data$r	SEGMENT
??_R0?AV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_8499d2186312c49ebbd56f30c74af45d> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_8499d2186312c49ebbd56f30c74af45d>@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@8
data$r	SEGMENT
??_R0?AV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_da5f0f708578e290fee5fc13ec57d23a> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@ DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@8
	DD	FLAT:??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8 DD 00H ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@DIADEFJJ@GetSaveFileNameW?$AA@
CONST	SEGMENT
??_C@_0BB@DIADEFJJ@GetSaveFileNameW?$AA@ DB 'GetSaveFileNameW', 00H ; `string'
	ORG $+2
$SG4294737556 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737555 DB '\', 00H, '.', 00H, 'f', 00H, 'l', 00H, 'v', 00H, 00H, 00H
$SG4294737552 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, 'S', 00H, 'a'
	DB	00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H
	DB	'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 00H, 00H
$SG4294737553 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294737554 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, 'S', 00H, 'a'
	DB	00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737540 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737543 DB 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737548 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, 'R', 00H, 'e'
	DB	00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'a', 00H, 'v'
	DB	00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737549 DB '\', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H
	DB	'y', 00H, '-', 00H, '$', 00H, 'T', 00H, '.', 00H, 'f', 00H, 'l'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG4294737541 DB 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737537 DB 'P', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737550 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'S', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'D'
	DB	00H, 'o', 00H, 'e', 00H, 's', 00H, 'N', 00H, 'o', 00H, 't', 00H
	DB	'E', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG4294737529 DB 'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 00H, 00H
$SG4294737551 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'S', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'D'
	DB	00H, 'o', 00H, 'e', 00H, 's', 00H, 'N', 00H, 'o', 00H, 't', 00H
	DB	'E', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 'C', 00H, 'a'
	DB	00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294737542 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737525 DB 'K', 00H, 'e', 00H, 'e', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H
$SG4294737544 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'D', 00H, 'o'
	DB	00H, 'e', 00H, 's', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG4294737527 DB 'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG4294737545 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'D', 00H, 'o'
	DB	00H, 'e', 00H, 's', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'E', 00H
	DB	'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 'C', 00H, 'a', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294737536 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737523 DB 'D', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 00H, 00H
$SG4294737546 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, 'R', 00H, 'e'
	DB	00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'a', 00H, 'v'
	DB	00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'C', 00H
	DB	'a', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H
	DB	00H
$SG4294737547 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294737538 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737539 DB 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294737532 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737533 DB 'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG4294737534 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737535 DB 'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG4294737528 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737530 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737531 DB 'L', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H, 'M', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737524 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737526 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737520 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737521 DB 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'T', 00H, 'o', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737522 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737516 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737517 DB 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'L'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737518 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737519 DB 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737512 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737513 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294737514 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737515 DB 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S'
	DB	00H, 'a', 00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294737508 DB 'K', 00H, 'e', 00H, 'y', 00H, 'f', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294737509 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737510 DB 'M', 00H, 'a', 00H, 'x', 00H, 'B', 00H, 'i', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737511 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737504 DB 'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737505 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737506 DB 'B', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737507 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737500 DB 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 00H, 00H
$SG4294737501 DB 'A', 00H, 'A', 00H, 'C', 00H, 00H, 00H
$SG4294737502 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737503 DB 'X', 00H, '2', 00H, '6', 00H, '4', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294737496 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294737497 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294737498 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG4294737499 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737492 DB 00H, 00H
	ORG $+2
$SG4294737493 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294737494 DB 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294737495 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 00H, 00H
$SG4294737488 DB 'r', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294737489 DB 00H, 00H
	ORG $+2
$SG4294737490 DB 'r', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294737480 DB 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'u', 00H, 'd'
	DB	00H, 'i', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'c', 00H, 00H, 00H
$SG4294737491 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'B'
	DB	00H, 'a', 00H, 'd', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294737485 DB 'c', 00H, 'b', 00H, 'r', 00H, 00H, 00H
$SG4294737479 DB 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'u', 00H, 'd'
	DB	00H, 'i', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'c', 00H, 00H, 00H
$SG4294737484 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'U'
	DB	00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H, 00H, 00H
$SG4294737486 DB 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H, 00H
$SG4294737487 DB 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H, 00H
$SG4294737481 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'M'
	DB	00H, 'a', 00H, 'x', 00H, 'b', 00H, 'i', 00H, 't', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
$SG4294737482 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'b', 00H, 'i', 00H
	DB	't', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
$SG4294737483 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'b', 00H, 'i', 00H
	DB	't', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
$SG4294737476 DB '$', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG4294737477 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294737478 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'U'
	DB	00H, 'n', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H
	DB	'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'A', 00H, 'u', 00H, 'd'
	DB	00H, 'i', 00H, 'o', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'c', 00H, 00H, 00H
	ORG $+2
$SG4294737472 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'M'
	DB	00H, 'a', 00H, 'x', 00H, 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, 'b', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737473 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'a', 00H
	DB	'a', 00H, 'c', 00H, 00H, 00H
$SG4294737474 DB 'A', 00H, 'A', 00H, 'C', 00H, 00H, 00H
$SG4294737475 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'a', 00H
	DB	'a', 00H, 'c', 00H, 00H, 00H
$SG4294737469 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'm', 00H
	DB	'p', 00H, '3', 00H, 00H, 00H
$SG4294737468 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'M'
	DB	00H, 'a', 00H, 'x', 00H, 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, 'b', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737470 DB 'M', 00H, 'P', 00H, '3', 00H, 00H, 00H
$SG4294737471 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'm', 00H
	DB	'p', 00H, '3', 00H, 00H, 00H
$SG4294737464 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294737465 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'V', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, 'o', 00H, '.', 00H, 'A', 00H, 's', 00H, 'p', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'R', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737466 DB 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'a', 00H, 's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG4294737467 DB 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'a', 00H, 's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG4294737460 DB 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737461 DB '$', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG4294737459 DB 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737453 DB 00H, 00H
	ORG $+2
$SG4294737462 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'V'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, 'A', 00H, 's', 00H
	DB	'p', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'R', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 00H, 00H
$SG4294737463 DB '$', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG4294737456 DB 'k', 00H, 'e', 00H, 'y', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737457 DB 'k', 00H, 'e', 00H, 'y', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737448 DB 'B', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737450 DB 'K', 00H, 'e', 00H, 'y', 00H, 'f', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294737458 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
$SG4294737452 DB 'M', 00H, 'a', 00H, 'x', 00H, 'B', 00H, 'i', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737444 DB 'r', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294737441 DB 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 00H, 00H
$SG4294737454 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'C'
	DB	00H, 'a', 00H, 'n', 00H, 'O', 00H, 'p', 00H, 't', 00H, 'i', 00H
	DB	'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737445 DB 'r', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG4294737425 DB 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'u', 00H, 'd'
	DB	00H, 'i', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'c', 00H, 00H, 00H
$SG4294737455 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'W', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'K'
	DB	00H, 'e', 00H, 'y', 00H, 'i', 00H, 'n', 00H, 't', 00H, 00H, 00H
$SG4294737449 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737451 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737446 DB '%', 00H, 'd', 00H, ' ', 00H, '/', 00H, ' ', 00H, '%', 00H
	DB	'd', 00H, 00H, 00H
$SG4294737447 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737440 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737442 DB 'A', 00H, 'A', 00H, 'C', 00H, 00H, 00H
$SG4294737443 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'O', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	'z', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's'
	DB	00H, 00H, 00H
$SG4294737436 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737437 DB 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H, 00H
$SG4294737438 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737439 DB 'B', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737432 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737433 DB 'c', 00H, 'b', 00H, 'r', 00H, 00H, 00H
$SG4294737434 DB 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H, 00H
$SG4294737435 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737428 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'b', 00H, 'i', 00H
	DB	't', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
$SG4294737429 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737430 DB 'M', 00H, 'a', 00H, 'x', 00H, 'B', 00H, 'i', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737431 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'b', 00H, 'i', 00H
	DB	't', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
$SG4294737426 DB 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'u', 00H, 'd'
	DB	00H, 'i', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'c', 00H, 00H, 00H
$SG4294737424 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'U', 00H, 'n', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'A', 00H, 'u'
	DB	00H, 'd', 00H, 'i', 00H, 'o', 00H, 'C', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'c', 00H, 00H, 00H
$SG4294737427 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'M', 00H, 'a', 00H, 'x', 00H, 'b', 00H, 'i', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737421 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'a', 00H
	DB	'a', 00H, 'c', 00H, 00H, 00H
$SG4294737420 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'M', 00H, 'a', 00H, 'x', 00H, 'A', 00H, 'u', 00H, 'd', 00H
	DB	'i', 00H, 'o', 00H, 'b', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H
$SG4294737422 DB 'A', 00H, 'A', 00H, 'C', 00H, 00H, 00H
$SG4294737423 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'a', 00H
	DB	'a', 00H, 'c', 00H, 00H, 00H
$SG4294737416 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'M', 00H, 'a', 00H, 'x', 00H, 'A', 00H, 'u', 00H, 'd', 00H
	DB	'i', 00H, 'o', 00H, 'b', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H
$SG4294737417 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'm', 00H
	DB	'p', 00H, '3', 00H, 00H, 00H
$SG4294737418 DB 'M', 00H, 'P', 00H, '3', 00H, 00H, 00H
$SG4294737419 DB 'm', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'a', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'm', 00H
	DB	'p', 00H, '3', 00H, 00H, 00H
$SG4294737412 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737413 DB 'X', 00H, '2', 00H, '6', 00H, '4', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294737414 DB 'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737415 DB 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737408 DB 'K', 00H, 'e', 00H, 'y', 00H, 'f', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294737409 DB 'k', 00H, 'e', 00H, 'y', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737411 DB 'p', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737404 DB 'O', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737410 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'M', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+2
$SG4294737405 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'O', 00H, 'p', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '.'
	DB	00H, 'K', 00H, 'e', 00H, 'y', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737406 DB 'k', 00H, 'e', 00H, 'y', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737407 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737400 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737401 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737402 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737403 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737396 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737397 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737398 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737399 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737392 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737393 DB 'M', 00H, 'a', 00H, 'x', 00H, 'B', 00H, 'i', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737394 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737395 DB 'U', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'B', 00H, 'R', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737388 DB 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737389 DB 'A', 00H, 'A', 00H, 'C', 00H, 00H, 00H
$SG4294737390 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737391 DB 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 00H, 00H
$SG4294737384 DB 'B', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737385 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737386 DB 'B', 00H, 'i', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
$SG4294737387 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737380 DB 'K', 00H, 'e', 00H, 'y', 00H, 'f', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294737381 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737382 DB 'X', 00H, '2', 00H, '6', 00H, '4', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG4294737383 DB 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737376 DB 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737377 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 'O', 00H, 'n', 00H, 'l', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG4294737378 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '.', 00H, 'L', 00H, 'i', 00H, 'v', 00H, 'e'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737379 DB 'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294737372 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737373 DB 'P', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737374 DB 'C', 00H, 'u', 00H, 's', 00H, 't', 00H, 'o', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737375 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737368 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737369 DB 'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG4294737370 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737371 DB 'U', 00H, 'R', 00H, 'L', 00H, 00H, 00H
$SG4294737364 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737365 DB 'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 00H, 00H
$SG4294737366 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737367 DB 'L', 00H, 'o', 00H, 'w', 00H, 'L', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H, 'M', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737360 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737361 DB 'D', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 00H, 00H
$SG4294737362 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737363 DB 'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, 00H, 00H
	ORG $+2
$SG4294737356 DB 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'T', 00H, 'o', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294737357 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737358 DB 'K', 00H, 'e', 00H, 'e', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H
$SG4294737359 DB 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H
	DB	'p', 00H, 's', 00H, '_', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG4294737352 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737353 DB 'S', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737354 DB '\', 00H, '.', 00H, 'f', 00H, 'l', 00H, 'v', 00H, 00H, 00H
$SG4294737355 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737346 DB 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S'
	DB	00H, 'a', 00H, 'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H
	ORG $+2
$SG4294737348 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'T', 00H, 'o', 00H, 'o', 00H
	DB	'l', 00H, 't', 00H, 'i', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294737349 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737350 DB 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'L'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG4294737345 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737337 DB '\', 00H, 00H, 00H
$SG4294737351 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'S', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737340 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'S', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 00H, 00H
$SG4294737338 DB '/', 00H, 00H, 00H
$SG4294737344 DB 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 's', 00H, '.', 00H, 'P', 00H, 'u', 00H, 'b', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 'h', 00H, '.', 00H, 'S', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG4294737347 DB '\', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H
	DB	'y', 00H, '-', 00H, '$', 00H, 'T', 00H, '.', 00H, 'f', 00H, 'l'
	DB	00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG4294737341 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 00H, 00H
$SG4294737332 DB '\', 00H, 00H, 00H
$SG4294737342 DB 'M', 00H, 'P', 00H, '4', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, '(', 00H, '*', 00H, '.', 00H, 'm'
	DB	00H, 'p', 00H, '4', 00H, ')', 00H, 00H, 00H, '*', 00H, '.', 00H
	DB	'm', 00H, 'p', 00H, '4', 00H, 00H, 00H, 'F', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, ' ', 00H, 'V', 00H, 'i', 00H, 'd', 00H
	DB	'e', 00H, 'o', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, '(', 00H, '*', 00H, '.', 00H, 'f', 00H, 'l', 00H
	DB	'v', 00H, ')', 00H, 00H, 00H, '*', 00H, '.', 00H, 'f', 00H, 'l'
	DB	00H, 'v', 00H, 00H, 00H, 00H, 00H
	ORG $+2
$SG4294737343 DB 's', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 00H, 00H
$SG4294737336 DB 'f', 00H, 'l', 00H, 'v', 00H, 00H, 00H
$SG4294737339 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737333 DB '.', 00H, 'f', 00H, 'l', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG4294737334 DB '.', 00H, 'm', 00H, 'p', 00H, '4', 00H, 00H, 00H
	ORG $+2
$SG4294737335 DB 'm', 00H, 'p', 00H, '4', 00H, 00H, 00H
$SG4294737328 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'S', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 00H, 00H
$SG4294737329 DB 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'B', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 00H, 00H
$SG4294737330 DB '\', 00H, 00H, 00H
$SG4294737331 DB '/', 00H, 00H, 00H
$SG4294737324 DB '%', 00H, 's', 00H, '/', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG4294737325 DB '/', 00H, 00H, 00H
$SG4294737326 DB '\', 00H, 00H, 00H
$SG4294737327 DB 'P', 00H, 'u', 00H, 'b', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG4294737320 DB 's', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 00H, 00H
$SG4294737321 DB '%', 00H, 's', 00H, ' ', 00H, '[', 00H, '%', 00H, 's', 00H
	DB	']', 00H, 00H, 00H
$SG4294737322 DB '%', 00H, 's', 00H, ' ', 00H, '[', 00H, '%', 00H, 's', 00H
	DB	']', 00H, 00H, 00H
$SG4294737323 DB 'o', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 00H, 00H
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$get@$0A@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
PUBLIC	??$move@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> &>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$?0V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<>,0>
PUBLIC	??$forward@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
PUBLIC	?_Get_rest@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Get_rest
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
PUBLIC	??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&,void * *>
PUBLIC	?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>
PUBLIC	??$forward@AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
PUBLIC	??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
PUBLIC	??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >
PUBLIC	??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >
PUBLIC	??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >
PUBLIC	??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
PUBLIC	??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >
PUBLIC	??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
PUBLIC	??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAEAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@ABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@ABV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@ABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@ABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@ABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>
PUBLIC	?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get
PUBLIC	??0?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@ABV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>
PUBLIC	??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABU01@@Z ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
PUBLIC	??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABU01@@Z ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
PUBLIC	??_G?$function@$$A6AXXZ@std@@QAEPAXI@Z		; std::function<void __cdecl(void)>::`scalar deleting destructor'
PUBLIC	??$?0U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>
PUBLIC	??$?0U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >
PUBLIC	??$forward@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >
PUBLIC	??$?0AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
PUBLIC	??$_ApplyX@_NUServiceIdentifier@@PAVXElement@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_ApplyX<bool,ServiceIdentifier,XElement *>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> &>
PUBLIC	??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><<lambda_da5f0f708578e290fee5fc13ec57d23a> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_ApplyX<void>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> &>
PUBLIC	??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><<lambda_424e07199e07f172c211b579b41a0f6b> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_ApplyX<void>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> &>
PUBLIC	??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><<lambda_8499d2186312c49ebbd56f30c74af45d> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_ApplyX<void>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> &>
PUBLIC	??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><<lambda_624bb9d9f3cde644ba29e7729588d586> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_ApplyX<void>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> &>
PUBLIC	??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_ApplyX<void>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> &>
PUBLIC	??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><<lambda_07b41efe5098b34c18964d3f394ff711> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_ApplyX<void>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> &>
PUBLIC	??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><<lambda_c4599be8aa20546a4c0f056de45f81e0> >
PUBLIC	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_ApplyX<void>
PUBLIC	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> &>
PUBLIC	??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><<lambda_5b58d388793fe563bc112a2536ab3933> >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z ; std::allocator<std::function<void __cdecl(void)> >::destroy<std::function<void __cdecl(void)> >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
PUBLIC	??$?0V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> ><std::_Func_class<bool,ServiceIdentifier,XElement *> >
PUBLIC	??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
PUBLIC	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
PUBLIC	??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >
PUBLIC	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
PUBLIC	??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >
PUBLIC	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
PUBLIC	??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >
PUBLIC	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
PUBLIC	??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
PUBLIC	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
PUBLIC	??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >
PUBLIC	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
PUBLIC	??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
PUBLIC	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
PUBLIC	??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QBEABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QBEABV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QBEABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QBEABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QBEABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QBEABV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QBEABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QBEABV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	??1?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::~_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
PUBLIC	??1?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::~_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
PUBLIC	??0?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ ; std::_Func_base<bool,ServiceIdentifier,XElement *>::_Func_base<bool,ServiceIdentifier,XElement *>
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
PUBLIC	??1?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::~_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
PUBLIC	??1?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::~_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
PUBLIC	??_G?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::~_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
PUBLIC	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
PUBLIC	?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
PUBLIC	?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
PUBLIC	?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
PUBLIC	?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
PUBLIC	??1?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
PUBLIC	?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
PUBLIC	??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
PUBLIC	?_Set@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEXPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Set
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
PUBLIC	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
PUBLIC	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::allocator<std::function<void __cdecl(void)> >,std::function<void __cdecl(void)> >
PUBLIC	??$_Val_type@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ; std::_Val_type<std::function<void __cdecl(void)> *>
PUBLIC	??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@@Z ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>,<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >
PUBLIC	??$construct@UServiceIdentifier@@AAU1@@?$allocator@UServiceIdentifier@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z ; std::allocator<ServiceIdentifier>::construct<ServiceIdentifier,ServiceIdentifier &>
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >
PUBLIC	?max_size@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size
PUBLIC	?max_size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::max_size
PUBLIC	??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >
PUBLIC	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXI@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Incsize
PUBLIC	??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@XZ ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
PUBLIC	??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAEPAXI@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::`scalar deleting destructor'
PUBLIC	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
PUBLIC	??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
PUBLIC	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
PUBLIC	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
PUBLIC	??$_Rechecked@PAV?$function@$$A6AXXZ@std@@PAV12@@std@@YAAAPAV?$function@$$A6AXXZ@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *>
PUBLIC	??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
PUBLIC	??$_Unchecked@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ; std::_Unchecked<std::function<void __cdecl(void)> *>
PUBLIC	??$destroy@V?$function@$$A6AXXZ@std@@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >
PUBLIC	??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V21@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>
PUBLIC	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>
PUBLIC	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool,void>
PUBLIC	??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Insert<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
PUBLIC	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ; std::allocator<std::function<void __cdecl(void)> >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
PUBLIC	??$_Find@PA_WD@std@@YAPA_WPA_W0ABDU?$integral_constant@_N$0A@@0@@Z ; std::_Find<wchar_t *,char>
PUBLIC	??$_Reset_alloc@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset_alloc<<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >
PUBLIC	??$construct@UServiceIdentifier@@AAU1@@?$allocator_traits@V?$allocator@UServiceIdentifier@@@std@@@std@@SAXAAV?$allocator@UServiceIdentifier@@@1@PAUServiceIdentifier@@AAU3@@Z ; std::allocator_traits<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>
PUBLIC	??$_Reset_alloc@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Reset_alloc@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Reset_alloc@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Reset_alloc@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Reset_alloc@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Reset_alloc@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >
PUBLIC	??$_Reset_alloc@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
PUBLIC	?size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::size
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
PUBLIC	?_Unlinknode@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unlinknode
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter
PUBLIC	?size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::size
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
PUBLIC	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator--
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::erase
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Reinsert
PUBLIC	?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::max_load_factor
PUBLIC	?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::load_factor
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::bucket_count
PUBLIC	??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >
PUBLIC	??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator--
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
PUBLIC	?_Unchecked_splice@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_splice
PUBLIC	?_Check_size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Check_size
PUBLIC	?_Insert_bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert_bucket
PUBLIC	?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Destroy_if_not_nil
PUBLIC	??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
PUBLIC	??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
PUBLIC	??$forward@AAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
PUBLIC	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
PUBLIC	??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
PUBLIC	??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
PUBLIC	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
PUBLIC	??$_Uninitialized_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
PUBLIC	??$_Ptr_cat@V?$function@$$A6AXXZ@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$function@$$A6AXXZ@0@0@Z ; std::_Ptr_cat<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > ><std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
PUBLIC	??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::emplace_front<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
PUBLIC	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
PUBLIC	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
PUBLIC	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$VPAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,void * *>
PUBLIC	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
PUBLIC	??$_Rechecked@PA_WPA_W@std@@YAAAPA_WAAPA_WPA_W@Z ; std::_Rechecked<wchar_t *,wchar_t *>
PUBLIC	??$_Find@PA_WD@std@@YAPA_WPA_W0ABD@Z		; std::_Find<wchar_t *,char>
PUBLIC	??$_Unchecked@PA_W@std@@YAPA_WPA_W@Z		; std::_Unchecked<wchar_t *>
PUBLIC	??$_Reset@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
PUBLIC	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
PUBLIC	??$construct@UServiceIdentifier@@AAU1@@?$_Wrap_alloc@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>
PUBLIC	??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z ; std::forward<ServiceIdentifier &>
PUBLIC	??$_Reset@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Func_class<void>::_Reset<<lambda_424e07199e07f172c211b579b41a0f6b> >
PUBLIC	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
PUBLIC	??$_Reset@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Func_class<void>::_Reset<<lambda_8499d2186312c49ebbd56f30c74af45d> >
PUBLIC	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
PUBLIC	??$_Reset@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Func_class<void>::_Reset<<lambda_624bb9d9f3cde644ba29e7729588d586> >
PUBLIC	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
PUBLIC	??$_Reset@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Func_class<void>::_Reset<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
PUBLIC	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
PUBLIC	??$_Reset@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Func_class<void>::_Reset<<lambda_07b41efe5098b34c18964d3f394ff711> >
PUBLIC	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
PUBLIC	??$_Reset@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Func_class<void>::_Reset<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
PUBLIC	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
PUBLIC	??$_Reset@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Func_class<void>::_Reset<<lambda_5b58d388793fe563bc112a2536ab3933> >
PUBLIC	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
PUBLIC	??$move@AAV<lambda_fb5381c6e5f844a400209822574a410a>@@@std@@YA$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@AAV1@@Z ; std::move<<lambda_fb5381c6e5f844a400209822574a410a> &>
PUBLIC	?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size
PUBLIC	?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_begin
PUBLIC	?begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::begin
PUBLIC	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
PUBLIC	??0?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Func_class<bool,ServiceIdentifier,XElement *>
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size
PUBLIC	?front@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::front
PUBLIC	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_begin
PUBLIC	??0?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@V<lambda_fb5381c6e5f844a400209822574a410a>@@@Z ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
PUBLIC	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
PUBLIC	??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$_Allocate@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >
PUBLIC	??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
PUBLIC	??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
PUBLIC	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
PUBLIC	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
PUBLIC	??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const >
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
PUBLIC	??$_Allocate@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@IPAV10@@Z ; std::_Allocate<std::function<void __cdecl(void)> >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
PUBLIC	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
PUBLIC	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$_Umove@PAV?$function@$$A6AXXZ@std@@@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEPAV?$function@$$A6AXXZ@1@PAV21@00@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Umove<std::function<void __cdecl(void)> *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
PUBLIC	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
PUBLIC	??$?0V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > ><std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
PUBLIC	??$forward_as_tuple@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
PUBLIC	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
PUBLIC	??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
PUBLIC	??$find@PA_WD@std@@YAPA_WPA_W0ABD@Z		; std::find<wchar_t *,char>
PUBLIC	??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$function@$$A6A_NUServiceIdentifier@@PAVXElement@@@Z@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::function<bool __cdecl(ServiceIdentifier,XElement *)>::function<bool __cdecl(ServiceIdentifier,XElement *)><<lambda_da5f0f708578e290fee5fc13ec57d23a> >
PUBLIC	??$end@V?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@0@@Z ; std::end<std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
PUBLIC	??$emplace_back@AAUServiceIdentifier@@@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXAAUServiceIdentifier@@@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::emplace_back<ServiceIdentifier &>
PUBLIC	??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_424e07199e07f172c211b579b41a0f6b> >
PUBLIC	??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_8499d2186312c49ebbd56f30c74af45d> >
PUBLIC	??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_624bb9d9f3cde644ba29e7729588d586> >
PUBLIC	??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
PUBLIC	??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_07b41efe5098b34c18964d3f394ff711> >
PUBLIC	??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_c4599be8aa20546a4c0f056de45f81e0> >
PUBLIC	??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_5b58d388793fe563bc112a2536ab3933> >
PUBLIC	??$GuardScope@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@YA?AU?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@@Z ; GuardScope<<lambda_fb5381c6e5f844a400209822574a410a> >
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=
PUBLIC	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocate
PUBLIC	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocate
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=
PUBLIC	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::allocate
PUBLIC	?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::capacity
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::allocate
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+
PUBLIC	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::allocate
PUBLIC	??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
PUBLIC	?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Orphan_range
PUBLIC	?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Xlen
PUBLIC	?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Ufill
PUBLIC	?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Grow_to
PUBLIC	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
PUBLIC	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::size
PUBLIC	?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Unused_capacity
PUBLIC	??0?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >
PUBLIC	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buynode0
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >
PUBLIC	?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Insert_n
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >
PUBLIC	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buyheadnode
PUBLIC	?max_size@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QBEIXZ ; std::allocator<std::function<void __cdecl(void)> >::max_size
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >
PUBLIC	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::deallocate
PUBLIC	?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::clear
PUBLIC	?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::insert
PUBLIC	??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@I@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator[]
PUBLIC	?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::begin
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::deallocate
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
PUBLIC	??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
PUBLIC	?_Freenode@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Freenode
PUBLIC	?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_end
PUBLIC	?_Gethash@?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QBE?AU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Gethash
PUBLIC	??R?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAIABV?$allocator@V?$function@$$A6AXXZ@std@@@2@@Z ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::max_size
PUBLIC	?allocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z ; std::allocator<std::function<void __cdecl(void)> >::allocate
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator++
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator*
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::deallocate
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
PUBLIC	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy
PUBLIC	?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::assign
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Myval
PUBLIC	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Freeheadnode
PUBLIC	??0?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	?clear@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::clear
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter
PUBLIC	??0?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE?AU?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getkeyeq
PUBLIC	??R?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
PUBLIC	??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
PUBLIC	?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_hi
PUBLIC	?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::allocate
PUBLIC	?deallocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ; std::allocator<std::function<void __cdecl(void)> >::deallocate
PUBLIC	?capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::capacity
PUBLIC	??_G?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`scalar deleting destructor'
PUBLIC	??1?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ ; std::_Func_base<bool,ServiceIdentifier,XElement *>::~_Func_base<bool,ServiceIdentifier,XElement *>
PUBLIC	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
PUBLIC	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
PUBLIC	?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Tidy
PUBLIC	??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
PUBLIC	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::~_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Tidy
PUBLIC	?end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::end
PUBLIC	??0?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	??0?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
PUBLIC	??0?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Init
PUBLIC	?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hashval
PUBLIC	?_End@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_End
PUBLIC	?_Begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Begin
PUBLIC	?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Make_iter
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Compat
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >
PUBLIC	?_Xlen@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Xlen
PUBLIC	?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reallocate
PUBLIC	?_Grow_to@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEII@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Grow_to
PUBLIC	?_Destroy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXPAV?$function@$$A6AXXZ@2@0@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Destroy
PUBLIC	?max_size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
PUBLIC	?size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
PUBLIC	?_Unused_capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unused_capacity
PUBLIC	??1?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@AAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> *>::pointer_to
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator==
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
PUBLIC	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	??0?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::lower_bound
PUBLIC	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::end
PUBLIC	??0?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator==
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEABV?$function@$$A6AXXZ@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$function@$$A6AXXZ@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >
PUBLIC	??0?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAE@XZ ; std::allocator<std::function<void __cdecl(void)> >::allocator<std::function<void __cdecl(void)> >
PUBLIC	?_Orphan_range@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXPAV?$function@$$A6AXXZ@2@0@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Orphan_range
PUBLIC	?_Tidy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy
PUBLIC	?_Reserve@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reserve
PUBLIC	?_Inside@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBE_NPBV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Inside
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator!=
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->
PUBLIC	?find@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::find
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >
PUBLIC	??A?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAH$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::operator[]
PUBLIC	??0?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator!=
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEAAV?$function@$$A6AXXZ@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*
PUBLIC	?end@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::end
PUBLIC	?begin@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::begin
PUBLIC	??1?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
PUBLIC	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
PUBLIC	??0?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
PUBLIC	??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
PUBLIC	?clear@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXXZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::clear
PUBLIC	??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
PUBLIC	??1?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
PUBLIC	?ProcMessage@SettingsPublish@@UAEHIIJ@Z		; SettingsPublish::ProcMessage
PUBLIC	?OptimizeSettings@SettingsPublish@@UAEXXZ	; SettingsPublish::OptimizeSettings
PUBLIC	?SetWarningInfo@SettingsPublish@@AAEXXZ		; SettingsPublish::SetWarningInfo
PUBLIC	?HasDefaults@SettingsPublish@@UBE_NXZ		; SettingsPublish::HasDefaults
PUBLIC	?CancelSettings@SettingsPublish@@UAEXXZ		; SettingsPublish::CancelSettings
PUBLIC	?ApplySettings@SettingsPublish@@UAEXXZ		; SettingsPublish::ApplySettings
PUBLIC	?DestroyPane@SettingsPublish@@UAEXXZ		; SettingsPublish::DestroyPane
PUBLIC	?CreatePane@SettingsPublish@@UAEPAUHWND__@@PAU2@@Z ; SettingsPublish::CreatePane
PUBLIC	?GetCategory@SettingsPublish@@UBEPB_WXZ		; SettingsPublish::GetCategory
PUBLIC	??1SettingsPublish@@UAE@XZ			; SettingsPublish::~SettingsPublish
PUBLIC	??_GSettingsPublish@@UAEPAXI@Z			; SettingsPublish::`scalar deleting destructor'
PUBLIC	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z		; AdjustWindowPos
PUBLIC	??9ServiceIdentifier@@QAE_NABU0@@Z		; ServiceIdentifier::operator!=
PUBLIC	??8ServiceIdentifier@@QAE_NABU0@@Z		; ServiceIdentifier::operator==
PUBLIC	??0?$tuple@$$$V@std@@QAE@ABV01@@Z		; std::tuple<>::tuple<>
PUBLIC	?compare@?$char_traits@_W@std@@SAHPB_W0I@Z	; std::char_traits<wchar_t>::compare
PUBLIC	_wmemcmp
PUBLIC	?_Hash_seq@std@@YAIPBEI@Z			; std::_Hash_seq
PUBLIC	_IsolationAwareGetSaveFileNameW@4
PUBLIC	??0SettingsPublish@@QAE@XZ			; SettingsPublish::SettingsPublish
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`vector deleting destructor'
EXTRN	??_E?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z:PROC ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`vector deleting destructor'
EXTRN	??_E?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z:PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`vector deleting destructor'
EXTRN	??_ESettingsPublish@@UAEPAXI@Z:PROC		; SettingsPublish::`vector deleting destructor'
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?name@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4PB_WB
_BSS	SEGMENT
?name@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4PB_WB DD 01H DUP (?) ; `SettingsPublish::GetCategory'::`2'::name
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?$S1@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4IA
_BSS	SEGMENT
?$S1@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4IA DD 01H DUP (?) ; S1<`template-parameter-2',SettingsPublish::tCategory,unsigned int, ?? &>
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$_IsolationAwareGetSaveFileNameW@4 DD 0fffffffeH
	DD	00H
	DD	0ffffffb4H
	DD	00H
	DD	0fffffffeH
	DD	00H
	DD	FLAT:$LN21@IsolationA
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$5
__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$0
__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z$2
__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z$2
__catchsym$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__catchsym$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$2
__catchsym$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__catchsym$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__catchsym$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0SettingsPublish@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SettingsPublish@@QAE@XZ PROC				; SettingsPublish::SettingsPublish, COMDAT
; _this$ = ecx

; 51   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SettingsPane@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsPublish@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAE@XZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >

; 52   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SettingsPublish@@QAE@XZ ENDP				; SettingsPublish::SettingsPublish
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\um\commdlg.inl
;	COMDAT _IsolationAwareGetSaveFileNameW@4
_TEXT	SEGMENT
_dwLastError$2 = -60					; size = 4
_fActivateActCtxSuccess$ = -56				; size = 4
_fPreserveLastError$3 = -52				; size = 4
_ulpCookie$ = -48					; size = 4
tv81 = -44						; size = 4
tv78 = -40						; size = 4
tv68 = -36						; size = 4
_fResult$ = -32						; size = 4
___IsolationAware_pfn$ = -28				; size = 4
__$SEHRec$ = -24					; size = 24
_unnamed1$ = 8						; size = 4
_IsolationAwareGetSaveFileNameW@4 PROC			; COMDAT

; 226  : {

	push	ebp
	mov	ebp, esp
	push	-2					; fffffffeH
	push	OFFSET __sehtable$_IsolationAwareGetSaveFileNameW@4
	push	OFFSET __except_handler4
	mov	eax, DWORD PTR fs:0
	push	eax
	add	esp, -44				; ffffffd4H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	DWORD PTR __$SEHRec$[ebp+16], eax
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, eax

; 227  :     BOOL fResult = FALSE;

	mov	DWORD PTR _fResult$[ebp], 0

; 228  :     typedef BOOL (WINAPI* PFN)(LPOPENFILENAMEW unnamed1);
; 229  :     static PFN s_pfn;
; 230  :     PFN __IsolationAware_pfn = s_pfn;

	mov	eax, DWORD PTR ?s_pfn@?1??IsolationAwareGetSaveFileNameW@@9@4@4P6GHPAUtagOFNW@@@ZA ; `IsolationAwareGetSaveFileNameW'::`2'::s_pfn
	mov	DWORD PTR ___IsolationAware_pfn$[ebp], eax

; 231  :     ULONG_PTR ulpCookie = 0;

	mov	DWORD PTR _ulpCookie$[ebp], 0

; 232  :     const BOOL fActivateActCtxSuccess =
; 233  : #ifdef _M_IX86
; 234  :         IsolationAwarePrivateT_SqbjaYRiRY ||
; 235  : #endif
; 236  :         IsolationAwarePrivatenPgViNgRzlnPgpgk(&ulpCookie);

	cmp	DWORD PTR _IsolationAwarePrivateT_SqbjaYRiRY, 0
	jne	SHORT $LN9@IsolationA
	lea	ecx, DWORD PTR _ulpCookie$[ebp]
	push	ecx
	call	_IsolationAwarePrivatenPgViNgRzlnPgpgk@4
	test	eax, eax
	jne	SHORT $LN9@IsolationA
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN10@IsolationA
$LN9@IsolationA:
	mov	DWORD PTR tv68[ebp], 1
$LN10@IsolationA:
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR _fActivateActCtxSuccess$[ebp], edx

; 237  :     if (!fActivateActCtxSuccess)

	cmp	DWORD PTR _fActivateActCtxSuccess$[ebp], 0
	jne	SHORT $LN6@IsolationA

; 238  :         return fResult;

	mov	eax, DWORD PTR _fResult$[ebp]
	jmp	$LN15@IsolationA
$LN6@IsolationA:

; 239  :     __try

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 240  :     {
; 241  :         if (__IsolationAware_pfn == NULL)

	cmp	DWORD PTR ___IsolationAware_pfn$[ebp], 0
	jne	SHORT $LN4@IsolationA

; 242  :         {
; 243  :             __IsolationAware_pfn = (PFN) CommdlgIsolationAwarePrivatetRgCebPnQQeRff_pbZQYTQP_QYY("GetSaveFileNameW");

	push	OFFSET ??_C@_0BB@DIADEFJJ@GetSaveFileNameW?$AA@
	call	_CommdlgIsolationAwarePrivatetRgCebPnQQeRff_pbZQYTQP_QYY@4
	mov	DWORD PTR ___IsolationAware_pfn$[ebp], eax

; 244  :             if (__IsolationAware_pfn == NULL)

	cmp	DWORD PTR ___IsolationAware_pfn$[ebp], 0
	jne	SHORT $LN3@IsolationA

; 245  :                 __leave;

	jmp	SHORT $LN5@IsolationA
$LN3@IsolationA:

; 246  :             s_pfn = __IsolationAware_pfn;

	mov	eax, DWORD PTR ___IsolationAware_pfn$[ebp]
	mov	DWORD PTR ?s_pfn@?1??IsolationAwareGetSaveFileNameW@@9@4@4P6GHPAUtagOFNW@@@ZA, eax ; `IsolationAwareGetSaveFileNameW'::`2'::s_pfn
$LN4@IsolationA:

; 247  :         }
; 248  :         fResult = __IsolationAware_pfn(unnamed1);

	mov	ecx, DWORD PTR _unnamed1$[ebp]
	push	ecx
	call	DWORD PTR ___IsolationAware_pfn$[ebp]
	mov	DWORD PTR _fResult$[ebp], eax
$LN5@IsolationA:

; 249  :     }
; 250  :     __finally

	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH
	call	$LN18@IsolationA
	jmp	SHORT $LN19@IsolationA
$LN16@IsolationA:
$LN21@IsolationA:
$LN18@IsolationA:

; 251  :     {
; 252  : #ifdef _M_IX86
; 253  :         if (!IsolationAwarePrivateT_SqbjaYRiRY)

	cmp	DWORD PTR _IsolationAwarePrivateT_SqbjaYRiRY, 0
	jne	SHORT $LN17@IsolationA

; 254  : #endif
; 255  :         {
; 256  :             const BOOL fPreserveLastError = (fResult == FALSE);

	cmp	DWORD PTR _fResult$[ebp], 0
	jne	SHORT $LN11@IsolationA
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN12@IsolationA
$LN11@IsolationA:
	mov	DWORD PTR tv78[ebp], 0
$LN12@IsolationA:
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _fPreserveLastError$3[ebp], edx

; 257  :             const DWORD dwLastError = fPreserveLastError ? GetLastError() : NO_ERROR;

	cmp	DWORD PTR _fPreserveLastError$3[ebp], 0
	je	SHORT $LN13@IsolationA
	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN14@IsolationA
$LN13@IsolationA:
	mov	DWORD PTR tv81[ebp], 0
$LN14@IsolationA:
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR _dwLastError$2[ebp], eax

; 258  :             (void)IsolationAwareDeactivateActCtx(0, ulpCookie);

	mov	ecx, DWORD PTR _ulpCookie$[ebp]
	push	ecx
	push	0
	call	_IsolationAwareDeactivateActCtx@8

; 259  :             if (fPreserveLastError)

	cmp	DWORD PTR _fPreserveLastError$3[ebp], 0
	je	SHORT $LN17@IsolationA

; 260  :                 SetLastError(dwLastError);

	mov	edx, DWORD PTR _dwLastError$2[ebp]
	push	edx
	call	DWORD PTR __imp__SetLastError@4
$LN17@IsolationA:
$LN20@IsolationA:
	ret	0
$LN19@IsolationA:

; 261  :         }
; 262  :     }
; 263  :     return fResult;

	mov	eax, DWORD PTR _fResult$[ebp]
$LN15@IsolationA:

; 264  : }

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_IsolationAwareGetSaveFileNameW@4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ?_Hash_seq@std@@YAIPBEI@Z
_TEXT	SEGMENT
__FNV_prime$ = -16					; size = 4
__FNV_offset_basis$ = -12				; size = 4
__Next$1 = -8						; size = 4
__Val$ = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
?_Hash_seq@std@@YAIPBEI@Z PROC				; std::_Hash_seq, COMDAT

; 280  : 	{	// FNV-1a hash function for bytes in [_First, _First+_Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 281  :  #if defined(_M_X64) || defined(_LP64) || defined(__x86_64) || defined(_WIN64)
; 282  : 	static_assert(sizeof(size_t) == 8, "This code is for 64-bit size_t.");
; 283  : 	const size_t _FNV_offset_basis = 14695981039346656037ULL;
; 284  : 	const size_t _FNV_prime = 1099511628211ULL;
; 285  : 
; 286  :  #else /* defined(_M_X64), etc. */
; 287  : 	static_assert(sizeof(size_t) == 4, "This code is for 32-bit size_t.");
; 288  : 	const size_t _FNV_offset_basis = 2166136261U;

	mov	DWORD PTR __FNV_offset_basis$[ebp], -2128831035 ; 811c9dc5H

; 289  : 	const size_t _FNV_prime = 16777619U;

	mov	DWORD PTR __FNV_prime$[ebp], 16777619	; 01000193H

; 290  :  #endif /* defined(_M_X64), etc. */
; 291  : 
; 292  : 	size_t _Val = _FNV_offset_basis;

	mov	DWORD PTR __Val$[ebp], -2128831035	; 811c9dc5H

; 293  : 	for (size_t _Next = 0; _Next < _Count; ++_Next)

	mov	DWORD PTR __Next$1[ebp], 0
	jmp	SHORT $LN3@Hash_seq
$LN2@Hash_seq:
	mov	eax, DWORD PTR __Next$1[ebp]
	add	eax, 1
	mov	DWORD PTR __Next$1[ebp], eax
$LN3@Hash_seq:
	mov	ecx, DWORD PTR __Next$1[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Hash_seq

; 294  : 		{	// fold in another byte
; 295  : 		_Val ^= (size_t)_First[_Next];

	mov	edx, DWORD PTR __First$[ebp]
	add	edx, DWORD PTR __Next$1[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, DWORD PTR __Val$[ebp]
	mov	DWORD PTR __Val$[ebp], eax

; 296  : 		_Val *= _FNV_prime;

	imul	ecx, DWORD PTR __Val$[ebp], 16777619
	mov	DWORD PTR __Val$[ebp], ecx

; 297  : 		}

	jmp	SHORT $LN2@Hash_seq
$LN1@Hash_seq:

; 298  : 
; 299  :  #if defined(_M_X64) || defined(_LP64) || defined(__x86_64) || defined(_WIN64)
; 300  : 	static_assert(sizeof(size_t) == 8, "This code is for 64-bit size_t.");
; 301  : 	_Val ^= _Val >> 32;
; 302  : 
; 303  :  #else /* defined(_M_X64), etc. */
; 304  : 	static_assert(sizeof(size_t) == 4, "This code is for 32-bit size_t.");
; 305  :  #endif /* defined(_M_X64), etc. */
; 306  : 
; 307  : 	return (_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 308  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Hash_seq@std@@YAIPBEI@Z ENDP				; std::_Hash_seq
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\wchar.h
;	COMDAT _wmemcmp
_TEXT	SEGMENT
tv74 = -4						; size = 4
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcmp PROC						; COMDAT

; 1263 :         {for (; 0 < _N; ++_S1, ++_S2, --_N)

	push	ebp
	mov	ebp, esp
	push	ecx
	jmp	SHORT $LN4@wmemcmp
$LN3@wmemcmp:
	mov	eax, DWORD PTR __S1$[ebp]
	add	eax, 2
	mov	DWORD PTR __S1$[ebp], eax
	mov	ecx, DWORD PTR __S2$[ebp]
	add	ecx, 2
	mov	DWORD PTR __S2$[ebp], ecx
	mov	edx, DWORD PTR __N$[ebp]
	sub	edx, 1
	mov	DWORD PTR __N$[ebp], edx
$LN4@wmemcmp:
	cmp	DWORD PTR __N$[ebp], 0
	jbe	SHORT $LN2@wmemcmp

; 1264 :                 if (*_S1 != *_S2)

	mov	eax, DWORD PTR __S1$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR __S2$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	je	SHORT $LN1@wmemcmp

; 1265 :                         return (*_S1 < *_S2 ? -1 : +1);

	mov	ecx, DWORD PTR __S1$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR __S2$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	edx, ecx
	jge	SHORT $LN7@wmemcmp
	mov	DWORD PTR tv74[ebp], -1
	jmp	SHORT $LN8@wmemcmp
$LN7@wmemcmp:
	mov	DWORD PTR tv74[ebp], 1
$LN8@wmemcmp:
	mov	eax, DWORD PTR tv74[ebp]
	jmp	SHORT $LN5@wmemcmp
$LN1@wmemcmp:

; 1266 :         return (0); }

	jmp	SHORT $LN3@wmemcmp
$LN2@wmemcmp:
	xor	eax, eax
$LN5@wmemcmp:
	mov	esp, ebp
	pop	ebp
	ret	0
_wmemcmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\iosfwd
;	COMDAT ?compare@?$char_traits@_W@std@@SAHPB_W0I@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z PROC		; std::char_traits<wchar_t>::compare, COMDAT

; 298  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 299  : 		return (_Count == 0 ? 0
; 300  : 			: _CSTD wmemcmp(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@compare
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@compare
$LN3@compare:
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_wmemcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@compare:
	mov	eax, DWORD PTR tv69[ebp]

; 301  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z ENDP		; std::char_traits<wchar_t>::compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??0?$tuple@$$$V@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$tuple@$$$V@std@@QAE@ABV01@@Z PROC			; std::tuple<>::tuple<>, COMDAT
; _this$ = ecx

; 144  : 	tuple(const tuple&) _NOEXCEPT

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		{	// copy construct
; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tuple@$$$V@std@@QAE@ABV01@@Z ENDP			; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ??8ServiceIdentifier@@QAE_NABU0@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_sid$ = 8						; size = 4
??8ServiceIdentifier@@QAE_NABU0@@Z PROC			; ServiceIdentifier::operator==, COMDAT
; _this$ = ecx

; 555  :     bool operator==(const ServiceIdentifier &sid) { return id == sid.id && file == sid.file; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sid$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _sid$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??8String@@QBEHABV0@@Z
	test	eax, eax
	je	SHORT $LN3@operator
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??8ServiceIdentifier@@QAE_NABU0@@Z ENDP			; ServiceIdentifier::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\obs.h
;	COMDAT ??9ServiceIdentifier@@QAE_NABU0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
_sid$ = 8						; size = 4
??9ServiceIdentifier@@QAE_NABU0@@Z PROC			; ServiceIdentifier::operator!=, COMDAT
; _this$ = ecx

; 556  :     bool operator!=(const ServiceIdentifier &sid) { return !(*this == sid); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8ServiceIdentifier@@QAE_NABU0@@Z	; ServiceIdentifier::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??9ServiceIdentifier@@QAE_NABU0@@Z ENDP			; ServiceIdentifier::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z
_TEXT	SEGMENT
_hwndParent$ = -24					; size = 4
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_xOffset$ = 12						; size = 4
_yOffset$ = 16						; size = 4
?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z PROC		; AdjustWindowPos, COMDAT

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 34   :     RECT rc;
; 35   : 
; 36   :     HWND hwndParent = GetParent(hwnd);

	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _hwndParent$[ebp], eax

; 37   :     GetWindowRect(hwnd, &rc);

	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8

; 38   :     if (LocaleIsRTL())

	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp_?LocaleIsRTL@@YA_NPAVLocaleStringLookup@@@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@AdjustWind

; 39   :         rc.left = rc.right;

	mov	eax, DWORD PTR _rc$[ebp+8]
	mov	DWORD PTR _rc$[ebp], eax
$LN1@AdjustWind:

; 40   : 
; 41   :     ScreenToClient(hwndParent, (LPPOINT)&rc);

	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwndParent$[ebp]
	push	edx
	call	DWORD PTR __imp__ScreenToClient@8

; 42   : 
; 43   :     SetWindowPos(hwnd, NULL, rc.left+xOffset, rc.top+yOffset, 0, 0, SWP_NOSIZE|SWP_NOZORDER|SWP_NOOWNERZORDER);

	push	517					; 00000205H
	push	0
	push	0
	mov	eax, DWORD PTR _rc$[ebp+4]
	add	eax, DWORD PTR _yOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rc$[ebp]
	add	ecx, DWORD PTR _xOffset$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28

; 44   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z ENDP		; AdjustWindowPos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSettingsPublish@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSettingsPublish@@UAEPAXI@Z PROC			; SettingsPublish::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SettingsPublish@@UAE@XZ		; SettingsPublish::~SettingsPublish
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSettingsPublish@@UAEPAXI@Z ENDP			; SettingsPublish::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??1SettingsPublish@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SettingsPublish@@UAE@XZ PROC				; SettingsPublish::~SettingsPublish, COMDAT
; _this$ = ecx

; 55   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SettingsPublish@@6B@

; 56   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAE@XZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::~vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SettingsPane@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1SettingsPublish@@UAE@XZ ENDP				; SettingsPublish::~SettingsPublish
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?GetCategory@SettingsPublish@@UBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCategory@SettingsPublish@@UBEPB_WXZ PROC		; SettingsPublish::GetCategory, COMDAT
; _this$ = ecx

; 59   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   :     static CTSTR name = Str("Settings.Publish");

	mov	eax, DWORD PTR ?$S1@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4IA
	and	eax, 1
	jne	SHORT $LN1@GetCategor
	mov	ecx, DWORD PTR ?$S1@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4IA
	or	ecx, 1
	mov	DWORD PTR ?$S1@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4IA, ecx
	push	OFFSET $SG4294737556
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR ?name@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4PB_WB, eax
$LN1@GetCategor:

; 61   :     return name;

	mov	eax, DWORD PTR ?name@?1??GetCategory@SettingsPublish@@UBEPB_WXZ@4PB_WB

; 62   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCategory@SettingsPublish@@UBEPB_WXZ ENDP		; SettingsPublish::GetCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?CreatePane@SettingsPublish@@UAEPAUHWND__@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_parentHwnd$ = 8					; size = 4
?CreatePane@SettingsPublish@@UAEPAUHWND__@@PAU2@@Z PROC	; SettingsPublish::CreatePane, COMDAT
; _this$ = ecx

; 65   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :     hwnd = OBSCreateDialog(hinstMain, MAKEINTRESOURCE(IDD_SETTINGS_PUBLISH), parentHwnd, (DLGPROC)DialogProc, (LPARAM)this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?DialogProc@SettingsPane@@SGHPAUHWND__@@IIJ@Z
	push	ecx
	mov	edx, DWORD PTR _parentHwnd$[ebp]
	push	edx
	push	114					; 00000072H
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	call	DWORD PTR __imp_?OBSCreateDialog@@YAPAUHWND__@@PAUHINSTANCE__@@PB_WPAU1@P6GH2IIJ@ZJ@Z
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 67   :     return hwnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]

; 68   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?CreatePane@SettingsPublish@@UAEPAUHWND__@@PAU2@@Z ENDP	; SettingsPublish::CreatePane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?DestroyPane@SettingsPublish@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyPane@SettingsPublish@@UAEXXZ PROC		; SettingsPublish::DestroyPane, COMDAT
; _this$ = ecx

; 71   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 72   :     DestroyWindow(hwnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4

; 73   :     hwnd = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyPane@SettingsPublish@@UAEXXZ ENDP		; SettingsPublish::DestroyPane
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?ApplySettings@SettingsPublish@@UAEXXZ
_TEXT	SEGMENT
$T1 = -144						; size = 8
$T2 = -136						; size = 8
$T3 = -128						; size = 8
_sid$4 = -120						; size = 12
_bSaveToFile$ = -108					; size = 4
_text$5 = -104						; size = 8
_text$6 = -96						; size = 8
tv611 = -88						; size = 4
_curSel$ = -84						; size = 4
tv495 = -80						; size = 4
tv473 = -76						; size = 4
_check_expanded_dir$ = -72				; size = 4
_delayTime$ = -68					; size = 4
tv512 = -64						; size = 4
_replayBufferLength$ = -60				; size = 4
_replaySavePath$ = -56					; size = 8
_strTemp$ = -48						; size = 8
_strSavePath$ = -40					; size = 8
_actualPath$ = -32					; size = 8
_serviceID$ = -24					; size = 4
_defaultPath$ = -20					; size = 8
_bLowLatencyMode$ = -9					; size = 1
_bError$ = -8						; size = 4
_this$ = -4						; size = 4
?ApplySettings@SettingsPublish@@UAEXXZ PROC		; SettingsPublish::ApplySettings, COMDAT
; _this$ = ecx

; 77   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	mov	DWORD PTR _this$[ebp], ecx

; 78   :     auto check_expanded_dir = [&](String path, String err, String errCaption)
; 79   :     {
; 80   :         String expanded = GetExpandedRecordingDirectoryBase(path);
; 81   :         if (OSFileExists(expanded))
; 82   :             return true;
; 83   : 
; 84   :         return OBSMessageBox(hwnd, err.FindReplace(L"$1", expanded), errCaption, MB_ICONWARNING | MB_YESNO | MB_DEFBUTTON2 ) != IDNO;
; 85   :     };

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _check_expanded_dir$[ebp]
	call	??0<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QAE@PAVSettingsPublish@@@Z ; <lambda_0150051c3a6172cb74af6f51d432f9b5>::<lambda_0150051c3a6172cb74af6f51d432f9b5>

; 86   : 
; 87   :     //------------------------------------------
; 88   : 
; 89   :     String strSavePath = GetEditText(GetDlgItem(hwnd, IDC_SAVEPATH));

	push	1081					; 00000439H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	eax, DWORD PTR _strSavePath$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8

; 90   :     String defaultPath = OSGetDefaultVideoSavePath(L"\\.flv");

	push	OFFSET $SG4294737555
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	push	ecx
	call	DWORD PTR __imp_?OSGetDefaultVideoSavePath@@YG?AVString@@PB_W@Z

; 91   :     String actualPath = strSavePath;

	lea	edx, DWORD PTR _strSavePath$[ebp]
	push	edx
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z

; 92   :     if (!strSavePath.IsValid() && defaultPath.IsValid())

	lea	ecx, DWORD PTR _strSavePath$[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	jne	$LN13@ApplySetti
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	$LN13@ApplySetti

; 93   :     {
; 94   :         String text = Str("Settings.Publish.InvalidSavePath");

	push	OFFSET $SG4294737554
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _text$6[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 95   :         text.FindReplace(L"$1", defaultPath);

	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737553
	lea	ecx, DWORD PTR _text$6[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 96   :         if (OBSMessageBox(nullptr, text, Str("Settings.Publish.InvalidSavePathCaption"), MB_ICONEXCLAMATION | MB_OKCANCEL) != IDOK)

	push	49					; 00000031H
	push	OFFSET $SG4294737552
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _text$6[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	0
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 1
	je	SHORT $LN12@ApplySetti

; 97   :         {
; 98   :             SetAbortApplySettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetAbortApplySettings@SettingsPane@@IAEX_N@Z

; 99   :             return;

	lea	ecx, DWORD PTR _text$6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN14@ApplySetti
$LN12@ApplySetti:

; 100  :         }
; 101  :         SetWindowText(GetDlgItem(hwnd, IDC_SAVEPATH), defaultPath.Array());

	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1081					; 00000439H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 102  :         actualPath = defaultPath;

	lea	ecx, DWORD PTR _defaultPath$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 103  :     }

	lea	ecx, DWORD PTR _text$6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN13@ApplySetti:

; 104  : 
; 105  :     if (!check_expanded_dir(actualPath, Str("Settings.Publish.SavePathDoesNotExist"), Str("Settings.Publish.SavePathDoesNotExistCaption")))

	push	OFFSET $SG4294737551
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	sub	esp, 8
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	push	OFFSET $SG4294737550
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	sub	esp, 8
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _actualPath$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _check_expanded_dir$[ebp]
	call	??R<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QBE_NVString@@00@Z ; <lambda_0150051c3a6172cb74af6f51d432f9b5>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@ApplySetti

; 106  :         return SetAbortApplySettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetAbortApplySettings@SettingsPane@@IAEX_N@Z
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN14@ApplySetti
$LN11@ApplySetti:

; 107  : 
; 108  :     //------------------------------------------
; 109  : 
; 110  :     String replaySavePath = GetEditText(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH));

	push	1088					; 00000440H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	eax, DWORD PTR _replaySavePath$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8

; 111  :     defaultPath = OSGetDefaultVideoSavePath(L"\\Replay-$T.flv");

	push	OFFSET $SG4294737549
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	DWORD PTR __imp_?OSGetDefaultVideoSavePath@@YG?AVString@@PB_W@Z
	push	eax
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 112  :     actualPath = replaySavePath;

	lea	edx, DWORD PTR _replaySavePath$[ebp]
	push	edx
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 113  :     if (!replaySavePath.IsValid() && defaultPath.IsValid())

	lea	ecx, DWORD PTR _replaySavePath$[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	jne	$LN10@ApplySetti
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	$LN10@ApplySetti

; 114  :     {
; 115  :         String text = Str("Settings.Publish.InvalidReplayBufferSavePath");

	push	OFFSET $SG4294737548
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _text$5[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 116  :         text.FindReplace(L"$1", defaultPath);

	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737547
	lea	ecx, DWORD PTR _text$5[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 117  :         if (OBSMessageBox(nullptr, text, Str("Settings.Publish.InvalidReplayBufferSavePathCaption"), MB_ICONEXCLAMATION | MB_OKCANCEL) != IDOK)

	push	49					; 00000031H
	push	OFFSET $SG4294737546
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _text$5[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	0
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 1
	je	SHORT $LN9@ApplySetti

; 118  :         {
; 119  :             SetAbortApplySettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetAbortApplySettings@SettingsPane@@IAEX_N@Z

; 120  :             return;

	lea	ecx, DWORD PTR _text$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _replaySavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN14@ApplySetti
$LN9@ApplySetti:

; 121  :         }
; 122  :         SetWindowText(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH), defaultPath.Array());

	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1088					; 00000440H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 123  :         actualPath = defaultPath;

	lea	ecx, DWORD PTR _defaultPath$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 124  :     }

	lea	ecx, DWORD PTR _text$5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN10@ApplySetti:

; 125  : 
; 126  :     if (!check_expanded_dir(actualPath, Str("Settings.Publish.ReplayBufferSavePathDoesNotExist"), Str("Settings.Publish.ReplayBufferSavePathDoesNotExistCaption")))

	push	OFFSET $SG4294737545
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	sub	esp, 8
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	push	OFFSET $SG4294737544
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	sub	esp, 8
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _actualPath$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _check_expanded_dir$[ebp]
	call	??R<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QBE_NVString@@00@Z ; <lambda_0150051c3a6172cb74af6f51d432f9b5>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@ApplySetti

; 127  :         return SetAbortApplySettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetAbortApplySettings@SettingsPane@@IAEX_N@Z
	lea	ecx, DWORD PTR _replaySavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN14@ApplySetti
$LN8@ApplySetti:

; 128  : 
; 129  :     //------------------------------------------
; 130  : 
; 131  :     int curSel = (int)SendMessage(GetDlgItem(hwnd, IDC_MODE), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1008					; 000003f0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _curSel$[ebp], eax

; 132  :     if(curSel != CB_ERR)

	cmp	DWORD PTR _curSel$[ebp], -1
	je	SHORT $LN7@ApplySetti

; 133  :         AppConfig->SetInt(TEXT("Publish"), TEXT("Mode"), curSel);

	mov	eax, DWORD PTR _curSel$[ebp]
	push	eax
	push	OFFSET $SG4294737543
	push	OFFSET $SG4294737542
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
$LN7@ApplySetti:

; 134  : 
; 135  :     int serviceID = (int)SendMessage(GetDlgItem(hwnd, IDC_SERVICE), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _serviceID$[ebp], eax

; 136  :     if(serviceID != CB_ERR && serviceID >= 0 && serviceID < (int)services.size())

	cmp	DWORD PTR _serviceID$[ebp], -1
	je	SHORT $LN6@ApplySetti
	cmp	DWORD PTR _serviceID$[ebp], 0
	jl	SHORT $LN6@ApplySetti
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?size@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QBEIXZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::size
	cmp	DWORD PTR _serviceID$[ebp], eax
	jge	SHORT $LN6@ApplySetti

; 137  :     {
; 138  :         auto sid = services[serviceID];

	mov	eax, DWORD PTR _serviceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _sid$4[ebp]
	call	??0ServiceIdentifier@@QAE@ABU0@@Z

; 139  :         AppConfig->SetInt(TEXT("Publish"), TEXT("Service"), sid.id);

	mov	ecx, DWORD PTR _sid$4[ebp]
	push	ecx
	push	OFFSET $SG4294737541
	push	OFFSET $SG4294737540
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 140  :         AppConfig->SetString(L"Publish", L"ServiceFile", sid.file);

	lea	ecx, DWORD PTR _sid$4[ebp+4]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737539
	push	OFFSET $SG4294737538
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 141  :     }

	lea	ecx, DWORD PTR _sid$4[ebp]
	call	??1ServiceIdentifier@@QAE@XZ
$LN6@ApplySetti:

; 142  : 
; 143  :     String strTemp = GetEditText(GetDlgItem(hwnd, IDC_PLAYPATH));

	push	1011					; 000003f3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR _strTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8

; 144  :     strTemp.KillSpaces();

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_?KillSpaces@String@@QAEAAV1@XZ

; 145  :     AppConfig->SetString(TEXT("Publish"), TEXT("PlayPath"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737537
	push	OFFSET $SG4294737536
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 146  : 
; 147  :     if(serviceID == 0)

	cmp	DWORD PTR _serviceID$[ebp], 0
	jne	SHORT $LN5@ApplySetti

; 148  :     {
; 149  :         strTemp = GetEditText(GetDlgItem(hwnd, IDC_URL));

	push	1012					; 000003f4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 150  :         AppConfig->SetString(TEXT("Publish"), TEXT("URL"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737535
	push	OFFSET $SG4294737534
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 151  :     }
; 152  :     else

	jmp	SHORT $LN4@ApplySetti
$LN5@ApplySetti:

; 153  :     {
; 154  :         strTemp = GetCBText(GetDlgItem(hwnd, IDC_SERVERLIST));

	push	-1
	push	1013					; 000003f5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetCBText@@YA?AVString@@PAUHWND__@@I@Z
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 155  :         AppConfig->SetString(TEXT("Publish"), TEXT("URL"), strTemp);

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737533
	push	OFFSET $SG4294737532
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
$LN4@ApplySetti:

; 156  :     }
; 157  : 
; 158  :     //------------------------------------------
; 159  : 
; 160  :     bool bLowLatencyMode = SendMessage(GetDlgItem(hwnd, IDC_LOWLATENCYMODE), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1099					; 0000044bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN16@ApplySetti
	mov	DWORD PTR tv473[ebp], 1
	jmp	SHORT $LN17@ApplySetti
$LN16@ApplySetti:
	mov	DWORD PTR tv473[ebp], 0
$LN17@ApplySetti:
	mov	cl, BYTE PTR tv473[ebp]
	mov	BYTE PTR _bLowLatencyMode$[ebp], cl

; 161  :     AppConfig->SetInt(TEXT("Publish"), TEXT("LowLatencyMode"), bLowLatencyMode);

	movzx	edx, BYTE PTR _bLowLatencyMode$[ebp]
	push	edx
	push	OFFSET $SG4294737531
	push	OFFSET $SG4294737530
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 162  : 
; 163  :     //------------------------------------------
; 164  : 
; 165  :     App->bAutoReconnect = SendMessage(GetDlgItem(hwnd, IDC_AUTORECONNECT), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1041					; 00000411H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN18@ApplySetti
	mov	DWORD PTR tv495[ebp], 1
	jmp	SHORT $LN19@ApplySetti
$LN18@ApplySetti:
	mov	DWORD PTR tv495[ebp], 0
$LN19@ApplySetti:
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	al, BYTE PTR tv495[ebp]
	mov	BYTE PTR [edx+695], al

; 166  :     App->bKeepRecording = SendMessage(GetDlgItem(hwnd, IDC_KEEPRECORDING), BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN20@ApplySetti
	mov	DWORD PTR tv512[ebp], 1
	jmp	SHORT $LN21@ApplySetti
$LN20@ApplySetti:
	mov	DWORD PTR tv512[ebp], 0
$LN21@ApplySetti:
	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	cl, BYTE PTR tv512[ebp]
	mov	BYTE PTR [eax+629], cl

; 167  : 
; 168  :     BOOL bError = FALSE;

	mov	DWORD PTR _bError$[ebp], 0

; 169  :     App->reconnectTimeout = (UINT)SendMessage(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT), UDM_GETPOS32, 0, (LPARAM)&bError);

	lea	edx, DWORD PTR _bError$[ebp]
	push	edx
	push	0
	push	1138					; 00000472H
	push	1079					; 00000437H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [edx+700], eax

; 170  :     if(bError)

	cmp	DWORD PTR _bError$[ebp], 0
	je	SHORT $LN3@ApplySetti

; 171  :         App->reconnectTimeout = 10;

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	DWORD PTR [eax+700], 10			; 0000000aH
$LN3@ApplySetti:

; 172  : 
; 173  :     AppConfig->SetInt(TEXT("Publish"), TEXT("AutoReconnect"), App->bAutoReconnect);

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	edx, BYTE PTR [ecx+695]
	push	edx
	push	OFFSET $SG4294737529
	push	OFFSET $SG4294737528
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 174  :     AppConfig->SetInt(TEXT("Publish"), TEXT("AutoReconnectTimeout"), App->reconnectTimeout);

	mov	eax, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	ecx, DWORD PTR [eax+700]
	push	ecx
	push	OFFSET $SG4294737527
	push	OFFSET $SG4294737526
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 175  : 
; 176  :     AppConfig->SetInt(TEXT("Publish"), TEXT("KeepRecording"), App->bKeepRecording);

	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	movzx	eax, BYTE PTR [edx+629]
	push	eax
	push	OFFSET $SG4294737525
	push	OFFSET $SG4294737524
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 177  : 
; 178  :     //------------------------------------------
; 179  : 
; 180  :     bError = FALSE;

	mov	DWORD PTR _bError$[ebp], 0

; 181  :     int delayTime = (int)SendMessage(GetDlgItem(hwnd, IDC_DELAY), UDM_GETPOS32, 0, (LPARAM)&bError);

	lea	ecx, DWORD PTR _bError$[ebp]
	push	ecx
	push	0
	push	1138					; 00000472H
	push	1084					; 0000043cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _delayTime$[ebp], eax

; 182  :     if(bError)

	cmp	DWORD PTR _bError$[ebp], 0
	je	SHORT $LN2@ApplySetti

; 183  :         delayTime = 0;

	mov	DWORD PTR _delayTime$[ebp], 0
$LN2@ApplySetti:

; 184  : 
; 185  :     AppConfig->SetInt(TEXT("Publish"), TEXT("Delay"), delayTime);

	mov	ecx, DWORD PTR _delayTime$[ebp]
	push	ecx
	push	OFFSET $SG4294737523
	push	OFFSET $SG4294737522
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 186  : 
; 187  :     //------------------------------------------
; 188  : 
; 189  :     BOOL bSaveToFile = SendMessage(GetDlgItem(hwnd, IDC_SAVETOFILE), BM_GETCHECK, 0, 0) != BST_UNCHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	push	1045					; 00000415H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN22@ApplySetti
	mov	DWORD PTR tv611[ebp], 1
	jmp	SHORT $LN23@ApplySetti
$LN22@ApplySetti:
	mov	DWORD PTR tv611[ebp], 0
$LN23@ApplySetti:
	mov	ecx, DWORD PTR tv611[ebp]
	mov	DWORD PTR _bSaveToFile$[ebp], ecx

; 190  : 
; 191  :     AppConfig->SetInt   (TEXT("Publish"), TEXT("SaveToFile"), bSaveToFile);

	mov	edx, DWORD PTR _bSaveToFile$[ebp]
	push	edx
	push	OFFSET $SG4294737521
	push	OFFSET $SG4294737520
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 192  :     AppConfig->SetString(TEXT("Publish"), TEXT("SavePath"),   strSavePath);

	lea	ecx, DWORD PTR _strSavePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737519
	push	OFFSET $SG4294737518
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 193  : 
; 194  :     //------------------------------------------
; 195  : 
; 196  :     bError = FALSE;

	mov	DWORD PTR _bError$[ebp], 0

; 197  :     int replayBufferLength = (int)SendMessage(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH), UDM_GETPOS32, 0, (LPARAM)&bError);

	lea	eax, DWORD PTR _bError$[ebp]
	push	eax
	push	0
	push	1138					; 00000472H
	push	1086					; 0000043eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _replayBufferLength$[ebp], eax

; 198  :     if (bError)

	cmp	DWORD PTR _bError$[ebp], 0
	je	SHORT $LN1@ApplySetti

; 199  :         SendMessage(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH), UDM_SETPOS32, 0, replayBufferLength);

	mov	eax, DWORD PTR _replayBufferLength$[ebp]
	push	eax
	push	0
	push	1137					; 00000471H
	push	1086					; 0000043eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN1@ApplySetti:

; 200  : 
; 201  :     AppConfig->SetInt(L"Publish", L"ReplayBufferLength", replayBufferLength);

	mov	eax, DWORD PTR _replayBufferLength$[ebp]
	push	eax
	push	OFFSET $SG4294737517
	push	OFFSET $SG4294737516
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 202  :     AppConfig->SetString(L"Publish", L"ReplayBufferSavePath", replaySavePath);

	lea	ecx, DWORD PTR _replaySavePath$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737515
	push	OFFSET $SG4294737514
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 203  : 
; 204  :     //------------------------------------------
; 205  : 
; 206  :     App->ConfigureStreamButtons();

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?ConfigureStreamButtons@OBS@@AAEXXZ	; OBS::ConfigureStreamButtons

; 207  : 
; 208  :     /*
; 209  :     App->strDashboard = GetEditText(GetDlgItem(hwnd, IDC_DASHBOARDLINK)).KillSpaces();
; 210  :     AppConfig->SetString(TEXT("Publish"), TEXT("Dashboard"), App->strDashboard);
; 211  :     ShowWindow(GetDlgItem(hwndMain, ID_DASHBOARD), App->strDashboard.IsValid() && !curSel ? SW_SHOW : SW_HIDE);
; 212  :     */
; 213  : }

	lea	ecx, DWORD PTR _strTemp$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _replaySavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _actualPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _defaultPath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strSavePath$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN14@ApplySetti:
	mov	esp, ebp
	pop	ebp
	ret	0
?ApplySettings@SettingsPublish@@UAEXXZ ENDP		; SettingsPublish::ApplySettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QAE@PAVSettingsPublish@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QAE@PAVSettingsPublish@@@Z PROC ; <lambda_0150051c3a6172cb74af6f51d432f9b5>::<lambda_0150051c3a6172cb74af6f51d432f9b5>, COMDAT
; _this$ = ecx

; 85   :     };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QAE@PAVSettingsPublish@@@Z ENDP ; <lambda_0150051c3a6172cb74af6f51d432f9b5>::<lambda_0150051c3a6172cb74af6f51d432f9b5>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QBE_NVString@@00@Z
_TEXT	SEGMENT
_expanded$ = -20					; size = 8
_this$ = -12						; size = 4
tv141 = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_path$ = 8						; size = 8
_err$ = 16						; size = 8
_errCaption$ = 24					; size = 8
??R<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QBE_NVString@@00@Z PROC ; <lambda_0150051c3a6172cb74af6f51d432f9b5>::operator(), COMDAT
; _this$ = ecx

; 79   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 80   :         String expanded = GetExpandedRecordingDirectoryBase(path);

	sub	esp, 8
	mov	ecx, esp
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _expanded$[ebp]
	push	ecx
	call	?GetExpandedRecordingDirectoryBase@@YA?AVString@@V1@@Z ; GetExpandedRecordingDirectoryBase
	add	esp, 12					; 0000000cH

; 81   :         if (OSFileExists(expanded))

	lea	ecx, DWORD PTR _expanded$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OSFileExists@@YGHPB_W@Z
	test	eax, eax
	je	SHORT $LN1@operator

; 82   :             return true;

	mov	BYTE PTR $T2[ebp], 1
	lea	ecx, DWORD PTR _expanded$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _err$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _errCaption$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
	jmp	$LN2@operator
$LN1@operator:

; 83   : 
; 84   :         return OBSMessageBox(hwnd, err.FindReplace(L"$1", expanded), errCaption, MB_ICONWARNING | MB_YESNO | MB_DEFBUTTON2 ) != IDNO;

	push	308					; 00000134H
	lea	ecx, DWORD PTR _errCaption$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _expanded$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737513
	lea	ecx, DWORD PTR _err$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 7
	je	SHORT $LN4@operator
	mov	DWORD PTR tv141[ebp], 1
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	DWORD PTR tv141[ebp], 0
$LN5@operator:
	mov	dl, BYTE PTR tv141[ebp]
	mov	BYTE PTR $T1[ebp], dl
	lea	ecx, DWORD PTR _expanded$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _err$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _errCaption$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T1[ebp]
$LN2@operator:

; 85   :     };

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??R<lambda_0150051c3a6172cb74af6f51d432f9b5>@@QBE_NVString@@00@Z ENDP ; <lambda_0150051c3a6172cb74af6f51d432f9b5>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?CancelSettings@SettingsPublish@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelSettings@SettingsPublish@@UAEXXZ PROC		; SettingsPublish::CancelSettings, COMDAT
; _this$ = ecx

; 216  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 217  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CancelSettings@SettingsPublish@@UAEXXZ ENDP		; SettingsPublish::CancelSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?HasDefaults@SettingsPublish@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasDefaults@SettingsPublish@@UBE_NXZ PROC		; SettingsPublish::HasDefaults, COMDAT
; _this$ = ecx

; 220  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 221  :     return false;

	xor	al, al

; 222  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasDefaults@SettingsPublish@@UBE_NXZ ENDP		; SettingsPublish::HasDefaults
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?SetWarningInfo@SettingsPublish@@AAEXXZ
_TEXT	SEGMENT
$T1 = -224						; size = 8
$T2 = -216						; size = 8
$T3 = -208						; size = 8
$T4 = -200						; size = 8
$T5 = -192						; size = 8
$T6 = -184						; size = 8
$T7 = -176						; size = 8
_aspectRatio$8 = -168					; size = 8
_expectedProfile$9 = -160				; size = 8
_serviceData$10 = -152					; size = 8
_aspect$11 = -144					; size = 4
_msg$12 = -140						; size = 8
_maxBitRate$ = -132					; size = 4
_rc$13 = -128						; size = 4
tv756 = -124						; size = 4
_currentAspect$ = -120					; size = 4
_aspectLocalized$14 = -116				; size = 8
_msg$15 = -108						; size = 8
_codecs$16 = -100					; size = 8
_currentx264Profile$ = -92				; size = 8
_keyint$17 = -84					; size = 4
tv491 = -80						; size = 4
_maxaudioaac$18 = -76					; size = 4
_keyframeInt$ = -72					; size = 4
_max_bitrate$19 = -68					; size = 4
_maxaudiomp3$20 = -64					; size = 4
tv163 = -60						; size = 4
tv83 = -56						; size = 4
_audioBitRate$ = -52					; size = 4
_currentAudioCodec$ = -48				; size = 8
_serviceID$ = -40					; size = 4
_numbers$21 = -36					; size = 8
_service$22 = -28					; size = 4
_strWarnings$ = -24					; size = 8
_bUseCBR$ = -13						; size = 1
_this$ = -12						; size = 4
_r$23 = -8						; size = 4
_hasErrors$ = -2					; size = 1
_canOptimize$ = -1					; size = 1
?SetWarningInfo@SettingsPublish@@AAEXXZ PROC		; SettingsPublish::SetWarningInfo, COMDAT
; _this$ = ecx

; 225  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	mov	DWORD PTR _this$[ebp], ecx

; 226  :     int serviceID = (int)SendMessage(GetDlgItem(hwnd, IDC_SERVICE), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1014					; 000003f6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _serviceID$[ebp], eax

; 227  : 
; 228  :     bool bUseCBR = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("UseCBR"), 1) != 0;

	push	1
	push	OFFSET $SG4294737512
	push	OFFSET $SG4294737511
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN28@SetWarning
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN29@SetWarning
$LN28@SetWarning:
	mov	DWORD PTR tv83[ebp], 0
$LN29@SetWarning:
	mov	dl, BYTE PTR tv83[ebp]
	mov	BYTE PTR _bUseCBR$[ebp], dl

; 229  :     int maxBitRate = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("MaxBitrate"), 1000);

	push	1000					; 000003e8H
	push	OFFSET $SG4294737510
	push	OFFSET $SG4294737509
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _maxBitRate$[ebp], eax

; 230  :     int keyframeInt = AppConfig->GetInt(TEXT("Video Encoding"), TEXT("KeyframeInterval"), 0);

	push	0
	push	OFFSET $SG4294737508
	push	OFFSET $SG4294737507
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _keyframeInt$[ebp], eax

; 231  :     int audioBitRate = AppConfig->GetInt(TEXT("Audio Encoding"), TEXT("Bitrate"), 96);

	push	96					; 00000060H
	push	OFFSET $SG4294737506
	push	OFFSET $SG4294737505
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _audioBitRate$[ebp], eax

; 232  :     String currentx264Profile = AppConfig->GetString(TEXT("Video Encoding"), TEXT("X264Profile"), L"high");

	push	OFFSET $SG4294737504
	push	OFFSET $SG4294737503
	push	OFFSET $SG4294737502
	lea	eax, DWORD PTR _currentx264Profile$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 233  :     String currentAudioCodec = AppConfig->GetString(TEXT("Audio Encoding"), TEXT("Codec"), TEXT("AAC"));

	push	OFFSET $SG4294737501
	push	OFFSET $SG4294737500
	push	OFFSET $SG4294737499
	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 234  :     float currentAspect = AppConfig->GetInt(L"Video", L"BaseWidth") / (float)max(1, AppConfig->GetInt(L"Video", L"BaseHeight"));

	push	0
	push	OFFSET $SG4294737496
	push	OFFSET $SG4294737495
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	cmp	eax, 1
	jge	SHORT $LN30@SetWarning
	mov	DWORD PTR tv163[ebp], 1
	jmp	SHORT $LN31@SetWarning
$LN30@SetWarning:
	push	0
	push	OFFSET $SG4294737494
	push	OFFSET $SG4294737493
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR tv163[ebp], eax
$LN31@SetWarning:
	push	0
	push	OFFSET $SG4294737498
	push	OFFSET $SG4294737497
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	cvtsi2ss xmm0, eax
	cvtsi2ss xmm1, DWORD PTR tv163[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _currentAspect$[ebp], xmm0

; 235  : 
; 236  :     //ignore for non-livestreams
; 237  :     if (data.mode != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN25@SetWarning

; 238  :     {
; 239  :         SetDlgItemText(hwnd, IDC_WARNINGS, TEXT(""));

	push	OFFSET $SG4294737492
	push	1030					; 00000406H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextW@12

; 240  :         return;

	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _currentx264Profile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN26@SetWarning
$LN25@SetWarning:

; 241  :     }
; 242  : 
; 243  :     bool hasErrors = false;

	mov	BYTE PTR _hasErrors$[ebp], 0

; 244  :     bool canOptimize = false;

	mov	BYTE PTR _canOptimize$[ebp], 0

; 245  :     String strWarnings;

	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 246  : 
; 247  :     if (serviceID >= 0 && serviceID < (int)services.size())

	cmp	DWORD PTR _serviceID$[ebp], 0
	jl	$LN24@SetWarning
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?size@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QBEIXZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::size
	cmp	DWORD PTR _serviceID$[ebp], eax
	jge	$LN24@SetWarning

; 248  :     {
; 249  :         auto serviceData = LoadService(services[serviceID]);

	push	0
	mov	edx, DWORD PTR _serviceID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
	push	eax
	lea	eax, DWORD PTR _serviceData$10[ebp]
	push	eax
	call	?LoadService@@YA?AU?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@ABUServiceIdentifier@@PAVString@@@Z ; LoadService
	add	esp, 12					; 0000000cH

; 250  :         auto service = serviceData.second;

	mov	ecx, DWORD PTR _serviceData$10[ebp+4]
	mov	DWORD PTR _service$22[ebp], ecx

; 251  :         if (service)

	cmp	DWORD PTR _service$22[ebp], 0
	je	$LN5@SetWarning

; 252  :         {
; 253  :             strWarnings = FormattedString(Str("Settings.Publish.Warning.BadSettings"), service->GetName());

	mov	ecx, DWORD PTR _service$22[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	OFFSET $SG4294737491
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 254  : 
; 255  :             //check to see if the service we're using has recommendations
; 256  :             if (!service->HasItem(TEXT("recommended")))

	push	OFFSET $SG4294737490
	mov	ecx, DWORD PTR _service$22[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN22@SetWarning

; 257  :             {
; 258  :                 SetDlgItemText(hwnd, IDC_WARNINGS, TEXT(""));

	push	OFFSET $SG4294737489
	push	1030					; 00000406H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__SetDlgItemTextW@12

; 259  :                 return;

	lea	ecx, DWORD PTR _serviceData$10[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _currentx264Profile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN26@SetWarning
$LN22@SetWarning:

; 260  :             }
; 261  : 
; 262  :             XElement *r = service->GetElement(TEXT("recommended"));

	push	OFFSET $SG4294737488
	mov	ecx, DWORD PTR _service$22[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _r$23[ebp], eax

; 263  : 
; 264  :             if (r->HasItem(TEXT("ratecontrol")))

	push	OFFSET $SG4294737487
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@SetWarning

; 265  :             {
; 266  :                 CTSTR rc = r->GetString(TEXT("ratecontrol"));

	push	0
	push	OFFSET $SG4294737486
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _rc$13[ebp], eax

; 267  :                 if (!scmp(rc, TEXT("cbr")) && !bUseCBR)

	push	OFFSET $SG4294737485
	mov	edx, DWORD PTR _rc$13[ebp]
	push	edx
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN20@SetWarning
	movzx	eax, BYTE PTR _bUseCBR$[ebp]
	test	eax, eax
	jne	SHORT $LN20@SetWarning

; 268  :                 {
; 269  :                     hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 270  :                     canOptimize = true;

	mov	BYTE PTR _canOptimize$[ebp], 1

; 271  :                     strWarnings << Str("Settings.Publish.Warning.UseCBR");

	push	OFFSET $SG4294737484
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
$LN20@SetWarning:

; 272  :                 }
; 273  :             }
; 274  : 
; 275  :             if (r->HasItem(TEXT("max bitrate")))

	push	OFFSET $SG4294737483
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN18@SetWarning

; 276  :             {
; 277  :                 int max_bitrate = r->GetInt(TEXT("max bitrate"));

	push	0
	push	OFFSET $SG4294737482
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _max_bitrate$19[ebp], eax

; 278  :                 if (maxBitRate > max_bitrate)

	mov	eax, DWORD PTR _maxBitRate$[ebp]
	cmp	eax, DWORD PTR _max_bitrate$19[ebp]
	jle	SHORT $LN18@SetWarning

; 279  :                 {
; 280  :                     hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 281  :                     canOptimize = true;

	mov	BYTE PTR _canOptimize$[ebp], 1

; 282  :                     strWarnings << FormattedString(Str("Settings.Publish.Warning.Maxbitrate"), max_bitrate);

	mov	ecx, DWORD PTR _max_bitrate$19[ebp]
	push	ecx
	push	OFFSET $SG4294737481
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN18@SetWarning:

; 283  :                 }
; 284  :             }
; 285  : 
; 286  :             if (r->HasItem(L"supported audio codec"))

	push	OFFSET $SG4294737480
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN17@SetWarning

; 287  :             {
; 288  :                 StringList codecs;

	lea	ecx, DWORD PTR _codecs$16[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 289  :                 r->GetStringList(L"supported audio codec", codecs);

	lea	edx, DWORD PTR _codecs$16[ebp]
	push	edx
	push	OFFSET $SG4294737479
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetStringList@XElement@@QBEXPB_WAAVStringList@@@Z

; 290  :                 if (codecs.FindValueIndex(currentAudioCodec) == INVALID)

	lea	eax, DWORD PTR _currentAudioCodec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _codecs$16[ebp]
	call	DWORD PTR __imp_?FindValueIndex@?$List@VString@@@@QBEIABVString@@@Z
	cmp	eax, -1
	jne	SHORT $LN16@SetWarning

; 291  :                 {
; 292  :                     String msg = Str("Settings.Publish.Warning.UnsupportedAudioCodec"); //good thing OBS only supports MP3 (and AAC), otherwise I'd have to come up with a better translation solution

	push	OFFSET $SG4294737478
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _msg$15[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 293  :                     msg.FindReplace(L"$1", codecs[0].Array());

	push	0
	lea	ecx, DWORD PTR _codecs$16[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737477
	lea	ecx, DWORD PTR _msg$15[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 294  :                     msg.FindReplace(L"$2", currentAudioCodec.Array());

	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737476
	lea	ecx, DWORD PTR _msg$15[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 295  :                     hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 296  :                     canOptimize = true;

	mov	BYTE PTR _canOptimize$[ebp], 1

; 297  :                     strWarnings << msg;

	lea	edx, DWORD PTR _msg$15[ebp]
	push	edx
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z

; 298  :                 }

	lea	ecx, DWORD PTR _msg$15[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN16@SetWarning:

; 299  :             }

	lea	ecx, DWORD PTR _codecs$16[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
$LN17@SetWarning:

; 300  : 
; 301  :             if (r->HasItem(TEXT("max audio bitrate aac")) && (!scmp(currentAudioCodec, TEXT("AAC"))))

	push	OFFSET $SG4294737475
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@SetWarning
	push	OFFSET $SG4294737474
	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN14@SetWarning

; 302  :             {
; 303  :                 int maxaudioaac = r->GetInt(TEXT("max audio bitrate aac"));

	push	0
	push	OFFSET $SG4294737473
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _maxaudioaac$18[ebp], eax

; 304  :                 if (audioBitRate > maxaudioaac)

	mov	ecx, DWORD PTR _audioBitRate$[ebp]
	cmp	ecx, DWORD PTR _maxaudioaac$18[ebp]
	jle	SHORT $LN14@SetWarning

; 305  :                 {
; 306  :                     hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 307  :                     canOptimize = true;

	mov	BYTE PTR _canOptimize$[ebp], 1

; 308  :                     strWarnings << FormattedString(Str("Settings.Publish.Warning.MaxAudiobitrate"), maxaudioaac);

	mov	edx, DWORD PTR _maxaudioaac$18[ebp]
	push	edx
	push	OFFSET $SG4294737472
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN14@SetWarning:

; 309  :                 }
; 310  :             }
; 311  : 
; 312  :             if (r->HasItem(TEXT("max audio bitrate mp3")) && (!scmp(currentAudioCodec, TEXT("MP3"))))

	push	OFFSET $SG4294737471
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@SetWarning
	push	OFFSET $SG4294737470
	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN12@SetWarning

; 313  :             {
; 314  :                 int maxaudiomp3 = r->GetInt(TEXT("max audio bitrate mp3"));

	push	0
	push	OFFSET $SG4294737469
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _maxaudiomp3$20[ebp], eax

; 315  :                 if (audioBitRate > maxaudiomp3)

	mov	eax, DWORD PTR _audioBitRate$[ebp]
	cmp	eax, DWORD PTR _maxaudiomp3$20[ebp]
	jle	SHORT $LN12@SetWarning

; 316  :                 {
; 317  :                     hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 318  :                     canOptimize = true;

	mov	BYTE PTR _canOptimize$[ebp], 1

; 319  :                     strWarnings << FormattedString(Str("Settings.Publish.Warning.MaxAudiobitrate"), maxaudiomp3);

	mov	ecx, DWORD PTR _maxaudiomp3$20[ebp]
	push	ecx
	push	OFFSET $SG4294737468
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN12@SetWarning:

; 320  :                 }
; 321  :             }
; 322  : 
; 323  :             if (r->HasItem(L"video aspect ratio"))

	push	OFFSET $SG4294737467
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN11@SetWarning

; 324  :             {
; 325  :                 String aspectRatio = r->GetString(L"video aspect ratio");

	push	0
	push	OFFSET $SG4294737466
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _aspectRatio$8[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 326  :                 StringList numbers;

	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 327  :                 aspectRatio.GetTokenList(numbers, ':');

	push	1
	push	58					; 0000003aH
	lea	edx, DWORD PTR _numbers$21[ebp]
	push	edx
	lea	ecx, DWORD PTR _aspectRatio$8[ebp]
	call	DWORD PTR __imp_?GetTokenList@String@@QBEXAAVStringList@@_WH@Z

; 328  :                 if (numbers.Num() == 2)

	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	eax, 2
	jne	$LN9@SetWarning

; 329  :                 {
; 330  :                     float aspect = numbers[0].ToInt() / max(1.f, numbers[1].ToFloat());

	push	1
	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?ToFloat@String@@QBEMXZ
	fstp	DWORD PTR tv756[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR tv756[ebp]
	jbe	SHORT $LN32@SetWarning
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv491[ebp], xmm0
	jmp	SHORT $LN33@SetWarning
$LN32@SetWarning:
	push	1
	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?ToFloat@String@@QBEMXZ
	fstp	DWORD PTR tv491[ebp]
$LN33@SetWarning:
	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR tv491[ebp]
	movss	DWORD PTR _aspect$11[ebp], xmm0

; 331  :                     if (!CloseFloat(aspect, currentAspect))

	push	ecx
	movss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _currentAspect$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _aspect$11[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?CloseFloat@@YAHMMM@Z			; CloseFloat
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN9@SetWarning

; 332  :                     {
; 333  :                         String aspectLocalized = Str("Settings.Video.AspectRatioFormat");

	push	OFFSET $SG4294737465
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _aspectLocalized$14[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 334  :                         aspectLocalized.FindReplace(L"$1", UIntString(numbers[0].ToInt()));

	push	10					; 0000000aH
	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737464
	lea	ecx, DWORD PTR _aspectLocalized$14[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 335  :                         aspectLocalized.FindReplace(L"$2", UIntString(numbers[1].ToInt()));

	push	10					; 0000000aH
	push	10					; 0000000aH
	push	1
	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	DWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737463
	lea	ecx, DWORD PTR _aspectLocalized$14[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 336  : 
; 337  :                         String msg = Str("Settings.Publish.Warning.VideoAspectRatio");

	push	OFFSET $SG4294737462
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _msg$12[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 338  :                         msg.FindReplace(L"$1", aspectLocalized);

	lea	ecx, DWORD PTR _aspectLocalized$14[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737461
	lea	ecx, DWORD PTR _msg$12[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 339  :                         strWarnings << msg;

	lea	ecx, DWORD PTR _msg$12[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z

; 340  :                         hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 341  :                     }

	lea	ecx, DWORD PTR _msg$12[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _aspectLocalized$14[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@SetWarning:

; 342  :                 }
; 343  :             }

	lea	ecx, DWORD PTR _numbers$21[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
	lea	ecx, DWORD PTR _aspectRatio$8[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN11@SetWarning:

; 344  : 
; 345  :             if (r->HasItem(TEXT("profile")))

	push	OFFSET $SG4294737460
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@SetWarning

; 346  :             {
; 347  :                 String expectedProfile = r->GetString(TEXT("profile"));

	push	0
	push	OFFSET $SG4294737459
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _expectedProfile$9[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 348  : 
; 349  :                 if (!expectedProfile.CompareI(currentx264Profile))

	lea	ecx, DWORD PTR _currentx264Profile$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _expectedProfile$9[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	SHORT $LN7@SetWarning

; 350  :                 {
; 351  :                     hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 352  :                     canOptimize = true;

	mov	BYTE PTR _canOptimize$[ebp], 1

; 353  :                     strWarnings << Str("Settings.Publish.Warning.RecommendMainProfile");

	push	OFFSET $SG4294737458
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
$LN7@SetWarning:

; 354  :                 }
; 355  :             }

	lea	ecx, DWORD PTR _expectedProfile$9[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN8@SetWarning:

; 356  : 
; 357  :             if (r->HasItem(TEXT("keyint")))

	push	OFFSET $SG4294737457
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@SetWarning

; 358  :             {
; 359  :                 int keyint = r->GetInt(TEXT("keyint"));

	push	0
	push	OFFSET $SG4294737456
	mov	ecx, DWORD PTR _r$23[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _keyint$17[ebp], eax

; 360  :                 if (!keyframeInt || keyframeInt * 1000 > keyint)

	cmp	DWORD PTR _keyframeInt$[ebp], 0
	je	SHORT $LN4@SetWarning
	imul	edx, DWORD PTR _keyframeInt$[ebp], 1000
	cmp	edx, DWORD PTR _keyint$17[ebp]
	jle	SHORT $LN5@SetWarning
$LN4@SetWarning:

; 361  :                 {
; 362  :                     hasErrors = true;

	mov	BYTE PTR _hasErrors$[ebp], 1

; 363  :                     canOptimize = true;

	mov	BYTE PTR _canOptimize$[ebp], 1

; 364  :                     strWarnings << FormattedString(Str("Settings.Publish.Warning.Keyint"), keyint / 1000);

	mov	eax, DWORD PTR _keyint$17[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	push	eax
	push	OFFSET $SG4294737455
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN5@SetWarning:

; 365  :                 }
; 366  :             }
; 367  :         }
; 368  :     }

	lea	ecx, DWORD PTR _serviceData$10[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
$LN24@SetWarning:

; 369  : 
; 370  :     if (hasErrors)

	movzx	ecx, BYTE PTR _hasErrors$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@SetWarning

; 371  :     {
; 372  :         if (canOptimize)

	movzx	edx, BYTE PTR _canOptimize$[ebp]
	test	edx, edx
	je	SHORT $LN2@SetWarning

; 373  :             strWarnings << Str("Settings.Publish.Warning.CanOptimize");

	push	OFFSET $SG4294737454
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
$LN2@SetWarning:

; 374  :         SetDlgItemText(hwnd, IDC_WARNINGS, strWarnings.Array());

	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1030					; 00000406H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__SetDlgItemTextW@12

; 375  :     }
; 376  :     else

	jmp	SHORT $LN1@SetWarning
$LN3@SetWarning:

; 377  :         SetDlgItemText(hwnd, IDC_WARNINGS, TEXT(""));

	push	OFFSET $SG4294737453
	push	1030					; 00000406H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextW@12
$LN1@SetWarning:

; 378  :     SetCanOptimizeSettings(canOptimize);

	movzx	edx, BYTE PTR _canOptimize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetCanOptimizeSettings@SettingsPane@@IAEX_N@Z

; 379  : }

	lea	ecx, DWORD PTR _strWarnings$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _currentx264Profile$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN26@SetWarning:
	mov	esp, ebp
	pop	ebp
	ret	0
?SetWarningInfo@SettingsPublish@@AAEXXZ ENDP		; SettingsPublish::SetWarningInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?UpdateMemoryUsage@@YAXPAUHWND__@@@Z
_TEXT	SEGMENT
tv181 = -80						; size = 8
_memory$ = -72						; size = 8
_error$ = -64						; size = 4
_maxBitRate$ = -60					; size = 4
_max_kbits$ = -56					; size = 8
_audioBitRate$ = -48					; size = 4
_replayBufferLength$ = -44				; size = 4
_keyframeInt$ = -40					; size = 4
_ms$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
?UpdateMemoryUsage@@YAXPAUHWND__@@@Z PROC		; UpdateMemoryUsage, COMDAT

; 382  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 383  :     int maxBitRate = AppConfig->GetInt(L"Video Encoding", L"MaxBitrate", 1000);

	push	1000					; 000003e8H
	push	OFFSET $SG4294737452
	push	OFFSET $SG4294737451
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _maxBitRate$[ebp], eax

; 384  :     int keyframeInt = AppConfig->GetInt(L"Video Encoding", L"KeyframeInterval", 0);

	push	0
	push	OFFSET $SG4294737450
	push	OFFSET $SG4294737449
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _keyframeInt$[ebp], eax

; 385  :     int audioBitRate = AppConfig->GetInt(L"Audio Encoding", L"Bitrate", 96);

	push	96					; 00000060H
	push	OFFSET $SG4294737448
	push	OFFSET $SG4294737447
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _audioBitRate$[ebp], eax

; 386  : 
; 387  :     if (keyframeInt <= 0)

	cmp	DWORD PTR _keyframeInt$[ebp], 0
	jg	SHORT $LN2@UpdateMemo

; 388  :         keyframeInt = 5; // x264 and QSV seem to use a bit over 4 seconds of keyframe interval by default

	mov	DWORD PTR _keyframeInt$[ebp], 5
$LN2@UpdateMemo:

; 389  : 
; 390  :     BOOL error;
; 391  :     int replayBufferLength = (int)SendMessage(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH), UDM_GETPOS32, 0, (LPARAM)&error);

	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	push	1138					; 00000472H
	push	1086					; 0000043eH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _replayBufferLength$[ebp], eax

; 392  :     if (error)

	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN1@UpdateMemo

; 393  :         SendMessage(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH), UDM_SETPOS32, 0, replayBufferLength);

	mov	edx, DWORD PTR _replayBufferLength$[ebp]
	push	edx
	push	0
	push	1137					; 00000471H
	push	1086					; 0000043eH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN1@UpdateMemo:

; 394  : 
; 395  :     long long max_kbits = (maxBitRate + audioBitRate) * (keyframeInt * 2 + replayBufferLength);

	mov	eax, DWORD PTR _maxBitRate$[ebp]
	add	eax, DWORD PTR _audioBitRate$[ebp]
	mov	ecx, DWORD PTR _keyframeInt$[ebp]
	mov	edx, DWORD PTR _replayBufferLength$[ebp]
	lea	ecx, DWORD PTR [edx+ecx*2]
	imul	eax, ecx
	cdq
	mov	DWORD PTR _max_kbits$[ebp], eax
	mov	DWORD PTR _max_kbits$[ebp+4], edx

; 396  : 
; 397  :     MEMORYSTATUS ms;
; 398  :     GlobalMemoryStatus(&ms);

	lea	edx, DWORD PTR _ms$[ebp]
	push	edx
	call	DWORD PTR __imp__GlobalMemoryStatus@4

; 399  : 
; 400  :     String memory = FormattedString(L"%d / %d", (int)ceil(max_kbits * 1000. / 1024. / 1024. / 8.), ms.dwTotalPhys / 1024 / 1024);

	mov	eax, DWORD PTR _ms$[ebp+8]
	shr	eax, 10					; 0000000aH
	shr	eax, 10					; 0000000aH
	push	eax
	mov	edx, DWORD PTR _max_kbits$[ebp+4]
	mov	ecx, DWORD PTR _max_kbits$[ebp]
	call	__ltod3
	mulsd	xmm0, QWORD PTR __real@408f400000000000
	divsd	xmm0, QWORD PTR __real@4090000000000000
	divsd	xmm0, QWORD PTR __real@4090000000000000
	divsd	xmm0, QWORD PTR __real@4020000000000000
	movsd	QWORD PTR tv181[ebp], xmm0
	fld	QWORD PTR tv181[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_ceil
	add	esp, 8
	call	__ftol2_sse
	push	eax
	push	OFFSET $SG4294737446
	lea	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H

; 401  :     SetWindowText(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY), memory.Array());

	lea	ecx, DWORD PTR _memory$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	1182					; 0000049eH
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 402  : }

	lea	ecx, DWORD PTR _memory$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateMemoryUsage@@YAXPAUHWND__@@@Z ENDP		; UpdateMemoryUsage
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?OptimizeSettings@SettingsPublish@@UAEXXZ
_TEXT	SEGMENT
$T1 = -408						; size = 8
$T2 = -400						; size = 8
$T3 = -392						; size = 8
$T4 = -384						; size = 4
$T5 = -380						; size = 8
$T6 = -372						; size = 8
$T7 = -364						; size = 8
$T8 = -356						; size = 8
$T9 = -348						; size = 4
$T10 = -344						; size = 8
$T11 = -336						; size = 4
$T12 = -332						; size = 4
$T13 = -328						; size = 4
_currentx264Profile$14 = -324				; size = 8
_rc$15 = -316						; size = 4
_i$16 = -312						; size = 4
_maxBitrate$17 = -308					; size = 4
_codec$18 = -304					; size = 8
_$S4$19 = -296						; size = 4
_expectedProfile$20 = -292				; size = 8
_codecs$21 = -284					; size = 8
tv173 = -276						; size = 4
_audioBitrate$ = -272					; size = 4
_currentAudioCodec$ = -268				; size = 8
_keyframeInt$22 = -260					; size = 4
_$S2$23 = -256						; size = 4
_serviceData$ = -252					; size = 8
_refresh_on_exit$ = -244				; size = 8
_optimizers$ = -236					; size = 12
_keyint$24 = -224					; size = 4
$T25 = -217						; size = 1
_maxaudiomp3$26 = -216					; size = 4
_maxaudioaac$27 = -212					; size = 4
_max_bitrate$28 = -208					; size = 4
_serviceID$ = -204					; size = 4
_service$ = -200					; size = 4
_$S3$29 = -196						; size = 4
_changes$ = -192					; size = 8
_this$ = -184						; size = 4
_useCBR$30 = -177					; size = 1
_r$ = -176						; size = 4
$T31 = -172						; size = 24
$T32 = -148						; size = 24
$T33 = -124						; size = 24
$T34 = -100						; size = 24
$T35 = -76						; size = 24
$T36 = -52						; size = 24
$T37 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
?OptimizeSettings@SettingsPublish@@UAEXXZ PROC		; SettingsPublish::OptimizeSettings, COMDAT
; _this$ = ecx

; 405  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 408				; 00000198H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 406  :     auto refresh_on_exit = GuardScope([&] { SetWarningInfo(); UpdateMemoryUsage(hwnd); });

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	call	??0<lambda_fb5381c6e5f844a400209822574a410a>@@QAE@PAVSettingsPublish@@@Z ; <lambda_fb5381c6e5f844a400209822574a410a>::<lambda_fb5381c6e5f844a400209822574a410a>
	push	eax
	lea	ecx, DWORD PTR _refresh_on_exit$[ebp]
	push	ecx
	call	??$GuardScope@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@YA?AU?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@@Z ; GuardScope<<lambda_fb5381c6e5f844a400209822574a410a> >
	add	esp, 8

; 407  : 
; 408  :     int serviceID = (int)SendMessage(GetDlgItem(hwnd, IDC_SERVICE), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1014					; 000003f6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _serviceID$[ebp], eax

; 409  :     if (serviceID < 0 || serviceID >= (int)services.size())

	cmp	DWORD PTR _serviceID$[ebp], 0
	jl	SHORT $LN23@OptimizeSe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?size@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QBEIXZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::size
	cmp	DWORD PTR _serviceID$[ebp], eax
	jl	SHORT $LN24@OptimizeSe
$LN23@OptimizeSe:

; 410  :         return;

	lea	ecx, DWORD PTR _refresh_on_exit$[ebp]
	call	??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
	jmp	$LN25@OptimizeSe
$LN24@OptimizeSe:

; 411  : 
; 412  :     auto serviceData = LoadService(services[serviceID]);

	push	0
	mov	ecx, DWORD PTR _serviceID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
	push	eax
	lea	edx, DWORD PTR _serviceData$[ebp]
	push	edx
	call	?LoadService@@YA?AU?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@ABUServiceIdentifier@@PAVString@@@Z ; LoadService
	add	esp, 12					; 0000000cH

; 413  :     auto service = serviceData.second;

	mov	eax, DWORD PTR _serviceData$[ebp+4]
	mov	DWORD PTR _service$[ebp], eax

; 414  :     if (!service)

	cmp	DWORD PTR _service$[ebp], 0
	jne	SHORT $LN22@OptimizeSe

; 415  :         return;

	lea	ecx, DWORD PTR _serviceData$[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
	lea	ecx, DWORD PTR _refresh_on_exit$[ebp]
	call	??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
	jmp	$LN25@OptimizeSe
$LN22@OptimizeSe:

; 416  :     
; 417  :     //check to see if the service we're using has recommendations
; 418  :     if (!service->HasItem(L"recommended"))

	push	OFFSET $SG4294737445
	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN21@OptimizeSe

; 419  :         return;

	lea	ecx, DWORD PTR _serviceData$[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
	lea	ecx, DWORD PTR _refresh_on_exit$[ebp]
	call	??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
	jmp	$LN25@OptimizeSe
$LN21@OptimizeSe:

; 420  : 
; 421  :     XElement *r = service->GetElement(L"recommended");

	push	OFFSET $SG4294737444
	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _r$[ebp], eax

; 422  :     if (!r)

	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN20@OptimizeSe

; 423  :         return;

	lea	ecx, DWORD PTR _serviceData$[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
	lea	ecx, DWORD PTR _refresh_on_exit$[ebp]
	call	??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
	jmp	$LN25@OptimizeSe
$LN20@OptimizeSe:

; 424  : 
; 425  :     using optimizers_t = std::vector<std::function<void()>>;
; 426  :     optimizers_t optimizers;

	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	??0?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >

; 427  : 
; 428  :     String changes = Str("Settings.Publish.Optimize.Optimizations");

	push	OFFSET $SG4294737443
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 429  : 
; 430  :     String currentAudioCodec = AppConfig->GetString(L"Audio Encoding", L"Codec", L"AAC");

	push	OFFSET $SG4294737442
	push	OFFSET $SG4294737441
	push	OFFSET $SG4294737440
	lea	eax, DWORD PTR _currentAudioCodec$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 431  :     int audioBitrate = AppConfig->GetInt(L"Audio Encoding", L"Bitrate", 96);

	push	96					; 00000060H
	push	OFFSET $SG4294737439
	push	OFFSET $SG4294737438
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _audioBitrate$[ebp], eax

; 432  : 
; 433  :     if (r->HasItem(L"ratecontrol"))

	push	OFFSET $SG4294737437
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN19@OptimizeSe

; 434  :     {
; 435  :         bool useCBR = AppConfig->GetInt(L"Video Encoding", L"UseCBR", 1) != 0;

	push	1
	push	OFFSET $SG4294737436
	push	OFFSET $SG4294737435
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	test	eax, eax
	je	SHORT $LN27@OptimizeSe
	mov	DWORD PTR tv173[ebp], 1
	jmp	SHORT $LN28@OptimizeSe
$LN27@OptimizeSe:
	mov	DWORD PTR tv173[ebp], 0
$LN28@OptimizeSe:
	mov	dl, BYTE PTR tv173[ebp]
	mov	BYTE PTR _useCBR$30[ebp], dl

; 436  :         CTSTR rc = r->GetString(L"ratecontrol");

	push	0
	push	OFFSET $SG4294737434
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	mov	DWORD PTR _rc$15[ebp], eax

; 437  :         if (!scmp(rc, L"cbr") && !useCBR)

	push	OFFSET $SG4294737433
	mov	eax, DWORD PTR _rc$15[ebp]
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	SHORT $LN19@OptimizeSe
	movzx	ecx, BYTE PTR _useCBR$30[ebp]
	test	ecx, ecx
	jne	SHORT $LN19@OptimizeSe

; 438  :         {
; 439  :             optimizers.push_back([] { AppConfig->SetInt(L"Video Encoding", L"UseCBR", 1); });

	lea	edx, DWORD PTR $T25[ebp]
	push	edx
	lea	ecx, DWORD PTR $T31[ebp]
	call	??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_5b58d388793fe563bc112a2536ab3933> >
	lea	eax, DWORD PTR $T31[ebp]
	push	eax
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>

; 440  :             changes << Str("Settings.Publish.Optimize.UseCBR");

	push	OFFSET $SG4294737432
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
$LN19@OptimizeSe:

; 441  :         }
; 442  :     }
; 443  : 
; 444  :     if (r->HasItem(L"max bitrate"))

	push	OFFSET $SG4294737431
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	edx, al
	test	edx, edx
	je	$LN17@OptimizeSe

; 445  :     {
; 446  :         int maxBitrate = AppConfig->GetInt(L"Video Encoding", L"MaxBitrate", 1000);

	push	1000					; 000003e8H
	push	OFFSET $SG4294737430
	push	OFFSET $SG4294737429
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _maxBitrate$17[ebp], eax

; 447  :         int max_bitrate = r->GetInt(L"max bitrate");

	push	0
	push	OFFSET $SG4294737428
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _max_bitrate$28[ebp], eax

; 448  :         if (maxBitrate > max_bitrate)

	mov	eax, DWORD PTR _maxBitrate$17[ebp]
	cmp	eax, DWORD PTR _max_bitrate$28[ebp]
	jle	SHORT $LN17@OptimizeSe

; 449  :         {
; 450  :             optimizers.push_back([max_bitrate] { AppConfig->SetInt(L"Video Encoding", L"MaxBitrate", max_bitrate); });

	lea	ecx, DWORD PTR _max_bitrate$28[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QAE@ABH@Z ; <lambda_c4599be8aa20546a4c0f056de45f81e0>::<lambda_c4599be8aa20546a4c0f056de45f81e0>
	push	eax
	lea	ecx, DWORD PTR $T32[ebp]
	call	??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	lea	edx, DWORD PTR $T32[ebp]
	push	edx
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
	lea	ecx, DWORD PTR $T32[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>

; 451  :             changes << FormattedString(Str("Settings.Publish.Optimize.Maxbitrate"), max_bitrate);

	mov	eax, DWORD PTR _max_bitrate$28[ebp]
	push	eax
	push	OFFSET $SG4294737427
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN17@OptimizeSe:

; 452  :         }
; 453  :     }
; 454  : 
; 455  :     if (r->HasItem(L"supported audio codec"))

	push	OFFSET $SG4294737426
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	eax, al
	test	eax, eax
	je	$LN15@OptimizeSe

; 456  :     {
; 457  :         StringList codecs;

	lea	ecx, DWORD PTR _codecs$21[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 458  :         r->GetStringList(L"supported audio codec", codecs);

	lea	ecx, DWORD PTR _codecs$21[ebp]
	push	ecx
	push	OFFSET $SG4294737425
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?GetStringList@XElement@@QBEXPB_WAAVStringList@@@Z

; 459  :         if (codecs.FindValueIndex(currentAudioCodec) == INVALID)

	lea	edx, DWORD PTR _currentAudioCodec$[ebp]
	push	edx
	lea	ecx, DWORD PTR _codecs$21[ebp]
	call	DWORD PTR __imp_?FindValueIndex@?$List@VString@@@@QBEIABVString@@@Z
	cmp	eax, -1
	jne	$LN14@OptimizeSe

; 460  :         {
; 461  :             String codec = codecs[0];

	push	0
	lea	ecx, DWORD PTR _codecs$21[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	push	eax
	lea	ecx, DWORD PTR _codec$18[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z

; 462  :             optimizers.push_back([codec]
; 463  :             {
; 464  :                 AppConfig->SetString(L"Audio Encoding", L"Codec", codec.Array());
; 465  :                 AppConfig->SetInt(L"Audio Encoding", L"Format", codec.CompareI(L"AAC") ? 1 : 0); //set to 44.1 kHz in case of MP3, see SettingsEncoding.cpp
; 466  :             });

	lea	eax, DWORD PTR _codec$18[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABVString@@@Z ; <lambda_07b41efe5098b34c18964d3f394ff711>::<lambda_07b41efe5098b34c18964d3f394ff711>
	push	eax
	lea	ecx, DWORD PTR $T34[ebp]
	call	??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_07b41efe5098b34c18964d3f394ff711> >
	lea	ecx, DWORD PTR $T34[ebp]
	push	ecx
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
	lea	ecx, DWORD PTR $T34[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@XZ

; 467  :             changes << FormattedString(Str("Settings.Publish.Optimize.UnsupportedAudioCodec"), codec.Array());

	lea	ecx, DWORD PTR _codec$18[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737424
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 468  :         }

	lea	ecx, DWORD PTR _codec$18[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN14@OptimizeSe:

; 469  :     }

	lea	ecx, DWORD PTR _codecs$21[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
$LN15@OptimizeSe:

; 470  : 
; 471  :     if (r->HasItem(L"max audio bitrate aac") && (!scmp(currentAudioCodec, L"AAC")))

	push	OFFSET $SG4294737423
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN13@OptimizeSe
	push	OFFSET $SG4294737422
	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN13@OptimizeSe

; 472  :     {
; 473  :         int maxaudioaac = r->GetInt(L"max audio bitrate aac");

	push	0
	push	OFFSET $SG4294737421
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _maxaudioaac$27[ebp], eax

; 474  :         if (audioBitrate > maxaudioaac)

	mov	edx, DWORD PTR _audioBitrate$[ebp]
	cmp	edx, DWORD PTR _maxaudioaac$27[ebp]
	jle	SHORT $LN13@OptimizeSe

; 475  :         {
; 476  :             optimizers.push_back([maxaudioaac] { AppConfig->SetInt(L"Audio Encoding", L"Bitrate", maxaudioaac); });

	lea	eax, DWORD PTR _maxaudioaac$27[ebp]
	push	eax
	lea	ecx, DWORD PTR $T12[ebp]
	call	??0<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QAE@ABH@Z ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>::<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>
	push	eax
	lea	ecx, DWORD PTR $T36[ebp]
	call	??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	lea	ecx, DWORD PTR $T36[ebp]
	push	ecx
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>

; 477  :             changes << FormattedString(Str("Settings.Publish.Optimize.MaxAudiobitrate"), maxaudioaac);

	mov	edx, DWORD PTR _maxaudioaac$27[ebp]
	push	edx
	push	OFFSET $SG4294737420
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN13@OptimizeSe:

; 478  :         }
; 479  :     }
; 480  : 
; 481  :     if (r->HasItem(L"max audio bitrate mp3") && (!scmp(currentAudioCodec, L"MP3")))

	push	OFFSET $SG4294737419
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	edx, al
	test	edx, edx
	je	$LN11@OptimizeSe
	push	OFFSET $SG4294737418
	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?scmp@@YGHPB_W0@Z
	test	eax, eax
	jne	$LN11@OptimizeSe

; 482  :     {
; 483  :         int maxaudiomp3 = r->GetInt(L"max audio bitrate mp3");

	push	0
	push	OFFSET $SG4294737417
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _maxaudiomp3$26[ebp], eax

; 484  :         if (audioBitrate > maxaudiomp3)

	mov	eax, DWORD PTR _audioBitrate$[ebp]
	cmp	eax, DWORD PTR _maxaudiomp3$26[ebp]
	jle	SHORT $LN11@OptimizeSe

; 485  :         {
; 486  :             optimizers.push_back([maxaudiomp3] { AppConfig->SetInt(L"Audio Encoding", L"Bitrate", maxaudiomp3); });

	lea	ecx, DWORD PTR _maxaudiomp3$26[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T11[ebp]
	call	??0<lambda_624bb9d9f3cde644ba29e7729588d586>@@QAE@ABH@Z ; <lambda_624bb9d9f3cde644ba29e7729588d586>::<lambda_624bb9d9f3cde644ba29e7729588d586>
	push	eax
	lea	ecx, DWORD PTR $T33[ebp]
	call	??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_624bb9d9f3cde644ba29e7729588d586> >
	lea	edx, DWORD PTR $T33[ebp]
	push	edx
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
	lea	ecx, DWORD PTR $T33[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>

; 487  :             changes << FormattedString(Str("Settings.Publish.Optimize.MaxAudiobitrate"), maxaudiomp3);

	mov	eax, DWORD PTR _maxaudiomp3$26[ebp]
	push	eax
	push	OFFSET $SG4294737416
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN11@OptimizeSe:

; 488  :         }
; 489  :     }
; 490  : 
; 491  :     if (r->HasItem(L"profile"))

	push	OFFSET $SG4294737415
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	eax, al
	test	eax, eax
	je	$LN9@OptimizeSe

; 492  :     {
; 493  :         String currentx264Profile = AppConfig->GetString(L"Video Encoding", L"X264Profile", L"high");

	push	OFFSET $SG4294737414
	push	OFFSET $SG4294737413
	push	OFFSET $SG4294737412
	lea	ecx, DWORD PTR _currentx264Profile$14[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetString@ConfigFile@@QAE?AVString@@PB_W00@Z

; 494  :         String expectedProfile = r->GetString(L"profile");

	push	0
	push	OFFSET $SG4294737411
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?GetString@XElement@@QBEPB_WPB_WPA_W@Z
	push	eax
	lea	ecx, DWORD PTR _expectedProfile$20[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 495  :         if (!expectedProfile.CompareI(currentx264Profile))

	lea	ecx, DWORD PTR _currentx264Profile$14[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _expectedProfile$20[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	$LN8@OptimizeSe

; 496  :         {
; 497  :             optimizers.push_back([expectedProfile] { AppConfig->SetString(L"Video Encoding", L"X264Profile", expectedProfile); });

	lea	edx, DWORD PTR _expectedProfile$20[ebp]
	push	edx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABVString@@@Z ; <lambda_8499d2186312c49ebbd56f30c74af45d>::<lambda_8499d2186312c49ebbd56f30c74af45d>
	push	eax
	lea	ecx, DWORD PTR $T35[ebp]
	call	??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_8499d2186312c49ebbd56f30c74af45d> >
	lea	eax, DWORD PTR $T35[ebp]
	push	eax
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
	lea	ecx, DWORD PTR $T35[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@XZ

; 498  :             changes << FormattedString(Str("Settings.Publish.Optimize.RecommendMainProfile"), expectedProfile.Array());

	lea	ecx, DWORD PTR _expectedProfile$20[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737410
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN8@OptimizeSe:

; 499  :         }
; 500  :     }

	lea	ecx, DWORD PTR _expectedProfile$20[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _currentx264Profile$14[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@OptimizeSe:

; 501  : 
; 502  :     if (r->HasItem(L"keyint"))

	push	OFFSET $SG4294737409
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?HasItem@XElement@@QBE_NPB_W@Z
	movzx	eax, al
	test	eax, eax
	je	$LN7@OptimizeSe

; 503  :     {
; 504  :         int keyframeInt = AppConfig->GetInt(L"Video Encoding", L"KeyframeInterval", 0);

	push	0
	push	OFFSET $SG4294737408
	push	OFFSET $SG4294737407
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _keyframeInt$22[ebp], eax

; 505  :         int keyint = r->GetInt(L"keyint");

	push	0
	push	OFFSET $SG4294737406
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?GetInt@XElement@@QBEHPB_WH@Z
	mov	DWORD PTR _keyint$24[ebp], eax

; 506  :         if (!keyframeInt || keyframeInt * 1000 > keyint)

	cmp	DWORD PTR _keyframeInt$22[ebp], 0
	je	SHORT $LN5@OptimizeSe
	imul	ecx, DWORD PTR _keyframeInt$22[ebp], 1000
	cmp	ecx, DWORD PTR _keyint$24[ebp]
	jle	SHORT $LN7@OptimizeSe
$LN5@OptimizeSe:

; 507  :         {
; 508  :             optimizers.push_back([keyint] { AppConfig->SetInt(L"Video Encoding", L"KeyframeInterval", keyint / 1000); });

	lea	edx, DWORD PTR _keyint$24[ebp]
	push	edx
	lea	ecx, DWORD PTR $T13[ebp]
	call	??0<lambda_424e07199e07f172c211b579b41a0f6b>@@QAE@ABH@Z ; <lambda_424e07199e07f172c211b579b41a0f6b>::<lambda_424e07199e07f172c211b579b41a0f6b>
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	call	??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_424e07199e07f172c211b579b41a0f6b> >
	lea	eax, DWORD PTR $T37[ebp]
	push	eax
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>

; 509  :             changes << FormattedString(Str("Settings.Publish.Optimize.Keyint"), keyint / 1000);

	mov	eax, DWORD PTR _keyint$24[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	push	eax
	push	OFFSET $SG4294737405
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T8[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN7@OptimizeSe:

; 510  :         }
; 511  :     }
; 512  : 
; 513  :     if (OBSMessageBox(hwnd, changes.Array(), Str("Optimize"), MB_OKCANCEL | MB_ICONINFORMATION) != IDOK)

	push	65					; 00000041H
	push	OFFSET $SG4294737404
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp_?OBSMessageBox@@YAHPAUHWND__@@PB_W1I@Z
	add	esp, 16					; 00000010H
	cmp	eax, 1
	je	SHORT $LN4@OptimizeSe

; 514  :         return;

	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	??1?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
	lea	ecx, DWORD PTR _serviceData$[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
	lea	ecx, DWORD PTR _refresh_on_exit$[ebp]
	call	??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
	jmp	$LN25@OptimizeSe
$LN4@OptimizeSe:

; 515  : 
; 516  :     for (optimizers_t::const_reference i : optimizers)

	lea	ecx, DWORD PTR _optimizers$[ebp]
	mov	DWORD PTR _$S2$23[ebp], ecx
	lea	edx, DWORD PTR _$S3$29[ebp]
	push	edx
	mov	ecx, DWORD PTR _$S2$23[ebp]
	call	?begin@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::begin
	lea	eax, DWORD PTR _$S4$19[ebp]
	push	eax
	mov	ecx, DWORD PTR _$S2$23[ebp]
	call	?end@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::end
	jmp	SHORT $LN3@OptimizeSe
$LN2@OptimizeSe:
	lea	ecx, DWORD PTR _$S3$29[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++
$LN3@OptimizeSe:
	lea	ecx, DWORD PTR _$S4$19[ebp]
	push	ecx
	lea	ecx, DWORD PTR _$S3$29[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@OptimizeSe
	lea	ecx, DWORD PTR _$S3$29[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEAAV?$function@$$A6AXXZ@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*
	mov	DWORD PTR _i$16[ebp], eax

; 517  :         i();

	mov	ecx, DWORD PTR _i$16[ebp]
	call	??R?$_Func_class@X$$$V@std@@QBEXXZ	; std::_Func_class<void>::operator()
	jmp	SHORT $LN2@OptimizeSe
$LN1@OptimizeSe:

; 518  : }

	lea	ecx, DWORD PTR _currentAudioCodec$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _changes$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _optimizers$[ebp]
	call	??1?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
	lea	ecx, DWORD PTR _serviceData$[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
	lea	ecx, DWORD PTR _refresh_on_exit$[ebp]
	call	??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
$LN25@OptimizeSe:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?OptimizeSettings@SettingsPublish@@UAEXXZ ENDP		; SettingsPublish::OptimizeSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_fb5381c6e5f844a400209822574a410a>@@QAE@PAVSettingsPublish@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
??0<lambda_fb5381c6e5f844a400209822574a410a>@@QAE@PAVSettingsPublish@@@Z PROC ; <lambda_fb5381c6e5f844a400209822574a410a>::<lambda_fb5381c6e5f844a400209822574a410a>, COMDAT
; _this$ = ecx

; 406  :     auto refresh_on_exit = GuardScope([&] { SetWarningInfo(); UpdateMemoryUsage(hwnd); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_fb5381c6e5f844a400209822574a410a>@@QAE@PAVSettingsPublish@@@Z ENDP ; <lambda_fb5381c6e5f844a400209822574a410a>::<lambda_fb5381c6e5f844a400209822574a410a>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_fb5381c6e5f844a400209822574a410a>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_fb5381c6e5f844a400209822574a410a>@@QBEXXZ PROC ; <lambda_fb5381c6e5f844a400209822574a410a>::operator(), COMDAT
; _this$ = ecx

; 406  :     auto refresh_on_exit = GuardScope([&] { SetWarningInfo(); UpdateMemoryUsage(hwnd); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetWarningInfo@SettingsPublish@@AAEXXZ	; SettingsPublish::SetWarningInfo
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?UpdateMemoryUsage@@YAXPAUHWND__@@@Z	; UpdateMemoryUsage
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_fb5381c6e5f844a400209822574a410a>@@QBEXXZ ENDP ; <lambda_fb5381c6e5f844a400209822574a410a>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_5b58d388793fe563bc112a2536ab3933>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_5b58d388793fe563bc112a2536ab3933>@@QBEXXZ PROC ; <lambda_5b58d388793fe563bc112a2536ab3933>::operator(), COMDAT
; _this$ = ecx

; 439  :             optimizers.push_back([] { AppConfig->SetInt(L"Video Encoding", L"UseCBR", 1); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	OFFSET $SG4294737403
	push	OFFSET $SG4294737402
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_5b58d388793fe563bc112a2536ab3933>@@QBEXXZ ENDP ; <lambda_5b58d388793fe563bc112a2536ab3933>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?<helper_func_cdecl>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CAXXZ
_TEXT	SEGMENT
?<helper_func_cdecl>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CAXXZ PROC ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_cdecl>, COMDAT

; 439  :             optimizers.push_back([] { AppConfig->SetInt(L"Video Encoding", L"UseCBR", 1); });

	push	ebp
	mov	ebp, esp
	push	1
	push	OFFSET $SG4294737401
	push	OFFSET $SG4294737400
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	pop	ebp
	ret	0
?<helper_func_cdecl>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CAXXZ ENDP ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_cdecl>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?<helper_func_stdcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CGXXZ
_TEXT	SEGMENT
?<helper_func_stdcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CGXXZ PROC ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_stdcall>, COMDAT

; 439  :             optimizers.push_back([] { AppConfig->SetInt(L"Video Encoding", L"UseCBR", 1); });

	push	ebp
	mov	ebp, esp
	push	1
	push	OFFSET $SG4294737399
	push	OFFSET $SG4294737398
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	pop	ebp
	ret	0
?<helper_func_stdcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CGXXZ ENDP ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_stdcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?<helper_func_fastcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CIXXZ
_TEXT	SEGMENT
?<helper_func_fastcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CIXXZ PROC ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_fastcall>, COMDAT

; 439  :             optimizers.push_back([] { AppConfig->SetInt(L"Video Encoding", L"UseCBR", 1); });

	push	ebp
	mov	ebp, esp
	push	1
	push	OFFSET $SG4294737397
	push	OFFSET $SG4294737396
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	pop	ebp
	ret	0
?<helper_func_fastcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CIXXZ ENDP ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_fastcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?<helper_func_vectorcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CQXXZ
_TEXT	SEGMENT
?<helper_func_vectorcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CQXXZ PROC ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_vectorcall>, COMDAT

; 439  :             optimizers.push_back([] { AppConfig->SetInt(L"Video Encoding", L"UseCBR", 1); });

	push	ebp
	mov	ebp, esp
	push	1
	push	OFFSET $SG4294737395
	push	OFFSET $SG4294737394
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	pop	ebp
	ret	0
?<helper_func_vectorcall>@<lambda_5b58d388793fe563bc112a2536ab3933>@@CQXXZ ENDP ; <lambda_5b58d388793fe563bc112a2536ab3933>::<helper_func_vectorcall>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QAE@ABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___max_bitrate$ = 8					; size = 4
??0<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QAE@ABH@Z PROC ; <lambda_c4599be8aa20546a4c0f056de45f81e0>::<lambda_c4599be8aa20546a4c0f056de45f81e0>, COMDAT
; _this$ = ecx

; 450  :             optimizers.push_back([max_bitrate] { AppConfig->SetInt(L"Video Encoding", L"MaxBitrate", max_bitrate); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___max_bitrate$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QAE@ABH@Z ENDP ; <lambda_c4599be8aa20546a4c0f056de45f81e0>::<lambda_c4599be8aa20546a4c0f056de45f81e0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QBEXXZ PROC ; <lambda_c4599be8aa20546a4c0f056de45f81e0>::operator(), COMDAT
; _this$ = ecx

; 450  :             optimizers.push_back([max_bitrate] { AppConfig->SetInt(L"Video Encoding", L"MaxBitrate", max_bitrate); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG4294737393
	push	OFFSET $SG4294737392
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QBEXXZ ENDP ; <lambda_c4599be8aa20546a4c0f056de45f81e0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABVString@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___codec$ = 8						; size = 4
??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABVString@@@Z PROC ; <lambda_07b41efe5098b34c18964d3f394ff711>::<lambda_07b41efe5098b34c18964d3f394ff711>, COMDAT
; _this$ = ecx

; 466  :             });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___codec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABVString@@@Z ENDP ; <lambda_07b41efe5098b34c18964d3f394ff711>::<lambda_07b41efe5098b34c18964d3f394ff711>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_07b41efe5098b34c18964d3f394ff711>@@QBEXXZ
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
??R<lambda_07b41efe5098b34c18964d3f394ff711>@@QBEXXZ PROC ; <lambda_07b41efe5098b34c18964d3f394ff711>::operator(), COMDAT
; _this$ = ecx

; 463  :             {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 464  :                 AppConfig->SetString(L"Audio Encoding", L"Codec", codec.Array());

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737391
	push	OFFSET $SG4294737390
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 465  :                 AppConfig->SetInt(L"Audio Encoding", L"Format", codec.CompareI(L"AAC") ? 1 : 0); //set to 44.1 kHz in case of MP3, see SettingsEncoding.cpp

	push	OFFSET $SG4294737389
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	je	SHORT $LN3@operator
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv77[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv77[ebp]
	push	eax
	push	OFFSET $SG4294737388
	push	OFFSET $SG4294737387
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z

; 466  :             });

	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_07b41efe5098b34c18964d3f394ff711>@@QBEXXZ ENDP ; <lambda_07b41efe5098b34c18964d3f394ff711>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QAE@ABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___maxaudioaac$ = 8					; size = 4
??0<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QAE@ABH@Z PROC ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>::<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>, COMDAT
; _this$ = ecx

; 476  :             optimizers.push_back([maxaudioaac] { AppConfig->SetInt(L"Audio Encoding", L"Bitrate", maxaudioaac); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___maxaudioaac$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QAE@ABH@Z ENDP ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>::<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QBEXXZ PROC ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>::operator(), COMDAT
; _this$ = ecx

; 476  :             optimizers.push_back([maxaudioaac] { AppConfig->SetInt(L"Audio Encoding", L"Bitrate", maxaudioaac); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG4294737386
	push	OFFSET $SG4294737385
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QBEXXZ ENDP ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_624bb9d9f3cde644ba29e7729588d586>@@QAE@ABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___maxaudiomp3$ = 8					; size = 4
??0<lambda_624bb9d9f3cde644ba29e7729588d586>@@QAE@ABH@Z PROC ; <lambda_624bb9d9f3cde644ba29e7729588d586>::<lambda_624bb9d9f3cde644ba29e7729588d586>, COMDAT
; _this$ = ecx

; 486  :             optimizers.push_back([maxaudiomp3] { AppConfig->SetInt(L"Audio Encoding", L"Bitrate", maxaudiomp3); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___maxaudiomp3$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_624bb9d9f3cde644ba29e7729588d586>@@QAE@ABH@Z ENDP ; <lambda_624bb9d9f3cde644ba29e7729588d586>::<lambda_624bb9d9f3cde644ba29e7729588d586>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_624bb9d9f3cde644ba29e7729588d586>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_624bb9d9f3cde644ba29e7729588d586>@@QBEXXZ PROC ; <lambda_624bb9d9f3cde644ba29e7729588d586>::operator(), COMDAT
; _this$ = ecx

; 486  :             optimizers.push_back([maxaudiomp3] { AppConfig->SetInt(L"Audio Encoding", L"Bitrate", maxaudiomp3); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG4294737384
	push	OFFSET $SG4294737383
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_624bb9d9f3cde644ba29e7729588d586>@@QBEXXZ ENDP ; <lambda_624bb9d9f3cde644ba29e7729588d586>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABVString@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___expectedProfile$ = 8					; size = 4
??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABVString@@@Z PROC ; <lambda_8499d2186312c49ebbd56f30c74af45d>::<lambda_8499d2186312c49ebbd56f30c74af45d>, COMDAT
; _this$ = ecx

; 497  :             optimizers.push_back([expectedProfile] { AppConfig->SetString(L"Video Encoding", L"X264Profile", expectedProfile); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___expectedProfile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABVString@@@Z ENDP ; <lambda_8499d2186312c49ebbd56f30c74af45d>::<lambda_8499d2186312c49ebbd56f30c74af45d>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_8499d2186312c49ebbd56f30c74af45d>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_8499d2186312c49ebbd56f30c74af45d>@@QBEXXZ PROC ; <lambda_8499d2186312c49ebbd56f30c74af45d>::operator(), COMDAT
; _this$ = ecx

; 497  :             optimizers.push_back([expectedProfile] { AppConfig->SetString(L"Video Encoding", L"X264Profile", expectedProfile); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737382
	push	OFFSET $SG4294737381
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_8499d2186312c49ebbd56f30c74af45d>@@QBEXXZ ENDP ; <lambda_8499d2186312c49ebbd56f30c74af45d>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_424e07199e07f172c211b579b41a0f6b>@@QAE@ABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___keyint$ = 8						; size = 4
??0<lambda_424e07199e07f172c211b579b41a0f6b>@@QAE@ABH@Z PROC ; <lambda_424e07199e07f172c211b579b41a0f6b>::<lambda_424e07199e07f172c211b579b41a0f6b>, COMDAT
; _this$ = ecx

; 508  :             optimizers.push_back([keyint] { AppConfig->SetInt(L"Video Encoding", L"KeyframeInterval", keyint / 1000); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___keyint$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_424e07199e07f172c211b579b41a0f6b>@@QAE@ABH@Z ENDP ; <lambda_424e07199e07f172c211b579b41a0f6b>::<lambda_424e07199e07f172c211b579b41a0f6b>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_424e07199e07f172c211b579b41a0f6b>@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_424e07199e07f172c211b579b41a0f6b>@@QBEXXZ PROC ; <lambda_424e07199e07f172c211b579b41a0f6b>::operator(), COMDAT
; _this$ = ecx

; 508  :             optimizers.push_back([keyint] { AppConfig->SetInt(L"Video Encoding", L"KeyframeInterval", keyint / 1000); });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	push	eax
	push	OFFSET $SG4294737380
	push	OFFSET $SG4294737379
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetInt@ConfigFile@@QAEXPB_W0H@Z
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_424e07199e07f172c211b579b41a0f6b>@@QBEXXZ ENDP ; <lambda_424e07199e07f172c211b579b41a0f6b>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@XZ PROC ; <lambda_07b41efe5098b34c18964d3f394ff711>::~<lambda_07b41efe5098b34c18964d3f394ff711>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@XZ ENDP ; <lambda_07b41efe5098b34c18964d3f394ff711>::~<lambda_07b41efe5098b34c18964d3f394ff711>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@XZ PROC ; <lambda_8499d2186312c49ebbd56f30c74af45d>::~<lambda_8499d2186312c49ebbd56f30c74af45d>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@XZ ENDP ; <lambda_8499d2186312c49ebbd56f30c74af45d>::~<lambda_8499d2186312c49ebbd56f30c74af45d>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ?ProcMessage@SettingsPublish@@UAEHIIJ@Z
_TEXT	SEGMENT
$T1 = -2636						; size = 16
_duplicates$2 = -2620					; size = 32
_ofn$3 = -2588						; size = 88
$T4 = -2500						; size = 8
$T5 = -2492						; size = 8
$T6 = -2484						; size = 8
$T7 = -2476						; size = 8
$T8 = -2468						; size = 8
$T9 = -2460						; size = 8
$T10 = -2452						; size = 8
$T11 = -2444						; size = 8
$T12 = -2436						; size = 8
_strFilePath$13 = -2428					; size = 8
_serviceData$14 = -2420					; size = 8
$T15 = -2412						; size = 4
_bLowLatencyMode$16 = -2408				; size = 4
$T17 = -2404						; size = 4
_serviceID$18 = -2400					; size = 4
_bSaveToFile$19 = -2396					; size = 4
_bChoseFile$20 = -2392					; size = 4
_current$21 = -2388					; size = 12
_delayTime$22 = -2376					; size = 4
$T23 = -2372						; size = 4
$T24 = -2368						; size = 4
_bKeepRecording$25 = -2364				; size = 4
_avail$26 = -2360					; size = 4
_itemId$27 = -2356					; size = 4
_numServers$28 = -2352					; size = 4
_path$29 = -2348					; size = 8
_used$30 = -2340					; size = 4
_bKeepRecording$31 = -2336				; size = 4
_server$32 = -2332					; size = 4
_strExtension$33 = -2328				; size = 8
tv999 = -2320						; size = 4
tv1112 = -2316						; size = 4
tv943 = -2312						; size = 4
tv1105 = -2308						; size = 4
tv800 = -2304						; size = 4
tv1925 = -2300						; size = 4
tv1899 = -2296						; size = 4
_bAutoReconnect$34 = -2292				; size = 4
_service$35 = -2288					; size = 4
tv778 = -2284						; size = 4
tv1929 = -2280						; size = 4
tv759 = -2276						; size = 4
tv1903 = -2272						; size = 4
tv331 = -2268						; size = 4
tv1896 = -2264						; size = 4
_nmHdr$36 = -2260					; size = 4
tv1835 = -2256						; size = 4
tv2042 = -2252						; size = 4
tv1144 = -2248						; size = 4
tv312 = -2244						; size = 4
tv1998 = -2240						; size = 4
tv2029 = -2236						; size = 4
_lpSavePath$37 = -2232					; size = 4
_servers$38 = -2228					; size = 4
_bAutoReconnect$39 = -2224				; size = 4
_path$40 = -2220					; size = 8
_pos$41 = -2212						; size = 4
_strFile$42 = -2208					; size = 8
_serviceID$43 = -2200					; size = 4
_i$44 = -2196						; size = 4
tv64 = -2192						; size = 4
tv1133 = -2188						; size = 4
_mode$45 = -2184					; size = 4
_mem$46 = -2180						; size = 8
_retryTime$47 = -2172					; size = 4
_hwndToolTip$48 = -2168					; size = 4
_replayBufferLength$49 = -2164				; size = 4
$T50 = -2157						; size = 1
_mode$51 = -2156					; size = 4
_highUsage$52 = -2151					; size = 1
_settingChanged$53 = -2150				; size = 1
_replayBuffer$54 = -2149				; size = 1
_swShowControls$55 = -2148				; size = 4
_hwndTemp$ = -2144					; size = 4
_bDataChanged$56 = -2137				; size = 1
_this$ = -2136						; size = 4
_ti$57 = -2132						; size = 48
_saveToFileRect$58 = -2084				; size = 16
_serviceRect$59 = -2068					; size = 16
_curDirectory$60 = -2052				; size = 1024
_lpFile$61 = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?ProcMessage@SettingsPublish@@UAEHIIJ@Z PROC		; SettingsPublish::ProcMessage, COMDAT
; _this$ = ecx

; 521  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 2636				; 00000a4cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 522  :     HWND hwndTemp;
; 523  : 
; 524  :     switch(message)

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 78					; 0000004eH
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 234		; 000000eaH
	ja	$LN76@ProcMessag
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN114@ProcMessag[edx]
	jmp	DWORD PTR $LN116@ProcMessag[eax*4]
$LN75@ProcMessag:

; 525  :     {
; 526  :         case WM_INITDIALOG:
; 527  :             {
; 528  :                 LocalizeWindow(hwnd);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp_?LocalizeWindow@@YAXPAUHWND__@@PAVLocaleStringLookup@@@Z
	add	esp, 8

; 529  : 
; 530  :                 RECT serviceRect, saveToFileRect;
; 531  :                 GetWindowRect(GetDlgItem(hwnd, IDC_SERVICE), &serviceRect);

	lea	eax, DWORD PTR _serviceRect$59[ebp]
	push	eax
	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 532  :                 GetWindowRect(GetDlgItem(hwnd, IDC_SAVEPATH), &saveToFileRect);

	lea	eax, DWORD PTR _saveToFileRect$58[ebp]
	push	eax
	push	1081					; 00000439H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 533  : 
; 534  :                 data.fileControlOffset = saveToFileRect.top-serviceRect.top;

	mov	eax, DWORD PTR _saveToFileRect$58[ebp+4]
	sub	eax, DWORD PTR _serviceRect$59[ebp+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 535  : 
; 536  :                 //--------------------------------------------
; 537  : 
; 538  :                 hwndTemp = GetDlgItem(hwnd, IDC_MODE);

	push	1008					; 000003f0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 539  :                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Publish.Mode.LiveStream"));

	push	OFFSET $SG4294737378
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 540  :                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)Str("Settings.Publish.Mode.FileOnly"));

	push	OFFSET $SG4294737377
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 541  : 
; 542  :                 int mode = LoadSettingComboInt(hwndTemp, TEXT("Publish"), TEXT("Mode"), 0, 2);

	push	2
	push	0
	push	OFFSET $SG4294737376
	push	OFFSET $SG4294737375
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	?LoadSettingComboInt@@YAHPAUHWND__@@PB_W1HH@Z ; LoadSettingComboInt
	add	esp, 20					; 00000014H
	mov	DWORD PTR _mode$51[ebp], eax

; 543  :                 data.mode = mode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$51[ebp]
	mov	DWORD PTR [eax+8], ecx

; 544  : 
; 545  :                 //--------------------------------------------
; 546  :                 services.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?clear@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXXZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::clear

; 547  : 
; 548  :                 hwndTemp = GetDlgItem(hwnd, IDC_SERVICE);

	push	1014					; 000003f6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 549  :                 int itemId = (int)SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)TEXT("Custom"));

	push	OFFSET $SG4294737374
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _itemId$27[ebp], eax

; 550  :                 SendMessage(hwndTemp, CB_SETITEMDATA, itemId, 0);

	push	0
	mov	edx, DWORD PTR _itemId$27[ebp]
	push	edx
	push	337					; 00000151H
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 551  :                 services.emplace_back(0, String());

	mov	DWORD PTR $T24[ebp], 0
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
	push	eax
	lea	ecx, DWORD PTR $T24[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$emplace_back@HVString@@@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEX$$QAH$$QAVString@@@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::emplace_back<int,String>
	lea	ecx, DWORD PTR $T7[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 552  : 
; 553  :                 ServiceIdentifier current = GetCurrentService();

	lea	edx, DWORD PTR _current$21[ebp]
	push	edx
	call	?GetCurrentService@@YA?AUServiceIdentifier@@XZ ; GetCurrentService
	add	esp, 4

; 554  :                 std::unordered_map<std::wstring, int> duplicates;

	lea	ecx, DWORD PTR _duplicates$2[ebp]
	call	??0?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >

; 555  :                 
; 556  :                 EnumerateServices([&](ServiceIdentifier sid, XElement *service)
; 557  :                 {
; 558  :                     if (!service)
; 559  :                         return true;
; 560  : 
; 561  :                     services.emplace_back(sid);
; 562  :                     auto pos = duplicates.find(service->GetName());
; 563  :                     int id;
; 564  :                     if (pos != end(duplicates))
; 565  :                     {
; 566  :                         const ServiceIdentifier &first = services[pos->second];
; 567  :                         if (first.file.IsValid())
; 568  :                         {
; 569  :                             SendMessage(hwndTemp, CB_DELETESTRING, pos->second, 0);
; 570  :                             SendMessage(hwndTemp, CB_INSERTSTRING, pos->second, (LPARAM)FormattedString(L"%s [%s]", service->GetName(), services[pos->second].file.Array()).Array());
; 571  :                         }
; 572  :                         id = (int)SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)(sid.file.IsValid() ? FormattedString(L"%s [%s]", service->GetName(), sid.file.Array()).Array() : service->GetName()));
; 573  :                     }
; 574  :                     else
; 575  :                     {
; 576  :                         id = (int)SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)service->GetName());
; 577  :                         duplicates[service->GetName()] = id;
; 578  :                     }
; 579  : 
; 580  :                     [&]()
; 581  :                     {
; 582  :                         if (sid != current)
; 583  :                             return;
; 584  :                         
; 585  :                         SendDlgItemMessage(hwnd, IDC_SERVICE, CB_SETCURSEL, id, 0);
; 586  : 
; 587  :                         XElement *servers = service->GetElement(L"servers");
; 588  :                         if (!servers)
; 589  :                             return;
; 590  : 
; 591  :                         UINT numServers = servers->NumDataItems();
; 592  :                         for (UINT i = 0; i < numServers; i++)
; 593  :                         {
; 594  :                             XDataItem *server = servers->GetDataItemByID(i);
; 595  :                             SendMessage(GetDlgItem(hwnd, IDC_SERVERLIST), CB_ADDSTRING, 0, (LPARAM)server->GetName());
; 596  :                         }
; 597  : 
; 598  :                     }();
; 599  :                     return true;
; 600  :                 });

	lea	eax, DWORD PTR _current$21[ebp]
	push	eax
	lea	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _duplicates$2[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QAE@PAVSettingsPublish@@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@AAPAUHWND__@@AAUServiceIdentifier@@@Z ; <lambda_da5f0f708578e290fee5fc13ec57d23a>::<lambda_da5f0f708578e290fee5fc13ec57d23a>
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	push	eax
	call	??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$function@$$A6A_NUServiceIdentifier@@PAVXElement@@@Z@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::function<bool __cdecl(ServiceIdentifier,XElement *)>::function<bool __cdecl(ServiceIdentifier,XElement *)><<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	call	?EnumerateServices@@YAXV?$function@$$A6A_NUServiceIdentifier@@PAVXElement@@@Z@std@@@Z ; EnumerateServices
	add	esp, 24					; 00000018H

; 601  : 
; 602  :                 if(mode != 0) ShowWindow(hwndTemp, SW_HIDE);

	cmp	DWORD PTR _mode$51[ebp], 0
	je	SHORT $LN74@ProcMessag
	push	0
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
$LN74@ProcMessag:

; 603  : 
; 604  :                 //--------------------------------------------
; 605  : 
; 606  :                 hwndTemp = GetDlgItem(hwnd, IDC_PLAYPATH);

	push	1011					; 000003f3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 607  :                 LoadSettingEditString(hwndTemp, TEXT("Publish"), TEXT("PlayPath"), NULL);

	push	0
	push	OFFSET $SG4294737373
	push	OFFSET $SG4294737372
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	call	?LoadSettingEditString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingEditString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T8[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 608  :                 if(mode != 0) ShowWindow(hwndTemp, SW_HIDE);

	cmp	DWORD PTR _mode$51[ebp], 0
	je	SHORT $LN73@ProcMessag
	push	0
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN73@ProcMessag:

; 609  : 
; 610  :                 if(current.file.IsEmpty() && current.id == 0) //custom

	lea	ecx, DWORD PTR _current$21[ebp+4]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	$LN72@ProcMessag
	cmp	DWORD PTR _current$21[ebp], 0
	jne	$LN72@ProcMessag

; 611  :                 {
; 612  :                     ShowWindow(GetDlgItem(hwnd, IDC_SERVERLIST), SW_HIDE);

	push	0
	push	1013					; 000003f5H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 613  :                     hwndTemp = GetDlgItem(hwnd, IDC_URL);

	push	1012					; 000003f4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 614  :                     LoadSettingEditString(hwndTemp, TEXT("Publish"), TEXT("URL"), NULL);

	push	0
	push	OFFSET $SG4294737371
	push	OFFSET $SG4294737370
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	call	?LoadSettingEditString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingEditString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T12[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 615  :                     SendDlgItemMessage(hwnd, IDC_SERVICE, CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20

; 616  :                 }
; 617  :                 else

	jmp	SHORT $LN71@ProcMessag
$LN72@ProcMessag:

; 618  :                 {
; 619  :                     ShowWindow(GetDlgItem(hwnd, IDC_URL), SW_HIDE);

	push	0
	push	1012					; 000003f4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 620  :                     hwndTemp = GetDlgItem(hwnd, IDC_SERVERLIST);

	push	1013					; 000003f5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 621  :                     LoadSettingComboString(hwndTemp, TEXT("Publish"), TEXT("URL"), NULL);

	push	0
	push	OFFSET $SG4294737369
	push	OFFSET $SG4294737368
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T11[ebp]
	push	edx
	call	?LoadSettingComboString@@YA?AVString@@PAUHWND__@@PB_W11@Z ; LoadSettingComboString
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T11[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN71@ProcMessag:

; 622  :                 }
; 623  : 
; 624  :                 if(mode != 0) ShowWindow(hwndTemp, SW_HIDE);

	cmp	DWORD PTR _mode$51[ebp], 0
	je	SHORT $LN70@ProcMessag
	push	0
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN70@ProcMessag:

; 625  : 
; 626  :                 //--------------------------------------------
; 627  : 
; 628  :                 hwndTemp = GetDlgItem(hwnd, IDC_LOWLATENCYMODE);

	push	1099					; 0000044bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 629  : 
; 630  :                 BOOL bLowLatencyMode = AppConfig->GetInt(TEXT("Publish"), TEXT("LowLatencyMode"), 0);

	push	0
	push	OFFSET $SG4294737367
	push	OFFSET $SG4294737366
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bLowLatencyMode$16[ebp], eax

; 631  :                 SendMessage(hwndTemp, BM_SETCHECK, bLowLatencyMode ? BST_CHECKED : BST_UNCHECKED, 0);

	cmp	DWORD PTR _bLowLatencyMode$16[ebp], 0
	je	SHORT $LN80@ProcMessag
	mov	DWORD PTR tv312[ebp], 1
	jmp	SHORT $LN81@ProcMessag
$LN80@ProcMessag:
	mov	DWORD PTR tv312[ebp], 0
$LN81@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv312[ebp]
	push	eax
	push	241					; 000000f1H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 632  : 
; 633  :                 //--------------------------------------------
; 634  : 
; 635  :                 hwndTemp = GetDlgItem(hwnd, IDC_AUTORECONNECT);

	push	1041					; 00000411H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 636  : 
; 637  :                 BOOL bAutoReconnect = AppConfig->GetInt(TEXT("Publish"), TEXT("AutoReconnect"), 1);

	push	1
	push	OFFSET $SG4294737365
	push	OFFSET $SG4294737364
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bAutoReconnect$39[ebp], eax

; 638  :                 SendMessage(hwndTemp, BM_SETCHECK, bAutoReconnect ? BST_CHECKED : BST_UNCHECKED, 0);

	cmp	DWORD PTR _bAutoReconnect$39[ebp], 0
	je	SHORT $LN82@ProcMessag
	mov	DWORD PTR tv331[ebp], 1
	jmp	SHORT $LN83@ProcMessag
$LN82@ProcMessag:
	mov	DWORD PTR tv331[ebp], 0
$LN83@ProcMessag:
	push	0
	mov	ecx, DWORD PTR tv331[ebp]
	push	ecx
	push	241					; 000000f1H
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 639  : 
; 640  :                 if(mode != 0) ShowWindow(hwndTemp, SW_HIDE);

	cmp	DWORD PTR _mode$51[ebp], 0
	je	SHORT $LN69@ProcMessag
	push	0
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN69@ProcMessag:

; 641  : 
; 642  :                 hwndTemp = GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT);

	push	1079					; 00000437H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 643  :                 EnableWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT_EDIT), bAutoReconnect);

	mov	eax, DWORD PTR _bAutoReconnect$39[ebp]
	push	eax
	push	1078					; 00000436H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 644  :                 EnableWindow(hwndTemp, bAutoReconnect);

	mov	eax, DWORD PTR _bAutoReconnect$39[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8

; 645  : 
; 646  :                 int retryTime = AppConfig->GetInt(TEXT("Publish"), TEXT("AutoReconnectTimeout"), 10);

	push	10					; 0000000aH
	push	OFFSET $SG4294737363
	push	OFFSET $SG4294737362
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _retryTime$47[ebp], eax

; 647  :                 if(retryTime > 60)      retryTime = 60;

	cmp	DWORD PTR _retryTime$47[ebp], 60	; 0000003cH
	jle	SHORT $LN68@ProcMessag
	mov	DWORD PTR _retryTime$47[ebp], 60	; 0000003cH
	jmp	SHORT $LN67@ProcMessag
$LN68@ProcMessag:

; 648  :                 else if(retryTime < 0)  retryTime = 0;

	cmp	DWORD PTR _retryTime$47[ebp], 0
	jge	SHORT $LN67@ProcMessag
	mov	DWORD PTR _retryTime$47[ebp], 0
$LN67@ProcMessag:

; 649  : 
; 650  :                 SendMessage(hwndTemp, UDM_SETRANGE32, 0, 60);

	push	60					; 0000003cH
	push	0
	push	1135					; 0000046fH
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 651  :                 SendMessage(hwndTemp, UDM_SETPOS32, 0, retryTime);

	mov	eax, DWORD PTR _retryTime$47[ebp]
	push	eax
	push	0
	push	1137					; 00000471H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 652  : 
; 653  :                 if(mode != 0) ShowWindow(hwndTemp, SW_HIDE);

	cmp	DWORD PTR _mode$51[ebp], 0
	je	SHORT $LN65@ProcMessag
	push	0
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
$LN65@ProcMessag:

; 654  : 
; 655  :                 //--------------------------------------------
; 656  : 
; 657  :                 hwndTemp = GetDlgItem(hwnd, IDC_DELAY);

	push	1084					; 0000043cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 658  : 
; 659  :                 int delayTime = AppConfig->GetInt(TEXT("Publish"), TEXT("Delay"), 0);

	push	0
	push	OFFSET $SG4294737361
	push	OFFSET $SG4294737360
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _delayTime$22[ebp], eax

; 660  : 
; 661  :                 SendMessage(hwndTemp, UDM_SETRANGE32, 0, 900);

	push	900					; 00000384H
	push	0
	push	1135					; 0000046fH
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 662  :                 SendMessage(hwndTemp, UDM_SETPOS32, 0, delayTime);

	mov	eax, DWORD PTR _delayTime$22[ebp]
	push	eax
	push	0
	push	1137					; 00000471H
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 663  : 
; 664  :                 //--------------------------------------------
; 665  : 
; 666  :                 if(mode != 0)

	cmp	DWORD PTR _mode$51[ebp], 0
	je	$LN64@ProcMessag

; 667  :                 {
; 668  :                     ShowWindow(GetDlgItem(hwnd, IDC_SERVICE_STATIC), SW_HIDE);

	push	0
	push	1047					; 00000417H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 669  :                     ShowWindow(GetDlgItem(hwnd, IDC_PLAYPATH_STATIC), SW_HIDE);

	push	0
	push	1044					; 00000414H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 670  :                     ShowWindow(GetDlgItem(hwnd, IDC_URL_STATIC), SW_HIDE);

	push	0
	push	1043					; 00000413H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 671  :                     ShowWindow(GetDlgItem(hwnd, IDC_SERVER_STATIC), SW_HIDE);

	push	0
	push	1046					; 00000416H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 672  :                     ShowWindow(GetDlgItem(hwnd, IDC_LOWLATENCYMODE), SW_HIDE);

	push	0
	push	1099					; 0000044bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 673  :                     ShowWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT_STATIC), SW_HIDE);

	push	0
	push	1080					; 00000438H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 674  :                     ShowWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT_EDIT), SW_HIDE);

	push	0
	push	1078					; 00000436H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 675  :                     ShowWindow(GetDlgItem(hwnd, IDC_DELAY_STATIC), SW_HIDE);

	push	0
	push	1126					; 00000466H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 676  :                     ShowWindow(GetDlgItem(hwnd, IDC_DELAY_EDIT), SW_HIDE);

	push	0
	push	1083					; 0000043bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 677  :                     ShowWindow(GetDlgItem(hwnd, IDC_DELAY), SW_HIDE);

	push	0
	push	1084					; 0000043cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 678  :                     ShowWindow(GetDlgItem(hwnd, IDC_KEEPRECORDING), SW_HIDE);

	push	0
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 679  :                     //ShowWindow(GetDlgItem(hwnd, IDC_DASHBOARDLINK), SW_HIDE);
; 680  :                     //ShowWindow(GetDlgItem(hwnd, IDC_DASHBOARDLINK_STATIC), SW_HIDE);
; 681  :                     ShowWindow(GetDlgItem(hwnd, IDC_SAVETOFILE), SW_HIDE);

	push	0
	push	1045					; 00000415H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 682  :                     ShowWindow(GetDlgItem(hwnd, IDC_BROWSEUSERSERVICES), SW_HIDE);

	push	0
	push	1052					; 0000041cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 683  : 
; 684  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_SAVEPATH_STATIC), 0, -data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	neg	edx
	push	edx
	push	0
	push	1082					; 0000043aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 685  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_SAVEPATH), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1081					; 00000439H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 686  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_BROWSE), 0, -data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	neg	ecx
	push	ecx
	push	0
	push	1050					; 0000041aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 687  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH), 0, -data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	neg	edx
	push	edx
	push	0
	push	1086					; 0000043eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 688  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH_EDIT), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1085					; 0000043dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 689  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH_STATIC), 0, -data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	neg	ecx
	push	ecx
	push	0
	push	1127					; 00000467H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 690  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY_STATIC), 0, -data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	neg	edx
	push	edx
	push	0
	push	1181					; 0000049dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 691  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1182					; 0000049eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 692  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH_STATIC), 0, -data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	neg	ecx
	push	ecx
	push	0
	push	1087					; 0000043fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 693  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH), 0, -data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	neg	edx
	push	edx
	push	0
	push	1088					; 00000440H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 694  :                     AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERBROWSE), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1051					; 0000041bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH
$LN64@ProcMessag:

; 695  :                 }
; 696  : 
; 697  :                 //--------------------------------------------
; 698  : 
; 699  :                 HWND hwndToolTip = CreateWindowEx(NULL, TOOLTIPS_CLASS, NULL, WS_POPUP | TTS_NOPREFIX | TTS_ALWAYSTIP,
; 700  :                     CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
; 701  :                     hwnd, NULL, hinstMain, NULL);

	push	0
	mov	eax, DWORD PTR ?hinstMain@@3PAUHINSTANCE__@@A ; hinstMain
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483645				; 80000003H
	push	0
	push	OFFSET $SG4294737359
	push	0
	call	_IsolationAwareCreateWindowExW@48
	mov	DWORD PTR _hwndToolTip$48[ebp], eax

; 702  : 
; 703  :                 TOOLINFO ti;
; 704  :                 zero(&ti, sizeof(ti));

	push	48					; 00000030H
	lea	eax, DWORD PTR _ti$57[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 705  :                 ti.cbSize = sizeof(ti);

	mov	DWORD PTR _ti$57[ebp], 48		; 00000030H

; 706  :                 ti.uFlags = TTF_SUBCLASS | TTF_IDISHWND;

	mov	DWORD PTR _ti$57[ebp+4], 17		; 00000011H

; 707  :                 ti.hwnd = hwnd;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _ti$57[ebp+8], edx

; 708  : 
; 709  :                 if (LocaleIsRTL())

	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp_?LocaleIsRTL@@YA_NPAVLocaleStringLookup@@@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN63@ProcMessag

; 710  :                     ti.uFlags |= TTF_RTLREADING;

	mov	eax, DWORD PTR _ti$57[ebp+4]
	or	eax, 4
	mov	DWORD PTR _ti$57[ebp+4], eax
$LN63@ProcMessag:

; 711  : 
; 712  :                 SendMessage(hwndToolTip, TTM_SETMAXTIPWIDTH, 0, 500);

	push	500					; 000001f4H
	push	0
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _hwndToolTip$48[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 713  :                 SendMessage(hwndToolTip, TTM_SETDELAYTIME, TTDT_AUTOPOP, 20000);

	push	20000					; 00004e20H
	push	2
	push	1027					; 00000403H
	mov	edx, DWORD PTR _hwndToolTip$48[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 714  : 
; 715  :                 //--------------------------------------------
; 716  : 
; 717  :                 BOOL bKeepRecording = AppConfig->GetInt(TEXT("Publish"), TEXT("KeepRecording"));

	push	0
	push	OFFSET $SG4294737358
	push	OFFSET $SG4294737357
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bKeepRecording$31[ebp], eax

; 718  :                 SendMessage(GetDlgItem(hwnd, IDC_KEEPRECORDING), BM_SETCHECK, bKeepRecording ? BST_CHECKED : BST_UNCHECKED, 0);

	cmp	DWORD PTR _bKeepRecording$31[ebp], 0
	je	SHORT $LN84@ProcMessag
	mov	DWORD PTR tv759[ebp], 1
	jmp	SHORT $LN85@ProcMessag
$LN84@ProcMessag:
	mov	DWORD PTR tv759[ebp], 0
$LN85@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv759[ebp]
	push	eax
	push	241					; 000000f1H
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 719  : 
; 720  :                 BOOL bSaveToFile = AppConfig->GetInt(TEXT("Publish"), TEXT("SaveToFile"));

	push	0
	push	OFFSET $SG4294737356
	push	OFFSET $SG4294737355
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _bSaveToFile$19[ebp], eax

; 721  :                 SendMessage(GetDlgItem(hwnd, IDC_SAVETOFILE), BM_SETCHECK, bSaveToFile ? BST_CHECKED : BST_UNCHECKED, 0);

	cmp	DWORD PTR _bSaveToFile$19[ebp], 0
	je	SHORT $LN86@ProcMessag
	mov	DWORD PTR tv778[ebp], 1
	jmp	SHORT $LN87@ProcMessag
$LN86@ProcMessag:
	mov	DWORD PTR tv778[ebp], 0
$LN87@ProcMessag:
	push	0
	mov	eax, DWORD PTR tv778[ebp]
	push	eax
	push	241					; 000000f1H
	push	1045					; 00000415H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 722  : 
; 723  :                 String path = OSGetDefaultVideoSavePath(L"\\.flv");

	push	OFFSET $SG4294737354
	lea	eax, DWORD PTR _path$40[ebp]
	push	eax
	call	DWORD PTR __imp_?OSGetDefaultVideoSavePath@@YG?AVString@@PB_W@Z

; 724  :                 CTSTR lpSavePath = AppConfig->GetStringPtr(TEXT("Publish"), TEXT("SavePath"), path.IsValid() ? path.Array() : nullptr);

	lea	ecx, DWORD PTR _path$40[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN88@ProcMessag
	lea	ecx, DWORD PTR _path$40[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR tv800[ebp], eax
	jmp	SHORT $LN89@ProcMessag
$LN88@ProcMessag:
	mov	DWORD PTR tv800[ebp], 0
$LN89@ProcMessag:
	mov	ecx, DWORD PTR tv800[ebp]
	push	ecx
	push	OFFSET $SG4294737353
	push	OFFSET $SG4294737352
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetStringPtr@ConfigFile@@QAEPB_WPB_W00@Z
	mov	DWORD PTR _lpSavePath$37[ebp], eax

; 725  :                 SetWindowText(GetDlgItem(hwnd, IDC_SAVEPATH), lpSavePath);

	mov	edx, DWORD PTR _lpSavePath$37[ebp]
	push	edx
	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 726  : 
; 727  :                 ti.lpszText = (LPWSTR)Str("Settings.Publish.SavePathTooltip");

	push	OFFSET $SG4294737351
	mov	edx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$57[ebp+36], eax

; 728  :                 ti.uId = (UINT_PTR)GetDlgItem(hwnd, IDC_SAVEPATH);

	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _ti$57[ebp+12], eax

; 729  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	edx, DWORD PTR _ti$57[ebp]
	push	edx
	push	0
	push	1074					; 00000432H
	mov	eax, DWORD PTR _hwndToolTip$48[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 730  : 
; 731  :                 EnableWindow(GetDlgItem(hwnd, IDC_KEEPRECORDING), true);

	push	1
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 732  : 
; 733  :                 EnableWindow(GetDlgItem(hwnd, IDC_SAVEPATH), true);

	push	1
	push	1081					; 00000439H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 734  :                 EnableWindow(GetDlgItem(hwnd, IDC_BROWSE),   true);

	push	1
	push	1050					; 0000041aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 735  : 
; 736  :                 //--------------------------------------------
; 737  : 
; 738  :                 //SetWindowText(GetDlgItem(hwnd, IDC_DASHBOARDLINK), App->strDashboard);
; 739  : 
; 740  :                 //--------------------------------------------
; 741  : 
; 742  :                 bool settingChanged = false;

	mov	BYTE PTR _settingChanged$53[ebp], 0

; 743  : 
; 744  :                 hwndTemp = GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH);

	push	1086					; 0000043eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 745  : 
; 746  :                 int replayBufferLength = AppConfig->GetInt(L"Publish", L"ReplayBufferLength", 1);

	push	1
	push	OFFSET $SG4294737350
	push	OFFSET $SG4294737349
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetInt@ConfigFile@@QAEHPB_W0H@Z
	mov	DWORD PTR _replayBufferLength$49[ebp], eax

; 747  :                 if (replayBufferLength < 1)

	cmp	DWORD PTR _replayBufferLength$49[ebp], 1
	jge	SHORT $LN62@ProcMessag

; 748  :                 {
; 749  :                     replayBufferLength = 1;

	mov	DWORD PTR _replayBufferLength$49[ebp], 1

; 750  :                     settingChanged = true;

	mov	BYTE PTR _settingChanged$53[ebp], 1
	jmp	SHORT $LN61@ProcMessag
$LN62@ProcMessag:

; 751  :                 }
; 752  :                 else if (replayBufferLength > (30 * 60))

	cmp	DWORD PTR _replayBufferLength$49[ebp], 1800 ; 00000708H
	jle	SHORT $LN61@ProcMessag

; 753  :                 {
; 754  :                     replayBufferLength = 30 * 60;

	mov	DWORD PTR _replayBufferLength$49[ebp], 1800 ; 00000708H

; 755  :                     settingChanged = true;

	mov	BYTE PTR _settingChanged$53[ebp], 1
$LN61@ProcMessag:

; 756  :                 }
; 757  : 
; 758  :                 SendMessage(hwndTemp, UDM_SETRANGE32, 1, 30 * 60); //upper limit of 30 minutes

	push	1800					; 00000708H
	push	1
	push	1135					; 0000046fH
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 759  :                 SendMessage(hwndTemp, UDM_SETPOS32, 0, replayBufferLength);

	mov	ecx, DWORD PTR _replayBufferLength$49[ebp]
	push	ecx
	push	0
	push	1137					; 00000471H
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 760  : 
; 761  :                 ti.lpszText = (LPWSTR)Str("Settings.Publish.ReplayBufferTooltip");

	push	OFFSET $SG4294737348
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$57[ebp+36], eax

; 762  :                 ti.uId = (UINT_PTR)GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH_EDIT);

	push	1085					; 0000043dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _ti$57[ebp+12], eax

; 763  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	eax, DWORD PTR _ti$57[ebp]
	push	eax
	push	0
	push	1074					; 00000432H
	mov	ecx, DWORD PTR _hwndToolTip$48[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16

; 764  : 
; 765  :                 path = OSGetDefaultVideoSavePath(L"\\Replay-$T.flv");

	push	OFFSET $SG4294737347
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	DWORD PTR __imp_?OSGetDefaultVideoSavePath@@YG?AVString@@PB_W@Z
	push	eax
	lea	ecx, DWORD PTR _path$40[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 766  :                 lpSavePath = AppConfig->GetStringPtr(L"Publish", L"ReplayBufferSavePath", path.IsValid() ? path.Array() : nullptr);

	lea	ecx, DWORD PTR _path$40[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN90@ProcMessag
	lea	ecx, DWORD PTR _path$40[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR tv943[ebp], eax
	jmp	SHORT $LN91@ProcMessag
$LN90@ProcMessag:
	mov	DWORD PTR tv943[ebp], 0
$LN91@ProcMessag:
	mov	eax, DWORD PTR tv943[ebp]
	push	eax
	push	OFFSET $SG4294737346
	push	OFFSET $SG4294737345
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetStringPtr@ConfigFile@@QAEPB_WPB_W00@Z
	mov	DWORD PTR _lpSavePath$37[ebp], eax

; 767  :                 SetWindowText(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH), lpSavePath);

	mov	ecx, DWORD PTR _lpSavePath$37[ebp]
	push	ecx
	push	1088					; 00000440H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 768  : 
; 769  :                 ti.lpszText = (LPWSTR)Str("Settings.Publish.SavePathTooltip");

	push	OFFSET $SG4294737344
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	mov	DWORD PTR _ti$57[ebp+36], eax

; 770  :                 ti.uId = (UINT_PTR)GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH);

	push	1088					; 00000440H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _ti$57[ebp+12], eax

; 771  :                 SendMessage(hwndToolTip, TTM_ADDTOOL, 0, (LPARAM)&ti);

	lea	ecx, DWORD PTR _ti$57[ebp]
	push	ecx
	push	0
	push	1074					; 00000432H
	mov	edx, DWORD PTR _hwndToolTip$48[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 772  : 
; 773  :                 //--------------------------------------------
; 774  : 
; 775  :                 UpdateMemoryUsage(hwnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?UpdateMemoryUsage@@YAXPAUHWND__@@@Z	; UpdateMemoryUsage
	add	esp, 4

; 776  : 
; 777  :                 //--------------------------------------------
; 778  : 
; 779  :                 SetWarningInfo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWarningInfo@SettingsPublish@@AAEXXZ	; SettingsPublish::SetWarningInfo

; 780  : 
; 781  :                 if (settingChanged)

	movzx	edx, BYTE PTR _settingChanged$53[ebp]
	test	edx, edx
	je	SHORT $LN59@ProcMessag

; 782  :                     return TRUE;

	mov	DWORD PTR $T17[ebp], 1
	lea	ecx, DWORD PTR _path$40[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _duplicates$2[ebp]
	call	??1?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _current$21[ebp]
	call	??1ServiceIdentifier@@QAE@XZ
	mov	eax, DWORD PTR $T17[ebp]
	jmp	$LN78@ProcMessag
$LN59@ProcMessag:

; 783  : 
; 784  :                 ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_HIDE);

	push	0
	push	1029					; 00000405H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 785  :                 SetChangedSettings(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z

; 786  : 
; 787  :                 return TRUE;

	mov	DWORD PTR $T15[ebp], 1
	lea	ecx, DWORD PTR _path$40[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _duplicates$2[ebp]
	call	??1?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _current$21[ebp]
	call	??1ServiceIdentifier@@QAE@XZ
	mov	eax, DWORD PTR $T15[ebp]
	jmp	$LN78@ProcMessag
$LN58@ProcMessag:

; 788  :             }
; 789  : 
; 790  :         case WM_CTLCOLORSTATIC:
; 791  :             {
; 792  :                 switch (GetDlgCtrlID((HWND)lParam))

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgCtrlID@4
	mov	DWORD PTR tv999[ebp], eax
	cmp	DWORD PTR tv999[ebp], 1030		; 00000406H
	je	SHORT $LN55@ProcMessag
	cmp	DWORD PTR tv999[ebp], 1182		; 0000049eH
	je	SHORT $LN54@ProcMessag
	jmp	$LN56@ProcMessag
$LN55@ProcMessag:

; 793  :                 {
; 794  :                     case IDC_WARNINGS:
; 795  :                         SetTextColor((HDC)wParam, RGB(255, 0, 0));

	push	255					; 000000ffH
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SetTextColor@8

; 796  :                         SetBkColor((HDC)wParam, COLORREF(GetSysColor(COLOR_3DFACE)));

	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColor@4
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetBkColor@8

; 797  :                         return (INT_PTR)GetSysColorBrush(COLOR_BTNFACE);

	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColorBrush@4
	jmp	$LN78@ProcMessag
$LN54@ProcMessag:

; 798  : 
; 799  :                     case IDC_REPLAYBUFFERMEMORY:
; 800  :                     {
; 801  :                         bool highUsage = false;

	mov	BYTE PTR _highUsage$52[ebp], 0

; 802  : 
; 803  :                         String mem = GetEditText(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY));

	push	1182					; 0000049eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR _mem$46[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetEditText@@YA?AVString@@PAUHWND__@@@Z
	add	esp, 8

; 804  :                         TSTR pos = std::find(mem.Array(), mem.Array() + mem.Length(), '/');

	mov	BYTE PTR $T50[ebp], 47			; 0000002fH
	lea	edx, DWORD PTR $T50[ebp]
	push	edx
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	esi, eax
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	lea	eax, DWORD PTR [esi+eax*2]
	push	eax
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	??$find@PA_WD@std@@YAPA_WPA_W0ABD@Z	; std::find<wchar_t *,char>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pos$41[ebp], eax

; 805  :                         if (pos != (mem.Array() + mem.Length()))

	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	esi, eax
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	lea	ecx, DWORD PTR [esi+eax*2]
	cmp	DWORD PTR _pos$41[ebp], ecx
	je	$LN53@ProcMessag

; 806  :                         {
; 807  :                             int used = mem.Left((UINT)(pos - mem.Array() - 1)).ToInt();

	push	10					; 0000000aH
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	edx, DWORD PTR _pos$41[ebp]
	sub	edx, eax
	sar	edx, 1
	sub	edx, 1
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Left@String@@QAE?AV1@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	mov	DWORD PTR _used$30[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 808  :                             int avail = mem.Right((UINT)(mem.Array() + mem.Length() - pos - 2)).ToInt();

	push	10					; 0000000aH
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	esi, eax
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	lea	ecx, DWORD PTR [esi+eax*2]
	sub	ecx, DWORD PTR _pos$41[ebp]
	sar	ecx, 1
	sub	ecx, 2
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_?Right@String@@QAE?AV1@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?ToInt@String@@QBEHH@Z
	mov	DWORD PTR _avail$26[ebp], eax
	lea	ecx, DWORD PTR $T6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 809  :                             highUsage = used > (avail / 2);

	mov	eax, DWORD PTR _avail$26[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR _used$30[ebp], eax
	jle	SHORT $LN92@ProcMessag
	mov	DWORD PTR tv1105[ebp], 1
	jmp	SHORT $LN93@ProcMessag
$LN92@ProcMessag:
	mov	DWORD PTR tv1105[ebp], 0
$LN93@ProcMessag:
	mov	al, BYTE PTR tv1105[ebp]
	mov	BYTE PTR _highUsage$52[ebp], al
$LN53@ProcMessag:

; 810  :                         }
; 811  : 
; 812  :                         SetTextColor((HDC)wParam, highUsage ? RGB(255, 0, 0) : COLORREF(GetSysColor(COLOR_WINDOWTEXT)));

	movzx	ecx, BYTE PTR _highUsage$52[ebp]
	test	ecx, ecx
	je	SHORT $LN94@ProcMessag
	mov	DWORD PTR tv1112[ebp], 255		; 000000ffH
	jmp	SHORT $LN95@ProcMessag
$LN94@ProcMessag:
	push	8
	call	DWORD PTR __imp__GetSysColor@4
	mov	DWORD PTR tv1112[ebp], eax
$LN95@ProcMessag:
	mov	edx, DWORD PTR tv1112[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SetTextColor@8

; 813  :                         SetBkColor((HDC)wParam, COLORREF(GetSysColor(COLOR_3DFACE)));

	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColor@4
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetBkColor@8

; 814  :                         return (INT_PTR)GetSysColorBrush(COLOR_BTNFACE);

	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColorBrush@4
	mov	DWORD PTR $T23[ebp], eax
	lea	ecx, DWORD PTR _mem$46[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	eax, DWORD PTR $T23[ebp]
	jmp	$LN78@ProcMessag
$LN56@ProcMessag:

; 815  :                     }
; 816  :                 }
; 817  :             }
; 818  :             break;

	jmp	$LN76@ProcMessag

; 819  : 
; 820  :         case WM_DESTROY:
; 821  :             {
; 822  :             }
; 823  :             break;

	jmp	$LN76@ProcMessag
$LN51@ProcMessag:

; 824  : 
; 825  :         case WM_NOTIFY:
; 826  :             {
; 827  :                 NMHDR *nmHdr = (NMHDR*)lParam;

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _nmHdr$36[ebp], edx

; 828  : 
; 829  :                 if(nmHdr->idFrom == IDC_AUTORECONNECT_TIMEOUT)

	mov	eax, DWORD PTR _nmHdr$36[ebp]
	cmp	DWORD PTR [eax+4], 1079			; 00000437H
	jne	SHORT $LN50@ProcMessag

; 830  :                 {
; 831  :                     if(nmHdr->code == UDN_DELTAPOS)

	mov	ecx, DWORD PTR _nmHdr$36[ebp]
	cmp	DWORD PTR [ecx+8], -722			; fffffd2eH
	jne	SHORT $LN50@ProcMessag

; 832  :                         SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN50@ProcMessag:

; 833  :                 }
; 834  : 
; 835  :                 break;

	jmp	$LN76@ProcMessag
$LN48@ProcMessag:

; 836  :             }
; 837  : 
; 838  :         case WM_COMMAND:
; 839  :             {
; 840  :                 bool bDataChanged = false;

	mov	BYTE PTR _bDataChanged$56[ebp], 0

; 841  : 
; 842  :                 switch(LOWORD(wParam))

	movzx	edx, WORD PTR _wParam$[ebp]
	mov	DWORD PTR tv1133[ebp], edx
	mov	eax, DWORD PTR tv1133[ebp]
	sub	eax, 1008				; 000003f0H
	mov	DWORD PTR tv1133[ebp], eax
	cmp	DWORD PTR tv1133[ebp], 91		; 0000005bH
	ja	$LN46@ProcMessag
	mov	ecx, DWORD PTR tv1133[ebp]
	movzx	edx, BYTE PTR $LN115@ProcMessag[ecx]
	jmp	DWORD PTR $LN117@ProcMessag[edx*4]
$LN45@ProcMessag:

; 843  :                 {
; 844  :                     case IDC_MODE:
; 845  :                         {
; 846  :                             if(HIWORD(wParam) != CBN_SELCHANGE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 1
	je	SHORT $LN44@ProcMessag

; 847  :                                 break;

	jmp	$LN46@ProcMessag
$LN44@ProcMessag:

; 848  : 
; 849  :                             int mode = (int)SendMessage((HWND)lParam, CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _mode$45[ebp], eax

; 850  :                             int swShowControls = (mode == 0) ? SW_SHOW : SW_HIDE;

	cmp	DWORD PTR _mode$45[ebp], 0
	jne	SHORT $LN96@ProcMessag
	mov	DWORD PTR tv1144[ebp], 5
	jmp	SHORT $LN97@ProcMessag
$LN96@ProcMessag:
	mov	DWORD PTR tv1144[ebp], 0
$LN97@ProcMessag:
	mov	eax, DWORD PTR tv1144[ebp]
	mov	DWORD PTR _swShowControls$55[ebp], eax

; 851  : 
; 852  :                             ShowWindow(GetDlgItem(hwnd, IDC_SERVICE), swShowControls);

	mov	ecx, DWORD PTR _swShowControls$55[ebp]
	push	ecx
	push	1014					; 000003f6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 853  :                             ShowWindow(GetDlgItem(hwnd, IDC_PLAYPATH), swShowControls);

	mov	ecx, DWORD PTR _swShowControls$55[ebp]
	push	ecx
	push	1011					; 000003f3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 854  :                             ShowWindow(GetDlgItem(hwnd, IDC_BROWSEUSERSERVICES), swShowControls);

	mov	ecx, DWORD PTR _swShowControls$55[ebp]
	push	ecx
	push	1052					; 0000041cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 855  : 
; 856  :                             int serviceID = (int)SendMessage(GetDlgItem(hwnd, IDC_SERVICE), CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _serviceID$18[ebp], eax

; 857  :                             if(serviceID == 0)

	cmp	DWORD PTR _serviceID$18[ebp], 0
	jne	SHORT $LN43@ProcMessag

; 858  :                             {
; 859  :                                 ShowWindow(GetDlgItem(hwnd, IDC_SERVERLIST), SW_HIDE);

	push	0
	push	1013					; 000003f5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 860  :                                 ShowWindow(GetDlgItem(hwnd, IDC_URL), swShowControls);

	mov	edx, DWORD PTR _swShowControls$55[ebp]
	push	edx
	push	1012					; 000003f4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 861  :                             }
; 862  :                             else

	jmp	SHORT $LN42@ProcMessag
$LN43@ProcMessag:

; 863  :                             {
; 864  :                                 ShowWindow(GetDlgItem(hwnd, IDC_SERVERLIST), swShowControls);

	mov	edx, DWORD PTR _swShowControls$55[ebp]
	push	edx
	push	1013					; 000003f5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 865  :                                 ShowWindow(GetDlgItem(hwnd, IDC_URL), SW_HIDE);

	push	0
	push	1012					; 000003f4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN42@ProcMessag:

; 866  :                             }
; 867  : 
; 868  :                             if(mode == 0 && data.mode == 1)

	cmp	DWORD PTR _mode$45[ebp], 0
	jne	$LN41@ProcMessag
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	$LN41@ProcMessag

; 869  :                             {
; 870  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_SAVEPATH_STATIC), 0, data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	0
	push	1082					; 0000043aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 871  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_SAVEPATH), 0, data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	0
	push	1081					; 00000439H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 872  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_BROWSE), 0, data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	0
	push	1050					; 0000041aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 873  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH), 0, data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	0
	push	1086					; 0000043eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 874  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH_EDIT), 0, data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	0
	push	1085					; 0000043dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 875  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH_STATIC), 0, data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	0
	push	1127					; 00000467H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 876  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY_STATIC), 0, data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	0
	push	1181					; 0000049dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 877  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY), 0, data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	0
	push	1182					; 0000049eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 878  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH_STATIC), 0, data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	0
	push	1087					; 0000043fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 879  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH), 0, data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	0
	push	1088					; 00000440H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 880  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERBROWSE), 0, data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	0
	push	1051					; 0000041bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH
	jmp	$LN40@ProcMessag
$LN41@ProcMessag:

; 881  :                             }
; 882  :                             else if(mode == 1 && data.mode == 0)

	cmp	DWORD PTR _mode$45[ebp], 1
	jne	$LN40@ProcMessag
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	$LN40@ProcMessag

; 883  :                             {
; 884  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_SAVEPATH_STATIC), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1082					; 0000043aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 885  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_SAVEPATH), 0, -data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	neg	ecx
	push	ecx
	push	0
	push	1081					; 00000439H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 886  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_BROWSE), 0, -data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	neg	edx
	push	edx
	push	0
	push	1050					; 0000041aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 887  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1086					; 0000043eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 888  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH_EDIT), 0, -data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	neg	ecx
	push	ecx
	push	0
	push	1085					; 0000043dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 889  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERLENGTH_STATIC), 0, -data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	neg	edx
	push	edx
	push	0
	push	1127					; 00000467H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 890  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY_STATIC), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1181					; 0000049dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 891  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERMEMORY), 0, -data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	neg	ecx
	push	ecx
	push	0
	push	1182					; 0000049eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 892  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH_STATIC), 0, -data.fileControlOffset);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	neg	edx
	push	edx
	push	0
	push	1087					; 0000043fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 893  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERSAVEPATH), 0, -data.fileControlOffset);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	neg	eax
	push	eax
	push	0
	push	1088					; 00000440H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH

; 894  :                                 AdjustWindowPos(GetDlgItem(hwnd, IDC_REPLAYBUFFERBROWSE), 0, -data.fileControlOffset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	neg	ecx
	push	ecx
	push	0
	push	1051					; 0000041bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	?AdjustWindowPos@@YAXPAUHWND__@@JJ@Z	; AdjustWindowPos
	add	esp, 12					; 0000000cH
$LN40@ProcMessag:

; 895  :                             }
; 896  : 
; 897  :                             data.mode = mode;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _mode$45[ebp]
	mov	DWORD PTR [ecx+8], edx

; 898  : 
; 899  :                             ShowWindow(GetDlgItem(hwnd, IDC_SERVICE_STATIC), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1047					; 00000417H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 900  :                             ShowWindow(GetDlgItem(hwnd, IDC_PLAYPATH_STATIC), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1044					; 00000414H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 901  :                             ShowWindow(GetDlgItem(hwnd, IDC_URL_STATIC), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1043					; 00000413H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 902  :                             ShowWindow(GetDlgItem(hwnd, IDC_SERVER_STATIC), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1046					; 00000416H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 903  :                             //ShowWindow(GetDlgItem(hwnd, IDC_DASHBOARDLINK), swShowControls);
; 904  :                             //ShowWindow(GetDlgItem(hwnd, IDC_DASHBOARDLINK_STATIC), swShowControls);
; 905  :                             ShowWindow(GetDlgItem(hwnd, IDC_LOWLATENCYMODE), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1099					; 0000044bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 906  :                             ShowWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1041					; 00000411H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 907  :                             ShowWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1079					; 00000437H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 908  :                             ShowWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT_STATIC), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1080					; 00000438H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 909  :                             ShowWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT_EDIT), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1078					; 00000436H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 910  :                             ShowWindow(GetDlgItem(hwnd, IDC_DELAY_STATIC), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1126					; 00000466H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 911  :                             ShowWindow(GetDlgItem(hwnd, IDC_DELAY_EDIT), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1083					; 0000043bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 912  :                             ShowWindow(GetDlgItem(hwnd, IDC_DELAY), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1084					; 0000043cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 913  :                             ShowWindow(GetDlgItem(hwnd, IDC_SAVETOFILE), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1045					; 00000415H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 914  :                             ShowWindow(GetDlgItem(hwnd, IDC_KEEPRECORDING), swShowControls);

	mov	eax, DWORD PTR _swShowControls$55[ebp]
	push	eax
	push	1048					; 00000418H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 915  : 
; 916  :                             SetWarningInfo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWarningInfo@SettingsPublish@@AAEXXZ	; SettingsPublish::SetWarningInfo

; 917  : 
; 918  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1

; 919  :                             break;

	jmp	$LN46@ProcMessag
$LN38@ProcMessag:

; 920  :                         }
; 921  : 
; 922  :                     case IDC_SERVICE:
; 923  :                         if(HIWORD(wParam) == CBN_SELCHANGE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 1
	jne	$LN37@ProcMessag

; 924  :                         {
; 925  :                             int serviceID = (int)SendMessage((HWND)lParam, CB_GETCURSEL, 0, 0);

	push	0
	push	0
	push	327					; 00000147H
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _serviceID$43[ebp], eax

; 926  : 
; 927  :                             if(serviceID == 0)

	cmp	DWORD PTR _serviceID$43[ebp], 0
	jne	SHORT $LN36@ProcMessag

; 928  :                             {
; 929  :                                 ShowWindow(GetDlgItem(hwnd, IDC_SERVERLIST), SW_HIDE);

	push	0
	push	1013					; 000003f5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 930  :                                 ShowWindow(GetDlgItem(hwnd, IDC_URL), SW_SHOW);

	push	5
	push	1012					; 000003f4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 931  : 
; 932  :                                 SetWindowText(GetDlgItem(hwnd, IDC_URL), NULL);

	push	0
	push	1012					; 000003f4H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 933  :                                 //SetWindowText(GetDlgItem(hwnd, IDC_DASHBOARDLINK), NULL);
; 934  :                             }
; 935  :                             else

	jmp	$LN35@ProcMessag
$LN36@ProcMessag:

; 936  :                             {
; 937  :                                 ShowWindow(GetDlgItem(hwnd, IDC_URL), SW_HIDE);

	push	0
	push	1012					; 000003f4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8

; 938  : 
; 939  :                                 hwndTemp = GetDlgItem(hwnd, IDC_SERVERLIST);

	push	1013					; 000003f5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hwndTemp$[ebp], eax

; 940  :                                 ShowWindow(hwndTemp, SW_SHOW);

	push	5
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8

; 941  :                                 SendMessage(hwndTemp, CB_RESETCONTENT, 0, 0);

	push	0
	push	0
	push	331					; 0000014bH
	mov	edx, DWORD PTR _hwndTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 942  : 
; 943  :                                 if (serviceID >= 0 && serviceID < (int)services.size())

	cmp	DWORD PTR _serviceID$43[ebp], 0
	jl	$LN34@ProcMessag
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?size@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QBEIXZ ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::size
	cmp	DWORD PTR _serviceID$43[ebp], eax
	jge	$LN34@ProcMessag

; 944  :                                 {
; 945  :                                     auto serviceData = LoadService(services[serviceID]);

	push	0
	mov	eax, DWORD PTR _serviceID$43[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _serviceData$14[ebp]
	push	ecx
	call	?LoadService@@YA?AU?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@ABUServiceIdentifier@@PAVString@@@Z ; LoadService
	add	esp, 12					; 0000000cH

; 946  :                                     auto service = serviceData.second;

	mov	edx, DWORD PTR _serviceData$14[ebp+4]
	mov	DWORD PTR _service$35[ebp], edx

; 947  :                                     if (service)

	cmp	DWORD PTR _service$35[ebp], 0
	je	$LN33@ProcMessag

; 948  :                                     {
; 949  :                                         XElement *servers = service->GetElement(TEXT("servers"));

	push	OFFSET $SG4294737343
	mov	ecx, DWORD PTR _service$35[ebp]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _servers$38[ebp], eax

; 950  :                                         if (servers)

	cmp	DWORD PTR _servers$38[ebp], 0
	je	SHORT $LN33@ProcMessag

; 951  :                                         {
; 952  :                                             UINT numServers = servers->NumDataItems();

	push	0
	mov	ecx, DWORD PTR _servers$38[ebp]
	call	DWORD PTR __imp_?NumDataItems@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numServers$28[ebp], eax

; 953  :                                             for (UINT i = 0; i < numServers; i++)

	mov	DWORD PTR _i$44[ebp], 0
	jmp	SHORT $LN31@ProcMessag
$LN30@ProcMessag:
	mov	eax, DWORD PTR _i$44[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44[ebp], eax
$LN31@ProcMessag:
	mov	ecx, DWORD PTR _i$44[ebp]
	cmp	ecx, DWORD PTR _numServers$28[ebp]
	jae	SHORT $LN33@ProcMessag

; 954  :                                             {
; 955  :                                                 XDataItem *server = servers->GetDataItemByID(i);

	mov	edx, DWORD PTR _i$44[ebp]
	push	edx
	mov	ecx, DWORD PTR _servers$38[ebp]
	call	DWORD PTR __imp_?GetDataItemByID@XElement@@QBEPAVXDataItem@@K@Z
	mov	DWORD PTR _server$32[ebp], eax

; 956  :                                                 SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)server->GetName());

	mov	ecx, DWORD PTR _server$32[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	323					; 00000143H
	mov	eax, DWORD PTR _hwndTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 957  :                                             }

	jmp	SHORT $LN30@ProcMessag
$LN33@ProcMessag:

; 958  :                                         }
; 959  :                                     }
; 960  :                                 }

	lea	ecx, DWORD PTR _serviceData$14[ebp]
	call	??1?$pair@V?$unique_ptr@VXConfig@@U?$default_delete@VXConfig@@@std@@@std@@PAVXElement@@@std@@QAE@XZ
$LN34@ProcMessag:

; 961  : 
; 962  :                                 SendMessage(hwndTemp, CB_SETCURSEL, 0, 0);

	push	0
	push	0
	push	334					; 0000014eH
	mov	ecx, DWORD PTR _hwndTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN35@ProcMessag:

; 963  :                             }
; 964  : 
; 965  :                             SetWindowText(GetDlgItem(hwnd, IDC_PLAYPATH), NULL);

	push	0
	push	1011					; 000003f3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 966  : 
; 967  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1

; 968  : 
; 969  :                             SetWarningInfo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWarningInfo@SettingsPublish@@AAEXXZ	; SettingsPublish::SetWarningInfo
$LN37@ProcMessag:

; 970  :                         }
; 971  : 
; 972  :                         break;

	jmp	$LN46@ProcMessag
$LN28@ProcMessag:

; 973  : 
; 974  :                     case IDC_AUTORECONNECT:
; 975  :                         if(HIWORD(wParam) == BN_CLICKED)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	test	edx, edx
	jne	$LN27@ProcMessag

; 976  :                         {
; 977  :                             BOOL bAutoReconnect = SendMessage((HWND)lParam, BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN98@ProcMessag
	mov	DWORD PTR tv1835[ebp], 1
	jmp	SHORT $LN99@ProcMessag
$LN98@ProcMessag:
	mov	DWORD PTR tv1835[ebp], 0
$LN99@ProcMessag:
	mov	ecx, DWORD PTR tv1835[ebp]
	mov	DWORD PTR _bAutoReconnect$34[ebp], ecx

; 978  : 
; 979  :                             EnableWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT),       bAutoReconnect);

	mov	edx, DWORD PTR _bAutoReconnect$34[ebp]
	push	edx
	push	1079					; 00000437H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 980  :                             EnableWindow(GetDlgItem(hwnd, IDC_AUTORECONNECT_TIMEOUT_EDIT),  bAutoReconnect);

	mov	edx, DWORD PTR _bAutoReconnect$34[ebp]
	push	edx
	push	1078					; 00000436H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8

; 981  : 
; 982  :                             SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN27@ProcMessag:

; 983  :                         }
; 984  :                         break;

	jmp	$LN46@ProcMessag
$LN26@ProcMessag:

; 985  : 
; 986  :                     case IDC_AUTORECONNECT_TIMEOUT_EDIT:
; 987  :                         if(HIWORD(wParam) == EN_CHANGE)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 768				; 00000300H
	jne	SHORT $LN25@ProcMessag

; 988  :                             SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN25@ProcMessag:

; 989  :                         break;

	jmp	$LN46@ProcMessag
$LN24@ProcMessag:

; 990  : 
; 991  :                     case IDC_DELAY_EDIT:
; 992  :                         if(HIWORD(wParam) == EN_CHANGE)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 768				; 00000300H
	jne	SHORT $LN23@ProcMessag

; 993  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1
$LN23@ProcMessag:

; 994  :                         break;

	jmp	$LN46@ProcMessag
$LN22@ProcMessag:

; 995  : 
; 996  :                     case IDC_REPLAYBUFFERLENGTH_EDIT:
; 997  :                         if (HIWORD(wParam) == EN_CHANGE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 768				; 00000300H
	jne	SHORT $LN21@ProcMessag

; 998  :                         {
; 999  :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1

; 1000 :                             UpdateMemoryUsage(hwnd);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?UpdateMemoryUsage@@YAXPAUHWND__@@@Z	; UpdateMemoryUsage
	add	esp, 4
$LN21@ProcMessag:

; 1001 :                         }
; 1002 :                         break;

	jmp	$LN46@ProcMessag
$LN20@ProcMessag:

; 1003 : 
; 1004 :                     case IDC_KEEPRECORDING:
; 1005 :                         if(HIWORD(wParam) == BN_CLICKED)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	test	edx, edx
	jne	SHORT $LN19@ProcMessag

; 1006 :                         {
; 1007 :                             BOOL bKeepRecording = SendMessage((HWND)lParam, BM_GETCHECK, 0, 0) == BST_CHECKED;

	push	0
	push	0
	push	240					; 000000f0H
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN100@ProcMessag
	mov	DWORD PTR tv1896[ebp], 1
	jmp	SHORT $LN101@ProcMessag
$LN100@ProcMessag:
	mov	DWORD PTR tv1896[ebp], 0
$LN101@ProcMessag:
	mov	ecx, DWORD PTR tv1896[ebp]
	mov	DWORD PTR _bKeepRecording$25[ebp], ecx

; 1008 :                             App->bKeepRecording = bKeepRecording != 0;

	cmp	DWORD PTR _bKeepRecording$25[ebp], 0
	je	SHORT $LN102@ProcMessag
	mov	DWORD PTR tv1899[ebp], 1
	jmp	SHORT $LN103@ProcMessag
$LN102@ProcMessag:
	mov	DWORD PTR tv1899[ebp], 0
$LN103@ProcMessag:
	mov	edx, DWORD PTR ?App@@3PAVOBS@@A		; App
	mov	al, BYTE PTR tv1899[ebp]
	mov	BYTE PTR [edx+629], al

; 1009 : 
; 1010 :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1
$LN19@ProcMessag:

; 1011 :                         }
; 1012 :                         break;

	jmp	$LN46@ProcMessag
$LN18@ProcMessag:

; 1013 : 
; 1014 :                     case IDC_BROWSE:
; 1015 :                     case IDC_REPLAYBUFFERBROWSE:
; 1016 :                         {
; 1017 :                             bool replayBuffer = LOWORD(wParam) == IDC_REPLAYBUFFERBROWSE;

	movzx	ecx, WORD PTR _wParam$[ebp]
	cmp	ecx, 1051				; 0000041bH
	jne	SHORT $LN104@ProcMessag
	mov	DWORD PTR tv1903[ebp], 1
	jmp	SHORT $LN105@ProcMessag
$LN104@ProcMessag:
	mov	DWORD PTR tv1903[ebp], 0
$LN105@ProcMessag:
	mov	dl, BYTE PTR tv1903[ebp]
	mov	BYTE PTR _replayBuffer$54[ebp], dl

; 1018 :                             TCHAR lpFile[512];
; 1019 :                             OPENFILENAME ofn;
; 1020 :                             zero(&ofn, sizeof(ofn));

	push	88					; 00000058H
	lea	eax, DWORD PTR _ofn$3[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 1021 :                             ofn.lStructSize = sizeof(ofn);

	mov	DWORD PTR _ofn$3[ebp], 88		; 00000058H

; 1022 :                             ofn.hwndOwner = hwnd;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _ofn$3[ebp+4], edx

; 1023 :                             ofn.lpstrFile = lpFile;

	lea	eax, DWORD PTR _lpFile$61[ebp]
	mov	DWORD PTR _ofn$3[ebp+28], eax

; 1024 :                             ofn.nMaxFile = 511;

	mov	DWORD PTR _ofn$3[ebp+32], 511		; 000001ffH

; 1025 :                             ofn.lpstrFile[0] = 0;

	mov	ecx, 2
	imul	edx, ecx, 0
	xor	eax, eax
	mov	ecx, DWORD PTR _ofn$3[ebp+28]
	mov	WORD PTR [ecx+edx], ax

; 1026 :                             ofn.lpstrFilter = TEXT("MP4 File (*.mp4)\0*.mp4\0Flash Video File (*.flv)\0*.flv\0");

	mov	DWORD PTR _ofn$3[ebp+12], OFFSET $SG4294737342

; 1027 :                             ofn.lpstrFileTitle = NULL;

	mov	DWORD PTR _ofn$3[ebp+36], 0

; 1028 :                             ofn.nMaxFileTitle = 0;

	mov	DWORD PTR _ofn$3[ebp+40], 0

; 1029 :                             ofn.nFilterIndex = 1;

	mov	DWORD PTR _ofn$3[ebp+24], 1

; 1030 : 
; 1031 :                             String path = OSGetDefaultVideoSavePath();

	push	0
	lea	edx, DWORD PTR _path$29[ebp]
	push	edx
	call	DWORD PTR __imp_?OSGetDefaultVideoSavePath@@YG?AVString@@PB_W@Z

; 1032 :                             ofn.lpstrInitialDir = AppConfig->GetStringPtr(TEXT("Publish"), replayBuffer ? L"LastReplayBufferSaveDir" : TEXT("LastSaveDir"), path.IsValid() ? path.Array() : nullptr);

	lea	ecx, DWORD PTR _path$29[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN106@ProcMessag
	lea	ecx, DWORD PTR _path$29[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR tv1925[ebp], eax
	jmp	SHORT $LN107@ProcMessag
$LN106@ProcMessag:
	mov	DWORD PTR tv1925[ebp], 0
$LN107@ProcMessag:
	movzx	eax, BYTE PTR _replayBuffer$54[ebp]
	test	eax, eax
	je	SHORT $LN108@ProcMessag
	mov	DWORD PTR tv1929[ebp], OFFSET $SG4294737341
	jmp	SHORT $LN109@ProcMessag
$LN108@ProcMessag:
	mov	DWORD PTR tv1929[ebp], OFFSET $SG4294737340
$LN109@ProcMessag:
	mov	ecx, DWORD PTR tv1925[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1929[ebp]
	push	edx
	push	OFFSET $SG4294737339
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?GetStringPtr@ConfigFile@@QAEPB_WPB_W00@Z
	mov	DWORD PTR _ofn$3[ebp+44], eax

; 1033 : 
; 1034 :                             ofn.Flags = OFN_PATHMUSTEXIST;

	mov	DWORD PTR _ofn$3[ebp+52], 2048		; 00000800H

; 1035 : 
; 1036 :                             TCHAR curDirectory[512];
; 1037 :                             GetCurrentDirectory(511, curDirectory);

	lea	eax, DWORD PTR _curDirectory$60[ebp]
	push	eax
	push	511					; 000001ffH
	call	DWORD PTR __imp__GetCurrentDirectoryW@8

; 1038 : 
; 1039 :                             BOOL bChoseFile = GetSaveFileName(&ofn);

	lea	ecx, DWORD PTR _ofn$3[ebp]
	push	ecx
	call	_IsolationAwareGetSaveFileNameW@4
	mov	DWORD PTR _bChoseFile$20[ebp], eax

; 1040 :                             SetCurrentDirectory(curDirectory);

	lea	edx, DWORD PTR _curDirectory$60[ebp]
	push	edx
	call	DWORD PTR __imp__SetCurrentDirectoryW@4

; 1041 : 
; 1042 :                             if(*lpFile && bChoseFile)

	mov	eax, 2
	imul	ecx, eax, 0
	movzx	edx, WORD PTR _lpFile$61[ebp+ecx]
	test	edx, edx
	je	$LN17@ProcMessag
	cmp	DWORD PTR _bChoseFile$20[ebp], 0
	je	$LN17@ProcMessag

; 1043 :                             {
; 1044 :                                 String strFile = lpFile;

	lea	eax, DWORD PTR _lpFile$61[ebp]
	push	eax
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 1045 :                                 strFile.FindReplace(TEXT("\\"), TEXT("/"));

	push	OFFSET $SG4294737338
	push	OFFSET $SG4294737337
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 1046 : 
; 1047 :                                 String strExtension = GetPathExtension(strFile);

	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _strExtension$33[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetPathExtension@@YA?AVString@@PB_W@Z
	add	esp, 8

; 1048 :                                 if(strExtension.IsEmpty() || (!strExtension.CompareI(TEXT("flv")) && /*!strExtension.CompareI(TEXT("avi")) &&*/ !strExtension.CompareI(TEXT("mp4"))))

	lea	ecx, DWORD PTR _strExtension$33[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	jne	SHORT $LN15@ProcMessag
	push	OFFSET $SG4294737336
	lea	ecx, DWORD PTR _strExtension$33[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	SHORT $LN16@ProcMessag
	push	OFFSET $SG4294737335
	lea	ecx, DWORD PTR _strExtension$33[ebp]
	call	DWORD PTR __imp_?CompareI@String@@QBEHPB_W@Z
	test	eax, eax
	jne	SHORT $LN16@ProcMessag
$LN15@ProcMessag:

; 1049 :                                 {
; 1050 :                                     switch(ofn.nFilterIndex)

	mov	edx, DWORD PTR _ofn$3[ebp+24]
	mov	DWORD PTR tv1998[ebp], edx
	cmp	DWORD PTR tv1998[ebp], 1
	je	SHORT $LN12@ProcMessag
	cmp	DWORD PTR tv1998[ebp], 2
	je	SHORT $LN11@ProcMessag
	jmp	SHORT $LN16@ProcMessag
$LN12@ProcMessag:

; 1051 :                                     {
; 1052 :                                         case 1:
; 1053 :                                             strFile << TEXT(".mp4"); break;

	push	OFFSET $SG4294737334
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	jmp	SHORT $LN16@ProcMessag
$LN11@ProcMessag:

; 1054 :                                         case 2:
; 1055 :                                             strFile << TEXT(".flv"); break;

	push	OFFSET $SG4294737333
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
$LN16@ProcMessag:

; 1056 :                                         /*case 3:
; 1057 :                                             strFile << TEXT(".avi"); break;*/
; 1058 :                                     }
; 1059 :                                 }
; 1060 : 
; 1061 :                                 String strFilePath = GetPathDirectory(strFile).FindReplace(TEXT("/"), TEXT("\\")) << TEXT("\\");

	push	OFFSET $SG4294737330
	push	OFFSET $SG4294737332
	push	OFFSET $SG4294737331
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	DWORD PTR __imp_?GetPathDirectory@@YA?AVString@@PB_W@Z
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	push	eax
	lea	ecx, DWORD PTR _strFilePath$13[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR $T10[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 1062 :                                 AppConfig->SetString(TEXT("Publish"), replayBuffer ? L"LastReplayBufferSaveDir" : TEXT("LastSaveDir"), strFilePath);

	movzx	ecx, BYTE PTR _replayBuffer$54[ebp]
	test	ecx, ecx
	je	SHORT $LN110@ProcMessag
	mov	DWORD PTR tv2029[ebp], OFFSET $SG4294737329
	jmp	SHORT $LN111@ProcMessag
$LN110@ProcMessag:
	mov	DWORD PTR tv2029[ebp], OFFSET $SG4294737328
$LN111@ProcMessag:
	lea	ecx, DWORD PTR _strFilePath$13[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	edx, DWORD PTR tv2029[ebp]
	push	edx
	push	OFFSET $SG4294737327
	mov	ecx, DWORD PTR ?AppConfig@@3PAVConfigFile@@A ; AppConfig
	call	DWORD PTR __imp_?SetString@ConfigFile@@QAEXPB_W00@Z

; 1063 : 
; 1064 :                                 strFile.FindReplace(TEXT("/"), TEXT("\\"));

	push	OFFSET $SG4294737326
	push	OFFSET $SG4294737325
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 1065 :                                 SetWindowText(GetDlgItem(hwnd, replayBuffer ? IDC_REPLAYBUFFERSAVEPATH : IDC_SAVEPATH), strFile);

	movzx	eax, BYTE PTR _replayBuffer$54[ebp]
	test	eax, eax
	je	SHORT $LN112@ProcMessag
	mov	DWORD PTR tv2042[ebp], 1088		; 00000440H
	jmp	SHORT $LN113@ProcMessag
$LN112@ProcMessag:
	mov	DWORD PTR tv2042[ebp], 1081		; 00000439H
$LN113@ProcMessag:
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR tv2042[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8

; 1066 :                                 bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1

; 1067 :                             }

	lea	ecx, DWORD PTR _strFilePath$13[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strExtension$33[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _strFile$42[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN17@ProcMessag:

; 1068 : 
; 1069 :                             break;

	lea	ecx, DWORD PTR _path$29[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	$LN46@ProcMessag
$LN10@ProcMessag:

; 1070 :                         }
; 1071 : 
; 1072 :                     case IDC_BROWSEUSERSERVICES:
; 1073 :                         ShellExecute(NULL, L"open", FormattedString(L"%s/services", API->GetAppDataPath()), 0, 0, SW_SHOWNORMAL);

	push	1
	push	0
	push	0
	mov	ecx, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __imp_?API@@3PAVAPIInterface@@A
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	push	eax
	push	OFFSET $SG4294737324
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	mov	ecx, eax
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294737323
	push	0
	call	DWORD PTR __imp__ShellExecuteW@24
	lea	ecx, DWORD PTR $T9[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 1074 :                         break;

	jmp	SHORT $LN46@ProcMessag
$LN9@ProcMessag:

; 1075 : 
; 1076 :                     case IDC_LOWLATENCYMODE:
; 1077 :                     case IDC_SAVETOFILE:
; 1078 :                         if(HIWORD(wParam) == BN_CLICKED)

	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $LN8@ProcMessag

; 1079 :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1
$LN8@ProcMessag:

; 1080 :                         break;

	jmp	SHORT $LN46@ProcMessag
$LN7@ProcMessag:

; 1081 : 
; 1082 :                     case IDC_PLAYPATH:
; 1083 :                     case IDC_URL:
; 1084 :                     case IDC_SAVEPATH:
; 1085 :                     case IDC_REPLAYBUFFERSAVEPATH:
; 1086 :                         if(HIWORD(wParam) == EN_CHANGE)

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	cmp	edx, 768				; 00000300H
	jne	SHORT $LN6@ProcMessag

; 1087 :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1
$LN6@ProcMessag:

; 1088 :                         break;

	jmp	SHORT $LN46@ProcMessag
$LN5@ProcMessag:

; 1089 : 
; 1090 :                     case IDC_SERVERLIST:
; 1091 :                         if(HIWORD(wParam) == CBN_EDITCHANGE || HIWORD(wParam) == CBN_SELCHANGE)

	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	movzx	ecx, ax
	cmp	ecx, 5
	je	SHORT $LN3@ProcMessag
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	cmp	eax, 1
	jne	SHORT $LN46@ProcMessag
$LN3@ProcMessag:

; 1092 :                             bDataChanged = true;

	mov	BYTE PTR _bDataChanged$56[ebp], 1
$LN46@ProcMessag:

; 1093 :                         break;
; 1094 :                 }
; 1095 : 
; 1096 :                 if(bDataChanged)

	movzx	ecx, BYTE PTR _bDataChanged$56[ebp]
	test	ecx, ecx
	je	SHORT $LN76@ProcMessag

; 1097 :                 {
; 1098 :                     if (App->GetVideoEncoder())

	mov	ecx, DWORD PTR ?App@@3PAVOBS@@A		; App
	call	?GetVideoEncoder@OBS@@QBEPAVVideoEncoder@@XZ ; OBS::GetVideoEncoder
	test	eax, eax
	je	SHORT $LN1@ProcMessag

; 1099 :                         ShowWindow(GetDlgItem(hwnd, IDC_INFO), SW_SHOW);

	push	5
	push	1029					; 00000405H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
$LN1@ProcMessag:

; 1100 :                     SetChangedSettings(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?SetChangedSettings@SettingsPane@@IAEX_N@Z
$LN76@ProcMessag:

; 1101 :                 }
; 1102 :                 break;
; 1103 :             }
; 1104 :     }
; 1105 :     return FALSE;

	xor	eax, eax
$LN78@ProcMessag:

; 1106 : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN116@ProcMessag:
	DD	$LN51@ProcMessag
	DD	$LN75@ProcMessag
	DD	$LN48@ProcMessag
	DD	$LN58@ProcMessag
	DD	$LN76@ProcMessag
$LN114@ProcMessag:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
	npad	1
$LN117@ProcMessag:
	DD	$LN45@ProcMessag
	DD	$LN7@ProcMessag
	DD	$LN5@ProcMessag
	DD	$LN38@ProcMessag
	DD	$LN28@ProcMessag
	DD	$LN9@ProcMessag
	DD	$LN20@ProcMessag
	DD	$LN18@ProcMessag
	DD	$LN10@ProcMessag
	DD	$LN26@ProcMessag
	DD	$LN24@ProcMessag
	DD	$LN22@ProcMessag
	DD	$LN46@ProcMessag
$LN115@ProcMessag:
	DB	0
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	1
	DB	1
	DB	2
	DB	3
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	4
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	5
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	6
	DB	12					; 0000000cH
	DB	7
	DB	7
	DB	8
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	9
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	1
	DB	12					; 0000000cH
	DB	10					; 0000000aH
	DB	12					; 0000000cH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	1
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	5
?ProcMessage@SettingsPublish@@UAEHIIJ@Z ENDP		; SettingsPublish::ProcMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QAE@PAVSettingsPublish@@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@AAPAUHWND__@@AAUServiceIdentifier@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This$ = 8						; size = 4
___duplicates$ = 12					; size = 4
___hwndTemp$ = 16					; size = 4
___current$ = 20					; size = 4
??0<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QAE@PAVSettingsPublish@@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@AAPAUHWND__@@AAUServiceIdentifier@@@Z PROC ; <lambda_da5f0f708578e290fee5fc13ec57d23a>::<lambda_da5f0f708578e290fee5fc13ec57d23a>, COMDAT
; _this$ = ecx

; 600  :                 });

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___duplicates$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___hwndTemp$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___current$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QAE@PAVSettingsPublish@@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@AAPAUHWND__@@AAUServiceIdentifier@@@Z ENDP ; <lambda_da5f0f708578e290fee5fc13ec57d23a>::<lambda_da5f0f708578e290fee5fc13ec57d23a>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QBE_NUServiceIdentifier@@PAVXElement@@@Z
_TEXT	SEGMENT
$T1 = -120						; size = 20
$T2 = -100						; size = 4
$T3 = -96						; size = 8
$T4 = -88						; size = 8
_first$5 = -80						; size = 4
tv220 = -76						; size = 4
_id$ = -72						; size = 4
$T6 = -68						; size = 4
_pos$ = -64						; size = 4
$T7 = -58						; size = 1
$T8 = -57						; size = 1
_this$ = -56						; size = 4
$T9 = -52						; size = 24
$T10 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_sid$ = 8						; size = 12
_service$ = 20						; size = 4
??R<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QBE_NUServiceIdentifier@@PAVXElement@@@Z PROC ; <lambda_da5f0f708578e290fee5fc13ec57d23a>::operator(), COMDAT
; _this$ = ecx

; 557  :                 {

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T6[ebp], 0

; 558  :                     if (!service)

	cmp	DWORD PTR _service$[ebp], 0
	jne	SHORT $LN4@operator

; 559  :                         return true;

	mov	BYTE PTR $T7[ebp], 1
	lea	ecx, DWORD PTR _sid$[ebp]
	call	??1ServiceIdentifier@@QAE@XZ
	mov	al, BYTE PTR $T7[ebp]
	jmp	$LN5@operator
$LN4@operator:

; 560  : 
; 561  :                     services.emplace_back(sid);

	lea	eax, DWORD PTR _sid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 16					; 00000010H
	call	??$emplace_back@AAUServiceIdentifier@@@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXAAUServiceIdentifier@@@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::emplace_back<ServiceIdentifier &>

; 562  :                     auto pos = duplicates.find(service->GetName());

	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?find@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::find
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 563  :                     int id;
; 564  :                     if (pos != end(duplicates))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??$end@V?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@0@@Z ; std::end<std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN3@operator

; 565  :                     {
; 566  :                         const ServiceIdentifier &first = services[pos->second];

	lea	ecx, DWORD PTR _pos$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->
	mov	eax, DWORD PTR [eax+24]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 16					; 00000010H
	call	??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
	mov	DWORD PTR _first$5[ebp], eax

; 567  :                         if (first.file.IsValid())

	mov	ecx, DWORD PTR _first$5[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	$LN2@operator

; 568  :                         {
; 569  :                             SendMessage(hwndTemp, CB_DELETESTRING, pos->second, 0);

	push	0
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->
	mov	edx, DWORD PTR [eax+24]
	push	edx
	push	324					; 00000144H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16

; 570  :                             SendMessage(hwndTemp, CB_INSERTSTRING, pos->second, (LPARAM)FormattedString(L"%s [%s]", service->GetName(), services[pos->second].file.Array()).Array());

	lea	ecx, DWORD PTR _pos$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->
	mov	eax, DWORD PTR [eax+24]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 16					; 00000010H
	call	??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
	add	eax, 4
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	OFFSET $SG4294737322
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->
	mov	eax, DWORD PTR [eax+24]
	push	eax
	push	330					; 0000014aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN2@operator:

; 571  :                         }
; 572  :                         id = (int)SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)(sid.file.IsValid() ? FormattedString(L"%s [%s]", service->GetName(), sid.file.Array()).Array() : service->GetName()));

	lea	ecx, DWORD PTR _sid$[ebp+4]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN7@operator
	or	DWORD PTR $T6[ebp], 1
	lea	ecx, DWORD PTR _sid$[ebp+4]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	OFFSET $SG4294737321
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	DWORD PTR tv220[ebp], eax
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	mov	DWORD PTR tv220[ebp], eax
$LN8@operator:
	mov	edx, DWORD PTR tv220[ebp]
	push	edx
	push	0
	push	323					; 00000143H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$[ebp], eax
	mov	eax, DWORD PTR $T6[ebp]
	and	eax, 1
	je	SHORT $LN9@operator
	and	DWORD PTR $T6[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@operator:

; 573  :                     }
; 574  :                     else

	jmp	SHORT $LN1@operator
$LN3@operator:

; 575  :                     {
; 576  :                         id = (int)SendMessage(hwndTemp, CB_ADDSTRING, 0, (LPARAM)service->GetName());

	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	323					; 00000143H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _id$[ebp], eax

; 577  :                         duplicates[service->GetName()] = id;

	mov	ecx, DWORD PTR _service$[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	??A?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAH$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::operator[]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax], ecx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN1@operator:

; 578  :                     }
; 579  : 
; 580  :                     [&]()
; 581  :                     {

	lea	edx, DWORD PTR _service$[ebp]
	push	edx
	lea	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	lea	ecx, DWORD PTR _sid$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0<lambda_899e527df695eb9d4203e24606261784>@@QAE@AAUServiceIdentifier@@0ABQAVSettingsPublish@@AAHAAPAVXElement@@@Z ; <lambda_899e527df695eb9d4203e24606261784>::<lambda_899e527df695eb9d4203e24606261784>
	mov	ecx, eax
	call	??R<lambda_899e527df695eb9d4203e24606261784>@@QBEXXZ ; <lambda_899e527df695eb9d4203e24606261784>::operator()

; 582  :                         if (sid != current)
; 583  :                             return;
; 584  :                         
; 585  :                         SendDlgItemMessage(hwnd, IDC_SERVICE, CB_SETCURSEL, id, 0);
; 586  : 
; 587  :                         XElement *servers = service->GetElement(L"servers");
; 588  :                         if (!servers)
; 589  :                             return;
; 590  : 
; 591  :                         UINT numServers = servers->NumDataItems();
; 592  :                         for (UINT i = 0; i < numServers; i++)
; 593  :                         {
; 594  :                             XDataItem *server = servers->GetDataItemByID(i);
; 595  :                             SendMessage(GetDlgItem(hwnd, IDC_SERVERLIST), CB_ADDSTRING, 0, (LPARAM)server->GetName());
; 596  :                         }
; 597  : 
; 598  :                     }();
; 599  :                     return true;

	mov	BYTE PTR $T8[ebp], 1
	lea	ecx, DWORD PTR _sid$[ebp]
	call	??1ServiceIdentifier@@QAE@XZ
	mov	al, BYTE PTR $T8[ebp]
$LN5@operator:

; 600  :                 });

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??R<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QBE_NUServiceIdentifier@@PAVXElement@@@Z ENDP ; <lambda_da5f0f708578e290fee5fc13ec57d23a>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??0<lambda_899e527df695eb9d4203e24606261784>@@QAE@AAUServiceIdentifier@@0ABQAVSettingsPublish@@AAHAAPAVXElement@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___sid$ = 8						; size = 4
___current$ = 12					; size = 4
_____this$ = 16						; size = 4
___id$ = 20						; size = 4
___service$ = 24					; size = 4
??0<lambda_899e527df695eb9d4203e24606261784>@@QAE@AAUServiceIdentifier@@0ABQAVSettingsPublish@@AAHAAPAVXElement@@@Z PROC ; <lambda_899e527df695eb9d4203e24606261784>::<lambda_899e527df695eb9d4203e24606261784>, COMDAT
; _this$ = ecx

; 581  :                     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___sid$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___current$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _____this$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___id$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___service$[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0<lambda_899e527df695eb9d4203e24606261784>@@QAE@AAUServiceIdentifier@@0ABQAVSettingsPublish@@AAHAAPAVXElement@@@Z ENDP ; <lambda_899e527df695eb9d4203e24606261784>::<lambda_899e527df695eb9d4203e24606261784>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\settingspublish.cpp
;	COMDAT ??R<lambda_899e527df695eb9d4203e24606261784>@@QBEXXZ
_TEXT	SEGMENT
_server$1 = -20						; size = 4
_numServers$ = -16					; size = 4
_servers$ = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??R<lambda_899e527df695eb9d4203e24606261784>@@QBEXXZ PROC ; <lambda_899e527df695eb9d4203e24606261784>::operator(), COMDAT
; _this$ = ecx

; 580  :                     [&]()

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 581  :                     {
; 582  :                         if (sid != current)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	??9ServiceIdentifier@@QAE_NABU0@@Z	; ServiceIdentifier::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@operator

; 583  :                             return;

	jmp	$LN6@operator
$LN5@operator:

; 584  :                         
; 585  :                         SendDlgItemMessage(hwnd, IDC_SERVICE, CB_SETCURSEL, id, 0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	334					; 0000014eH
	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20

; 586  : 
; 587  :                         XElement *servers = service->GetElement(L"servers");

	push	OFFSET $SG4294737320
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?GetElement@XElement@@QBEPAV1@PB_W@Z
	mov	DWORD PTR _servers$[ebp], eax

; 588  :                         if (!servers)

	cmp	DWORD PTR _servers$[ebp], 0
	jne	SHORT $LN4@operator

; 589  :                             return;

	jmp	SHORT $LN6@operator
$LN4@operator:

; 590  : 
; 591  :                         UINT numServers = servers->NumDataItems();

	push	0
	mov	ecx, DWORD PTR _servers$[ebp]
	call	DWORD PTR __imp_?NumDataItems@XElement@@QAEKPB_W@Z
	mov	DWORD PTR _numServers$[ebp], eax

; 592  :                         for (UINT i = 0; i < numServers; i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	ecx, DWORD PTR _i$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$2[ebp], ecx
$LN3@operator:
	mov	edx, DWORD PTR _i$2[ebp]
	cmp	edx, DWORD PTR _numServers$[ebp]
	jae	SHORT $LN6@operator

; 593  :                         {
; 594  :                             XDataItem *server = servers->GetDataItemByID(i);

	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _servers$[ebp]
	call	DWORD PTR __imp_?GetDataItemByID@XElement@@QBEPAVXDataItem@@K@Z
	mov	DWORD PTR _server$1[ebp], eax

; 595  :                             SendMessage(GetDlgItem(hwnd, IDC_SERVERLIST), CB_ADDSTRING, 0, (LPARAM)server->GetName());

	mov	ecx, DWORD PTR _server$1[ebp]
	call	DWORD PTR __imp_?GetName@XBaseItem@@QBEPB_WXZ
	push	eax
	push	0
	push	323					; 00000143H
	push	1013					; 000003f5H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16

; 596  :                         }

	jmp	SHORT $LN2@operator
$LN6@operator:

; 597  : 
; 598  :                     }();

	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_899e527df695eb9d4203e24606261784>@@QBEXXZ ENDP ; <lambda_899e527df695eb9d4203e24606261784>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ PROC ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ENDP ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z PROC ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[], COMDAT
; _this$ = ecx

; 1197 : 		{	// subscript mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1198 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1199 : 		if (size() <= _Pos)
; 1200 : 			{	// report error
; 1201 : 			_DEBUG_ERROR("vector subscript out of range");
; 1202 : 			_SCL_SECURE_OUT_OF_RANGE;
; 1203 : 			}
; 1204 : 
; 1205 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1206 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1207 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1208 : 
; 1209 : 		return (*(this->_Myfirst + _Pos));

	imul	eax, DWORD PTR __Pos$[ebp], 12
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]

; 1210 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEAAUServiceIdentifier@@I@Z ENDP ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?clear@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXXZ PROC ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::clear, COMDAT
; _this$ = ecx

; 1507 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1508 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1509 : 		_Destroy(this->_Myfirst, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@IAEXPAUServiceIdentifier@@0@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::_Destroy

; 1510 : 		this->_Mylast = this->_Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax

; 1511 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXXZ ENDP ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ PROC ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >, COMDAT
; _this$ = ecx

; 74   :     ~ScopeGuard() { if (active) fun(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN2@ScopeGuard
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R<lambda_fb5381c6e5f844a400209822574a410a>@@QBEXXZ ; <lambda_fb5381c6e5f844a400209822574a410a>::operator()
$LN2@ScopeGuard:
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@XZ ENDP ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::~ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >, COMDAT
; _this$ = ecx

; 680  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAE@XZ ; std::allocator<std::function<void __cdecl(void)> >::allocator<std::function<void __cdecl(void)> >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$function@$$A6AXXZ@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >

; 681  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back, COMDAT
; _this$ = ecx

; 865  : 		{	// insert by moving into element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 866  : 		if (_Inside(_STD addressof(_Val)))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBE_NPBV?$function@$$A6AXXZ@2@@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back

; 867  : 			{	// push back an element
; 868  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR __Idx$1[ebp], eax

; 869  : 			if (this->_Mylast == this->_Myend)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back

; 870  : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reserve
$LN3@push_back:

; 871  : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXPAV?$function@$$A6AXXZ@2@0@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Orphan_range

; 872  : 			this->_Getal().construct(this->_Mylast,
; 873  : 				_STD forward<value_type>(this->_Myfirst[_Idx]));

	imul	eax, DWORD PTR __Idx$1[ebp], 24
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >

; 874  : 			++this->_Mylast;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 875  : 			}
; 876  : 		else

	jmp	SHORT $LN5@push_back
$LN4@push_back:

; 877  : 			{	// push back a non-element
; 878  : 			if (this->_Mylast == this->_Myend)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back

; 879  : 				_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reserve
$LN1@push_back:

; 880  : 			_Orphan_range(this->_Mylast, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXPAV?$function@$$A6AXXZ@2@0@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Orphan_range

; 881  : 			this->_Getal().construct(this->_Mylast,
; 882  : 				_STD forward<value_type>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >

; 883  : 			++this->_Mylast;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back:

; 884  : 			}
; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAEX$$QAV?$function@$$A6AXXZ@2@@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??1?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >, COMDAT
; _this$ = ecx

; 944  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy

; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?begin@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::begin, COMDAT
; _this$ = ecx

; 1024 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1025 : 		return (iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1026 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?end@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::end, COMDAT
; _this$ = ecx

; 1034 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1035 : 		return (iterator(this->_Mylast, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1036 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEAAV?$function@$$A6AXXZ@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEAAV?$function@$$A6AXXZ@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*, COMDAT
; _this$ = ecx

; 323  : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEABV?$function@$$A6AXXZ@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*

; 325  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEAAV?$function@$$A6AXXZ@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++, COMDAT
; _this$ = ecx

; 333  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 334  : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++

; 335  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 336  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator!=, COMDAT
; _this$ = ecx

; 209  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\unordered_map
;	COMDAT ??0?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
??0?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ PROC ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx

; 114  : 		{	// construct empty map from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
	push	eax
	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >

; 115  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ENDP ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\unordered_map
;	COMDAT ??A?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAH$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
$T1 = -28						; size = 8
$T2 = -20						; size = 4
$T3 = -16						; size = 4
__Where$ = -12						; size = 4
_this$ = -8						; size = 4
$T4 = -1						; size = 1
__Keyval$ = 8						; size = 4
??A?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAH$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::operator[], COMDAT
; _this$ = ecx

; 230  : 		{	// find element matching _Keyval or insert with default mapped

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 231  : 		iterator _Where = this->lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::lower_bound

; 232  : 		if (_Where == this->end())

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@operator

; 233  : 			_Where = this->emplace(
; 234  : 				piecewise_construct,
; 235  : 				_STD forward_as_tuple(_STD move(_Keyval)),
; 236  : 				tuple<>()).first;

	lea	ecx, DWORD PTR $T4[ebp]
	call	??0?$tuple@$$$V@std@@QAE@XZ		; std::tuple<>::tuple<>
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	call	??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$forward_as_tuple@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 8
	push	eax
	push	OFFSET _piecewise_construct
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Where$[ebp], ecx
$LN1@operator:

; 237  : 		return (_Where->second);

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->
	add	eax, 24					; 00000018H

; 238  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAH$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >, COMDAT
; _this$ = ecx

; 407  : 		{	// destroy hash table

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 408  : //		_List.clear();	// speed orphaning of checked iterators
; 409  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?find@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::find, COMDAT
; _this$ = ecx

; 722  : 		{	// find an element in mutable hash table that matches _Keyval

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 723  : 		return (lower_bound(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::lower_bound
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 724  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::find
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->, COMDAT
; _this$ = ecx

; 367  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 368  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@AAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> *>::pointer_to
	add	esp, 4

; 369  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator!=, COMDAT
; _this$ = ecx

; 302  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 303  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 304  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBE_NPBV?$function@$$A6AXXZ@2@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBE_NPBV?$function@$$A6AXXZ@2@@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Inside, COMDAT
; _this$ = ecx

; 1582 : 		{	// test if _Ptr points inside vector

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1583 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]

; 1584 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBE_NPBV?$function@$$A6AXXZ@2@@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reserve, COMDAT
; _this$ = ecx

; 1612 : 		{	// ensure room for _Count new elements, grow exponentially

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1613 : 		if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve

; 1614 : 			{	// need more room, try to get it
; 1615 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve

; 1616 : 				_Xlen();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Xlen
$LN1@Reserve:

; 1617 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEII@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reallocate
$LN4@Reserve:

; 1618 : 			}
; 1619 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy, COMDAT
; _this$ = ecx

; 1622 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1623 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1624 : 			{	// something to free, destroy and deallocate it
; 1625 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1626 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXPAV?$function@$$A6AXXZ@2@0@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Destroy

; 1627 : 			this->_Getal().deallocate(this->_Myfirst,
; 1628 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::deallocate

; 1629 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1630 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1631 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1632 : 			}
; 1633 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXPAV?$function@$$A6AXXZ@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXPAV?$function@$$A6AXXZ@2@0@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1780 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1781 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXPAV?$function@$$A6AXXZ@2@0@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAE@XZ PROC ; std::allocator<std::function<void __cdecl(void)> >::allocator<std::function<void __cdecl(void)> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAE@XZ ENDP ; std::allocator<std::function<void __cdecl(void)> >::allocator<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$function@$$A6AXXZ@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$function@$$A6AXXZ@std@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >, COMDAT
; _this$ = ecx

; 588  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >

; 589  : 		{	// construct allocator from _Al
; 590  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$function@$$A6AXXZ@std@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal, COMDAT
; _this$ = ecx

; 641  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 643  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >, COMDAT
; _this$ = ecx

; 306  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >

; 307  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEABV?$function@$$A6AXXZ@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEABV?$function@$$A6AXXZ@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*, COMDAT
; _this$ = ecx

; 65   : 		{	// return designated object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| this->_Ptr == 0
; 69   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			this->_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 81   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(this->_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEABV?$function@$$A6AXXZ@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++, COMDAT
; _this$ = ecx

; 95   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		if (this->_Getcont() == 0
; 98   : 			|| this->_Ptr == 0
; 99   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 100  : 			{	// report error
; 101  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 102  : 			_SCL_SECURE_OUT_OF_RANGE;
; 103  : 			}
; 104  : 
; 105  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 106  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 107  : 		_SCL_SECURE_VALIDATE_RANGE(
; 108  : 			this->_Ptr != _Tptr()
; 109  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 110  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 111  : 
; 112  : 		++this->_Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 113  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 114  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 		_Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Compat

; 205  : 		return (this->_Ptr == _Right._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 206  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >, COMDAT
; _this$ = ecx

; 311  : 		{	// construct empty hash table

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > ><std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+28], xmm0

; 312  : 		_Init();

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Init

; 313  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::end, COMDAT
; _this$ = ecx

; 429  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 430  : 		return (_List.end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 431  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
$T1 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
tv167 = -16						; size = 4
__Bucket$ = -12						; size = 4
__Where$6 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 740  : 		{	// find leftmost not less than _Keyval in mutable hash table

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 741  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hashval
	mov	DWORD PTR __Bucket$[ebp], eax

; 742  : 		for (_Unchecked_iterator _Where = _Begin(_Bucket);

	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Where$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Begin
	jmp	SHORT $LN4@lower_boun
$LN3@lower_boun:

; 743  : 			_Where != _End(_Bucket); ++_Where)

	lea	ecx, DWORD PTR __Where$6[ebp]
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
$LN4@lower_boun:
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_End@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_End
	push	eax
	lea	ecx, DWORD PTR __Where$6[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN2@lower_boun

; 744  : 			if (!((_Traits&)*this)(this->_Kfn(*_Where), _Keyval))

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$6[ebp]
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
	push	eax
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@lower_boun

; 745  : 				return (((_Traits&)*this)(_Keyval,
; 746  : 					this->_Kfn(*_Where)) ? end() : _Make_iter(_Where));

	lea	ecx, DWORD PTR __Where$6[ebp]
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
	push	eax
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@lower_boun
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::end
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN8@lower_boun
$LN7@lower_boun:
	mov	edx, DWORD PTR __Where$6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Make_iter
	mov	DWORD PTR tv167[ebp], eax
$LN8@lower_boun:
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@lower_boun
$LN1@lower_boun:

; 747  : 		return (end());

	jmp	$LN3@lower_boun
$LN2@lower_boun:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@lower_boun:

; 748  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??0?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Hasharg$ = 8						; size = 1
__Keyeqarg$ = 12					; size = 1
??0?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT
; _this$ = ecx

; 232  : 		{	// construct with hasher and equality comparator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR __Keyeqarg$[ebp]
	push	eax
	movzx	ecx, BYTE PTR __Hasharg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 233  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx

; 1094 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1095 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Tidy

; 1096 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >, COMDAT
; _this$ = ecx

; 944  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 945  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Tidy

; 946  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::~vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*, COMDAT
; _this$ = ecx

; 362  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*

; 364  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv75 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator==, COMDAT
; _this$ = ecx

; 284  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 285  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 286  : 		if (this->_Getcont() == 0
; 287  : 			|| this->_Getcont() != _Right._Getcont())
; 288  : 			{	// report error
; 289  : 			_DEBUG_ERROR("list iterators incompatible");
; 290  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 295  : 			&& this->_Getcont() == _Right._Getcont());
; 296  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 297  : 
; 298  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv75[ebp]

; 299  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> *>::pointer_to, COMDAT

; 233  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 234  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
	add	esp, 4

; 235  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ PROC ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::~_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@XZ ENDP ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::~_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1014 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1015 : 		return (this->_Myend - this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx

; 1016 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size, COMDAT
; _this$ = ecx

; 1147 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size, COMDAT
; _this$ = ecx

; 1152 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1153 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::max_size

; 1154 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXPAV?$function@$$A6AXXZ@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXPAV?$function@$$A6AXXZ@2@0@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Destroy, COMDAT
; _this$ = ecx

; 1565 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1566 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal

; 1567 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
	add	esp, 12					; 0000000cH

; 1568 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXPAV?$function@$$A6AXXZ@2@0@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Grow_to, COMDAT
; _this$ = ecx

; 1571 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1573 : 
; 1574 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1575 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1576 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1577 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1578 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1579 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reallocate, COMDAT
; _this$ = ecx

; 1587 : 		{	// move to array of exactly _Count elements

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1588 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax

; 1589 : 
; 1590 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1591 : 		_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$function@$$A6AXXZ@std@@@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEPAV?$function@$$A6AXXZ@1@PAV21@00@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Umove<std::function<void __cdecl(void)> *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z$0:

; 1592 : 		_CATCH_ALL
; 1593 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::deallocate

; 1594 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1595 : 		_CATCH_END

	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z$1:

; 1596 : 
; 1597 : 		size_type _Size = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
	mov	DWORD PTR __Size$[ebp], eax

; 1598 : 		if (this->_Myfirst != pointer())

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Reallocate

; 1599 : 			{	// destroy and deallocate old array
; 1600 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXPAV?$function@$$A6AXXZ@2@0@Z ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Destroy

; 1601 : 			this->_Getal().deallocate(this->_Myfirst,
; 1602 : 				this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::deallocate
$LN1@Reallocate:

; 1603 : 			}
; 1604 : 
; 1605 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1606 : 		this->_Myend = _Ptr + _Count;

	imul	edx, DWORD PTR __Count$[ebp], 24
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 1607 : 		this->_Mylast = _Ptr + _Size;

	imul	ecx, DWORD PTR __Size$[ebp], 24
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1608 : 		this->_Myfirst = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@Reallocate:

; 1609 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Reallocate
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Xlen, COMDAT
; _this$ = ecx

; 1753 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1755 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAE@XZ ; std::allocator<std::function<void __cdecl(void)> >::allocator<std::function<void __cdecl(void)> >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ; std::allocator<std::function<void __cdecl(void)> >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >, COMDAT
; _this$ = ecx

; 480  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 481  : 		{	// initialize values
; 482  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 483  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 484  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 485  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QAE@PAV?$function@$$A6AXXZ@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Compat, COMDAT
; _this$ = ecx

; 254  : 		{	// test for compatible iterator pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::function<void __cdecl(void)> > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 459  : 		{	// make iterator from _Unchecked_const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 460  : 		return (_List._Make_iter(_Where));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 461  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Begin, COMDAT
; _this$ = ecx

; 920  : 		{	// return begin iterator for bucket _Bucket

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 921  : 		return (_Vec_lo(_Bucket));

	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 922  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_End@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__Ans$2 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_End@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_End, COMDAT
; _this$ = ecx

; 930  : 		{	// return end iterator for bucket _Bucket

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 931  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end
	push	eax
	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
	mov	ecx, eax
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@End

; 932  : 			return (_Unchecked_end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@End

; 933  : 		else

	jmp	SHORT $LN3@End
$LN2@End:

; 934  : 			{	// point past last element
; 935  : 			_Unchecked_iterator _Ans = _Vec_hi(_Bucket);

	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_hi
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Ans$2[ebp], edx

; 936  : 			return (++_Ans);

	lea	ecx, DWORD PTR __Ans$2[ebp]
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@End:

; 937  : 			}
; 938  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_End@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_End
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hashval, COMDAT
; _this$ = ecx

; 997  : 		{	// return hash value, masked and wrapped to current table size

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 998  : 		size_type _Num = ((_Traits&)*this)(_Keyval) & _Mask;

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Num$[ebp], eax

; 999  : 		if (_Maxidx <= _Num)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	eax, DWORD PTR __Num$[ebp]
	ja	SHORT $LN1@Hashval

; 1000 : 			_Num -= (_Mask >> 1) + 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	shr	edx, 1
	add	edx, 1
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, edx
	mov	DWORD PTR __Num$[ebp], eax
$LN1@Hashval:

; 1001 : 		return (_Num);

	mov	eax, DWORD PTR __Num$[ebp]

; 1002 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hashval
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXI@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Init, COMDAT
; _this$ = ecx

; 1005 : 		{	// initialize hash table with _Buckets buckets, leave list alone

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1006 : 		_Vec.assign(2 * _Buckets, _Unchecked_end());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end
	push	eax
	mov	ecx, DWORD PTR __Buckets$[ebp]
	shl	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::assign

; 1007 : 		_Mask = _Buckets - 1;

	mov	edx, DWORD PTR __Buckets$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], edx

; 1008 : 		_Maxidx = _Buckets;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Buckets$[ebp]
	mov	DWORD PTR [ecx+24], edx

; 1009 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXI@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\unordered_map
;	COMDAT ??0?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Traits$ = 8						; size = 4
??0?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@@Z PROC ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>, COMDAT
; _this$ = ecx

; 36   : 		{	// construct with specified comparator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@1@@Z ENDP ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv77 = -8						; size = 4
$T1 = -1						; size = 1
__Keyval1$ = 8						; size = 4
__Keyval2$ = 12						; size = 4
??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z PROC ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator(), COMDAT
; _this$ = ecx

; 246  : 		{	// test if _Keyval1 NOT equal to _Keyval2

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 		return (!this->_Getkeyeq()(_Keyval1, _Keyval2));

	mov	eax, DWORD PTR __Keyval2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval1$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE?AU?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getkeyeq
	mov	ecx, eax
	call	??R?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv77[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv77[ebp]

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ENDP ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??0?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Hasharg$ = 8						; size = 1
___formal$ = 12						; size = 1
??0?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT
; _this$ = ecx

; 204  : 		{	// construct with comparator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR __Hasharg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 205  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx

; 896  : 		{	// construct empty list, allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >

; 897  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::end, COMDAT
; _this$ = ecx

; 1125 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1126 : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1127 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Tidy, COMDAT
; _this$ = ecx

; 1882 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1883 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::clear

; 1884 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::~_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >, COMDAT
; _this$ = ecx

; 706  : 		{	// destroy head node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 707  : 		_Freeheadnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Freeheadnode

; 708  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::~_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >, COMDAT
; _this$ = ecx

; 685  : 		{	// construct empty vector, allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >

; 686  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Tidy, COMDAT
; _this$ = ecx

; 1622 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1623 : 		if (this->_Myfirst != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Tidy

; 1624 : 			{	// something to free, destroy and deallocate it
; 1625 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1626 : 			_Destroy(this->_Myfirst, this->_Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy

; 1627 : 			this->_Getal().deallocate(this->_Myfirst,
; 1628 : 				this->_Myend - this->_Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::deallocate

; 1629 : 			this->_Myfirst = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1630 : 			this->_Mylast = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1631 : 			this->_Myend = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN2@Tidy:

; 1632 : 			}
; 1633 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*, COMDAT
; _this$ = ecx

; 204  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		if (this->_Getcont() == 0
; 207  : 			|| this->_Ptr == 0
; 208  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 209  : 			{	// report error
; 210  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 211  : 			_SCL_SECURE_OUT_OF_RANGE;
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 216  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 217  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 218  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 219  : 
; 220  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Myval
	add	esp, 4

; 221  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx

; 90   : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 91   : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 92   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*, COMDAT
; _this$ = ecx

; 128  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 129  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator*

; 130  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++, COMDAT
; _this$ = ecx

; 138  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 139  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator++

; 140  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 141  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ PROC ; std::_Func_base<bool,ServiceIdentifier,XElement *>::~_Func_base<bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx

; 151  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@

; 152  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ ENDP ; std::_Func_base<bool,ServiceIdentifier,XElement *>::~_Func_base<bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z PROC ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ ; std::_Func_base<bool,ServiceIdentifier,XElement *>::~_Func_base<bool,ServiceIdentifier,XElement *>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z ENDP ; std::_Func_base<bool,ServiceIdentifier,XElement *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::capacity, COMDAT
; _this$ = ecx

; 1009 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1010 : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx

; 1011 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z PROC ; std::allocator<std::function<void __cdecl(void)> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@2@I@Z ENDP ; std::allocator<std::function<void __cdecl(void)> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z ; std::allocator<std::function<void __cdecl(void)> >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAIABV?$allocator@V?$function@$$A6AXXZ@std@@@2@@Z ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 449  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 450  : 		return (_List._Unchecked_end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 451  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Bucket$ = 8						; size = 4
?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo, COMDAT
; _this$ = ecx

; 900  : 		{	// return reference to begin() for _Bucket

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 901  : 		return (_Vec[2 * _Bucket]);

	mov	eax, DWORD PTR __Bucket$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@I@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator[]

; 902  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Bucket$ = 8						; size = 4
?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_hi, COMDAT
; _this$ = ecx

; 910  : 		{	// return reference to end()-1 for _Bucket

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 911  : 		return (_Vec[2 * _Bucket + 1]);

	mov	eax, DWORD PTR __Bucket$[ebp]
	lea	ecx, DWORD PTR [eax+eax+1]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@I@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator[]

; 912  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_hi
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Keyval$ = 8						; size = 4
??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator(), COMDAT
; _this$ = ecx

; 241  : 		{	// hash _Keyval to size_t value

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 242  : 		return ((size_t)this->_Gethash()(_Keyval));

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Gethash@?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QBE?AU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Gethash
	mov	ecx, eax
	call	??R?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()

; 243  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??R?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z PROC ; std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator(), COMDAT
; _this$ = ecx

; 181  : 		{	// apply operator== to operands

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		return (_Left == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8

; 183  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??R?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ENDP ; std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE?AU?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE?AU?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getkeyeq, COMDAT
; _this$ = ecx

; 208  : 		{	// get comparator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 		return (_Keyeq());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 210  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE?AU?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::_Hash_oper2<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getkeyeq
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??0?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??0?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT
; _this$ = ecx

; 159  : 	_Hash_oper1(_Hasher)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 160  : 		{	// construct with hasher
; 161  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QAE@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1162 : 		{	// make iterator from _Unchecked_const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1163 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1164 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?clear@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::clear, COMDAT
; _this$ = ecx

; 1491 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1492 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1493 : 		this->_Orphan_ptr(*this, nullptr);
; 1494 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1495 : 
; 1496 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1497 : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 1498 : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1499 : 		this->_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1500 : 
; 1501 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN4@clear

; 1502 : 			{	// delete an element
; 1503 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], edx

; 1504 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Freenode

; 1505 : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 1506 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z PROC ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx

; 823  : 		{	// construct from allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >

; 824  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ENDP ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 771  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 772  : 		this->_Getal().destroy(
; 773  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>

; 774  : 		this->_Getal().destroy(
; 775  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>

; 776  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::deallocate

; 777  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Myval, COMDAT

; 542  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 543  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 544  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::assign, COMDAT
; _this$ = ecx

; 1321 : 		{	// assign _Count * _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1322 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::clear

; 1323 : 		insert(begin(), _Count, _Val);

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::insert

; 1324 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy, COMDAT
; _this$ = ecx

; 1565 : 		{	// destroy [_First, _Last) using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1566 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal

; 1567 : 		_Destroy_range(_First, _Last, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
	add	esp, 12					; 0000000cH

; 1568 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >, COMDAT
; _this$ = ecx

; 588  : 	_Vector_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >

; 589  : 		{	// construct allocator from _Al
; 590  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal, COMDAT
; _this$ = ecx

; 641  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 643  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >, COMDAT
; _this$ = ecx

; 345  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 49   : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 		return (_Mylist::_Myval(_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Myval
	add	esp, 4

; 51   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		_Ptr = _Mylist::_Nextnode(_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 61   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 62   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx

; 85   : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 		return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z PROC ; std::allocator<std::function<void __cdecl(void)> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@IPAV10@@Z ; std::_Allocate<std::function<void __cdecl(void)> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEPAV?$function@$$A6AXXZ@2@I@Z ENDP ; std::allocator<std::function<void __cdecl(void)> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAIABV?$allocator@V?$function@$$A6AXXZ@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAIABV?$allocator@V?$function@$$A6AXXZ@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QBEIXZ ; std::allocator<std::function<void __cdecl(void)> >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAIABV?$allocator@V?$function@$$A6AXXZ@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstring
;	COMDAT ??R?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??R?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator(), COMDAT
; _this$ = ecx

; 2657 : 		{	// hash _Keyval to size_t value by pseudorandomizing transform

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2658 : 		return (_Hash_seq((const unsigned char *)_Keyval.c_str(),
; 2659 : 			_Keyval.size() * sizeof (_Elem)));

	mov	ecx, DWORD PTR __Keyval$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	call	?_Hash_seq@std@@YAIPBEI@Z		; std::_Hash_seq
	add	esp, 8

; 2660 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Gethash@?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QBE?AU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Gethash@?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QBE?AU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Gethash, COMDAT
; _this$ = ecx

; 164  : 		{	// get hasher object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 		return (_Hasher());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 166  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Gethash@?$_Hash_oper1@$0A@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QBE?AU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::_Hash_oper1<0,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Gethash
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1147 : 		{	// return unchecked iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (_Unchecked_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Freenode@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z PROC ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Freenode, COMDAT
; _this$ = ecx

; 846  : 		{	// give node back

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		this->_Getal().destroy(
; 848  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>

; 849  : 		this->_Getal().destroy(
; 850  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>

; 851  : 		this->_Getal().destroy(
; 852  : 			_STD addressof(this->_Myval(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >

; 853  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::deallocate

; 854  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ENDP ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >, COMDAT
; _this$ = ecx

; 700  : 	_List_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >

; 701  : 		{	// construct head node, allocator from _Al
; 702  : 		this->_Myhead = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buyheadnode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 703  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal, COMDAT
; _this$ = ecx

; 803  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 804  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 805  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode, COMDAT

; 532  : 		{	// return reference to successor pointer in node

	push	ebp
	mov	ebp, esp

; 533  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 534  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode, COMDAT

; 537  : 		{	// return reference to predecessor pointer in node

	push	ebp
	mov	ebp, esp

; 538  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 539  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::begin, COMDAT
; _this$ = ecx

; 1024 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1025 : 		return (iterator(this->_Myfirst, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1026 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@I@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator[], COMDAT
; _this$ = ecx

; 1197 : 		{	// subscript mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1198 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1199 : 		if (size() <= _Pos)
; 1200 : 			{	// report error
; 1201 : 			_DEBUG_ERROR("vector subscript out of range");
; 1202 : 			_SCL_SECURE_OUT_OF_RANGE;
; 1203 : 			}
; 1204 : 
; 1205 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1206 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1207 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1208 : 
; 1209 : 		return (*(this->_Myfirst + _Pos));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 1210 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@I@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Count$ = 16						; size = 4
__Val$ = 20						; size = 4
?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::insert, COMDAT
; _this$ = ecx

; 1333 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1334 : 		return (_Insert_n(_Where, _Count, _Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Insert_n
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1335 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::insert
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::clear, COMDAT
; _this$ = ecx

; 1507 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1508 : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1509 : 		_Destroy(this->_Myfirst, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy

; 1510 : 		this->_Mylast = this->_Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax

; 1511 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::deallocate, COMDAT
; _this$ = ecx

; 857  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 858  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::deallocate

; 859  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >, COMDAT
; _this$ = ecx

; 480  : 	_Vector_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 481  : 		{	// initialize values
; 482  : 		_Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 483  : 		_Mylast = pointer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 484  : 		_Myend = pointer();

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 485  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>

; 188  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QBEIXZ PROC ; std::allocator<std::function<void __cdecl(void)> >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 178956970				; 0aaaaaaaH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QBEIXZ ENDP ; std::allocator<std::function<void __cdecl(void)> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 766  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 767  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buynode0

; 768  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx

; 525  : 	_List_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 526  : 		{	// initialize data
; 527  : 		this->_Myhead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 528  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 529  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -60						; size = 4
__Off$ = -56						; size = 4
__Tmp$3 = -52						; size = 4
__Tmp$4 = -48						; size = 4
__Capacity$5 = -44					; size = 4
__Oldend$6 = -40					; size = 4
__Whereoff$7 = -36					; size = 4
__Ncopied$8 = -32					; size = 4
__Newvec$9 = -28					; size = 4
_this$ = -24						; size = 4
$T10 = -19						; size = 1
$T11 = -18						; size = 1
$T12 = -17						; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Count$ = 16						; size = 4
__Val$ = 20						; size = 4
?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Insert_n, COMDAT
; _this$ = ecx

; 1653 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1654 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1655 : 		if (_VICONT(_Where) != this
; 1656 : 			|| _VIPTR(_Where) < this->_Myfirst
; 1657 : 			|| this->_Mylast < _VIPTR(_Where))
; 1658 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1659 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1660 : 
; 1661 : 		size_type _Off = _VIPTR(_Where) - this->_Myfirst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 2
	mov	DWORD PTR __Off$[ebp], ecx

; 1662 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN12@Insert_n
	jmp	$LN11@Insert_n
$LN12@Insert_n:

; 1663 : 			;
; 1664 : 		else if (_Unused_capacity() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN10@Insert_n

; 1665 : 			{	// not enough room, reallocate
; 1666 : 			if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN9@Insert_n

; 1667 : 				_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Xlen
$LN9@Insert_n:

; 1668 : 
; 1669 : 			size_type _Capacity = _Grow_to(size() + _Count);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Grow_to
	mov	DWORD PTR __Capacity$5[ebp], eax

; 1670 : 			pointer _Newvec = this->_Getal().allocate(_Capacity);

	mov	edx, DWORD PTR __Capacity$5[ebp]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::allocate
	mov	DWORD PTR __Newvec$9[ebp], eax

; 1671 : 			size_type _Whereoff = _VIPTR(_Where) - this->_Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	mov	DWORD PTR __Whereoff$7[ebp], edx

; 1672 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$8[ebp], 0

; 1673 : 
; 1674 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1675 : 			_Ufill(_Newvec + _Whereoff, _Count,
; 1676 : 				_STD addressof(_Val));	// add new stuff

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Whereoff$7[ebp]
	mov	eax, DWORD PTR __Newvec$9[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Ufill

; 1677 : 			++_Ncopied;

	mov	edx, DWORD PTR __Ncopied$8[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$8[ebp], edx

; 1678 : 			_Umove(this->_Myfirst, _VIPTR(_Where),
; 1679 : 				_Newvec);	// copy prefix

	mov	eax, DWORD PTR __Newvec$9[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>

; 1680 : 			++_Ncopied;

	mov	ecx, DWORD PTR __Ncopied$8[ebp]
	add	ecx, 1
	mov	DWORD PTR __Ncopied$8[ebp], ecx

; 1681 : 			_Umove(_VIPTR(_Where), this->_Mylast,
; 1682 : 				_Newvec + (_Whereoff + _Count));	// copy suffix

	mov	edx, DWORD PTR __Whereoff$7[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$9[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	jmp	SHORT $LN15@Insert_n
__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$0:

; 1683 : 			_CATCH_ALL
; 1684 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$8[ebp], 1
	jle	SHORT $LN7@Insert_n

; 1685 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	edx, DWORD PTR __Whereoff$7[ebp]
	mov	eax, DWORD PTR __Newvec$9[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	edx, DWORD PTR __Newvec$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy
$LN7@Insert_n:

; 1686 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$8[ebp], 0
	jle	SHORT $LN6@Insert_n

; 1687 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	eax, DWORD PTR __Whereoff$7[ebp]
	mov	ecx, DWORD PTR __Newvec$9[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR __Whereoff$7[ebp]
	mov	eax, DWORD PTR __Newvec$9[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy
$LN6@Insert_n:

; 1688 : 			this->_Getal().deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Capacity$5[ebp]
	push	edx
	mov	eax, DWORD PTR __Newvec$9[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::deallocate

; 1689 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1690 : 			_CATCH_END

	mov	eax, $LN20@Insert_n
	ret	0
$LN15@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$1
$LN20@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$1:

; 1691 : 
; 1692 : 			_Count += size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 1693 : 			if (this->_Myfirst != pointer())

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN5@Insert_n

; 1694 : 				{	// destroy and deallocate old array
; 1695 : 				_Destroy(this->_Myfirst, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy

; 1696 : 				this->_Getal().deallocate(this->_Myfirst,
; 1697 : 					this->_Myend - this->_Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::deallocate
$LN5@Insert_n:

; 1698 : 				}
; 1699 : 
; 1700 : 			this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 1701 : 			this->_Myend = _Newvec + _Capacity;

	mov	ecx, DWORD PTR __Capacity$5[ebp]
	mov	edx, DWORD PTR __Newvec$9[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1702 : 			this->_Mylast = _Newvec + _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$9[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1703 : 			this->_Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$9[ebp]
	mov	DWORD PTR [eax], ecx

; 1704 : 			}
; 1705 : 		else if ((size_type)(this->_Mylast - _VIPTR(_Where))

	jmp	$LN11@Insert_n
$LN10@Insert_n:

; 1706 : 			< _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, DWORD PTR __Where$[ebp]
	sar	eax, 2
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n

; 1707 : 			{	// new stuff spills off end
; 1708 : 			value_type _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$4[ebp], edx

; 1709 : 
; 1710 : 			_Umove(_VIPTR(_Where), this->_Mylast,
; 1711 : 				_VIPTR(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>

; 1712 : 
; 1713 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1714 : 			_Ufill(this->_Mylast,
; 1715 : 				_Count - (this->_Mylast - _VIPTR(_Where)),
; 1716 : 				_STD addressof(_Tmp));	// insert new stuff off end

	lea	eax, DWORD PTR __Tmp$4[ebp]
	push	eax
	call	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Ufill
	jmp	SHORT $LN17@Insert_n
__catch$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$2:

; 1717 : 			_CATCH_ALL
; 1718 : 			_Destroy(_VIPTR(_Where) + _Count,
; 1719 : 				this->_Mylast + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Destroy

; 1720 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1721 : 			_CATCH_END

	mov	eax, $LN22@Insert_n
	ret	0
$LN17@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$3
$LN22@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z$3:

; 1722 : 
; 1723 : 			this->_Mylast += _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1724 : 			_Orphan_range(_VIPTR(_Where), this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Orphan_range

; 1725 : 			_STD fill(_VIPTR(_Where), this->_Mylast - _Count,
; 1726 : 				_Tmp);	// insert up to old end

	lea	eax, DWORD PTR __Tmp$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 12					; 0000000cH

; 1727 : 			}
; 1728 : 		else

	jmp	SHORT $LN11@Insert_n
$LN3@Insert_n:

; 1729 : 			{	// new stuff can all be assigned
; 1730 : 			value_type _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$3[ebp], eax

; 1731 : 
; 1732 : 			pointer _Oldend = this->_Mylast;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Oldend$6[ebp], edx

; 1733 : 			this->_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1734 : 				this->_Mylast);	// copy suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Oldend$6[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$6[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1735 : 
; 1736 : 			_Orphan_range(_VIPTR(_Where), this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Orphan_range

; 1737 : 			_Copy_backward(_VIPTR(_Where), _Oldend - _Count,
; 1738 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$6[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 12					; 0000000cH

; 1739 : 			_STD fill(_VIPTR(_Where),
; 1740 : 				_VIPTR(_Where) + _Count, _Tmp);	// insert into hole

	lea	ecx, DWORD PTR __Tmp$3[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 12					; 0000000cH
$LN11@Insert_n:

; 1741 : 			}
; 1742 : 		return (begin() + _Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::begin
	mov	ecx, eax
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN14@Insert_n:

; 1743 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@IABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Insert_n
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >, COMDAT
; _this$ = ecx

; 801  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >

; 802  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 46   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>

; 125  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >, COMDAT
; _this$ = ecx

; 306  : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >

; 307  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -20						; size = 1
$T3 = -19						; size = 1
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buynode0, COMDAT
; _this$ = ecx

; 781  : 		{	// allocate a node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 782  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 783  : 
; 784  : 		if (_Next == _Nodeptr())

	cmp	DWORD PTR __Next$[ebp], 0
	jne	SHORT $LN2@Buynode0

; 785  : 			{	// point at self
; 786  : 			_Next = _Pnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx

; 787  : 			_Prev = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Prev$[ebp], edx
$LN2@Buynode0:

; 788  : 			}
; 789  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 790  : 		this->_Getal().construct(
; 791  : 			_STD addressof(this->_Nextnode(_Pnode)), _Next);

	lea	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>

; 792  : 		this->_Getal().construct(
; 793  : 			_STD addressof(this->_Prevnode(_Pnode)), _Prev);

	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
	jmp	SHORT $LN5@Buynode0
__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z$0:

; 794  : 		_CATCH_ALL
; 795  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::deallocate

; 796  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 797  : 		_CATCH_END

	mov	eax, $LN8@Buynode0
	ret	0
$LN5@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z$1
$LN8@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z$1:

; 798  : 
; 799  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode0:

; 800  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buynode0
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1014 : 		{	// micro-optimization for capacity() - size()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1015 : 		return (this->_Myend - this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 1016 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::size, COMDAT
; _this$ = ecx

; 1147 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1148 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1149 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size, COMDAT
; _this$ = ecx

; 1152 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1153 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size

; 1154 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Grow_to, COMDAT
; _this$ = ecx

; 1571 : 		{	// grow by 50% or at least to _Count

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1572 : 		size_type _Capacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax

; 1573 : 
; 1574 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1575 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax

; 1576 : 		if (_Capacity < _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to

; 1577 : 			_Capacity = _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:

; 1578 : 		return (_Capacity);

	mov	eax, DWORD PTR __Capacity$[ebp]

; 1579 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@PAV32@IPBV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@PAV32@IPBV32@@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Ufill, COMDAT
; _this$ = ecx

; 1746 : 		{	// copy initializing _Count * _Val, using allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1747 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal

; 1748 : 		_Uninitialized_fill_n(_Ptr, _Count, _Pval, _Alval);

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
	add	esp, 16					; 00000010H

; 1749 : 		return (_Ptr + _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]

; 1750 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@PAV32@IPBV32@@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Xlen, COMDAT
; _this$ = ecx

; 1753 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1754 : 		_Xlength_error("vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1755 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1780 : 		{	// orphan iterators within specified (inclusive) range

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1781 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+, COMDAT
; _this$ = ecx

; 365  : 		{	// return this + integer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 366  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 367  : 		return (_Tmp += _Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 368  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct with pointer _Parg

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 		this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 49   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::capacity, COMDAT
; _this$ = ecx

; 1009 : 		{	// return current length of allocated storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1010 : 		return (this->_Myend - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1011 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::allocate, COMDAT
; _this$ = ecx

; 846  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 847  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocate

; 848  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=, COMDAT
; _this$ = ecx

; 359  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 360  : 		*(_Mybase *)this += _Off;

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=

; 361  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 362  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPAV10@@Z ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size, COMDAT

; 480  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 481  : 		return (_Alloc_max_size::_Fn(0, _Al));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
	add	esp, 8

; 482  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=, COMDAT
; _this$ = ecx

; 153  : 		{	// increment by integer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 154  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 155  : 		if (this->_Getcont() == 0
; 156  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 157  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 158  : 			{	// report error
; 159  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 160  : 			_SCL_SECURE_OUT_OF_RANGE;
; 161  : 			}
; 162  : 
; 163  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 164  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 165  : 		_SCL_SECURE_VALIDATE_RANGE(
; 166  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 167  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 168  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 169  : 
; 170  : 		_Ptr += _Off;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 171  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 172  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??$GuardScope@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@YA?AU?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_fun$ = 12						; size = 4
??$GuardScope@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@YA?AU?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@@Z PROC ; GuardScope<<lambda_fb5381c6e5f844a400209822574a410a> >, COMDAT

; 90   : ScopeGuard<Fun> GuardScope(Fun &&fun) { return ScopeGuard<Fun>(std::move(fun)); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _fun$[ebp]
	push	eax
	call	??$move@AAV<lambda_fb5381c6e5f844a400209822574a410a>@@@std@@YA$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@AAV1@@Z ; std::move<<lambda_fb5381c6e5f844a400209822574a410a> &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@V<lambda_fb5381c6e5f844a400209822574a410a>@@@Z ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	ebp
	ret	0
??$GuardScope@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@YA?AU?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@@Z ENDP ; GuardScope<<lambda_fb5381c6e5f844a400209822574a410a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_5b58d388793fe563bc112a2536ab3933> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Func_class<void>::_Reset<<lambda_5b58d388793fe563bc112a2536ab3933> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_5b58d388793fe563bc112a2536ab3933> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_c4599be8aa20546a4c0f056de45f81e0> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Func_class<void>::_Reset<<lambda_c4599be8aa20546a4c0f056de45f81e0> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_c4599be8aa20546a4c0f056de45f81e0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_07b41efe5098b34c18964d3f394ff711> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Func_class<void>::_Reset<<lambda_07b41efe5098b34c18964d3f394ff711> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_07b41efe5098b34c18964d3f394ff711> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Func_class<void>::_Reset<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_624bb9d9f3cde644ba29e7729588d586> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Func_class<void>::_Reset<<lambda_624bb9d9f3cde644ba29e7729588d586> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_624bb9d9f3cde644ba29e7729588d586> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_8499d2186312c49ebbd56f30c74af45d> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Func_class<void>::_Reset<<lambda_8499d2186312c49ebbd56f30c74af45d> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_8499d2186312c49ebbd56f30c74af45d> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z PROC ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_424e07199e07f172c211b579b41a0f6b> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@X$$$V@std@@QAE@XZ	; std::_Func_class<void>::_Func_class<void>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Func_class<void>::_Reset<<lambda_424e07199e07f172c211b579b41a0f6b> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$function@$$A6AXXZ@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ENDP ; std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_424e07199e07f172c211b579b41a0f6b> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$emplace_back@AAUServiceIdentifier@@@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXAAUServiceIdentifier@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
_<_Val_0>$ = 8						; size = 4
??$emplace_back@AAUServiceIdentifier@@@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXAAUServiceIdentifier@@@Z PROC ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::emplace_back<ServiceIdentifier &>, COMDAT
; _this$ = ecx

; 893  : 		void emplace_back(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 894  : 		{	// insert by moving into element at end
; 895  : 		if (this->_Mylast == this->_Myend)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN1@emplace_ba

; 896  : 			_Reserve(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@IAEXI@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::_Reserve
$LN1@emplace_ba:

; 897  : 		_Orphan_range(this->_Mylast, this->_Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@IBEXPAUServiceIdentifier@@0@Z ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::_Orphan_range

; 898  : 		this->_Getal().construct(this->_Mylast,
; 899  : 			_STD forward<_Valty>(_Val)...);

	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	push	ecx
	call	??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z ; std::forward<ServiceIdentifier &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UServiceIdentifier@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<ServiceIdentifier,std::allocator<ServiceIdentifier> > >::_Getal
	mov	ecx, eax
	call	??$construct@UServiceIdentifier@@AAU1@@?$_Wrap_alloc@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>

; 900  : 		++this->_Mylast;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@AAUServiceIdentifier@@@?$vector@UServiceIdentifier@@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXAAUServiceIdentifier@@@Z ENDP ; std::vector<ServiceIdentifier,std::allocator<ServiceIdentifier> >::emplace_back<ServiceIdentifier &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$end@V?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Cont$ = 12						; size = 4
??$end@V?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@0@@Z PROC ; std::end<std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >, COMDAT

; 1201 : 	{	// get end of sequence

	push	ebp
	mov	ebp, esp

; 1202 : 	return (_Cont.end());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1203 : 	}

	pop	ebp
	ret	0
??$end@V?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@YA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV?$unordered_map@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HU?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@0@@Z ENDP ; std::end<std::unordered_map<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$function@$$A6A_NUServiceIdentifier@@PAVXElement@@@Z@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Func$ = 8						; size = 4
??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$function@$$A6A_NUServiceIdentifier@@PAVXElement@@@Z@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z PROC ; std::function<bool __cdecl(ServiceIdentifier,XElement *)>::function<bool __cdecl(ServiceIdentifier,XElement *)><<lambda_da5f0f708578e290fee5fc13ec57d23a> >, COMDAT
; _this$ = ecx

; 669  : 		function(_Fx&& _Func)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Func_class<bool,ServiceIdentifier,XElement *>

; 670  : 		{	// construct wrapper holding moved _Func
; 671  : 		this->_Reset(_STD forward<_Fx>(_Func));

	mov	eax, DWORD PTR __Func$[ebp]
	push	eax
	call	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset<<lambda_da5f0f708578e290fee5fc13ec57d23a> >

; 672  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$function@$$A6A_NUServiceIdentifier@@PAVXElement@@@Z@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ENDP ; std::function<bool __cdecl(ServiceIdentifier,XElement *)>::function<bool __cdecl(ServiceIdentifier,XElement *)><<lambda_da5f0f708578e290fee5fc13ec57d23a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$find@PA_WD@std@@YAPA_WPA_W0ABD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$find@PA_WD@std@@YAPA_WPA_W0ABD@Z PROC		; std::find<wchar_t *,char>, COMDAT

; 3051 : 	{	// find first matching _Val

	push	ebp
	mov	ebp, esp

; 3052 : 	_DEBUG_RANGE(_First, _Last);
; 3053 : 	return (_Rechecked(_First,
; 3054 : 		_Find(_Unchecked(_First), _Unchecked(_Last), _Val)));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Unchecked@PA_W@std@@YAPA_WPA_W@Z	; std::_Unchecked<wchar_t *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Unchecked@PA_W@std@@YAPA_WPA_W@Z	; std::_Unchecked<wchar_t *>
	add	esp, 4
	push	eax
	call	??$_Find@PA_WD@std@@YAPA_WPA_W0ABD@Z	; std::_Find<wchar_t *,char>
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Rechecked@PA_WPA_W@std@@YAAAPA_WAAPA_WPA_W@Z ; std::_Rechecked<wchar_t *,wchar_t *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 3055 : 	}

	pop	ebp
	ret	0
??$find@PA_WD@std@@YAPA_WPA_W0ABD@Z ENDP		; std::find<wchar_t *,char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@AAV10@@Z PROC ; std::addressof<std::function<void __cdecl(void)> >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@AAV10@@Z ENDP ; std::addressof<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$forward_as_tuple@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_<_Args_0>$ = 12					; size = 4
??$forward_as_tuple@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 628  : 	{	// forward arguments in a tuple

	push	ebp
	mov	ebp, esp

; 629  : 	return (tuple<_Types&&...>(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$VPAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,void * *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 630  : 	}

	pop	ebp
	ret	0
??$forward_as_tuple@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::forward_as_tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Val_0>$ = 12						; size = 4
_<_Val_1>$ = 16						; size = 4
_<_Val_2>$ = 20						; size = 4
??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >, COMDAT
; _this$ = ecx

; 392  : 		_Pairib emplace(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 393  : 		{	// try to insert value_type(_Val...)
; 394  : 		_List.emplace_front(_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::emplace_front<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >

; 395  : 		return (_Insert(_List.front(), _Unchecked_begin()));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_begin
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?front@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::front
	push	eax
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 396  : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$emplace@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::emplace<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > ><std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >, COMDAT
; _this$ = ecx

; 817  : 		{	// construct from a related allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > ><std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >

; 818  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > ><std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\unordered_map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z PROC ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>, COMDAT

; 59   : 		static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val)

	push	ebp
	mov	ebp, esp

; 60   : 		{	// extract key from element value
; 61   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 62   : 		}

	pop	ebp
	ret	0
??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ENDP ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$function@$$A6AXXZ@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$function@$$A6AXXZ@0@0@Z ; std::_Ptr_cat<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Umove@PAV?$function@$$A6AXXZ@std@@@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEPAV?$function@$$A6AXXZ@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$function@$$A6AXXZ@std@@@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEPAV?$function@$$A6AXXZ@1@PAV21@00@Z PROC ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Umove<std::function<void __cdecl(void)> *>, COMDAT
; _this$ = ecx

; 1644 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1645 : 		{	// move initializing [_First, _Last), using allocator
; 1646 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::_Getal

; 1647 : 		return (_Uninitialized_move(_First, _Last,
; 1648 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
	add	esp, 16					; 00000010H

; 1649 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$function@$$A6AXXZ@std@@@?$vector@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@IAEPAV?$function@$$A6AXXZ@1@PAV21@00@Z ENDP ; std::vector<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Umove<std::function<void __cdecl(void)> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstring
;	COMDAT ??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2468 : 	{	// test for string equality

	push	ebp
	mov	ebp, esp
	push	ecx

; 2469 : 	return (_Left.compare(_Right) == 0);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]

; 2470 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
	add	esp, 16					; 00000010H

; 97   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@IPAV10@@Z PROC ; std::_Allocate<std::function<void __cdecl(void)> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 178956970	; 0aaaaaaaH
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 24
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@IPAV10@@Z ENDP ; std::_Allocate<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\vector
;	COMDAT ??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z PROC ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>, COMDAT
; _this$ = ecx

; 1644 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1645 : 		{	// move initializing [_First, _Last), using allocator
; 1646 : 		_Alty _Alval(this->_Getal());

	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >::_Getal

; 1647 : 		return (_Uninitialized_move(_First, _Last,
; 1648 : 			_Ptr, _Alval));

	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
	add	esp, 16					; 00000010H

; 1649 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@PAV21@00@Z ENDP ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::_Umove<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstddef
;	COMDAT ??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 92   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 93   : 	return (reinterpret_cast<_Ty *>(
; 94   : 		(&const_cast<char&>(
; 95   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 2621 : 	{	// copy _Val through [_First, _Last)

	push	ebp
	mov	ebp, esp

; 2622 : 	_DEBUG_RANGE(_First, _Last);
; 2623 : 	_Fill(_Unchecked(_First), _Unchecked(_Last), _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 4
	push	eax
	call	??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 12					; 0000000cH

; 2624 : 	}

	pop	ebp
	ret	0
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00@Z PROC ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>, COMDAT

; 2365 : 	{	// copy [_First, _Last) backwards to [..., _Dest), unchecked

	push	ebp
	mov	ebp, esp
	push	ecx

; 2366 : 	return (_Copy_backward(_First, _Last,
; 2367 : 		_Dest, _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 16					; 00000010H

; 2368 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00@Z ENDP ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >, COMDAT

; 633  : 	{	// copy _Count * *_Pval to raw _First, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 634  : 	_Uninit_fill_n(_First, _Count, _Pval, _Al,
; 635  : 		_Val_type(_First), _Ptr_cat(_First, _First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 24					; 00000018H

; 636  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@IPAU10@@Z PROC ; std::_Allocate<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 119304647	; 071c71c7H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 36
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@IPAU10@@Z ENDP ; std::_Allocate<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >, COMDAT

; 380  : 		{	// call allocator supplied version

	push	ebp
	mov	ebp, esp

; 381  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size

; 382  : 		}

	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstring
;	COMDAT ?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare, COMDAT
; _this$ = ecx

; 2135 : 		{	// compare [0, _Mysize) with _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2136 : 		return (compare(0, this->_Mysize, _Right._Myptr(), _Right.size()));

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare

; 2137 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\obsapi\utility\raiihelpers.h
;	COMDAT ??0?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@V<lambda_fb5381c6e5f844a400209822574a410a>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fun$ = 8						; size = 4
??0?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@V<lambda_fb5381c6e5f844a400209822574a410a>@@@Z PROC ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >, COMDAT
; _this$ = ecx

; 73   :     ScopeGuard(Fun fun) : fun(std::move(fun)), active(true) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR _fun$[ebp]
	push	eax
	call	??$move@AAV<lambda_fb5381c6e5f844a400209822574a410a>@@@std@@YA$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@AAV1@@Z ; std::move<<lambda_fb5381c6e5f844a400209822574a410a> &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$ScopeGuard@V<lambda_fb5381c6e5f844a400209822574a410a>@@@@QAE@V<lambda_fb5381c6e5f844a400209822574a410a>@@@Z ENDP ; ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >::ScopeGuard<<lambda_fb5381c6e5f844a400209822574a410a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 439  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 440  : 		return (_List._Unchecked_begin());

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 441  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?front@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?front@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@XZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::front, COMDAT
; _this$ = ecx

; 1255 : 		{	// return first element of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1256 : 		return (*begin());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::begin
	mov	ecx, eax
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*

; 1257 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@XZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::front
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ PROC ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Func_class<bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx

; 308  : 		{	// construct without stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 309  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ ENDP ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Func_class<bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xstring
;	COMDAT ?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z
_TEXT	SEGMENT
tv135 = -24						; size = 4
tv134 = -20						; size = 4
tv133 = -16						; size = 4
__Ans$ = -12						; size = 4
tv86 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare, COMDAT
; _this$ = ecx

; 2170 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 2171 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 2172 : 		if (_Count != 0)
; 2173 : 			_DEBUG_POINTER(_Ptr);
; 2174 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 2175 : 
; 2176 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN2@compare

; 2177 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN2@compare:

; 2178 : 		if (this->_Mysize - _Off < _N0)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	jae	SHORT $LN1@compare

; 2179 : 			_N0 = this->_Mysize - _Off;	// trim _N0 to size

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __N0$[ebp], edx
$LN1@compare:

; 2180 : 
; 2181 : 		size_type _Ans = _Traits::compare(this->_Myptr() + _Off, _Ptr,
; 2182 : 			_N0 < _Count ? _N0 : _Count);

	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@compare
	mov	ecx, DWORD PTR __N0$[ebp]
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN6@compare
$LN5@compare:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv86[ebp], edx
$LN6@compare:
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	call	?compare@?$char_traits@_W@std@@SAHPB_W0I@Z ; std::char_traits<wchar_t>::compare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ans$[ebp], eax

; 2183 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 2184 : 			: _N0 == _Count ? 0 : +1);

	cmp	DWORD PTR __Ans$[ebp], 0
	je	SHORT $LN11@compare
	mov	ecx, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR tv135[ebp], ecx
	jmp	SHORT $LN12@compare
$LN11@compare:
	mov	edx, DWORD PTR __N0$[ebp]
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN9@compare
	mov	DWORD PTR tv134[ebp], -1
	jmp	SHORT $LN10@compare
$LN9@compare:
	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN7@compare
	mov	DWORD PTR tv133[ebp], 0
	jmp	SHORT $LN8@compare
$LN7@compare:
	mov	DWORD PTR tv133[ebp], 1
$LN8@compare:
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv134[ebp], ecx
$LN10@compare:
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv135[ebp], edx
$LN12@compare:
	mov	eax, DWORD PTR tv135[ebp]
$LN4@compare:

; 2185 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::begin, COMDAT
; _this$ = ecx

; 1115 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1116 : 		return (iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1117 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 1135 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1136 : 		return (_Unchecked_iterator(this->_Nextnode(this->_Myhead),

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1137 : 			this));
; 1138 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 1073741823				; 3fffffffH

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV<lambda_fb5381c6e5f844a400209822574a410a>@@@std@@YA$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV<lambda_fb5381c6e5f844a400209822574a410a>@@@std@@YA$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@AAV1@@Z PROC ; std::move<<lambda_fb5381c6e5f844a400209822574a410a> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV<lambda_fb5381c6e5f844a400209822574a410a>@@@std@@YA$$QAV<lambda_fb5381c6e5f844a400209822574a410a>@@AAV1@@Z ENDP ; std::move<<lambda_fb5381c6e5f844a400209822574a410a> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z PROC ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ENDP ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_5b58d388793fe563bc112a2536ab3933> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_5b58d388793fe563bc112a2536ab3933> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z PROC ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ENDP ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_c4599be8aa20546a4c0f056de45f81e0> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z PROC ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ENDP ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_07b41efe5098b34c18964d3f394ff711> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_07b41efe5098b34c18964d3f394ff711> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z PROC ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ENDP ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z PROC ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ENDP ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_624bb9d9f3cde644ba29e7729588d586> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_624bb9d9f3cde644ba29e7729588d586> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z PROC ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ENDP ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_8499d2186312c49ebbd56f30c74af45d> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_8499d2186312c49ebbd56f30c74af45d> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z PROC ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ENDP ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z PROC ; std::_Func_class<void>::_Reset<<lambda_424e07199e07f172c211b579b41a0f6b> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Reset_alloc<<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ENDP ; std::_Func_class<void>::_Reset<<lambda_424e07199e07f172c211b579b41a0f6b> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z PROC ; std::forward<ServiceIdentifier &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z ENDP ; std::forward<ServiceIdentifier &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@UServiceIdentifier@@AAU1@@?$_Wrap_alloc@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UServiceIdentifier@@AAU1@@?$_Wrap_alloc@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z ; std::forward<ServiceIdentifier &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UServiceIdentifier@@AAU1@@?$allocator_traits@V?$allocator@UServiceIdentifier@@@std@@@std@@SAXAAV?$allocator@UServiceIdentifier@@@1@PAUServiceIdentifier@@AAU3@@Z ; std::allocator_traits<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UServiceIdentifier@@AAU1@@?$_Wrap_alloc@V?$allocator@UServiceIdentifier@@@std@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z PROC ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ENDP ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z PROC ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset<<lambda_da5f0f708578e290fee5fc13ec57d23a> >, COMDAT
; _this$ = ecx

; 383  : 		void _Reset(_Fty&& _Val)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 384  : 		{	// store copy of _Val
; 385  : 		_Reset_alloc(_STD forward<_Fty>(_Val), allocator<_Myt>());

	push	ecx
	mov	ecx, esp
	call	??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset_alloc@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset_alloc<<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >

; 386  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ENDP ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PA_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PA_W@std@@YAPA_WPA_W@Z PROC		; std::_Unchecked<wchar_t *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PA_W@std@@YAPA_WPA_W@Z ENDP		; std::_Unchecked<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Find@PA_WD@std@@YAPA_WPA_W0ABD@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Find@PA_WD@std@@YAPA_WPA_W0ABD@Z PROC		; std::_Find<wchar_t *,char>, COMDAT

; 3034 : 	{	// find first matching _Val

	push	ebp
	mov	ebp, esp
	push	ecx

; 3035 : 	// activate optimization for pointers to (const) bytes and integral values
; 3036 : 	typedef integral_constant<bool,
; 3037 : 		(  is_same<_InIt, char *>::value
; 3038 : 		|| is_same<_InIt, signed char *>::value
; 3039 : 		|| is_same<_InIt, unsigned char *>::value
; 3040 : 		|| is_same<_InIt, const char *>::value
; 3041 : 		|| is_same<_InIt, const signed char *>::value
; 3042 : 		|| is_same<_InIt, const unsigned char *>::value)
; 3043 : 		&& is_integral<_Ty>::value
; 3044 : 	> _Memchr_opt;
; 3045 : 	return (_Find(_First, _Last, _Val, _Memchr_opt()));

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Find@PA_WD@std@@YAPA_WPA_W0ABDU?$integral_constant@_N$0A@@0@@Z ; std::_Find<wchar_t *,char>
	add	esp, 16					; 00000010H

; 3046 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Find@PA_WD@std@@YAPA_WPA_W0ABD@Z ENDP		; std::_Find<wchar_t *,char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PA_WPA_W@std@@YAAAPA_WAAPA_WPA_W@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PA_WPA_W@std@@YAAAPA_WAAPA_WPA_W@Z PROC	; std::_Rechecked<wchar_t *,wchar_t *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PA_WPA_W@std@@YAAAPA_WAAPA_WPA_W@Z ENDP	; std::_Rechecked<wchar_t *,wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ; std::allocator<std::function<void __cdecl(void)> >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$VPAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__This_arg$ = 8						; size = 4
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$VPAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,void * *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from one or more moved elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$$V@std@@QAE@XZ		; std::tuple<>::tuple<>
	mov	eax, DWORD PTR __This_arg$[ebp]
	push	eax
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 234  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$VPAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z PROC ; std::forward<std::piecewise_construct_t const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ENDP ; std::forward<std::piecewise_construct_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z PROC ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ENDP ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
_<_Val_1>$ = 12						; size = 4
_<_Val_2>$ = 16						; size = 4
??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::emplace_front<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1032 : 		void emplace_front(_Valty&&... _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1033 : 		{	// insert element at beginning
; 1034 : 		_Insert(_Unchecked_begin(), _STD forward<_Valty>(_Val)...);

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR _<_Val_2>$[ebp]
	push	edx
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_1>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	push	ecx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Insert<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >

; 1035 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$emplace_front@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::emplace_front<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -76						; size = 4
$T3 = -72						; size = 4
$T4 = -68						; size = 4
$T5 = -64						; size = 4
$T6 = -60						; size = 4
$T7 = -56						; size = 4
$T8 = -52						; size = 4
$T9 = -48						; size = 4
$T10 = -44						; size = 4
__Next$ = -40						; size = 4
__Bucket$ = -36						; size = 4
__Plist$ = -32						; size = 4
__Where$ = -28						; size = 4
_this$ = -24						; size = 4
$T11 = -18						; size = 1
$T12 = -17						; size = 1
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
__Pnode$ = 16						; size = 4
??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 860  : 		_Pairib _Insert(_Valty&& _Val, _Nodety _Pnode)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 861  : 		{	// try to insert existing node with value _Val
; 862  : 		size_type _Bucket;
; 863  : 		_Unchecked_iterator _Where;

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >

; 864  : 
; 865  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 866  : 		_Bucket = _Hashval(this->_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEIABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Hashval
	mov	DWORD PTR __Bucket$[ebp], eax

; 867  : 		_Where = _End(_Bucket);

	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_End@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_End
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Where$[ebp], eax
$LN8@Insert:

; 868  : 		for (; _Where != _Begin(_Bucket); )

	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN7@Insert

; 869  : 			if (((_Traits&)*this)(this->_Kfn(_Val), this->_Kfn(*--_Where)))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator--
	mov	ecx, eax
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
	push	eax
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@Insert

; 870  : 				;	// still too high in bucket list
; 871  : 			else if (_Multi

	jmp	SHORT $LN5@Insert
$LN6@Insert:

; 872  : 				|| ((_Traits&)*this)(this->_Kfn(*_Where), this->_Kfn(_Val)))

	xor	eax, eax
	jne	SHORT $LN3@Insert
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
	push	eax
	call	??$_Kfn@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@ABU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0>::_Kfn<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBE_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Insert
$LN3@Insert:

; 873  : 				{	// found insertion point, back up to it
; 874  : 				++_Where;

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++

; 875  : 				break;

	jmp	SHORT $LN7@Insert

; 876  : 				}
; 877  : 			else

	jmp	SHORT $LN5@Insert
$LN4@Insert:

; 878  : 				{	// discard new list element and return existing
; 879  : 				_Destroy_if_not_nil(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Destroy_if_not_nil

; 880  : 				return (_Pairib(_Make_iter(_Where), false));

	mov	BYTE PTR $T12[ebp], 0
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T10[ebp], ecx
	lea	edx, DWORD PTR $T12[ebp]
	push	edx
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Make_iter
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool,void>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@Insert
$LN5@Insert:

; 881  : 				}

	jmp	$LN8@Insert
$LN7@Insert:
	jmp	SHORT $LN12@Insert
__catch$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z$0:

; 882  : 		_CATCH_ALL
; 883  : 		_Destroy_if_not_nil(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Destroy_if_not_nil

; 884  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 885  : 		_CATCH_END

	mov	eax, $LN15@Insert
	ret	0
$LN12@Insert:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z$1
$LN15@Insert:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z$1:

; 886  : 
; 887  : 		_Unchecked_iterator _Plist =
; 888  : 			_Buynode_if_nil(_STD forward<_Valty>(_Val), _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V21@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>

; 889  : 		_Unchecked_iterator _Next = _Plist;

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 890  : 
; 891  : 		if (_Where != ++_Next)	// move element into place

	lea	ecx, DWORD PTR __Next$[ebp]
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Insert

; 892  : 			_List._Unchecked_splice(_Where, _Plist, _Next);

	mov	edx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR $T9[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T9[ebp]
	push	edx
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_splice@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_splice
$LN1@Insert:

; 893  : 
; 894  : 		_Insert_bucket(_Plist, _Where, _Bucket);

	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert_bucket

; 895  : 		_Check_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Check_size

; 896  : 		return (_Pairib(_Make_iter(_Plist), true));

	mov	BYTE PTR $T11[ebp], 1
	mov	edx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T6[ebp], edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Make_iter
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool,void>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN11@Insert:

; 897  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > ><std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > ><std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$function@$$A6AXXZ@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$function@$$A6AXXZ@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$function@$$A6AXXZ@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$function@$$A6AXXZ@0@0@Z PROC ; std::_Ptr_cat<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$function@$$A6AXXZ@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$function@$$A6AXXZ@0@0@Z ENDP ; std::_Ptr_cat<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >, COMDAT

; 80   : 	{	// destroy [_First, _Last), arbitrary type

	push	ebp
	mov	ebp, esp

; 81   : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra

; 82   : 		_Al.destroy(_First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$function@$$A6AXXZ@std@@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:

; 83   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@YAXPAV?$function@$$A6AXXZ@0@0AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >, COMDAT

; 492  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 493  : 	return (_Rechecked(_Dest,
; 494  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 495  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ; std::_Unchecked<std::function<void __cdecl(void)> *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ; std::_Unchecked<std::function<void __cdecl(void)> *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ; std::_Unchecked<std::function<void __cdecl(void)> *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$function@$$A6AXXZ@std@@PAV12@@std@@YAAAPAV?$function@$$A6AXXZ@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 496  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 444  : 	{	// return pointer category from pointers

	push	ebp
	mov	ebp, esp
	push	ecx

; 445  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 446  : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[ebp]

; 447  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >, COMDAT

; 80   : 	{	// destroy [_First, _Last), arbitrary type

	push	ebp
	mov	ebp, esp

; 81   : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra

; 82   : 		_Al.destroy(_First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:

; 83   : 	}

	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >, COMDAT

; 492  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp

; 493  : 	return (_Rechecked(_Dest,
; 494  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 495  : 			_Unchecked(_Dest), _Al)));

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 496  : 	}

	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Unchecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 2598 : 	{	// copy _Val through [_First, _Last)

	push	ebp
	mov	ebp, esp

; 2599 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN3@Fill
$LN2@Fill:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Fill:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Fill

; 2600 : 		*_First = _Val;

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Fill
$LN4@Fill:

; 2601 : 	}

	pop	ebp
	ret	0
??$_Fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::_Fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>, COMDAT

; 2344 : 	{	// copy [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	push	ebp
	mov	ebp, esp
$LN2@Copy_backw:

; 2345 : 	while (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Copy_backw

; 2346 : 		*--_Dest = *--_Last;

	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 4
	mov	DWORD PTR __Last$[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, 4
	mov	DWORD PTR __Dest$[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Copy_backw
$LN1@Copy_backw:

; 2347 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 2348 : 	}

	pop	ebp
	ret	0
??$_Copy_backward@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z PROC ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>, COMDAT

; 645  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 646  : 	return (0);

	xor	eax, eax

; 647  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ENDP ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 585  : 	{	// copy _Count * *_Pval to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 586  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 587  : //	if (_Count < 0)
; 588  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 589  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 590  : 
; 591  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 592  : 
; 593  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 594  : 	for (; 0 < _Count; --_Count, ++_First)

	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil

; 595  : 		_Al.construct(_First, *_Pval);

	mov	eax, DWORD PTR __Pval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 596  : 	_CATCH_ALL
; 597  : 	for (; _Next != _First; ++_Next)

	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 4
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil

; 598  : 		_Al.destroy(_Next);

	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:

; 599  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 600  : 	_CATCH_END

	mov	eax, $LN13@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@Uninit_fil
$LN13@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:

; 601  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,unsigned int,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
$T4 = -8						; size = 4
_this$ = -4						; size = 4
__Plist$ = 8						; size = 4
?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Destroy_if_not_nil, COMDAT
; _this$ = ecx

; 850  : 		{	// node exists, destroy it

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 851  : 		_List.erase(_Make_iter(_Plist));

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Make_iter
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::erase

; 852  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Destroy_if_not_nil@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Destroy_if_not_nil
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Insert_bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0I@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Plist$ = 8						; size = 4
__Where$ = 12						; size = 4
__Bucket$ = 16						; size = 4
?_Insert_bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0I@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert_bucket, COMDAT
; _this$ = ecx

; 967  : 		{	// fix iterators after inserting _Plist before _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 968  : 		if (_Vec_lo(_Bucket) == _Unchecked_end())

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end
	push	eax
	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
	mov	ecx, eax
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@Insert_buc

; 969  : 			{	// make bucket non-empty
; 970  : 			_Vec_lo(_Bucket) = _Plist;

	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 971  : 			_Vec_hi(_Bucket) = _Plist;

	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_hi
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 972  : 			}
; 973  : 		else if (_Vec_lo(_Bucket) == _Where)

	jmp	SHORT $LN6@Insert_buc
$LN5@Insert_buc:
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
	mov	ecx, eax
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Insert_buc

; 974  : 			_Vec_lo(_Bucket) = _Plist;	// move beginning back one element

	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_lo
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx

; 975  : 		else if (++_Vec_hi(_Bucket) != _Plist)	// move end up one element

	jmp	SHORT $LN6@Insert_buc
$LN3@Insert_buc:
	lea	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_hi
	mov	ecx, eax
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
	mov	ecx, eax
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@Insert_buc

; 976  : 			--_Vec_hi(_Bucket);	// or not

	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@I@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Vec_hi
	mov	ecx, eax
	call	??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator--
$LN6@Insert_buc:

; 977  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert_bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@0I@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert_bucket
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Check_size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv131 = -20						; size = 4
tv90 = -16						; size = 4
tv86 = -12						; size = 4
_this$ = -8						; size = 4
__Newsize$1 = -4					; size = 4
?_Check_size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Check_size, COMDAT
; _this$ = ecx

; 1012 : 		{	// grow table as needed

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1013 : 		if (max_load_factor() < load_factor())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::max_load_factor
	fstp	DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR tv86[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv131[ebp], xmm0
	call	?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::load_factor
	fstp	DWORD PTR tv90[ebp]
	movss	xmm0, DWORD PTR tv90[ebp]
	movss	xmm1, DWORD PTR tv131[ebp]
	comiss	xmm0, xmm1
	jbe	SHORT $LN4@Check_size

; 1014 : 
; 1015 : 			{	// rehash to bigger table
; 1016 : 			size_type _Newsize = bucket_count();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::bucket_count
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1017 : 
; 1018 : 			if (_Newsize <  512)

	cmp	DWORD PTR __Newsize$1[ebp], 512		; 00000200H
	jae	SHORT $LN3@Check_size

; 1019 : 				_Newsize *= 8;	// multiply by 8

	mov	eax, DWORD PTR __Newsize$1[ebp]
	shl	eax, 3
	mov	DWORD PTR __Newsize$1[ebp], eax
	jmp	SHORT $LN1@Check_size
$LN3@Check_size:

; 1020 : 			else if (_Newsize < _Vec.max_size() / 2)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?max_size@?$vector@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::max_size
	shr	eax, 1
	cmp	DWORD PTR __Newsize$1[ebp], eax
	jae	SHORT $LN1@Check_size

; 1021 : 				_Newsize *= 2;	// multiply safely by 2

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	shl	ecx, 1
	mov	DWORD PTR __Newsize$1[ebp], ecx
$LN1@Check_size:

; 1022 : 			_Init(_Newsize);

	mov	edx, DWORD PTR __Newsize$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Init

; 1023 : 			_Reinsert();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Reinsert
$LN4@Check_size:

; 1024 : 			}
; 1025 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Check_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Unchecked_splice@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?_Unchecked_splice@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_splice, COMDAT
; _this$ = ecx

; 1865 : 		{	// splice [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1866 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =
; 1867 : 			_Last._Mynode();

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1868 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =
; 1869 : 			_Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1870 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =
; 1871 : 			_First._Mynode();

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1872 : 
; 1873 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1874 : 		this->_Prevnode(_Where._Mynode()) =
; 1875 : 			this->_Prevnode(_Last._Mynode());

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1876 : 		this->_Prevnode(_Last._Mynode()) =
; 1877 : 			this->_Prevnode(_First._Mynode());

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1878 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1879 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Unchecked_splice@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@2@00@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unchecked_splice
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >, COMDAT
; _this$ = ecx

; 118  : 	_List_unchecked_iterator()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>

; 119  : 		{	// construct with null node
; 120  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator--, COMDAT
; _this$ = ecx

; 151  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 152  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator--

; 153  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 154  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::bucket_count, COMDAT
; _this$ = ecx

; 543  : 		{	// return number of buckets

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 544  : 		return (_Maxidx);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 545  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::bucket_count
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
tv86 = -36						; size = 8
tv77 = -28						; size = 8
tv91 = -20						; size = 4
tv95 = -16						; size = 4
tv83 = -12						; size = 4
_this$ = -8						; size = 4
tv74 = -4						; size = 4
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::load_factor, COMDAT
; _this$ = ecx

; 616  : 		{	// return elements per bucket

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 617  : 		return ((float)size() / (float)bucket_count());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::size
	mov	DWORD PTR tv74[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR tv74[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv77[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv77[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv95[ebp], xmm0
	call	?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::bucket_count
	mov	DWORD PTR tv83[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv83[ebp]
	mov	ecx, DWORD PTR tv83[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv86[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv86[ebp]
	movss	xmm1, DWORD PTR tv95[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR tv91[ebp], xmm1
	fld	DWORD PTR tv91[ebp]

; 618  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::load_factor
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 621  : 		{	// return maximum elements per bucket

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		return (_Max_bucket_size);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]

; 623  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::max_load_factor
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -28						; size = 8
$T2 = -20						; size = 4
__First$3 = -16						; size = 4
__Last$ = -12						; size = 4
_this$ = -8						; size = 4
__Done$4 = -1						; size = 1
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 1028 : 		{	// insert elements in [begin(), end())

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		_Unchecked_iterator _Last = _Unchecked_end();

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_end

; 1030 : 		if (_Unchecked_begin() != _Last)

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_begin
	mov	ecx, eax
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Reinsert

; 1031 : 			for (--_Last; ; )

	lea	ecx, DWORD PTR __Last$[ebp]
	call	??F?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator--
$LN3@Reinsert:

; 1032 : 				{	// reinsert elements in [begin(), _Last]
; 1033 : 				_Unchecked_iterator _First = _Unchecked_begin();

	lea	ecx, DWORD PTR __First$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Unchecked_begin

; 1034 : 				bool _Done = _First == _Last;

	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$3[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator==
	mov	BYTE PTR __Done$4[ebp], al

; 1035 : 				_Insert(*_First, _First);

	mov	eax, DWORD PTR __First$3[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$3[ebp]
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator*
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Insert<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >

; 1036 : 				if (_Done)

	movzx	edx, BYTE PTR __Done$4[ebp]
	test	edx, edx
	je	SHORT $LN1@Reinsert

; 1037 : 					break;

	jmp	SHORT $LN5@Reinsert
$LN1@Reinsert:

; 1038 : 				}

	jmp	SHORT $LN3@Reinsert
$LN5@Reinsert:

; 1039 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Reinsert
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::erase, COMDAT
; _this$ = ecx

; 1457 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1458 : 		_Nodeptr _Pnode = _Unlinknode(_Where++);

	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unlinknode@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unlinknode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1459 : 		this->_Freenode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Freenode

; 1460 : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1461 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 72   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 73   : 		_Ptr = _Mylist::_Prevnode(_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 74   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 75   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 95   : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 97   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ?size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::size, COMDAT
; _this$ = ecx

; 509  : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 510  : 		return (_List.size());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::size

; 511  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1157 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1158 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1159 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Unlinknode@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Unlinknode@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unlinknode, COMDAT
; _this$ = ecx

; 1436 : 		{	// unlink node at _Where from the list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1437 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1438 : 		if (_Where._Getcont() != this || _Where._Ptr == this->_Myhead)
; 1439 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1440 : 		_Nodeptr _Pnode = (_Where)._Mynode();
; 1441 : 		_Orphan_ptr(*this, _Pnode);
; 1442 : 
; 1443 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1444 : 		_Nodeptr _Pnode = (_Where)._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1445 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1446 : 
; 1447 : 		this->_Nextnode(this->_Prevnode(_Pnode)) =
; 1448 : 			this->_Nextnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1449 : 		this->_Prevnode(this->_Nextnode(_Pnode)) =
; 1450 : 			this->_Prevnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1451 : 
; 1452 : 		--this->_Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1453 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 1454 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unlinknode@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Unlinknode
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++, COMDAT
; _this$ = ecx

; 245  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 247  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++

; 248  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 249  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::size, COMDAT
; _this$ = ecx

; 1235 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1236 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1237 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++, COMDAT
; _this$ = ecx

; 224  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 225  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 226  : 		if (this->_Getcont() == 0
; 227  : 			|| this->_Ptr == 0
; 228  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 229  : 			{	// report error
; 230  : 			_DEBUG_ERROR("list iterator not incrementable");
; 231  : 			_SCL_SECURE_OUT_OF_RANGE;
; 232  : 			}
; 233  : 
; 234  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 235  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 236  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 237  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 238  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 239  : 
; 240  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 241  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 242  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Reset_alloc<<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<void> >::allocator<std::_Func_class<void> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@std@@@?$_Func_class@X$$$V@std@@IAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Reset_alloc<<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@UServiceIdentifier@@AAU1@@?$allocator_traits@V?$allocator@UServiceIdentifier@@@std@@@std@@SAXAAV?$allocator@UServiceIdentifier@@@1@PAUServiceIdentifier@@AAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UServiceIdentifier@@AAU1@@?$allocator_traits@V?$allocator@UServiceIdentifier@@@std@@@std@@SAXAAV?$allocator@UServiceIdentifier@@@1@PAUServiceIdentifier@@AAU3@@Z PROC ; std::allocator_traits<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z ; std::forward<ServiceIdentifier &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UServiceIdentifier@@AAU1@@?$allocator@UServiceIdentifier@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z ; std::allocator<ServiceIdentifier>::construct<ServiceIdentifier,ServiceIdentifier &>

; 724  : 		}

	pop	ebp
	ret	0
??$construct@UServiceIdentifier@@AAU1@@?$allocator_traits@V?$allocator@UServiceIdentifier@@@std@@@std@@SAXAAV?$allocator@UServiceIdentifier@@@1@PAUServiceIdentifier@@AAU3@@Z ENDP ; std::allocator_traits<std::allocator<ServiceIdentifier> >::construct<ServiceIdentifier,ServiceIdentifier &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Reset_alloc@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Reset_alloc@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z PROC ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset_alloc<<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >, COMDAT
; _this$ = ecx

; 390  : 		void _Reset_alloc(_Fty&& _Val, _Alloc _Ax)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 391  : 		{	// store copy of _Val with allocator
; 392  : 		typedef _Callable_obj<typename decay<_Fty>::type>
; 393  : 			_MyWrapper;
; 394  : 		typedef _Func_impl<_MyWrapper, _Alloc, _Ret, _Types...> _Myimpl;
; 395  : 
; 396  : 		_Do_alloc<_Myimpl>(_STD forward<_Fty>(_Val), _Ax);

	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Ax$[ebp]
	push	eax
	call	??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>,<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >

; 397  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Reset_alloc@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@IAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ENDP ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Reset_alloc<<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Find@PA_WD@std@@YAPA_WPA_W0ABDU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Find@PA_WD@std@@YAPA_WPA_W0ABDU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Find<wchar_t *,char>, COMDAT

; 3024 : 	{	// find first matching _Val

	push	ebp
	mov	ebp, esp

; 3025 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Find
$LN3@Find:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 2
	mov	DWORD PTR __First$[ebp], eax
$LN4@Find:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN2@Find

; 3026 : 		if (*_First == _Val)

	mov	edx, DWORD PTR __First$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR __Val$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	eax, edx
	jne	SHORT $LN1@Find

; 3027 : 			break;

	jmp	SHORT $LN2@Find
$LN1@Find:

; 3028 : 	return (_First);

	jmp	SHORT $LN3@Find
$LN2@Find:
	mov	eax, DWORD PTR __First$[ebp]

; 3029 : 	}

	pop	ebp
	ret	0
??$_Find@PA_WD@std@@YAPA_WPA_W0ABDU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Find<wchar_t *,char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z PROC ; std::allocator<std::function<void __cdecl(void)> >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QAV?$function@$$A6AXXZ@0@AAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$function@$$A6AXXZ@std@@QAE@$$QAV01@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)>
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ENDP ; std::allocator<std::function<void __cdecl(void)> >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Arg$ = 8						; size = 4
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx

; 80   : 		{	// construct with argument

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Arg$[ebp]
	push	eax
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 81   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Newnode$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
_<_Val_1>$ = 16						; size = 4
_<_Val_2>$ = 20						; size = 4
??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Insert<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >, COMDAT
; _this$ = ecx

; 1056 : 		void _Insert(_Unchecked_const_iterator _Where,

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1057 : 		_Valty&&... _Val)
; 1058 : 		{	// insert element at _Where
; 1059 : 		_Nodeptr _Pnode = _Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1060 : 		_Nodeptr _Newnode =
; 1061 : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),
; 1062 : 				_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
	mov	DWORD PTR __Newnode$[ebp], eax

; 1063 : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXI@Z ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Incsize

; 1064 : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1065 : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1066 : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$_Insert@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Insert<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool,void>, COMDAT
; _this$ = ecx

; 144  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 145  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,bool,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z PROC ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xhash
;	COMDAT ??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
__Plist$ = 16						; size = 4
??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V21@@Z PROC ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>, COMDAT
; _this$ = ecx

; 836  : 		_Unchecked_iterator _Buynode_if_nil(_Valty&&,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 837  : 			_Unchecked_iterator _Plist)
; 838  : 		{	// node exists, just return it
; 839  : 		return (_Plist);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 840  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HV?$_Uhash_compare@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$hash@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@U?$equal_to@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@V21@@Z ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,int,std::_Uhash_compare<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::equal_to<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >,0> >::_Buynode_if_nil<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$function@$$A6AXXZ@std@@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$function@$$A6AXXZ@std@@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@@Z ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$function@$$A6AXXZ@std@@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Unchecked@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z PROC ; std::_Unchecked<std::function<void __cdecl(void)> *>, COMDAT

; 280  : 	{	// construct unchecked from checked, generic

	push	ebp
	mov	ebp, esp

; 281  : 	return (_Src);

	mov	eax, DWORD PTR __Src$[ebp]

; 282  : 	}

	pop	ebp
	ret	0
??$_Unchecked@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ENDP ; std::_Unchecked<std::function<void __cdecl(void)> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >, COMDAT

; 482  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 483  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 484  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$function@$$A6AXXZ@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$function@$$A6AXXZ@0@0@Z ; std::_Ptr_cat<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ; std::_Val_type<std::function<void __cdecl(void)> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::allocator<std::function<void __cdecl(void)> >,std::function<void __cdecl(void)> >
	add	esp, 24					; 00000018H

; 485  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@2@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAV?$function@$$A6AXXZ@std@@PAV12@@std@@YAAAPAV?$function@$$A6AXXZ@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$function@$$A6AXXZ@std@@PAV12@@std@@YAAAPAV?$function@$$A6AXXZ@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAV?$function@$$A6AXXZ@std@@PAV12@@std@@YAAAPAV?$function@$$A6AXXZ@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAEPAXI@Z

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::destroy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >, COMDAT

; 482  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 483  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 484  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 24					; 00000018H

; 485  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>, COMDAT

; 288  : 	{	// reset checked from unchecked, generic

	push	ebp
	mov	ebp, esp

; 289  : 	_Dest = _Src;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx

; 290  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]

; 291  : 	}

	pop	ebp
	ret	0
??$_Rechecked@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv70 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv70[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> *,std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAEPAXI@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAEPAXI@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@XZ PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@XZ ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXI@Z PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Incsize, COMDAT
; _this$ = ecx

; 1905 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1906 : 		if (max_size() - this->_Mysize - 1 < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1907 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@Incsize:

; 1908 : 		this->_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Incsize:

; 1909 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEXI@Z ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Incsize
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ?max_size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::max_size, COMDAT
; _this$ = ecx

; 1240 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1241 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size

; 1242 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 883  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size
	add	esp, 4

; 885  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size, COMDAT

; 734  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 735  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::max_size

; 736  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::max_size, COMDAT
; _this$ = ecx

; 611  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 119304647				; 071c71c7H

; 613  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_5b58d388793fe563bc112a2536ab3933>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_c4599be8aa20546a4c0f056de45f81e0>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_07b41efe5098b34c18964d3f394ff711>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_624bb9d9f3cde644ba29e7729588d586>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_8499d2186312c49ebbd56f30c74af45d>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@X$$$V@std@@AAEXPAV?$_Func_base@X$$$V@2@@Z ; std::_Func_class<void>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@V<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@@?$_Func_class@X$$$V@std@@AAEX$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@V?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::_Func_class<void>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>,<lambda_424e07199e07f172c211b579b41a0f6b>,std::allocator<std::_Func_class<void> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@UServiceIdentifier@@AAU1@@?$allocator@UServiceIdentifier@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UServiceIdentifier@@AAU1@@?$allocator@UServiceIdentifier@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z PROC ; std::allocator<ServiceIdentifier>::construct<ServiceIdentifier,ServiceIdentifier &>, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAUServiceIdentifier@@@std@@YAAAUServiceIdentifier@@AAU1@@Z ; std::forward<ServiceIdentifier &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0ServiceIdentifier@@QAE@ABU0@@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UServiceIdentifier@@AAU1@@?$allocator@UServiceIdentifier@@@std@@QAEXPAUServiceIdentifier@@AAU2@@Z ENDP ; std::allocator<ServiceIdentifier>::construct<ServiceIdentifier,ServiceIdentifier &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
$T1 = -28						; size = 4
tv84 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__Ptr$ = -12						; size = 4
__Vptr$ = -8						; size = 4
$T3 = -2						; size = 1
__Al$4 = -1						; size = 1
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 1
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z PROC ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>,<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >, COMDAT
; _this$ = ecx

; 485  : 		void _Do_alloc(_Fty&& _Val,

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 			_Alloc _Ax)
; 487  : 		{	// store copy of _Val with allocator
; 488  : 		if (!_Test_callable(_Val))

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Do_alloc

; 489  : 			{	// null member pointer/function pointer/std::function
; 490  : 			_Set(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEXPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Set

; 491  : 			return;

	jmp	$LN4@Do_alloc
$LN3@Do_alloc:

; 492  : 			}
; 493  : 		void *_Vptr = 0;

	mov	DWORD PTR __Vptr$[ebp], 0

; 494  : 		_Myimpl *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 495  : 		if (sizeof (_Myimpl) <= sizeof (_Space))

	xor	edx, edx
	je	SHORT $LN2@Do_alloc

; 496  : 			{	// small enough, allocate locally
; 497  : 			_Vptr = &_Space;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 498  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@Do_alloc
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@Do_alloc
$LN6@Do_alloc:
	mov	DWORD PTR tv84[ebp], 0
$LN7@Do_alloc:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 499  : 			}
; 500  : 		else

	jmp	SHORT $LN1@Do_alloc
$LN2@Do_alloc:

; 501  : 			{	// use allocator
; 502  : 			typename _Alloc::template rebind<_Myimpl>::other _Al = _Ax;

	lea	ecx, DWORD PTR __Ax$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	??$?0V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> ><std::_Func_class<bool,ServiceIdentifier,XElement *> >

; 503  : 			_Vptr = _Al.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Al$4[ebp]
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocate
	mov	DWORD PTR __Vptr$[ebp], eax

; 504  : 			_Ptr = ::new (_Vptr) _Myimpl(_STD forward<_Fty>(_Val), _Al);

	mov	edx, DWORD PTR __Vptr$[ebp]
	push	edx
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN8@Do_alloc
	lea	eax, DWORD PTR __Al$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN9@Do_alloc
$LN8@Do_alloc:
	mov	DWORD PTR tv132[ebp], 0
$LN9@Do_alloc:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
$LN1@Do_alloc:

; 505  : 			}
; 506  : 		_Set(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEXPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@@Z ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Set
$LN4@Do_alloc:

; 507  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_Do_alloc@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEX$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ENDP ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Do_alloc<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>,<lambda_da5f0f708578e290fee5fc13ec57d23a>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\list
;	COMDAT ??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
__Pnode$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -18						; size = 1
$T3 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
_<_Val_1>$ = 20						; size = 4
_<_Val_2>$ = 24						; size = 4
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >, COMDAT
; _this$ = ecx

; 827  : 		_Nodeptr _Buynode(_Nodeptr _Next, _Nodeptr _Prev,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 828  : 			_Valty&&... _Val)
; 829  : 		{	// allocate a node and set links and value
; 830  : 		_Nodeptr _Pnode = this->_Buynode0(_Next, _Prev);

	mov	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax

; 831  : 
; 832  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 833  : 		this->_Getal().construct(
; 834  : 			_STD addressof(this->_Myval(_Pnode)),
; 835  : 				_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_2>$[ebp]
	push	edx
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _<_Val_1>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Val_0>$[ebp]
	push	ecx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Myval@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@2@PAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> >
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$0:

; 836  : 		_CATCH_ALL
; 837  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::deallocate

; 838  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 839  : 		_CATCH_END

	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z$1:

; 840  : 
; 841  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 842  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_List_buy@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@2@@std@@QAEPAU?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@1@PAU21@0ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::_List_buy<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > >::_Buynode<std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@@Z PROC ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z ; std::allocator<std::function<void __cdecl(void)> >::destroy<std::function<void __cdecl(void)> >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator_traits@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6AXXZ@std@@@1@PAV?$function@$$A6AXXZ@1@@Z ENDP ; std::allocator_traits<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??$_Val_type@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z PROC ; std::_Val_type<std::function<void __cdecl(void)> *>, COMDAT

; 645  : 	{	// return value type from arbitrary argument

	push	ebp
	mov	ebp, esp

; 646  : 	return (0);

	xor	eax, eax

; 647  : 	}

	pop	ebp
	ret	0
??$_Val_type@PAV?$function@$$A6AXXZ@std@@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@@Z ENDP ; std::_Val_type<std::function<void __cdecl(void)> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::allocator<std::function<void __cdecl(void)> >,std::function<void __cdecl(void)> >, COMDAT

; 437  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 438  : 	_DEBUG_RANGE(_First, _Last);
; 439  : 	_DEBUG_POINTER(_Dest);
; 440  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 441  : 
; 442  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 443  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov

; 444  : 		_Al.construct(_Dest, (_Valty&&)*_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 445  : 	_CATCH_ALL
; 446  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov

; 447  : 		_Al.destroy(_Next);

	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$function@$$A6AXXZ@std@@@?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z ; std::_Wrap_alloc<std::allocator<std::function<void __cdecl(void)> > >::destroy<std::function<void __cdecl(void)> >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:

; 448  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 449  : 	_CATCH_END

	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:

; 450  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:

; 451  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$function@$$A6AXXZ@std@@PAV12@V?$allocator@V?$function@$$A6AXXZ@std@@@2@V12@@std@@YAPAV?$function@$$A6AXXZ@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$function@$$A6AXXZ@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::function<void __cdecl(void)> *,std::function<void __cdecl(void)> *,std::allocator<std::function<void __cdecl(void)> >,std::function<void __cdecl(void)> >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 474  : 		static void destroy(_Alloc& _Al, _Ty *_Ptr)

	push	ebp
	mov	ebp, esp

; 475  : 		{	// destroy object at _Ptr
; 476  : 		_Alloc_destroy::_Fn(0, _Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 12					; 0000000cH

; 477  : 		}

	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 437  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 438  : 	_DEBUG_RANGE(_First, _Last);
; 439  : 	_DEBUG_POINTER(_Dest);
; 440  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 441  : 
; 442  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 443  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov

; 444  : 		_Al.construct(_Dest, (_Valty&&)*_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 445  : 	_CATCH_ALL
; 446  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov

; 447  : 		_Al.destroy(_Next);

	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:

; 448  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 449  : 	_CATCH_END

	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:

; 450  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:

; 451  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>, COMDAT

; 465  : 		static void construct(_Alloc& _Al, _Ty *_Ptr,

	push	ebp
	mov	ebp, esp

; 466  : 			_Types&&... _Args)
; 467  : 		{	// construct _Ty(_Types...) at _Ptr
; 468  : 		_Alloc_construct::_Fn(0, _Al, _Ptr,
; 469  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 16					; 00000010H

; 470  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Set@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEXPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Set@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEXPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@@Z PROC ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Set, COMDAT
; _this$ = ecx

; 510  : 		{	// store pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 511  : 		_Impl = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 512  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Set@?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@AAEXPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@@Z ENDP ; std::_Func_class<bool,ServiceIdentifier,XElement *>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><<lambda_5b58d388793fe563bc112a2536ab3933> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$$V@std@@UAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_ApplyX<void>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_5b58d388793fe563bc112a2536ab3933>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QBEABV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$$V@std@@UAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_ApplyX<void>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QBEABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><<lambda_07b41efe5098b34c18964d3f394ff711> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$$V@std@@UAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_ApplyX<void>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_07b41efe5098b34c18964d3f394ff711>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QBEABV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$$V@std@@UAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_ApplyX<void>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QBEABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><<lambda_624bb9d9f3cde644ba29e7729588d586> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$$V@std@@UAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_ApplyX<void>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QBEABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><<lambda_8499d2186312c49ebbd56f30c74af45d> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$$V@std@@UAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_ApplyX<void>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QBEABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><<lambda_424e07199e07f172c211b579b41a0f6b> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAV?$_Func_base@X$$$V@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@X$$$V@std@@UAE@XZ	; std::_Func_base<void>::~_Func_base<void>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEXXZ ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_ApplyX<void>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_424e07199e07f172c211b579b41a0f6b>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QBEABV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Ax$ = 12						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx

; 192  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	mov	edx, DWORD PTR __Ax$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >

; 193  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@ABV?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Copy, COMDAT
; _this$ = ecx

; 206  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Copy

; 208  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Copy:

; 209  : 		::new (_Where) _Myt(*this);

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Copy
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@AAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@Copy
$LN4@Copy:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Copy:

; 210  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 211  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Copy@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z
_TEXT	SEGMENT
tv78 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Move, COMDAT
; _this$ = ecx

; 214  : 		{	// return clone of *this

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		if (_Where == 0)

	cmp	DWORD PTR __Where$[ebp], 0
	jne	SHORT $LN1@Move

; 216  : 			_Where = _Myal.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocate
	mov	DWORD PTR __Where$[ebp], eax
$LN1@Move:

; 217  : 		::new (_Where) _Myt(_STD move(*this));

	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Move
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@AAV10@@Z ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV01@@Z ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Move
$LN4@Move:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Move:

; 218  : 		return ((_Mybase *)_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 219  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Move@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAV?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@2@PAX@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??1?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::~_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx

; 222  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@

; 223  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ ; std::_Func_base<bool,ServiceIdentifier,XElement *>::~_Func_base<bool,ServiceIdentifier,XElement *>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::~_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
_<_Args_1>$ = 12					; size = 4
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Do_call, COMDAT
; _this$ = ecx

; 226  : 		{	// call wrapped function

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		return (_Callee.template _ApplyX<_Rx>(
; 228  : 			_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@PAVXElement@@@std@@YA$$QAPAVXElement@@AAPAV1@@Z ; std::forward<XElement *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UServiceIdentifier@@@std@@YA$$QAUServiceIdentifier@@AAU1@@Z ; std::forward<ServiceIdentifier>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$_ApplyX@_NUServiceIdentifier@@PAVXElement@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_ApplyX<bool,ServiceIdentifier,XElement *>

; 229  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Do_call@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UBEABVtype_info@@XZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Target_type, COMDAT
; _this$ = ecx

; 232  : 		{	// return type information for stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		return (typeid(typename _Callable::_MyTy));

	mov	eax, OFFSET ??_R0?AV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@8

; 234  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Target_type@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UBEABVtype_info@@XZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EBEPBXXZ PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Get, COMDAT
; _this$ = ecx

; 238  : 		{	// return address of stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 		return (reinterpret_cast<const void*>(&_Callee._Get()));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QBEABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get

; 240  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EBEPBXXZ ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = -1						; size = 1
__Deallocate$ = 8					; size = 1
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EAEX_N@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Delete_this, COMDAT
; _this$ = ecx

; 243  : 		{	// destroy self

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		_Myalty _Al = _Myal;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >

; 245  : 		_Al.destroy(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@1@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >

; 246  : 		if (_Deallocate)

	movzx	edx, BYTE PTR __Deallocate$[ebp]
	test	edx, edx
	je	SHORT $LN2@Delete_thi

; 247  : 			_Al.deallocate(this, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::deallocate
$LN2@Delete_thi:

; 248  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Delete_this@?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@EAEX_N@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >, COMDAT
; _this$ = ecx

; 552  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		{	// construct default allocator (do nothing)
; 554  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocate, COMDAT
; _this$ = ecx

; 577  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 578  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@IPAV10@@Z ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
	add	esp, 8

; 579  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ PROC ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::~_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ ENDP ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::~_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ PROC ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::~_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ ENDP ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::~_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::~_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAE@XZ ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::~_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@UAEPAXI@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ PROC ; std::_Func_base<bool,ServiceIdentifier,XElement *>::_Func_base<bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ ENDP ; std::_Func_base<bool,ServiceIdentifier,XElement *>::_Func_base<bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ PROC ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::~_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@XZ ENDP ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::~_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ PROC ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::~_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@XZ ENDP ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::~_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QBEABV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QBEABV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ PROC ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QBEABV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ ENDP ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QBEABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QBEABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ PROC ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QBEABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ ENDP ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QBEABV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QBEABV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ PROC ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QBEABV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ ENDP ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QBEABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QBEABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ PROC ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QBEABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ ENDP ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QBEABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QBEABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ PROC ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QBEABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ ENDP ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QBEABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QBEABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ PROC ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QBEABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ ENDP ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@X$$$V@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QBEABV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QBEABV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ PROC ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QBEABV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ ENDP ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@AAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@AAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx

; 180  : 		{	// copy construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@AAU01@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >

; 181  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@AAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV01@@Z PROC ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx

; 186  : 		{	// move construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Func_base@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@6B@
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAU01@@Z ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >

; 187  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QBEABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QBEABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ PROC ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get, COMDAT
; _this$ = ecx

; 179  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QBEABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ ENDP ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >, COMDAT
; _this$ = ecx

; 556  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 		{	// construct by copying (do nothing)
; 558  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::deallocate, COMDAT
; _this$ = ecx

; 572  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 573  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 574  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@2@I@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z PROC ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ENDP ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z PROC ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ENDP ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z PROC ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ENDP ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z PROC ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ENDP ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z PROC ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ENDP ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z PROC ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ENDP ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z PROC ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ENDP ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@X$$$V@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> ><std::_Func_class<void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z PROC ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >, COMDAT

; 291  : 	{	// determine whether std::function must store _Arg

	push	ebp
	mov	ebp, esp
	push	ecx

; 292  : 	return (_Test_callable(_Arg, _Testable_callable<_Ty>()));

	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Arg$[ebp]
	push	ecx
	call	??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@U?$integral_constant@_N$0A@@0@@Z ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 8

; 293  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ENDP ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$?0V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> ><std::_Func_class<bool,ServiceIdentifier,XElement *> >, COMDAT
; _this$ = ecx

; 561  : 		allocator(const allocator<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 		{	// construct from a related allocator (do nothing)
; 563  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAE@ABV?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> ><std::_Func_class<bool,ServiceIdentifier,XElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
	add	esp, 20					; 00000014H

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z PROC ; std::allocator<std::function<void __cdecl(void)> >::destroy<std::function<void __cdecl(void)> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$function@$$A6AXXZ@std@@QAEPAXI@Z

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$function@$$A6AXXZ@std@@@?$allocator@V?$function@$$A6AXXZ@std@@@std@@QAEXPAV?$function@$$A6AXXZ@1@@Z ENDP ; std::allocator<std::function<void __cdecl(void)> >::destroy<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z PROC ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 361  : 		{	// call allocator supplied version

	push	ebp
	mov	ebp, esp

; 362  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >

; 363  : 		}

	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ENDP ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>, COMDAT

; 337  : 		{	// call allocator supplied version

	push	ebp
	mov	ebp, esp

; 338  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>

; 339  : 		}

	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z PROC ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><<lambda_5b58d388793fe563bc112a2536ab3933> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@AAV1@@Z ; std::forward<<lambda_5b58d388793fe563bc112a2536ab3933> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@ABV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_5b58d388793fe563bc112a2536ab3933>@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ENDP ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><<lambda_5b58d388793fe563bc112a2536ab3933> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEXXZ PROC ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_ApplyX<void>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_5b58d388793fe563bc112a2536ab3933>@@QBEXXZ ; <lambda_5b58d388793fe563bc112a2536ab3933>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEXXZ ENDP ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_ApplyX<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z PROC ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><<lambda_c4599be8aa20546a4c0f056de45f81e0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@AAV1@@Z ; std::forward<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@ABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ENDP ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><<lambda_c4599be8aa20546a4c0f056de45f81e0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEXXZ PROC ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_ApplyX<void>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_c4599be8aa20546a4c0f056de45f81e0>@@QBEXXZ ; <lambda_c4599be8aa20546a4c0f056de45f81e0>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEXXZ ENDP ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_ApplyX<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z PROC ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><<lambda_07b41efe5098b34c18964d3f394ff711> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@AAV1@@Z ; std::forward<<lambda_07b41efe5098b34c18964d3f394ff711> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_07b41efe5098b34c18964d3f394ff711>@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ENDP ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><<lambda_07b41efe5098b34c18964d3f394ff711> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEXXZ PROC ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_ApplyX<void>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_07b41efe5098b34c18964d3f394ff711>@@QBEXXZ ; <lambda_07b41efe5098b34c18964d3f394ff711>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEXXZ ENDP ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_ApplyX<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z PROC ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@AAV1@@Z ; std::forward<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@ABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ENDP ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEXXZ PROC ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_ApplyX<void>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@QBEXXZ ; <lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEXXZ ENDP ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_ApplyX<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z PROC ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><<lambda_624bb9d9f3cde644ba29e7729588d586> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@AAV1@@Z ; std::forward<<lambda_624bb9d9f3cde644ba29e7729588d586> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@ABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ENDP ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><<lambda_624bb9d9f3cde644ba29e7729588d586> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEXXZ PROC ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_ApplyX<void>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_624bb9d9f3cde644ba29e7729588d586>@@QBEXXZ ; <lambda_624bb9d9f3cde644ba29e7729588d586>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEXXZ ENDP ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_ApplyX<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z PROC ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><<lambda_8499d2186312c49ebbd56f30c74af45d> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@AAV1@@Z ; std::forward<<lambda_8499d2186312c49ebbd56f30c74af45d> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ENDP ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><<lambda_8499d2186312c49ebbd56f30c74af45d> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEXXZ PROC ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_ApplyX<void>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_8499d2186312c49ebbd56f30c74af45d>@@QBEXXZ ; <lambda_8499d2186312c49ebbd56f30c74af45d>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEXXZ ENDP ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_ApplyX<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z PROC ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><<lambda_424e07199e07f172c211b579b41a0f6b> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@AAV1@@Z ; std::forward<<lambda_424e07199e07f172c211b579b41a0f6b> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@ABV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_424e07199e07f172c211b579b41a0f6b>@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ENDP ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><<lambda_424e07199e07f172c211b579b41a0f6b> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEXXZ PROC ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_ApplyX<void>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_424e07199e07f172c211b579b41a0f6b>@@QBEXXZ ; <lambda_424e07199e07f172c211b579b41a0f6b>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_ApplyX@X$$$V@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEXXZ ENDP ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_ApplyX<void>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@V?$allocator@V?$_Func_class@X$$$V@std@@@2@X$$$V@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>,std::allocator<std::_Func_class<void> >,void> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z PROC ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><<lambda_da5f0f708578e290fee5fc13ec57d23a> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@AAV1@@Z ; std::forward<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@ABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ENDP ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><<lambda_da5f0f708578e290fee5fc13ec57d23a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@AAV10@@Z PROC ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YA$$QAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@AAV10@@Z ENDP ; std::move<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$_ApplyX@_NUServiceIdentifier@@PAVXElement@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
_<_Args_1>$ = 12					; size = 4
??$_ApplyX@_NUServiceIdentifier@@PAVXElement@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z PROC ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_ApplyX<bool,ServiceIdentifier,XElement *>, COMDAT
; _this$ = ecx

; 281  : 		_Ret _ApplyX(_Types&&... _Args)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 		{ // apply to UDT object
; 283  : 		return (this->_Get()(_STD forward<_Types>(_Args)...));

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	call	??$forward@PAVXElement@@@std@@YA$$QAPAVXElement@@AAPAV1@@Z ; std::forward<XElement *>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@UServiceIdentifier@@@std@@YA$$QAUServiceIdentifier@@AAU1@@Z ; std::forward<ServiceIdentifier>
	add	esp, -8					; fffffff8H
	mov	ecx, esp
	push	eax
	call	??0ServiceIdentifier@@QAE@ABU0@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAEAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get
	mov	ecx, eax
	call	??R<lambda_da5f0f708578e290fee5fc13ec57d23a>@@QBE_NUServiceIdentifier@@PAVXElement@@@Z ; <lambda_da5f0f708578e290fee5fc13ec57d23a>::operator()

; 284  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$_ApplyX@_NUServiceIdentifier@@PAVXElement@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE_N$$QAUServiceIdentifier@@$$QAPAVXElement@@@Z ENDP ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_ApplyX<bool,ServiceIdentifier,XElement *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@1@@Z PROC ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();

	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@?$allocator@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@QAEXPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@1@@Z ENDP ; std::allocator<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >::destroy<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@IPAV10@@Z PROC ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 178956970	; 0aaaaaaaH
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 24
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@std@@@std@@YAPAV?$_Func_impl@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@V?$allocator@V?$_Func_class@_NUServiceIdentifier@@PAVXElement@@@std@@@2@_NUServiceIdentifier@@PAVXElement@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Func_impl<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>,std::allocator<std::_Func_class<bool,ServiceIdentifier,XElement *> >,bool,ServiceIdentifier,XElement *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0><std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0><std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABU01@@Z

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABU01@@Z

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0><std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0><std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0><std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABU01@@Z

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABU01@@Z

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0><std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0><std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@AAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@AAU01@@Z PROC ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@AAU01@@Z ENDP ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??$?0U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAU01@@Z PROC ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >, COMDAT
; _this$ = ecx

; 269  : 		{	// construct

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YA$$QAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax

; 270  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@$$QAU01@@Z ENDP ; std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0><std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$function@$$A6AXXZ@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$function@$$A6AXXZ@std@@QAEPAXI@Z PROC		; std::function<void __cdecl(void)>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$function@$$A6AXXZ@std@@QAE@XZ	; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$function@$$A6AXXZ@std@@QAEPAXI@Z ENDP		; std::function<void __cdecl(void)>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABU01@@Z PROC ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABU01@@Z ENDP ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABU01@@Z PROC ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABU01@@Z ENDP ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABV0@@Z PROC ; <lambda_07b41efe5098b34c18964d3f394ff711>::<lambda_07b41efe5098b34c18964d3f394ff711>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABV0@@Z ENDP ; <lambda_07b41efe5098b34c18964d3f394ff711>::<lambda_07b41efe5098b34c18964d3f394ff711>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABV0@@Z PROC ; <lambda_8499d2186312c49ebbd56f30c74af45d>::<lambda_8499d2186312c49ebbd56f30c74af45d>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABV0@@Z ENDP ; <lambda_8499d2186312c49ebbd56f30c74af45d>::<lambda_8499d2186312c49ebbd56f30c74af45d>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@ABV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@ABV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z PROC ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAE@ABV<lambda_5b58d388793fe563bc112a2536ab3933>@@@Z ENDP ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ PROC ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@QAEAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@XZ ENDP ; std::_Callable_base<<lambda_5b58d388793fe563bc112a2536ab3933>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@ABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@ABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z PROC ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAE@ABV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@Z ENDP ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ PROC ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@QAEAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@XZ ENDP ; std::_Callable_base<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z PROC ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0<lambda_07b41efe5098b34c18964d3f394ff711>@@QAE@ABV0@@Z

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAE@ABV<lambda_07b41efe5098b34c18964d3f394ff711>@@@Z ENDP ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ PROC ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@QAEAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@XZ ENDP ; std::_Callable_base<<lambda_07b41efe5098b34c18964d3f394ff711>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@ABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@ABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z PROC ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAE@ABV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@Z ENDP ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ PROC ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@QAEAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@XZ ENDP ; std::_Callable_base<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@ABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@ABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z PROC ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAE@ABV<lambda_624bb9d9f3cde644ba29e7729588d586>@@@Z ENDP ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ PROC ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@QAEAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@XZ ENDP ; std::_Callable_base<<lambda_624bb9d9f3cde644ba29e7729588d586>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z PROC ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0<lambda_8499d2186312c49ebbd56f30c74af45d>@@QAE@ABV0@@Z

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAE@ABV<lambda_8499d2186312c49ebbd56f30c74af45d>@@@Z ENDP ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ PROC ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@QAEAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@XZ ENDP ; std::_Callable_base<<lambda_8499d2186312c49ebbd56f30c74af45d>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@ABV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@ABV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z PROC ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAE@ABV<lambda_424e07199e07f172c211b579b41a0f6b>@@@Z ENDP ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ PROC ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@QAEAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@XZ ENDP ; std::_Callable_base<<lambda_424e07199e07f172c211b579b41a0f6b>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ??0?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@ABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@ABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z PROC ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>, COMDAT
; _this$ = ecx

; 175  : 		{	// construct from value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax

; 176  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAE@ABV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@Z ENDP ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xrefwrap
;	COMDAT ?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAEAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAEAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ PROC ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get, COMDAT
; _this$ = ecx

; 184  : 		{	// return reference to stored object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (_Object);

	mov	eax, DWORD PTR _this$[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Callable_base@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@QAEAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@XZ ENDP ; std::_Callable_base<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_5b58d388793fe563bc112a2536ab3933>@@@std@@YA_NAAV<lambda_5b58d388793fe563bc112a2536ab3933>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_5b58d388793fe563bc112a2536ab3933> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@@std@@YA_NAAV<lambda_c4599be8aa20546a4c0f056de45f81e0>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_c4599be8aa20546a4c0f056de45f81e0> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_07b41efe5098b34c18964d3f394ff711>@@@std@@YA_NAAV<lambda_07b41efe5098b34c18964d3f394ff711>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_07b41efe5098b34c18964d3f394ff711> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@@std@@YA_NAAV<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@@std@@YA_NAAV<lambda_624bb9d9f3cde644ba29e7729588d586>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_624bb9d9f3cde644ba29e7729588d586> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@@std@@YA_NAAV<lambda_8499d2186312c49ebbd56f30c74af45d>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_8499d2186312c49ebbd56f30c74af45d> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_424e07199e07f172c211b579b41a0f6b>@@@std@@YA_NAAV<lambda_424e07199e07f172c211b579b41a0f6b>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_424e07199e07f172c211b579b41a0f6b> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\functional
;	COMDAT ??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >, COMDAT

; 285  : 	{	// std::function must store arbitrary callable objects

	push	ebp
	mov	ebp, esp

; 286  : 	return (true);

	mov	al, 1

; 287  : 	}

	pop	ebp
	ret	0
??$_Test_callable@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@@std@@YA_NAAV<lambda_da5f0f708578e290fee5fc13ec57d23a>@@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Test_callable<<lambda_da5f0f708578e290fee5fc13ec57d23a> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
_<_Args_2>$ = 24					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_2>$[ebp]
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _<_Args_1>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _<_Args_0>$[ebp]
	push	edx
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> > >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 877  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 878  : 		{	// destroy object at _Ptr
; 879  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 8

; 880  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 465  : 		static void construct(_Alloc& _Al, _Ty *_Ptr,

	push	ebp
	mov	ebp, esp

; 466  : 			_Types&&... _Args)
; 467  : 		{	// construct _Ty(_Types...) at _Ptr
; 468  : 		_Alloc_construct::_Fn(0, _Al, _Ptr,
; 469  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 16					; 00000010H

; 470  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_5b58d388793fe563bc112a2536ab3933>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_5b58d388793fe563bc112a2536ab3933>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_c4599be8aa20546a4c0f056de45f81e0>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_c4599be8aa20546a4c0f056de45f81e0>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_07b41efe5098b34c18964d3f394ff711>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_07b41efe5098b34c18964d3f394ff711>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_0a265d9f88e42e1afeaf76e4a6ca41f3>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_624bb9d9f3cde644ba29e7729588d586>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_624bb9d9f3cde644ba29e7729588d586>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_8499d2186312c49ebbd56f30c74af45d>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_8499d2186312c49ebbd56f30c74af45d>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_424e07199e07f172c211b579b41a0f6b>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_424e07199e07f172c211b579b41a0f6b>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z PROC ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@AAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@std@@@std@@YAAAU?$_Callable_obj@V<lambda_da5f0f708578e290fee5fc13ec57d23a>@@$0A@@0@AAU10@@Z ENDP ; std::forward<std::_Callable_obj<<lambda_da5f0f708578e290fee5fc13ec57d23a>,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv129 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
_<_Args_1>$ = 16					; size = 4
_<_Args_2>$ = 20					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_2>$[ebp]
	push	ecx
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	mov	ecx, esp
	push	eax
	call	??0?$tuple@$$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	edx, DWORD PTR _<_Args_1>$[ebp]
	push	edx
	call	??$forward@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::forward<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> >
	mov	ecx, esp
	push	eax
	call	??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&,void * *>
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z ; std::forward<std::piecewise_construct_t const &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv129[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$construct@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,void *> >::construct<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 728  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 729  : 		{	// destroy object at _Ptr
; 730  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >

; 731  : 		}

	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 337  : 		{	// call allocator supplied version

	push	ebp
	mov	ebp, esp

; 338  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >

; 339  : 		}

	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv69 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct, COMDAT
; _this$ = ecx

; 592  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 593  : 		::new ((void *)_Ptr) _Ty(_Val);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv69[ebp], 0
$LN1@construct:

; 594  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@2@ABV32@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&,void * *>, COMDAT
; _this$ = ecx

; 258  : 		{	// construct by moving same size tuple

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Get_rest@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Get_rest
	push	eax
	call	??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z ; std::forward<std::tuple<> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@$$$V@std@@QAE@ABV01@@Z	; std::tuple<>::tuple<>
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$forward@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Tuple_val@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Tuple_val<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 259  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PAPAX@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>, COMDAT
; _this$ = ecx

; 762  : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	xor	ecx, ecx
	mov	BYTE PTR $T1[ebp], cl
	movzx	edx, BYTE PTR $T2[ebp]
	push	edx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Val1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<>,0>

; 763  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$$$V@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@V?$tuple@$$$V@1@@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 605  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 		{	// destroy object at _Ptr
; 607  : 		_Ptr->~_Uty();
; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::destroy<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 868  : 		void construct(_Ty *_Ptr,

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 			_Types&&... _Args)
; 870  : 		{	// construct _Ty(_Types...) at _Ptr
; 871  : 		_Mytraits::construct(*this, _Ptr,
; 872  : 			_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 12					; 0000000cH

; 873  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ?_Get_rest@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_rest@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ PROC ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Get_rest, COMDAT
; _this$ = ecx

; 438  : 		{	// get reference to rest of elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 439  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 440  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_rest@?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ ENDP ; std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>::_Get_rest
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$forward@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>, COMDAT

; 1504 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1505 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1506 : 	}

	pop	ebp
	ret	0
??$forward@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$?0V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 746  : 		{	// construct from pair of tuples

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> &>
	add	esp, 4
	push	eax
	call	??$get@$0A@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0

; 747  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$?0V?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@QAE@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int>::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int><std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT

; 720  : 		static void construct(_Alloc& _Al, _Objty *_Ptr,

	push	ebp
	mov	ebp, esp

; 721  : 			_Types&&... _Args)
; 722  : 		{	// construct _Objty(_Types...) at _Ptr
; 723  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >

; 724  : 		}

	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@1@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\type_traits
;	COMDAT ??$move@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z PROC ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> &>, COMDAT

; 1519 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1520 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1521 : 	}

	pop	ebp
	ret	0
??$move@AAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AAV10@@Z ENDP ; std::move<std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??$get@$0A@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
_TEXT	SEGMENT
__Tuple$ = 8						; size = 4
??$get@$0A@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z PROC ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>, COMDAT

; 596  : 	{	// get rvalue reference to _Index element of tuple

	push	ebp
	mov	ebp, esp

; 597  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 598  : 		_Ttype;
; 599  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_RRtype
; 600  : 		_RRtype;
; 601  : 	return (_STD forward<_RRtype>(((_Ttype&)_Tuple)._Myfirst._Val));

	mov	eax, DWORD PTR __Tuple$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$forward@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
	add	esp, 4

; 602  : 	}

	pop	ebp
	ret	0
??$get@$0A@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@$$QAV?$tuple@$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ENDP ; std::get<0,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &&>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xmemory0
;	COMDAT ??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv71 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >, COMDAT
; _this$ = ecx

; 598  : 		void construct(_Objty *_Ptr, _Types&&... _Args)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 		{	// construct _Objty(_Types...) at _Ptr
; 600  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv71[ebp], 0
$LN1@construct:

; 601  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@V12@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@std@@@std@@@std@@@1@$$QAV21@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >::construct<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,int> > > > >
_TEXT	ENDS
END

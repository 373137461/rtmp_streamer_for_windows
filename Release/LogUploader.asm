; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\songmm_moon_stone_obs\OBS\Source\LogUploader.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp_?Last@?$List@VString@@@@QBEAAVString@@XZ:PROC
EXTRN	__imp_??0XFile@@QAE@PB_WKK@Z:PROC
EXTRN	__imp_?IsOpen@XFile@@QAEHXZ:PROC
EXTRN	__imp_??6String@@QAEAAV0@_W@Z:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	_swscanf_s:PROC
EXTRN	__imp_?ReadLog@@YAXAAVString@@@Z:PROC
EXTRN	__imp_?CurrentDateTimeString@@YA?AVString@@XZ:PROC
EXTRN	__imp_?CurrentLogFilename@@YA?AVString@@XZ:PROC
EXTRN	__imp__SystemTimeToFileTime@8:PROC
EXTRN	__imp_?utf8_createTstr@@YAPA_WPBD@Z:PROC
EXTRN	__imp_?OBSGetPluginDataPath@@YA?AVString@@XZ:PROC
$SG4294824768 DB 'h', 00H, 't', 00H, 't', 00H, 'p', 00H, 's', 00H, ':', 00H
	DB	'/', 00H, '/', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, '.'
	DB	00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'u', 00H, 'b', 00H
	DB	'.', 00H, 'c', 00H, 'o', 00H, 'm', 00H, '%', 00H, 's', 00H, 00H
	DB	00H
$SG4294824772 DB 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'B', 00H
	DB	'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'c', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'S', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' '
	DB	00H, 'v', 00H, '0', 00H, '.', 00H, '6', 00H, '5', 00H, '7', 00H
	DB	'b', 00H, 00H, 00H
$SG4294824769 DB 'X', 00H, '-', 00H, 'G', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'-', 00H, 'U', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG4294824771 DB 'P', 00H, 'O', 00H, 'S', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG4294824770 DB 'H', 00H, 'E', 00H, 'A', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG4294824765 DB 00H, 00H
	ORG $+2
$SG4294824764 DB 's', 00H, 00H, 00H
$SG4294824767 DB '%', 00H, 'u', 00H, '-', 00H, '%', 00H, '0', 00H, '2', 00H
	DB	'u', 00H, '-', 00H, '%', 00H, '0', 00H, '2', 00H, 'u', 00H, '-'
	DB	00H, '%', 00H, '0', 00H, '2', 00H, 'u', 00H, '%', 00H, '0', 00H
	DB	'2', 00H, 'u', 00H, '-', 00H, '%', 00H, '0', 00H, '2', 00H, 'u'
	DB	00H, 00H, 00H
	ORG $+2
$SG4294824766 DB 'less than a minute', 00H
	ORG $+1
$SG4294824761 DB 's', 00H, 00H, 00H
$SG4294824760 DB '%', 00H, 'u', 00H, ' ', 00H, 'w', 00H, 'e', 00H, 'e', 00H
	DB	'k', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG4294824763 DB '%', 00H, 'u', 00H, ' ', 00H, 'y', 00H, 'e', 00H, 'a', 00H
	DB	'r', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG4294824762 DB 00H, 00H
	ORG $+2
$SG4294824757 DB '%', 00H, 'u', 00H, ' ', 00H, 'd', 00H, 'a', 00H, 'y', 00H
	DB	'%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294824756 DB 00H, 00H
	ORG $+2
$SG4294824759 DB 00H, 00H
	ORG $+2
$SG4294824758 DB 's', 00H, 00H, 00H
$SG4294824753 DB 00H, 00H
	ORG $+2
$SG4294824752 DB 's', 00H, 00H, 00H
$SG4294824755 DB 's', 00H, 00H, 00H
$SG4294824754 DB '%', 00H, 'u', 00H, ' ', 00H, 'h', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG4294824749 DB '\', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG4294824748 DB '\', 00H, 00H, 00H
$SG4294824751 DB '%', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 'i', 00H, 'n', 00H
	DB	'u', 00H, 't', 00H, 'e', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG4294824750 DB ' ', 00H, 'a', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 00H, 00H
$SG4294824745 DB '\', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG4294824744 DB 0aH, 00H, 00H, 00H
$SG4294824747 DB '\', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG4294824746 DB '"', 00H, 00H, 00H
$SG4294824741 DB '\', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG4294824740 DB 0cH, 00H, 00H, 00H
$SG4294824743 DB '\', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294824742 DB 0dH, 00H, 00H, 00H
$SG4294824737 DB '\', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG4294824736 DB 09H, 00H, 00H, 00H
$SG4294824739 DB '\', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG4294824738 DB 08H, 00H, 00H, 00H
$SG4294824733 DB '\', 00H, 'u', 00H, '%', 00H, '0', 00H, '4', 00H, 'X', 00H
	DB	00H, 00H
	ORG $+2
$SG4294824732 DB 'O', 00H, 'p', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'B', 00H
	DB	'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'c', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'S', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' '
	DB	00H, 'v', 00H, '0', 00H, '.', 00H, '6', 00H, '5', 00H, '7', 00H
	DB	'b', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'g', 00H, ' ', 00H, 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'u', 00H, 'p', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'a', 00H, 't', 00H, ' ', 00H, '%', 00H, 's', 00H, ' ', 00H
	DB	'(', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ')', 00H, '.', 00H
	DB	00H, 00H
$SG4294824735 DB '\', 00H, '/', 00H, 00H, 00H
	ORG $+2
$SG4294824734 DB '/', 00H, 00H, 00H
$SG4294824729 DB 'h', 00H, 't', 00H, 't', 00H, 'p', 00H, 's', 00H, ':', 00H
	DB	'/', 00H, '/', 00H, 'a', 00H, 'p', 00H, 'i', 00H, '.', 00H, 'g'
	DB	00H, 'i', 00H, 't', 00H, 'h', 00H, 'u', 00H, 'b', 00H, '.', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, '/', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294824728 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'C', 00H, 'o', 00H, 'm'
	DB	00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'E', 00H, 'r', 00H, 'r'
	DB	00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294824721 DB 0dH, 00H, 0aH, 00H, 0dH, 00H, 0aH, 00H, 'L', 00H, 'a', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, 'G', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, ' ', 00H, 'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'L', 00H, 'o', 00H, 'g', 00H, ':'
	DB	00H, 0dH, 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG4294824731 DB ' ', 00H, 'T', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'l', 00H
	DB	'o', 00H, 'g', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 'w', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'a', 00H
	DB	'p', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'x', 00H, 'i', 00H, 'm'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 'l', 00H, 'y', 00H, ' ', 00H
	DB	'%', 00H, 's', 00H, ' ', 00H, 'o', 00H, 'l', 00H, 'd', 00H, ' '
	DB	00H, 'a', 00H, 't', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, ' ', 00H, 'w', 00H, 'a', 00H, 's', 00H, ' ', 00H
	DB	'u', 00H, 'p', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'e'
	DB	00H, 'd', 00H, '.', 00H, 00H, 00H
$SG4294824730 DB '{', 00H, ' ', 00H, '"', 00H, 'p', 00H, 'u', 00H, 'b', 00H
	DB	'l', 00H, 'i', 00H, 'c', 00H, '"', 00H, ':', 00H, ' ', 00H, 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'd', 00H, 'e', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '"', 00H
	DB	':', 00H, ' ', 00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, '"', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	's', 00H, '"', 00H, ':', 00H, ' ', 00H, '{', 00H, ' ', 00H, '"'
	DB	00H, '%', 00H, 's', 00H, '"', 00H, ':', 00H, ' ', 00H, '{', 00H
	DB	' ', 00H, '"', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, '"', 00H, ':', 00H, ' ', 00H, '"', 00H
	DB	'%', 00H, 's', 00H, '"', 00H, ' ', 00H, '}', 00H, ' ', 00H, '}'
	DB	00H, ' ', 00H, '}', 00H, 00H, 00H
	ORG $+2
$SG4294824725 DB '"', 00H, 'h', 00H, 't', 00H, 'm', 00H, 'l', 00H, '_', 00H
	DB	'u', 00H, 'r', 00H, 'l', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG4294824724 DB '"', 00H, 'h', 00H, 't', 00H, 'm', 00H, 'l', 00H, '_', 00H
	DB	'u', 00H, 'r', 00H, 'l', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG4294824727 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'S', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG4294824722 DB '%', 00H, 's', 00H, '\', 00H, 'c', 00H, 'a', 00H, 'p', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 'o'
	DB	00H, 'k', 00H, 'L', 00H, 'o', 00H, 'g', 00H, '.', 00H, 't', 00H
	DB	'x', 00H, 't', 00H, 00H, 00H
$SG4294824726 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'S', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H
	DB	'p', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 's', 00H
	DB	'e', 00H, 00H, 00H
$SG4294824720 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'E', 00H, 'm', 00H, 'p'
	DB	00H, 't', 00H, 'y', 00H, 'L', 00H, 'o', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG4294824716 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'C', 00H, 'a', 00H, 'n'
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'e', 00H
	DB	'n', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294824723 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'S', 00H, 'e', 00H, 'r'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 's'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG4294824717 DB '%', 00H, 's', 00H, '\', 00H, 'l', 00H, 'o', 00H, 'g', 00H
	DB	's', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG4294824719 DB '/', 00H, 00H, 00H
$SG4294824718 DB '\', 00H, 00H, 00H
$SG4294824715 DB 'L', 00H, 'o', 00H, 'g', 00H, 'U', 00H, 'p', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'E', 00H, 'm', 00H, 'p'
	DB	00H, 't', 00H, 'y', 00H, 'L', 00H, 'o', 00H, 'g', 00H, 00H, 00H
PUBLIC	?get_deleter@?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAEAAUHTTPHandleDeleter@?A0x66497112@@XZ ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::get_deleter
PUBLIC	??0?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>
PUBLIC	?reset@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAEXPAX@Z ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::reset
PUBLIC	?get@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::get
PUBLIC	??1?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::~unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>
PUBLIC	??0?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@PAX@Z ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>
PUBLIC	?UploadLog@@YA_NVString@@AAULogUploadResult@@@Z	; UploadLog
PUBLIC	?UploadCurrentLog@@YA_NAAULogUploadResult@@@Z	; UploadCurrentLog
PUBLIC	?UploadLogGitHub@@YA_NVString@@0AAULogUploadResult@@@Z ; UploadLogGitHub
PUBLIC	?StringEscapeJson@?A0x66497112@@YAXAAVString@@@Z ; `anonymous namespace'::StringEscapeJson
PUBLIC	?LogFileAge@?A0x66497112@@YA?AVString@@AAV2@@Z	; `anonymous namespace'::LogFileAge
PUBLIC	?HTTPFindRedirect@?A0x66497112@@YA_NVString@@AAV2@@Z ; `anonymous namespace'::HTTPFindRedirect
PUBLIC	?HTTPPostData@?A0x66497112@@YA_NVString@@0AAHPAV?$List@E@@ABV2@@Z ; `anonymous namespace'::HTTPPostData
PUBLIC	??1HTTPHandle@?A0x66497112@@QAE@XZ		; `anonymous namespace'::HTTPHandle::~HTTPHandle
PUBLIC	?HTTPPostData@?A0x66497112@@YA_NVString@@PAXIAAHPAV?$List@E@@ABV2@@Z ; `anonymous namespace'::HTTPPostData
PUBLIC	?HTTPReceiveStatus@?A0x66497112@@YA_NAAUHTTPHandle@1@AAH@Z ; `anonymous namespace'::HTTPReceiveStatus
PUBLIC	?HTTPProlog@?A0x66497112@@YA_NVString@@AAV2@AAUHTTPHandle@1@2AA_N@Z ; `anonymous namespace'::HTTPProlog
PUBLIC	??7HTTPHandle@?A0x66497112@@QAE_NXZ		; `anonymous namespace'::HTTPHandle::operator!
PUBLIC	??BHTTPHandle@?A0x66497112@@QAEPAXXZ		; `anonymous namespace'::HTTPHandle::operator void *
PUBLIC	??0HTTPHandle@?A0x66497112@@QAE@PAX@Z		; `anonymous namespace'::HTTPHandle::HTTPHandle
PUBLIC	??RHTTPHandleDeleter@?A0x66497112@@QAEXPAX@Z	; `anonymous namespace'::HTTPHandleDeleter::operator()
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 70   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3451 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT

; 59   : const _Ignore ignore;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\tuple
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT

; 66   : const _Tuple_alloc_t _Tuple_alloc = _Tuple_alloc_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ??RHTTPHandleDeleter@?A0x66497112@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??RHTTPHandleDeleter@?A0x66497112@@QAEXPAX@Z PROC	; `anonymous namespace'::HTTPHandleDeleter::operator(), COMDAT
; _this$ = ecx

; 33   :         void operator()(HINTERNET h) { WinHttpCloseHandle(h); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	DWORD PTR __imp__WinHttpCloseHandle@4
	mov	esp, ebp
	pop	ebp
	ret	4
??RHTTPHandleDeleter@?A0x66497112@@QAEXPAX@Z ENDP	; `anonymous namespace'::HTTPHandleDeleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ??0HTTPHandle@?A0x66497112@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
??0HTTPHandle@?A0x66497112@@QAE@PAX@Z PROC		; `anonymous namespace'::HTTPHandle::HTTPHandle, COMDAT
; _this$ = ecx

; 38   :         explicit HTTPHandle(HINTERNET h=nullptr) : unique_ptr(h) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@PAX@Z ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0HTTPHandle@?A0x66497112@@QAE@PAX@Z ENDP		; `anonymous namespace'::HTTPHandle::HTTPHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ??BHTTPHandle@?A0x66497112@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BHTTPHandle@?A0x66497112@@QAEPAXXZ PROC		; `anonymous namespace'::HTTPHandle::operator void *, COMDAT
; _this$ = ecx

; 39   :         operator HINTERNET() { return get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::get
	mov	esp, ebp
	pop	ebp
	ret	0
??BHTTPHandle@?A0x66497112@@QAEPAXXZ ENDP		; `anonymous namespace'::HTTPHandle::operator void *
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ??7HTTPHandle@?A0x66497112@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv71 = -4						; size = 4
??7HTTPHandle@?A0x66497112@@QAE_NXZ PROC		; `anonymous namespace'::HTTPHandle::operator!, COMDAT
; _this$ = ecx

; 40   :         bool operator!() { return get() == nullptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QBEPAXXZ ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::get
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv71[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv71[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??7HTTPHandle@?A0x66497112@@QAE_NXZ ENDP		; `anonymous namespace'::HTTPHandle::operator!
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?HTTPProlog@?A0x66497112@@YA_NVString@@AAV2@AAUHTTPHandle@1@2AA_N@Z
_TEXT	SEGMENT
_urlComponents$ = -80					; size = 60
_hostName$ = -20					; size = 8
tv161 = -12						; size = 4
tv147 = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_url$ = 8						; size = 8
_path$ = 16						; size = 4
_session$ = 20						; size = 4
_connect$ = 24						; size = 4
_secure$ = 28						; size = 4
?HTTPProlog@?A0x66497112@@YA_NVString@@AAV2@AAUHTTPHandle@1@2AA_N@Z PROC ; `anonymous namespace'::HTTPProlog, COMDAT

; 44   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 45   :         URL_COMPONENTS  urlComponents;
; 46   : 
; 47   :         String hostName;

	lea	ecx, DWORD PTR _hostName$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 48   : 
; 49   :         hostName.SetLength(256);

	push	256					; 00000100H
	lea	ecx, DWORD PTR _hostName$[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 50   :         path.SetLength(1024);

	push	1024					; 00000400H
	mov	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 51   : 
; 52   :         zero(&urlComponents, sizeof(urlComponents));

	push	60					; 0000003cH
	lea	eax, DWORD PTR _urlComponents$[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 53   : 
; 54   :         urlComponents.dwStructSize = sizeof(urlComponents);

	mov	DWORD PTR _urlComponents$[ebp], 60	; 0000003cH

; 55   : 
; 56   :         urlComponents.lpszHostName = hostName;

	lea	ecx, DWORD PTR _hostName$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _urlComponents$[ebp+16], eax

; 57   :         urlComponents.dwHostNameLength = hostName.Length();

	lea	ecx, DWORD PTR _hostName$[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	mov	DWORD PTR _urlComponents$[ebp+20], eax

; 58   : 
; 59   :         urlComponents.lpszUrlPath = path;

	mov	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	DWORD PTR _urlComponents$[ebp+44], eax

; 60   :         urlComponents.dwUrlPathLength = path.Length();

	mov	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_?Length@String@@QBEIXZ
	mov	DWORD PTR _urlComponents$[ebp+48], eax

; 61   : 
; 62   :         WinHttpCrackUrl(url, 0, 0, &urlComponents);

	lea	ecx, DWORD PTR _urlComponents$[ebp]
	push	ecx
	push	0
	push	0
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp__WinHttpCrackUrl@16

; 63   :         if (urlComponents.nPort == INTERNET_DEFAULT_HTTPS_PORT)

	movzx	edx, WORD PTR _urlComponents$[ebp+24]
	cmp	edx, 443				; 000001bbH
	jne	SHORT $LN3@HTTPProlog

; 64   :             secure = true;

	mov	eax, DWORD PTR _secure$[ebp]
	mov	BYTE PTR [eax], 1

; 65   :         else

	jmp	SHORT $LN2@HTTPProlog
$LN3@HTTPProlog:

; 66   :             secure = false;

	mov	ecx, DWORD PTR _secure$[ebp]
	mov	BYTE PTR [ecx], 0
$LN2@HTTPProlog:

; 67   : 
; 68   :         session.reset(WinHttpOpen(OBS_VERSION_STRING, WINHTTP_ACCESS_TYPE_DEFAULT_PROXY, WINHTTP_NO_PROXY_NAME, WINHTTP_NO_PROXY_BYPASS, 0));

	push	0
	push	0
	push	0
	push	0
	push	OFFSET $SG4294824772
	call	DWORD PTR __imp__WinHttpOpen@20
	push	eax
	mov	ecx, DWORD PTR _session$[ebp]
	call	?reset@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAEXPAX@Z ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::reset

; 69   :         if (!session)

	mov	ecx, DWORD PTR _session$[ebp]
	call	??7HTTPHandle@?A0x66497112@@QAE_NXZ	; `anonymous namespace'::HTTPHandle::operator!
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@HTTPProlog

; 70   :             return false;

	mov	BYTE PTR $T2[ebp], 0
	lea	ecx, DWORD PTR _hostName$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
	jmp	SHORT $LN4@HTTPProlog
$LN1@HTTPProlog:

; 71   : 
; 72   :         connect.reset(WinHttpConnect(session, hostName, secure ? INTERNET_DEFAULT_HTTPS_PORT : INTERNET_DEFAULT_HTTP_PORT, 0));

	mov	eax, DWORD PTR _secure$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@HTTPProlog
	mov	DWORD PTR tv147[ebp], 443		; 000001bbH
	jmp	SHORT $LN7@HTTPProlog
$LN6@HTTPProlog:
	mov	DWORD PTR tv147[ebp], 80		; 00000050H
$LN7@HTTPProlog:
	push	0
	movzx	edx, WORD PTR tv147[ebp]
	push	edx
	lea	ecx, DWORD PTR _hostName$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	mov	ecx, DWORD PTR _session$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpConnect@16
	push	eax
	mov	ecx, DWORD PTR _connect$[ebp]
	call	?reset@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAEXPAX@Z ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::reset

; 73   : 
; 74   :         return !!connect;

	mov	ecx, DWORD PTR _connect$[ebp]
	call	??7HTTPHandle@?A0x66497112@@QAE_NXZ	; `anonymous namespace'::HTTPHandle::operator!
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@HTTPProlog
	mov	DWORD PTR tv161[ebp], 1
	jmp	SHORT $LN9@HTTPProlog
$LN8@HTTPProlog:
	mov	DWORD PTR tv161[ebp], 0
$LN9@HTTPProlog:
	mov	cl, BYTE PTR tv161[ebp]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _hostName$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T1[ebp]
$LN4@HTTPProlog:

; 75   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?HTTPProlog@?A0x66497112@@YA_NVString@@AAV2@AAUHTTPHandle@1@2AA_N@Z ENDP ; `anonymous namespace'::HTTPProlog
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?HTTPReceiveStatus@?A0x66497112@@YA_NAAUHTTPHandle@1@AAH@Z
_TEXT	SEGMENT
_statusCodeLen$ = -24					; size = 4
_statusCode$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_request$ = 8						; size = 4
_status$ = 12						; size = 4
?HTTPReceiveStatus@?A0x66497112@@YA_NAAUHTTPHandle@1@AAH@Z PROC ; `anonymous namespace'::HTTPReceiveStatus, COMDAT

; 78   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 79   :         if (!WinHttpReceiveResponse(request, NULL))

	push	0
	mov	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpReceiveResponse@8
	test	eax, eax
	jne	SHORT $LN2@HTTPReceiv

; 80   :             return false;

	xor	al, al
	jmp	SHORT $LN3@HTTPReceiv
$LN2@HTTPReceiv:

; 81   : 
; 82   :         TCHAR statusCode[8];
; 83   :         DWORD statusCodeLen;
; 84   : 
; 85   :         statusCodeLen = sizeof(statusCode);

	mov	DWORD PTR _statusCodeLen$[ebp], 16	; 00000010H

; 86   :         if (!WinHttpQueryHeaders(request, WINHTTP_QUERY_STATUS_CODE, WINHTTP_HEADER_NAME_BY_INDEX, &statusCode, &statusCodeLen, WINHTTP_NO_HEADER_INDEX))

	push	0
	lea	eax, DWORD PTR _statusCodeLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _statusCode$[ebp]
	push	ecx
	push	0
	push	19					; 00000013H
	mov	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpQueryHeaders@24
	test	eax, eax
	jne	SHORT $LN1@HTTPReceiv

; 87   :             return false;

	xor	al, al
	jmp	SHORT $LN3@HTTPReceiv
$LN1@HTTPReceiv:

; 88   : 
; 89   :         status = wcstoul(statusCode, NULL, 10);

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _statusCode$[ebp]
	push	edx
	call	_wcstoul
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [ecx], eax

; 90   :         return true;

	mov	al, 1
$LN3@HTTPReceiv:

; 91   :     }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?HTTPReceiveStatus@?A0x66497112@@YA_NAAUHTTPHandle@1@AAH@Z ENDP ; `anonymous namespace'::HTTPReceiveStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?HTTPPostData@?A0x66497112@@YA_NVString@@PAXIAAHPAV?$List@E@@ABV2@@Z
_TEXT	SEGMENT
_path$ = -52						; size = 8
tv158 = -44						; size = 4
tv132 = -40						; size = 4
_read$ = -36						; size = 4
_offset$ = -32						; size = 4
_size$ = -28						; size = 4
_session$ = -24						; size = 4
_connect$ = -20						; size = 4
_request$ = -16						; size = 4
$T1 = -9						; size = 1
$T2 = -8						; size = 1
$T3 = -7						; size = 1
$T4 = -6						; size = 1
$T5 = -5						; size = 1
$T6 = -4						; size = 1
$T7 = -3						; size = 1
_secure$ = -2						; size = 1
$T8 = -1						; size = 1
_url$ = 8						; size = 8
_data$ = 16						; size = 4
_length$ = 20						; size = 4
_response$ = 24						; size = 4
_resultBody$ = 28					; size = 4
_headers$ = 32						; size = 4
?HTTPPostData@?A0x66497112@@YA_NVString@@PAXIAAHPAV?$List@E@@ABV2@@Z PROC ; `anonymous namespace'::HTTPPostData, COMDAT

; 94   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 95   :         HTTPHandle session, connect;

	push	0
	lea	ecx, DWORD PTR _session$[ebp]
	call	??0HTTPHandle@?A0x66497112@@QAE@PAX@Z	; `anonymous namespace'::HTTPHandle::HTTPHandle
	push	0
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??0HTTPHandle@?A0x66497112@@QAE@PAX@Z	; `anonymous namespace'::HTTPHandle::HTTPHandle

; 96   :         bool secure;
; 97   :         String path;

	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 98   : 
; 99   :         if (!HTTPProlog(url, path, session, connect, secure))

	lea	eax, DWORD PTR _secure$[ebp]
	push	eax
	lea	ecx, DWORD PTR _connect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _session$[ebp]
	push	edx
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _url$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?HTTPProlog@?A0x66497112@@YA_NVString@@AAV2@AAUHTTPHandle@1@2AA_N@Z ; `anonymous namespace'::HTTPProlog
	add	esp, 24					; 00000018H
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN12@HTTPPostDa

; 100  :             return false;

	mov	BYTE PTR $T8[ebp], 0
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T8[ebp]
	jmp	$LN13@HTTPPostDa
$LN12@HTTPPostDa:

; 101  : 
; 102  :         HTTPHandle request(WinHttpOpenRequest(connect, L"POST", path, NULL, WINHTTP_NO_REFERER, WINHTTP_DEFAULT_ACCEPT_TYPES, secure ? WINHTTP_FLAG_SECURE : 0));

	movzx	ecx, BYTE PTR _secure$[ebp]
	test	ecx, ecx
	je	SHORT $LN15@HTTPPostDa
	mov	DWORD PTR tv132[ebp], 8388608		; 00800000H
	jmp	SHORT $LN16@HTTPPostDa
$LN15@HTTPPostDa:
	mov	DWORD PTR tv132[ebp], 0
$LN16@HTTPPostDa:
	mov	edx, DWORD PTR tv132[ebp]
	push	edx
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824771
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpOpenRequest@28
	push	eax
	lea	ecx, DWORD PTR _request$[ebp]
	call	??0HTTPHandle@?A0x66497112@@QAE@PAX@Z	; `anonymous namespace'::HTTPHandle::HTTPHandle

; 103  :         if (!request)

	lea	ecx, DWORD PTR _request$[ebp]
	call	??7HTTPHandle@?A0x66497112@@QAE_NXZ	; `anonymous namespace'::HTTPHandle::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@HTTPPostDa

; 104  :             return false;

	mov	BYTE PTR $T7[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T7[ebp]
	jmp	$LN13@HTTPPostDa
$LN11@HTTPPostDa:

; 105  : 
; 106  :         // End the request.
; 107  :         if (!WinHttpSendRequest(request, headers.Array(), headers.IsEmpty() ? 0 : -1, data, (DWORD)length, (DWORD)length, 0))

	mov	ecx, DWORD PTR _headers$[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN17@HTTPPostDa
	mov	DWORD PTR tv158[ebp], 0
	jmp	SHORT $LN18@HTTPPostDa
$LN17@HTTPPostDa:
	mov	DWORD PTR tv158[ebp], -1
$LN18@HTTPPostDa:
	push	0
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv158[ebp]
	push	ecx
	mov	ecx, DWORD PTR _headers$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpSendRequest@28
	test	eax, eax
	jne	SHORT $LN10@HTTPPostDa

; 108  :             return false;

	mov	BYTE PTR $T6[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T6[ebp]
	jmp	$LN13@HTTPPostDa
$LN10@HTTPPostDa:

; 109  : 
; 110  :         if (!HTTPReceiveStatus(request, response))

	mov	edx, DWORD PTR _response$[ebp]
	push	edx
	lea	eax, DWORD PTR _request$[ebp]
	push	eax
	call	?HTTPReceiveStatus@?A0x66497112@@YA_NAAUHTTPHandle@1@AAH@Z ; `anonymous namespace'::HTTPReceiveStatus
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@HTTPPostDa

; 111  :             return false;

	mov	BYTE PTR $T5[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T5[ebp]
	jmp	$LN13@HTTPPostDa
$LN9@HTTPPostDa:

; 112  : 
; 113  :         if (!resultBody)

	cmp	DWORD PTR _resultBody$[ebp], 0
	jne	SHORT $LN8@HTTPPostDa

; 114  :             return true;

	mov	BYTE PTR $T4[ebp], 1
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN13@HTTPPostDa
$LN8@HTTPPostDa:

; 115  : 
; 116  :         DWORD size = 0, read = 0, offset = 0;

	mov	DWORD PTR _size$[ebp], 0
	mov	DWORD PTR _read$[ebp], 0
	mov	DWORD PTR _offset$[ebp], 0
$LN7@HTTPPostDa:

; 117  :         do
; 118  :         {
; 119  :             if (!WinHttpQueryDataAvailable(request, &size) || size > 16386)

	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	lea	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpQueryDataAvailable@8
	test	eax, eax
	je	SHORT $LN3@HTTPPostDa
	cmp	DWORD PTR _size$[ebp], 16386		; 00004002H
	jbe	SHORT $LN4@HTTPPostDa
$LN3@HTTPPostDa:

; 120  :                 return false;

	mov	BYTE PTR $T3[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T3[ebp]
	jmp	$LN13@HTTPPostDa
$LN4@HTTPPostDa:

; 121  : 
; 122  :             resultBody->SetSize(size + resultBody->Num());

	mov	ecx, DWORD PTR _resultBody$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	add	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resultBody$[ebp]
	call	?SetSize@?$List@E@@QAEHI@Z		; List<unsigned char>::SetSize

; 123  : 
; 124  :             if (!WinHttpReadData(request, (LPVOID)(resultBody->Array() + offset), size, &read))

	lea	eax, DWORD PTR _read$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _resultBody$[ebp]
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	lea	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpReadData@16
	test	eax, eax
	jne	SHORT $LN2@HTTPPostDa

; 125  :                 return false;

	mov	BYTE PTR $T2[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
	jmp	SHORT $LN13@HTTPPostDa
$LN2@HTTPPostDa:

; 126  :             offset += read;

	mov	edx, DWORD PTR _offset$[ebp]
	add	edx, DWORD PTR _read$[ebp]
	mov	DWORD PTR _offset$[ebp], edx

; 127  :         } while (size && read);

	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN5@HTTPPostDa
	cmp	DWORD PTR _read$[ebp], 0
	jne	$LN7@HTTPPostDa
$LN5@HTTPPostDa:

; 128  : 
; 129  :         return true;

	mov	BYTE PTR $T1[ebp], 1
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T1[ebp]
$LN13@HTTPPostDa:

; 130  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?HTTPPostData@?A0x66497112@@YA_NVString@@PAXIAAHPAV?$List@E@@ABV2@@Z ENDP ; `anonymous namespace'::HTTPPostData
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1HTTPHandle@?A0x66497112@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1HTTPHandle@?A0x66497112@@QAE@XZ PROC			; `anonymous namespace'::HTTPHandle::~HTTPHandle, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@XZ ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::~unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>
	mov	esp, ebp
	pop	ebp
	ret	0
??1HTTPHandle@?A0x66497112@@QAE@XZ ENDP			; `anonymous namespace'::HTTPHandle::~HTTPHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?HTTPPostData@?A0x66497112@@YA_NVString@@0AAHPAV?$List@E@@ABV2@@Z
_TEXT	SEGMENT
tv74 = -20						; size = 4
tv129 = -16						; size = 4
_str$ = -12						; size = 4
tv94 = -8						; size = 4
$T1 = -3						; size = 1
_result$ = -2						; size = 1
tv132 = -1						; size = 1
_url$ = 8						; size = 8
_data$ = 16						; size = 8
_response$ = 24						; size = 4
_resultBody$ = 28					; size = 4
_headers$ = 32						; size = 4
?HTTPPostData@?A0x66497112@@YA_NVString@@0AAHPAV?$List@E@@ABV2@@Z PROC ; `anonymous namespace'::HTTPPostData, COMDAT

; 133  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 134  :         LPSTR str = data.CreateUTF8String();

	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_?CreateUTF8String@String@@QAEPADXZ
	mov	DWORD PTR _str$[ebp], eax

; 135  :         bool result = HTTPPostData(url, str, strlen(str), response, resultBody, headers);

	mov	eax, DWORD PTR _str$[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR tv94[ebp]
	add	ecx, 1
	mov	DWORD PTR tv129[ebp], ecx
$LL3@HTTPPostDa:
	mov	edx, DWORD PTR tv94[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv132[ebp], al
	add	DWORD PTR tv94[ebp], 1
	cmp	BYTE PTR tv132[ebp], 0
	jne	SHORT $LL3@HTTPPostDa
	mov	ecx, DWORD PTR tv94[ebp]
	sub	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR _headers$[ebp]
	push	edx
	mov	eax, DWORD PTR _resultBody$[ebp]
	push	eax
	mov	ecx, DWORD PTR _response$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv74[ebp]
	push	edx
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _url$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?HTTPPostData@?A0x66497112@@YA_NVString@@PAXIAAHPAV?$List@E@@ABV2@@Z ; `anonymous namespace'::HTTPPostData
	add	esp, 28					; 0000001cH
	mov	BYTE PTR _result$[ebp], al

; 136  :         Free(str);

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 137  :         return result;

	mov	cl, BYTE PTR _result$[ebp]
	mov	BYTE PTR $T1[ebp], cl
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T1[ebp]

; 138  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?HTTPPostData@?A0x66497112@@YA_NVString@@0AAHPAV?$List@E@@ABV2@@Z ENDP ; `anonymous namespace'::HTTPPostData
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?HTTPFindRedirect@?A0x66497112@@YA_NVString@@AAV2@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 8
_path$ = -40						; size = 8
_status$ = -32						; size = 4
tv132 = -28						; size = 4
_length$ = -24						; size = 4
_session$ = -20						; size = 4
_connect$ = -16						; size = 4
_request$ = -12						; size = 4
$T2 = -8						; size = 1
$T3 = -7						; size = 1
$T4 = -6						; size = 1
$T5 = -5						; size = 1
$T6 = -4						; size = 1
$T7 = -3						; size = 1
_secure$ = -2						; size = 1
$T8 = -1						; size = 1
_url$ = 8						; size = 8
_location$ = 16						; size = 4
?HTTPFindRedirect@?A0x66497112@@YA_NVString@@AAV2@@Z PROC ; `anonymous namespace'::HTTPFindRedirect, COMDAT

; 141  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 142  :         HTTPHandle session, connect;

	push	0
	lea	ecx, DWORD PTR _session$[ebp]
	call	??0HTTPHandle@?A0x66497112@@QAE@PAX@Z	; `anonymous namespace'::HTTPHandle::HTTPHandle
	push	0
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??0HTTPHandle@?A0x66497112@@QAE@PAX@Z	; `anonymous namespace'::HTTPHandle::HTTPHandle

; 143  :         bool secure;
; 144  :         String path;

	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 145  : 
; 146  :         if (!HTTPProlog(url, path, session, connect, secure))

	lea	eax, DWORD PTR _secure$[ebp]
	push	eax
	lea	ecx, DWORD PTR _connect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _session$[ebp]
	push	edx
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _url$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?HTTPProlog@?A0x66497112@@YA_NVString@@AAV2@AAUHTTPHandle@1@2AA_N@Z ; `anonymous namespace'::HTTPProlog
	add	esp, 24					; 00000018H
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@HTTPFindRe

; 147  :             return false;

	mov	BYTE PTR $T8[ebp], 0
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T8[ebp]
	jmp	$LN7@HTTPFindRe
$LN6@HTTPFindRe:

; 148  : 
; 149  :         HTTPHandle request(WinHttpOpenRequest(connect, L"HEAD", path, NULL, WINHTTP_NO_REFERER, WINHTTP_DEFAULT_ACCEPT_TYPES, secure ? WINHTTP_FLAG_SECURE : 0));

	movzx	ecx, BYTE PTR _secure$[ebp]
	test	ecx, ecx
	je	SHORT $LN9@HTTPFindRe
	mov	DWORD PTR tv132[ebp], 8388608		; 00800000H
	jmp	SHORT $LN10@HTTPFindRe
$LN9@HTTPFindRe:
	mov	DWORD PTR tv132[ebp], 0
$LN10@HTTPFindRe:
	mov	edx, DWORD PTR tv132[ebp]
	push	edx
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824770
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpOpenRequest@28
	push	eax
	lea	ecx, DWORD PTR _request$[ebp]
	call	??0HTTPHandle@?A0x66497112@@QAE@PAX@Z	; `anonymous namespace'::HTTPHandle::HTTPHandle

; 150  :         if (!request)

	lea	ecx, DWORD PTR _request$[ebp]
	call	??7HTTPHandle@?A0x66497112@@QAE_NXZ	; `anonymous namespace'::HTTPHandle::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@HTTPFindRe

; 151  :             return false;

	mov	BYTE PTR $T7[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T7[ebp]
	jmp	$LN7@HTTPFindRe
$LN5@HTTPFindRe:

; 152  : 
; 153  :         // End the request.
; 154  :         if (!WinHttpSendRequest(request, nullptr, 0, nullptr, 0, 0, 0))

	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpSendRequest@28
	test	eax, eax
	jne	SHORT $LN4@HTTPFindRe

; 155  :             return false;

	mov	BYTE PTR $T6[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T6[ebp]
	jmp	$LN7@HTTPFindRe
$LN4@HTTPFindRe:

; 156  : 
; 157  :         int status;
; 158  :         if (!HTTPReceiveStatus(request, status))

	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR _request$[ebp]
	push	edx
	call	?HTTPReceiveStatus@?A0x66497112@@YA_NAAUHTTPHandle@1@AAH@Z ; `anonymous namespace'::HTTPReceiveStatus
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@HTTPFindRe

; 159  :             return false;

	mov	BYTE PTR $T5[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T5[ebp]
	jmp	$LN7@HTTPFindRe
$LN3@HTTPFindRe:

; 160  : 
; 161  :         location.SetLength(MAX_PATH);

	push	260					; 00000104H
	mov	ecx, DWORD PTR _location$[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 162  :         DWORD length = MAX_PATH;

	mov	DWORD PTR _length$[ebp], 260		; 00000104H

; 163  :         if (WinHttpQueryHeaders(request, WINHTTP_QUERY_LOCATION, WINHTTP_HEADER_NAME_BY_INDEX, location.Array(), &length, WINHTTP_NO_HEADER_INDEX))

	push	0
	lea	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _location$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	0
	push	33					; 00000021H
	lea	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpQueryHeaders@24
	test	eax, eax
	je	SHORT $LN2@HTTPFindRe

; 164  :         {
; 165  :             location.SetLength(length);

	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	ecx, DWORD PTR _location$[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 166  :             return true;

	mov	BYTE PTR $T4[ebp], 1
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN7@HTTPFindRe
$LN2@HTTPFindRe:

; 167  :         }
; 168  : 
; 169  :         length = MAX_PATH;

	mov	DWORD PTR _length$[ebp], 260		; 00000104H

; 170  :         if (WinHttpQueryHeaders(request, WINHTTP_QUERY_CUSTOM, L"X-Gist-Url", location.Array(), &length, WINHTTP_NO_HEADER_INDEX))

	push	0
	lea	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _location$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824769
	push	65535					; 0000ffffH
	lea	ecx, DWORD PTR _request$[ebp]
	call	??BHTTPHandle@?A0x66497112@@QAEPAXXZ	; `anonymous namespace'::HTTPHandle::operator void *
	push	eax
	call	DWORD PTR __imp__WinHttpQueryHeaders@24
	test	eax, eax
	je	SHORT $LN1@HTTPFindRe

; 171  :         {
; 172  :             location.SetLength(length);

	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _location$[ebp]
	call	DWORD PTR __imp_?SetLength@String@@QAEAAV1@I@Z

; 173  :             location = FormattedString(L"https://gist.github.com%s", location.Array());

	mov	ecx, DWORD PTR _location$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824768
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _location$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 174  :             return true;

	mov	BYTE PTR $T3[ebp], 1
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN7@HTTPFindRe
$LN1@HTTPFindRe:

; 175  :         }
; 176  : 
; 177  :         return false;

	mov	BYTE PTR $T2[ebp], 0
	lea	ecx, DWORD PTR _request$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _connect$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _session$[ebp]
	call	??1HTTPHandle@?A0x66497112@@QAE@XZ
	lea	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
$LN7@HTTPFindRe:

; 178  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?HTTPFindRedirect@?A0x66497112@@YA_NVString@@AAV2@@Z ENDP ; `anonymous namespace'::HTTPFindRedirect
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?LogFileAge@?A0x66497112@@YA?AVString@@AAV2@@Z
_TEXT	SEGMENT
$T1 = -164						; size = 8
$T2 = -156						; size = 8
$T3 = -148						; size = 8
$T4 = -140						; size = 8
$T5 = -132						; size = 8
_log_ft$ = -124						; size = 8
_now_ft$ = -116						; size = 8
tv151 = -108						; size = 4
_now_$ = -104						; size = 8
tv195 = -96						; size = 4
tv219 = -92						; size = 4
tv231 = -88						; size = 4
tv207 = -84						; size = 4
_log_$ = -80						; size = 8
_days$ = -72						; size = 4
_weeks$ = -68						; size = 4
_minutes$ = -64						; size = 4
_hours$ = -60						; size = 4
_years$ = -56						; size = 4
_ages$ = -52						; size = 8
_diff$ = -44						; size = 8
_now_st$ = -36						; size = 16
_log_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
?LogFileAge@?A0x66497112@@YA?AVString@@AAV2@@Z PROC	; `anonymous namespace'::LogFileAge, COMDAT

; 181  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 182  :         FILETIME now_ft, log_ft;
; 183  :         SYSTEMTIME now_st, log_st;
; 184  : 
; 185  :         zero(&log_st, sizeof log_st);

	push	16					; 00000010H
	lea	eax, DWORD PTR _log_st$[ebp]
	push	eax
	call	?zero@@YGXPAXI@Z			; zero

; 186  : 
; 187  :         if (swscanf_s(name.Array(), L"%u-%02u-%02u-%02u%02u-%02u", &log_st.wYear, &log_st.wMonth, &log_st.wDay, &log_st.wHour, &log_st.wMinute, &log_st.wSecond) != 6)

	lea	ecx, DWORD PTR _log_st$[ebp+12]
	push	ecx
	lea	edx, DWORD PTR _log_st$[ebp+10]
	push	edx
	lea	eax, DWORD PTR _log_st$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _log_st$[ebp+6]
	push	ecx
	lea	edx, DWORD PTR _log_st$[ebp+2]
	push	edx
	lea	eax, DWORD PTR _log_st$[ebp]
	push	eax
	push	OFFSET $SG4294824767
	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	_swscanf_s
	add	esp, 32					; 00000020H
	cmp	eax, 6
	je	SHORT $LN9@LogFileAge

; 188  :             return String();

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN10@LogFileAge
$LN9@LogFileAge:

; 189  : 
; 190  :         GetLocalTime(&now_st);

	lea	ecx, DWORD PTR _now_st$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocalTime@4

; 191  :         SystemTimeToFileTime(&now_st, &now_ft);

	lea	edx, DWORD PTR _now_ft$[ebp]
	push	edx
	lea	eax, DWORD PTR _now_st$[ebp]
	push	eax
	call	DWORD PTR __imp__SystemTimeToFileTime@8

; 192  :         SystemTimeToFileTime(&log_st, &log_ft);

	lea	ecx, DWORD PTR _log_ft$[ebp]
	push	ecx
	lea	edx, DWORD PTR _log_st$[ebp]
	push	edx
	call	DWORD PTR __imp__SystemTimeToFileTime@8

; 193  : 
; 194  :         ULARGE_INTEGER now_, log_, diff;
; 195  :         now_.LowPart = now_ft.dwLowDateTime;

	mov	eax, DWORD PTR _now_ft$[ebp]
	mov	DWORD PTR _now_$[ebp], eax

; 196  :         now_.HighPart = now_ft.dwHighDateTime;

	mov	ecx, DWORD PTR _now_ft$[ebp+4]
	mov	DWORD PTR _now_$[ebp+4], ecx

; 197  :         log_.LowPart = log_ft.dwLowDateTime;

	mov	edx, DWORD PTR _log_ft$[ebp]
	mov	DWORD PTR _log_$[ebp], edx

; 198  :         log_.HighPart = log_ft.dwHighDateTime;

	mov	eax, DWORD PTR _log_ft$[ebp+4]
	mov	DWORD PTR _log_$[ebp+4], eax

; 199  : 
; 200  :         if (now_.QuadPart <= log_.QuadPart)

	mov	ecx, DWORD PTR _now_$[ebp+4]
	cmp	ecx, DWORD PTR _log_$[ebp+4]
	ja	SHORT $LN8@LogFileAge
	jb	SHORT $LN22@LogFileAge
	mov	edx, DWORD PTR _now_$[ebp]
	cmp	edx, DWORD PTR _log_$[ebp]
	ja	SHORT $LN8@LogFileAge
$LN22@LogFileAge:

; 201  :             return String();

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN10@LogFileAge
$LN8@LogFileAge:

; 202  : 
; 203  :         diff.QuadPart = now_.QuadPart - log_.QuadPart;

	mov	eax, DWORD PTR _now_$[ebp]
	sub	eax, DWORD PTR _log_$[ebp]
	mov	ecx, DWORD PTR _now_$[ebp+4]
	sbb	ecx, DWORD PTR _log_$[ebp+4]
	mov	DWORD PTR _diff$[ebp], eax
	mov	DWORD PTR _diff$[ebp+4], ecx

; 204  :         diff.QuadPart /= 10000000;

	push	0
	push	10000000				; 00989680H
	mov	edx, DWORD PTR _diff$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _diff$[ebp]
	push	eax
	call	__aulldiv
	mov	DWORD PTR _diff$[ebp], eax
	mov	DWORD PTR _diff$[ebp+4], edx

; 205  :         diff.QuadPart /= 60;

	push	0
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _diff$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _diff$[ebp]
	push	edx
	call	__aulldiv
	mov	DWORD PTR _diff$[ebp], eax
	mov	DWORD PTR _diff$[ebp+4], edx

; 206  : 
; 207  :         if (diff.QuadPart < 1)

	cmp	DWORD PTR _diff$[ebp+4], 0
	ja	SHORT $LN7@LogFileAge
	jb	SHORT $LN23@LogFileAge
	cmp	DWORD PTR _diff$[ebp], 1
	jae	SHORT $LN7@LogFileAge
$LN23@LogFileAge:

; 208  :             return "less than a minute";

	push	OFFSET $SG4294824766
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PBD@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN10@LogFileAge
$LN7@LogFileAge:

; 209  :         
; 210  :         unsigned minutes = diff.QuadPart % 60;

	push	0
	push	60					; 0000003cH
	mov	eax, DWORD PTR _diff$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _diff$[ebp]
	push	ecx
	call	__aullrem
	mov	DWORD PTR _minutes$[ebp], eax

; 211  :         diff.QuadPart /= 60;

	push	0
	push	60					; 0000003cH
	mov	edx, DWORD PTR _diff$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _diff$[ebp]
	push	eax
	call	__aulldiv
	mov	DWORD PTR _diff$[ebp], eax
	mov	DWORD PTR _diff$[ebp+4], edx

; 212  :         unsigned hours = diff.QuadPart % 24;

	push	0
	push	24					; 00000018H
	mov	ecx, DWORD PTR _diff$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _diff$[ebp]
	push	edx
	call	__aullrem
	mov	DWORD PTR _hours$[ebp], eax

; 213  :         diff.QuadPart /= 24;

	push	0
	push	24					; 00000018H
	mov	eax, DWORD PTR _diff$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _diff$[ebp]
	push	ecx
	call	__aulldiv
	mov	DWORD PTR _diff$[ebp], eax
	mov	DWORD PTR _diff$[ebp+4], edx

; 214  :         unsigned days = diff.QuadPart % 7;

	push	0
	push	7
	mov	edx, DWORD PTR _diff$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _diff$[ebp]
	push	eax
	call	__aullrem
	mov	DWORD PTR _days$[ebp], eax

; 215  :         unsigned weeks = (diff.QuadPart/7) % 52;

	push	0
	push	7
	mov	ecx, DWORD PTR _diff$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _diff$[ebp]
	push	edx
	call	__aulldiv
	push	0
	push	52					; 00000034H
	push	edx
	push	eax
	call	__aullrem
	mov	DWORD PTR _weeks$[ebp], eax

; 216  :         diff.QuadPart /= 365; //losing accuracy ...

	push	0
	push	365					; 0000016dH
	mov	eax, DWORD PTR _diff$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _diff$[ebp]
	push	ecx
	call	__aulldiv
	mov	DWORD PTR _diff$[ebp], eax
	mov	DWORD PTR _diff$[ebp+4], edx

; 217  :         unsigned years = (unsigned)diff.QuadPart;

	mov	edx, DWORD PTR _diff$[ebp]
	mov	DWORD PTR _years$[ebp], edx

; 218  : 
; 219  :         StringList ages;

	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??0StringList@@QAE@XZ

; 220  : #define N_FORMAT(name, num) if (num > 0) ages << FormattedString(L"%u " name L"%s", num, num == 1 ? L"" : L"s")
; 221  :         N_FORMAT(L"year", years);

	cmp	DWORD PTR _years$[ebp], 0
	jbe	SHORT $LN6@LogFileAge
	cmp	DWORD PTR _years$[ebp], 1
	jne	SHORT $LN12@LogFileAge
	mov	DWORD PTR tv151[ebp], OFFSET $SG4294824765
	jmp	SHORT $LN13@LogFileAge
$LN12@LogFileAge:
	mov	DWORD PTR tv151[ebp], OFFSET $SG4294824764
$LN13@LogFileAge:
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	mov	ecx, DWORD PTR _years$[ebp]
	push	ecx
	push	OFFSET $SG4294824763
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??6StringList@@QAEAAV0@ABVString@@@Z
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN6@LogFileAge:

; 222  :         N_FORMAT(L"week", weeks);

	cmp	DWORD PTR _weeks$[ebp], 0
	jbe	SHORT $LN5@LogFileAge
	cmp	DWORD PTR _weeks$[ebp], 1
	jne	SHORT $LN14@LogFileAge
	mov	DWORD PTR tv195[ebp], OFFSET $SG4294824762
	jmp	SHORT $LN15@LogFileAge
$LN14@LogFileAge:
	mov	DWORD PTR tv195[ebp], OFFSET $SG4294824761
$LN15@LogFileAge:
	mov	eax, DWORD PTR tv195[ebp]
	push	eax
	mov	ecx, DWORD PTR _weeks$[ebp]
	push	ecx
	push	OFFSET $SG4294824760
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??6StringList@@QAEAAV0@ABVString@@@Z
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN5@LogFileAge:

; 223  :         N_FORMAT(L"day", days);

	cmp	DWORD PTR _days$[ebp], 0
	jbe	SHORT $LN4@LogFileAge
	cmp	DWORD PTR _days$[ebp], 1
	jne	SHORT $LN16@LogFileAge
	mov	DWORD PTR tv207[ebp], OFFSET $SG4294824759
	jmp	SHORT $LN17@LogFileAge
$LN16@LogFileAge:
	mov	DWORD PTR tv207[ebp], OFFSET $SG4294824758
$LN17@LogFileAge:
	mov	eax, DWORD PTR tv207[ebp]
	push	eax
	mov	ecx, DWORD PTR _days$[ebp]
	push	ecx
	push	OFFSET $SG4294824757
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??6StringList@@QAEAAV0@ABVString@@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN4@LogFileAge:

; 224  :         N_FORMAT(L"hour", hours);

	cmp	DWORD PTR _hours$[ebp], 0
	jbe	SHORT $LN3@LogFileAge
	cmp	DWORD PTR _hours$[ebp], 1
	jne	SHORT $LN18@LogFileAge
	mov	DWORD PTR tv219[ebp], OFFSET $SG4294824756
	jmp	SHORT $LN19@LogFileAge
$LN18@LogFileAge:
	mov	DWORD PTR tv219[ebp], OFFSET $SG4294824755
$LN19@LogFileAge:
	mov	eax, DWORD PTR tv219[ebp]
	push	eax
	mov	ecx, DWORD PTR _hours$[ebp]
	push	ecx
	push	OFFSET $SG4294824754
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??6StringList@@QAEAAV0@ABVString@@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN3@LogFileAge:

; 225  :         N_FORMAT(L"minute", minutes);

	cmp	DWORD PTR _minutes$[ebp], 0
	jbe	SHORT $LN2@LogFileAge
	cmp	DWORD PTR _minutes$[ebp], 1
	jne	SHORT $LN20@LogFileAge
	mov	DWORD PTR tv231[ebp], OFFSET $SG4294824753
	jmp	SHORT $LN21@LogFileAge
$LN20@LogFileAge:
	mov	DWORD PTR tv231[ebp], OFFSET $SG4294824752
$LN21@LogFileAge:
	mov	eax, DWORD PTR tv231[ebp]
	push	eax
	mov	ecx, DWORD PTR _minutes$[ebp]
	push	ecx
	push	OFFSET $SG4294824751
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??6StringList@@QAEAAV0@ABVString@@@Z
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN2@LogFileAge:

; 226  : #undef N_FORMAT
; 227  :         if (ages.Num() == 1)

	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_?Num@?$List@VString@@@@QBEIXZ
	cmp	eax, 1
	jne	SHORT $LN1@LogFileAge

; 228  :             return ages.Last();

	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_?Last@?$List@VString@@@@QBEAAVString@@XZ
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN10@LogFileAge
$LN1@LogFileAge:

; 229  : 
; 230  :         return ages[0] << L" and " << ages[1];

	push	1
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	push	eax
	push	OFFSET $SG4294824750
	push	0
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??A?$List@VString@@@@QAEAAVString@@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _ages$[ebp]
	call	DWORD PTR __imp_??1StringList@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN10@LogFileAge:

; 231  :     }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LogFileAge@?A0x66497112@@YA?AVString@@AAV2@@Z ENDP	; `anonymous namespace'::LogFileAge
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?StringEscapeJson@?A0x66497112@@YAXAAVString@@@Z
_TEXT	SEGMENT
$T1 = -24						; size = 8
_newStr$ = -16						; size = 8
_len$ = -8						; size = 4
_i$2 = -4						; size = 4
_str$ = 8						; size = 4
?StringEscapeJson@?A0x66497112@@YAXAAVString@@@Z PROC	; `anonymous namespace'::StringEscapeJson, COMDAT

; 234  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 235  :         str.FindReplace(L"\\", L"\\\\");

	push	OFFSET $SG4294824749
	push	OFFSET $SG4294824748
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 236  :         str.FindReplace(L"\"", L"\\\"");

	push	OFFSET $SG4294824747
	push	OFFSET $SG4294824746
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 237  :         str.FindReplace(L"\n", L"\\n");

	push	OFFSET $SG4294824745
	push	OFFSET $SG4294824744
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 238  :         str.FindReplace(L"\r", L"\\r");

	push	OFFSET $SG4294824743
	push	OFFSET $SG4294824742
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 239  :         str.FindReplace(L"\f", L"\\f");

	push	OFFSET $SG4294824741
	push	OFFSET $SG4294824740
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 240  :         str.FindReplace(L"\b", L"\\b");

	push	OFFSET $SG4294824739
	push	OFFSET $SG4294824738
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 241  :         str.FindReplace(L"\t", L"\\t");

	push	OFFSET $SG4294824737
	push	OFFSET $SG4294824736
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 242  :         str.FindReplace(L"/", L"\\/");

	push	OFFSET $SG4294824735
	push	OFFSET $SG4294824734
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z

; 243  : 
; 244  :         // github api chokes when we submit unescaped %, so encode it and 
; 245  :         // any other lower and higher characters just to be safe
; 246  :         String newStr;

	lea	ecx, DWORD PTR _newStr$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 247  :         int len = slen(str);

	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?slen@@YGIPB_W@Z
	mov	DWORD PTR _len$[ebp], eax

; 248  : 
; 249  :         for (int i = 0; i < len; i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN6@StringEsca
$LN5@StringEsca:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN6@StringEsca:
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	$LN4@StringEsca

; 250  :         {
; 251  :             if (str[i] < ' ' || str[i] > 255 || str[i] == '%')

	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	edx, DWORD PTR _i$2[ebp]
	movzx	eax, WORD PTR [eax+edx*2]
	cmp	eax, 32					; 00000020H
	jl	SHORT $LN2@StringEsca
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	ecx, DWORD PTR _i$2[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	cmp	edx, 255				; 000000ffH
	jg	SHORT $LN2@StringEsca
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	ecx, DWORD PTR _i$2[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	cmp	edx, 37					; 00000025H
	jne	SHORT $LN3@StringEsca
$LN2@StringEsca:

; 252  :                 newStr << FormattedString(L"\\u%04X", (int)str[i]);

	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	ecx, DWORD PTR _i$2[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	push	edx
	push	OFFSET $SG4294824733
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _newStr$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 253  :             else

	jmp	SHORT $LN1@StringEsca
$LN3@StringEsca:

; 254  :                 newStr << str[i];

	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??BString@@QBEPA_WXZ
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	dx, WORD PTR [eax+ecx*2]
	movzx	eax, dx
	push	eax
	lea	ecx, DWORD PTR _newStr$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@_W@Z
$LN1@StringEsca:

; 255  :         }

	jmp	$LN5@StringEsca
$LN4@StringEsca:

; 256  : 
; 257  :         str = newStr;

	lea	ecx, DWORD PTR _newStr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z

; 258  :     }

	lea	ecx, DWORD PTR _newStr$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
?StringEscapeJson@?A0x66497112@@YAXAAVString@@@Z ENDP	; `anonymous namespace'::StringEscapeJson
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?UploadLogGitHub@@YA_NVString@@0AAULogUploadResult@@@Z
_TEXT	SEGMENT
$T1 = -124						; size = 8
$T2 = -116						; size = 8
$T3 = -108						; size = 8
$T4 = -100						; size = 8
$T5 = -92						; size = 8
$T6 = -84						; size = 8
tv179 = -76						; size = 4
_wideBody$ = -72					; size = 4
_response$ = -68					; size = 4
_end$ = -64						; size = 4
_bodyStr$ = -60						; size = 8
_json$ = -52						; size = 8
_age$ = -44						; size = 8
_description$ = -36					; size = 8
_invalid_response$ = -28				; size = 4
_body$ = -24						; size = 8
$T7 = -14						; size = 1
$T8 = -13						; size = 1
$T9 = -12						; size = 1
$T10 = -11						; size = 1
$T11 = -10						; size = 1
$T12 = -9						; size = 1
$T13 = -8						; size = 1
$T14 = -7						; size = 1
$T15 = -6						; size = 1
$T16 = -5						; size = 1
_pos$ = -4						; size = 4
_filename$ = 8						; size = 8
_logData$ = 16						; size = 8
_result$ = 24						; size = 4
?UploadLogGitHub@@YA_NVString@@0AAULogUploadResult@@@Z PROC ; UploadLogGitHub, COMDAT

; 262  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 263  :     String description = FormattedString(OBS_VERSION_STRING L" log file uploaded at %s (local time).", CurrentDateTimeString().Array());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	DWORD PTR __imp_?CurrentDateTimeString@@YA?AVString@@XZ
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824732
	lea	ecx, DWORD PTR _description$[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 264  :     String age = LogFileAge(filename);

	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	lea	eax, DWORD PTR _age$[ebp]
	push	eax
	call	?LogFileAge@?A0x66497112@@YA?AVString@@AAV2@@Z ; `anonymous namespace'::LogFileAge
	add	esp, 8

; 265  :     if (age.IsValid())

	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_?IsValid@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN9@UploadLogG

; 266  :         description << FormattedString(L" The log file was approximately %s old at the time it was uploaded.", age.Array());

	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824731
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T6[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN9@UploadLogG:

; 267  : 
; 268  :     StringEscapeJson(description);

	lea	edx, DWORD PTR _description$[ebp]
	push	edx
	call	?StringEscapeJson@?A0x66497112@@YAXAAVString@@@Z ; `anonymous namespace'::StringEscapeJson
	add	esp, 4

; 269  :     StringEscapeJson(filename);

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?StringEscapeJson@?A0x66497112@@YAXAAVString@@@Z ; `anonymous namespace'::StringEscapeJson
	add	esp, 4

; 270  :     StringEscapeJson(logData);

	lea	ecx, DWORD PTR _logData$[ebp]
	push	ecx
	call	?StringEscapeJson@?A0x66497112@@YAXAAVString@@@Z ; `anonymous namespace'::StringEscapeJson
	add	esp, 4

; 271  : 
; 272  :     String json = FormattedString(L"{ \"public\": false, \"description\": \"%s\", \"files\": { \"%s\": { \"content\": \"%s\" } } }",
; 273  :         description.Array(), filename.Array(), logData.Array());

	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824730
	lea	edx, DWORD PTR _json$[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 20					; 00000014H

; 274  : 
; 275  :     int response = 0;

	mov	DWORD PTR _response$[ebp], 0

; 276  :     List<BYTE> body;

	lea	ecx, DWORD PTR _body$[ebp]
	call	??0?$List@E@@QAE@XZ			; List<unsigned char>::List<unsigned char>

; 277  :     if (!HTTPPostData(String(L"https://api.github.com/gists"), json, response, &body)) {

	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ
	push	eax
	lea	eax, DWORD PTR _body$[ebp]
	push	eax
	lea	ecx, DWORD PTR _response$[ebp]
	push	ecx
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _json$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	sub	esp, 8
	mov	ecx, esp
	push	OFFSET $SG4294824729
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	call	?HTTPPostData@?A0x66497112@@YA_NVString@@0AAHPAV?$List@E@@ABV2@@Z ; `anonymous namespace'::HTTPPostData
	add	esp, 28					; 0000001cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN12@UploadLogG
	mov	DWORD PTR tv179[ebp], 1
	jmp	SHORT $LN13@UploadLogG
$LN12@UploadLogG:
	mov	DWORD PTR tv179[ebp], 0
$LN13@UploadLogG:
	mov	cl, BYTE PTR tv179[ebp]
	mov	BYTE PTR $T7[ebp], cl
	lea	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	movzx	edx, BYTE PTR $T7[ebp]
	test	edx, edx
	je	SHORT $LN8@UploadLogG

; 278  :         result.errors << Str("LogUpload.CommunicationError");

	push	OFFSET $SG4294824728
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 279  :         return false;

	mov	BYTE PTR $T13[ebp], 0
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T13[ebp]
	jmp	$LN10@UploadLogG
$LN8@UploadLogG:

; 280  :     }
; 281  : 
; 282  :     if (response != 201) {

	cmp	DWORD PTR _response$[ebp], 201		; 000000c9H
	je	$LN7@UploadLogG

; 283  :         result.errors << FormattedString(Str("LogUpload.ServiceReturnedError"), response)
; 284  :                       << FormattedString(Str("LogUpload.ServiceExpectedResponse"), 201);

	push	201					; 000000c9H
	push	OFFSET $SG4294824726
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _response$[ebp]
	push	eax
	push	OFFSET $SG4294824727
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 285  :         return false;

	mov	BYTE PTR $T14[ebp], 0
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T14[ebp]
	jmp	$LN10@UploadLogG
$LN7@UploadLogG:

; 286  :     }
; 287  : 
; 288  :     auto invalid_response = [&]() -> bool { result.errors << Str("LogUpload.ServiceReturnedInvalidResponse"); return false; };

	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _invalid_response$[ebp]
	call	??0<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QAE@AAULogUploadResult@@@Z ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::<lambda_4ccbfc2ee4b1907004c7bf38842e547c>

; 289  : 
; 290  :     if (body.Num() < 1)

	lea	ecx, DWORD PTR _body$[ebp]
	call	?Num@?$List@E@@QBEIXZ			; List<unsigned char>::Num
	cmp	eax, 1
	jae	SHORT $LN6@UploadLogG

; 291  :         return invalid_response();

	lea	ecx, DWORD PTR _invalid_response$[ebp]
	call	??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::operator()
	mov	BYTE PTR $T11[ebp], al
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T11[ebp]
	jmp	$LN10@UploadLogG
$LN6@UploadLogG:

; 292  : 
; 293  :     //make sure it's null terminated since we run string ops on it below
; 294  :     body.Add (0);

	mov	BYTE PTR $T12[ebp], 0
	lea	ecx, DWORD PTR $T12[ebp]
	push	ecx
	lea	ecx, DWORD PTR _body$[ebp]
	call	?Add@?$List@E@@QAEIABE@Z		; List<unsigned char>::Add

; 295  : 
; 296  :     TSTR wideBody = utf8_createTstr((char const*)body.Array());

	lea	ecx, DWORD PTR _body$[ebp]
	call	?Array@?$List@E@@QBEPAEXZ		; List<unsigned char>::Array
	push	eax
	call	DWORD PTR __imp_?utf8_createTstr@@YAPA_WPBD@Z
	add	esp, 4
	mov	DWORD PTR _wideBody$[ebp], eax

; 297  :     String bodyStr(wideBody);

	mov	edx, DWORD PTR _wideBody$[ebp]
	push	edx
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z

; 298  :     Free(wideBody);

	mov	eax, DWORD PTR _wideBody$[ebp]
	push	eax
	call	?Free@@YAXPAX@Z				; Free
	add	esp, 4

; 299  : 
; 300  :     TSTR pos = sstr(bodyStr.Array(), L"\"html_url\"");

	push	OFFSET $SG4294824725
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?sstr@@YGPA_WPB_W0@Z
	mov	DWORD PTR _pos$[ebp], eax

; 301  :     if (!pos)

	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN5@UploadLogG

; 302  :         return invalid_response();

	lea	ecx, DWORD PTR _invalid_response$[ebp]
	call	??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::operator()
	mov	BYTE PTR $T10[ebp], al
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T10[ebp]
	jmp	$LN10@UploadLogG
$LN5@UploadLogG:

; 303  : 
; 304  :     pos = schr(pos + slen(L"\"html_url\""), '"');

	push	34					; 00000022H
	push	OFFSET $SG4294824724
	call	DWORD PTR __imp_?slen@@YGIPB_W@Z
	mov	ecx, DWORD PTR _pos$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	DWORD PTR __imp_?schr@@YGPA_WPB_W_W@Z
	mov	DWORD PTR _pos$[ebp], eax

; 305  :     if (!pos)

	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN4@UploadLogG

; 306  :         return invalid_response();

	lea	ecx, DWORD PTR _invalid_response$[ebp]
	call	??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::operator()
	mov	BYTE PTR $T8[ebp], al
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T8[ebp]
	jmp	$LN10@UploadLogG
$LN4@UploadLogG:

; 307  : 
; 308  :     pos += 1;

	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 2
	mov	DWORD PTR _pos$[ebp], eax

; 309  : 
; 310  :     TSTR end = schr(pos, '"');

	push	34					; 00000022H
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	call	DWORD PTR __imp_?schr@@YGPA_WPB_W_W@Z
	mov	DWORD PTR _end$[ebp], eax

; 311  :     if (!end)

	cmp	DWORD PTR _end$[ebp], 0
	jne	SHORT $LN3@UploadLogG

; 312  :         return invalid_response();

	lea	ecx, DWORD PTR _invalid_response$[ebp]
	call	??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::operator()
	mov	BYTE PTR $T9[ebp], al
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T9[ebp]
	jmp	$LN10@UploadLogG
$LN3@UploadLogG:

; 313  : 
; 314  :     if ((end - pos) < 4)

	mov	edx, DWORD PTR _end$[ebp]
	sub	edx, DWORD PTR _pos$[ebp]
	sar	edx, 1
	cmp	edx, 4
	jge	SHORT $LN2@UploadLogG

; 315  :         return invalid_response();

	lea	ecx, DWORD PTR _invalid_response$[ebp]
	call	??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::operator()
	mov	BYTE PTR $T16[ebp], al
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T16[ebp]
	jmp	$LN10@UploadLogG
$LN2@UploadLogG:

; 316  : 
; 317  :     result.url = bodyStr.Mid((UINT)(pos - bodyStr.Array()), (UINT)(end - bodyStr.Array()));

	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	ecx, DWORD PTR _end$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	mov	edx, DWORD PTR _pos$[ebp]
	sub	edx, eax
	sar	edx, 1
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_?Mid@String@@QAE?AV1@II@Z
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 318  : 
; 319  :     if (!HTTPFindRedirect(result.url, result.analyzerURL)) //the basic url doesn't work with the analyzer, so query the fully redirected url

	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	sub	esp, 8
	mov	ecx, esp
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	call	?HTTPFindRedirect@?A0x66497112@@YA_NVString@@AAV2@@Z ; `anonymous namespace'::HTTPFindRedirect
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@UploadLogG

; 320  :         result.analyzerURL = result.url;

	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??4String@@QAEAAV0@ABV0@@Z
$LN1@UploadLogG:

; 321  : 
; 322  :     return true;

	mov	BYTE PTR $T15[ebp], 1
	lea	ecx, DWORD PTR _bodyStr$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _body$[ebp]
	call	??1?$List@E@@QAE@XZ			; List<unsigned char>::~List<unsigned char>
	lea	ecx, DWORD PTR _json$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _age$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _logData$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T15[ebp]
$LN10@UploadLogG:

; 323  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UploadLogGitHub@@YA_NVString@@0AAULogUploadResult@@@Z ENDP ; UploadLogGitHub
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ??0<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QAE@AAULogUploadResult@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___result$ = 8						; size = 4
??0<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QAE@AAULogUploadResult@@@Z PROC ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::<lambda_4ccbfc2ee4b1907004c7bf38842e547c>, COMDAT
; _this$ = ecx

; 288  :     auto invalid_response = [&]() -> bool { result.errors << Str("LogUpload.ServiceReturnedInvalidResponse"); return false; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___result$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QAE@AAULogUploadResult@@@Z ENDP ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::<lambda_4ccbfc2ee4b1907004c7bf38842e547c>
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ PROC ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::operator(), COMDAT
; _this$ = ecx

; 288  :     auto invalid_response = [&]() -> bool { result.errors << Str("LogUpload.ServiceReturnedInvalidResponse"); return false; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET $SG4294824723
	mov	eax, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_4ccbfc2ee4b1907004c7bf38842e547c>@@QBE_NXZ ENDP ; <lambda_4ccbfc2ee4b1907004c7bf38842e547c>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?AppendGameCaptureLog@@YAXAAVString@@@Z
_TEXT	SEGMENT
_f$ = -48						; size = 24
$T1 = -24						; size = 8
_path$ = -16						; size = 8
_append$ = -8						; size = 8
_data$ = 8						; size = 4
?AppendGameCaptureLog@@YAXAAVString@@@Z PROC		; AppendGameCaptureLog, COMDAT

; 327  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 328  :     String path = FormattedString(L"%s\\captureHookLog.txt", OBSGetPluginDataPath().Array());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	DWORD PTR __imp_?OBSGetPluginDataPath@@YA?AVString@@XZ
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824722
	lea	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 329  :     XFile f(path.Array(), XFILE_READ | XFILE_SHARED, XFILE_OPENEXISTING);

	push	3
	push	5
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_??0XFile@@QAE@PB_WKK@Z

; 330  :     if (!f.IsOpen())

	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_?IsOpen@XFile@@QAEHXZ
	test	eax, eax
	jne	SHORT $LN1@AppendGame

; 331  :         return;

	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	jmp	SHORT $LN2@AppendGame
$LN1@AppendGame:

; 332  : 
; 333  :     String append;

	lea	ecx, DWORD PTR _append$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 334  :     f.ReadFileToString(append);

	lea	edx, DWORD PTR _append$[ebp]
	push	edx
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_?ReadFileToString@XFile@@QAEXAAVString@@@Z

; 335  :     data << L"\r\n\r\nLast Game Capture Log:\r\n" << append;

	lea	eax, DWORD PTR _append$[ebp]
	push	eax
	push	OFFSET $SG4294824721
	mov	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z

; 336  : }

	lea	ecx, DWORD PTR _append$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
$LN2@AppendGame:
	mov	esp, ebp
	pop	ebp
	ret	0
?AppendGameCaptureLog@@YAXAAVString@@@Z ENDP		; AppendGameCaptureLog
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?UploadCurrentLog@@YA_NAAULogUploadResult@@@Z
_TEXT	SEGMENT
_filename$ = -20					; size = 8
_data$ = -12						; size = 8
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_result$ = 8						; size = 4
?UploadCurrentLog@@YA_NAAULogUploadResult@@@Z PROC	; UploadCurrentLog, COMDAT

; 339  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi

; 340  :     String data;

	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 341  :     ReadLog(data);

	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	DWORD PTR __imp_?ReadLog@@YAXAAVString@@@Z
	add	esp, 4

; 342  :     if (data.IsEmpty()) {

	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN1@UploadCurr

; 343  :         result.errors << Str("LogUpload.EmptyLog");

	push	OFFSET $SG4294824720
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 344  :         return false;

	mov	BYTE PTR $T2[ebp], 0
	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
	jmp	SHORT $LN2@UploadCurr
$LN1@UploadCurr:

; 345  :     }
; 346  : 
; 347  :     AppendGameCaptureLog(data);

	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	call	?AppendGameCaptureLog@@YAXAAVString@@@Z	; AppendGameCaptureLog
	add	esp, 4

; 348  : 
; 349  :     String filename = CurrentLogFilename();

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp_?CurrentLogFilename@@YA?AVString@@XZ
	add	esp, 4

; 350  : 
; 351  :     return UploadLogGitHub(GetPathFileName(filename.FindReplace(L"\\", L"/").Array(), true), data, result);

	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	sub	esp, 8
	mov	esi, esp
	push	1
	push	OFFSET $SG4294824719
	push	OFFSET $SG4294824718
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?FindReplace@String@@QAEAAV1@PB_W0@Z
	mov	ecx, eax
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	esi
	call	DWORD PTR __imp_?GetPathFileName@@YA?AVString@@PB_WH@Z
	add	esp, 12					; 0000000cH
	call	?UploadLogGitHub@@YA_NVString@@0AAULogUploadResult@@@Z ; UploadLogGitHub
	add	esp, 20					; 00000014H
	mov	BYTE PTR $T1[ebp], al
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T1[ebp]
$LN2@UploadCurr:

; 352  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?UploadCurrentLog@@YA_NAAULogUploadResult@@@Z ENDP	; UploadCurrentLog
_TEXT	ENDS
; Function compile flags: /Odtp
; File f:\songmm_moon_stone_obs\obs\source\loguploader.cpp
;	COMDAT ?UploadLog@@YA_NVString@@AAULogUploadResult@@@Z
_TEXT	SEGMENT
_f$ = -52						; size = 24
$T1 = -28						; size = 8
_path$ = -20						; size = 8
_data$ = -12						; size = 8
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
_filename$ = 8						; size = 8
_result$ = 16						; size = 4
?UploadLog@@YA_NVString@@AAULogUploadResult@@@Z PROC	; UploadLog, COMDAT

; 355  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 356  :     String path = FormattedString(L"%s\\logs\\%s", OBSGetAppDataPath(), filename.Array());

	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	call	DWORD PTR __imp_?OBSGetAppDataPath@@YAPB_WXZ
	push	eax
	push	OFFSET $SG4294824717
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 16					; 00000010H

; 357  :     XFile f(path.Array(), XFILE_READ, XFILE_OPENEXISTING);

	push	3
	push	1
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_??0XFile@@QAE@PB_WKK@Z

; 358  :     if (!f.IsOpen()) {

	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_?IsOpen@XFile@@QAEHXZ
	test	eax, eax
	jne	SHORT $LN2@UploadLog

; 359  :         result.errors << FormattedString(Str("LogUpload.CannotOpenFile"), path.Array());

	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	push	eax
	push	OFFSET $SG4294824716
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	DWORD PTR __imp_?FormattedString@@YA?AVString@@PB_WZZ
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??6String@@QAEAAV0@ABV0@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ

; 360  :         return false;

	mov	BYTE PTR $T4[ebp], 0
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN3@UploadLog
$LN2@UploadLog:

; 361  :     }
; 362  : 
; 363  :     String data;

	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??0String@@QAE@XZ

; 364  :     f.ReadFileToString(data);

	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_?ReadFileToString@XFile@@QAEXAAVString@@@Z

; 365  :     if (data.IsEmpty()) {

	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_?IsEmpty@String@@QBEHXZ
	test	eax, eax
	je	SHORT $LN1@UploadLog

; 366  :         result.errors << Str("LogUpload.EmptyLog");

	push	OFFSET $SG4294824715
	mov	ecx, DWORD PTR __imp_?locale@@3PAVLocaleStringLookup@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?LookupString@LocaleStringLookup@@QAEPB_WPB_W@Z
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??6String@@QAEAAV0@PB_W@Z

; 367  :         return false;

	mov	BYTE PTR $T3[ebp], 0
	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN3@UploadLog
$LN1@UploadLog:

; 368  :     }
; 369  : 
; 370  :     AppendGameCaptureLog(data);

	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	call	?AppendGameCaptureLog@@YAXAAVString@@@Z	; AppendGameCaptureLog
	add	esp, 4

; 371  : 
; 372  :     return UploadLogGitHub(filename.Array(), data, result);

	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	call	DWORD PTR __imp_??0String@@QAE@ABV0@@Z
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?Array@String@@QBEPA_WXZ
	sub	esp, 8
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0String@@QAE@PB_W@Z
	call	?UploadLogGitHub@@YA_NVString@@0AAULogUploadResult@@@Z ; UploadLogGitHub
	add	esp, 20					; 00000014H
	mov	BYTE PTR $T2[ebp], al
	lea	ecx, DWORD PTR _data$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_??1XFile@@QAE@XZ
	lea	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1String@@QAE@XZ
	mov	al, BYTE PTR $T2[ebp]
$LN3@UploadLog:

; 373  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UploadLog@@YA_NVString@@AAULogUploadResult@@@Z ENDP	; UploadLog
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@PAX@Z PROC ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>, COMDAT
; _this$ = ecx

; 1365 : 		{	// construct with pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAE@PAX@Z ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>

; 1366 : 		static_assert(!is_pointer<_Dx>::value,
; 1367 : 			"unique_ptr constructed with null deleter pointer");
; 1368 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@PAX@Z ENDP ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??1?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@XZ PROC ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::~unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>, COMDAT
; _this$ = ecx

; 1446 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1447 : 		if (this->_Myptr != pointer())

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unique_ptr

; 1448 : 			this->get_deleter()(this->_Myptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAEAAUHTTPHandleDeleter@?A0x66497112@@XZ ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::get_deleter
	mov	ecx, eax
	call	??RHTTPHandleDeleter@?A0x66497112@@QAEXPAX@Z ; `anonymous namespace'::HTTPHandleDeleter::operator()
$LN2@unique_ptr:

; 1449 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAE@XZ ENDP ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::~unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QBEPAXXZ PROC ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::get, COMDAT
; _this$ = ecx

; 1462 : 		{	// return pointer to object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1463 : 		return (this->_Myptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 1464 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QBEPAXXZ ENDP ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?reset@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAEXPAX@Z
_TEXT	SEGMENT
__Old$ = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?reset@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAEXPAX@Z PROC ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::reset, COMDAT
; _this$ = ecx

; 1479 : 		{	// establish new pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1480 : 		pointer _Old = this->_Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old$[ebp], ecx

; 1481 : 		this->_Myptr = _Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx], eax

; 1482 : 		if (_Old != pointer())

	cmp	DWORD PTR __Old$[ebp], 0
	je	SHORT $LN2@reset

; 1483 : 			this->get_deleter()(_Old);

	mov	ecx, DWORD PTR __Old$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_deleter@?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAEAAUHTTPHandleDeleter@?A0x66497112@@XZ ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::get_deleter
	mov	ecx, eax
	call	??RHTTPHandleDeleter@?A0x66497112@@QAEXPAX@Z ; `anonymous namespace'::HTTPHandleDeleter::operator()
$LN2@reset:

; 1484 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$unique_ptr@XUHTTPHandleDeleter@?A0x66497112@@@std@@QAEXPAX@Z ENDP ; std::unique_ptr<void,`anonymous namespace'::HTTPHandleDeleter>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ??0?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAE@PAX@Z PROC ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>, COMDAT
; _this$ = ecx

; 1295 : 		{	// construct with pointer and deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx

; 1296 : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAE@PAX@Z ENDP ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\vs2013\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAEAAUHTTPHandleDeleter@?A0x66497112@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_deleter@?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAEAAUHTTPHandleDeleter@?A0x66497112@@XZ PROC ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::get_deleter, COMDAT
; _this$ = ecx

; 1312 : 		{	// return reference to deleter

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?get_deleter@?$_Unique_ptr_base@XUHTTPHandleDeleter@?A0x66497112@@$00@std@@QAEAAUHTTPHandleDeleter@?A0x66497112@@XZ ENDP ; std::_Unique_ptr_base<void,`anonymous namespace'::HTTPHandleDeleter,1>::get_deleter
_TEXT	ENDS
END
